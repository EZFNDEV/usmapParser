#include "Structs.h"
class GameFeatureAction_AddAttributeDefaults : public GameFeatureAction
{
public:
	TArray<struct SoftObjectPath> AttribDefaultTableNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UExternalAccountProvider : public UObject
{
public:
	TArray<struct ExternalAccountServiceConfig> Services;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineAccountCommon : public UObject
{
public:
	struct FString AvailabilityServiceGameName;
	bool bRequireLightswitchAtStartup;
	struct FString EulaKey;
	Unknown EulaKeyMapping;
	bool bEnableWaitingRoom;
	TArray<struct WebEnvUrl> WebCreateEpicAccountUrl;
	bool bAllowLocalLogout;
	bool bAllowLocalLogoutKairos;
	struct FString RedeemAccessUrl;
	struct FString RequestFreeAccessUrl;
	struct FString RealGameAccessUrl;
	float SkipRedeemOfflinePurchasesChance;
	bool bUseFreeAccessInsteadOfGameAccess;
	bool bShouldGrantFreeAccess;
	bool bAllowHomeSharingAccess;
	bool bRequireUGCPrivilege;
	float AccessGrantDelaySeconds;
	class UClass* WaitingRoomState;
	bool bAutoCreateHeadlessAccount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaitingRoomState : public UObject
{
public:
	int GracePeriodMins;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationCompressionLibraryDatabase : public UObject
{
public:
	TArray<byte> CookedCompressedBytes;
	TArray<uint64_t> CookedAnimSequenceMappings;
	uint32_t MaxStreamRequestSizeKB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimBoneCompressionCodec_ACLBase : public AnimBoneCompressionCodec
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimBoneCompressionCodec_ACL : public AnimBoneCompressionCodec_ACLBase
{
public:
	class UClass* SafetyFallbackCodec;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimBoneCompressionCodec_ACLCustom : public AnimBoneCompressionCodec_ACLBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimBoneCompressionCodec_ACLDatabase : public AnimBoneCompressionCodec_ACLBase
{
public:
	class UClass* DatabaseAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimBoneCompressionCodec_ACLSafe : public AnimBoneCompressionCodec_ACLBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimCurveCompressionCodec_ACL : public AnimCurveCompressionCodec
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIDataProviderTypedValue : public AIDataProviderValue
{
public:
	class UClass* PropertyType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIDataProviderBoolValue : public AIDataProviderTypedValue
{
public:
	bool DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIDataProviderFloatValue : public AIDataProviderTypedValue
{
public:
	float DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIDataProviderIntValue : public AIDataProviderTypedValue
{
public:
	int DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIDataProviderStructValue : public AIDataProviderValue
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryNode : public UObject
{
public:
	int VerNum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest : public UEnvQueryNode
{
public:
	int TestOrder;
	EEnvTestPurpose TestPurpose;
	struct FString TestComment;
	EEnvTestFilterOperator MultipleContextFilterOp;
	EEnvTestScoreOperator MultipleContextScoreOp;
	EEnvTestFilterType FilterType;
	struct AIDataProviderBoolValue BoolValue;
	struct AIDataProviderFloatValue FloatValueMin;
	struct AIDataProviderFloatValue FloatValueMax;
	EEnvTestScoreEquation ScoringEquation;
	EEnvQueryTestClamping ClampMinType;
	EEnvQueryTestClamping ClampMaxType;
	EEQSNormalizationType NormalizationType;
	struct AIDataProviderFloatValue ScoreClampMin;
	struct AIDataProviderFloatValue ScoreClampMax;
	struct AIDataProviderFloatValue ScoringFactor;
	struct AIDataProviderFloatValue ReferenceValue;
	bool bDefineReferenceValue;
	bool bWorkOnFloatValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTNode : public UObject
{
public:
	struct FString NodeName;
	class UClass* TreeAsset;
	class UClass* ParentNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTAuxiliaryNode : public UBTNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTService : public UBTAuxiliaryNode
{
public:
	float Interval;
	float RandomDeviation;
	bool bCallTickOnSearchStart;
	bool bRestartTimerOnEachActivation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTaskNode : public UBTNode
{
public:
	TArray<class UClass*> Services;
	bool bIgnoreRestartSelf;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_BlackboardBase : public UBTTaskNode
{
public:
	struct BlackboardKeySelector BlackboardKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_MoveTo : public UBTTask_BlackboardBase
{
public:
	float AcceptableRadius;
	class UClass* FilterClass;
	float ObservedBlackboardValueTolerance;
	bool bObserveBlackboardValue;
	bool bAllowStrafe;
	bool bAllowPartialPath;
	bool bTrackMovingGoal;
	bool bProjectGoalLocation;
	bool bReachTestIncludesAgentRadius;
	bool bReachTestIncludesGoalRadius;
	bool bStopOnOverlap;
	bool bStopOnOverlapNeedsUpdate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIController : public Controller
{
public:
	bool bStartAILogicOnPossess;
	bool bStopAILogicOnUnposses;
	bool bLOSflag;
	bool bSkipExtraLOSChecks;
	bool bAllowStrafe;
	bool bWantsPlayerState;
	bool bSetControlRotationFromPawnOrientation;
	class UClass* PathFollowingComponent;
	class UClass* BrainComponent;
	class UClass* PerceptionComponent;
	class UClass* ActionsComp;
	class UClass* Blackboard;
	class UClass* CachedGameplayTasksComponent;
	class UClass* DefaultNavigationFilterClass;
	struct FScriptMulticastDelegate ReceiveMoveCompleted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PathFollowingComponent : public ActorComponent
{
public:
	class UClass* MovementComp;
	class UClass* MyNavData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CrowdFollowingComponent : public PathFollowingComponent
{
public:
	struct Vector CrowdAgentMoveDirection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AITask : public GameplayTask
{
public:
	class UClass* OwnerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISubsystem : public UObject
{
public:
	class UClass* AISystem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIPerceptionComponent : public ActorComponent
{
public:
	TArray<class UClass*> SensesConfig;
	class UClass* DominantSense;
	class UClass* AIOwner;
	struct FScriptMulticastDelegate OnPerceptionUpdated;
	struct FScriptMulticastDelegate OnTargetPerceptionUpdated;
	struct FScriptMulticastDelegate OnTargetPerceptionInfoUpdated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BrainComponent : public ActorComponent
{
public:
	class UClass* BlackboardComp;
	class UClass* AIOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BehaviorTreeComponent : public BrainComponent
{
public:
	TArray<class UClass*> NodeInstances;
	class UClass* DefaultBehaviorTreeAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense : public UObject
{
public:
	float DefaultExpirationAge;
	EAISenseNotifyType NotifyType;
	bool bWantsNewPawnNotification;
	bool bAutoRegisterAllPawnsAsSources;
	class UClass* PerceptionSystemInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Hearing : public UAISense
{
public:
	TArray<struct AINoiseEvent> NoiseEvents;
	float SpeedOfSoundSq;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AISystem : public AISystemBase
{
public:
	struct SoftClassPath PerceptionSystemClassName;
	struct SoftClassPath HotSpotManagerClassName;
	struct SoftClassPath EnvQueryManagerClassName;
	float AcceptanceRadius;
	float PathfollowingRegularPathPointAcceptanceRadius;
	float PathfollowingNavLinkAcceptanceRadius;
	bool bFinishMoveOnGoalOverlap;
	bool bAcceptPartialPaths;
	bool bAllowStrafing;
	bool bEnableBTAITasks;
	bool bAllowControllersAsEQSQuerier;
	bool bEnableDebuggerPlugin;
	bool bForgetStaleActors;
	bool bAddBlackboardSelfKey;
	ECollisionChannel DefaultSightCollisionChannel;
	class UClass* BehaviorTreeManager;
	class UClass* EnvironmentQueryManager;
	class UClass* PerceptionSystem;
	TArray<class UClass*> AllProxyObjects;
	class UClass* HotSpotManager;
	class UClass* NavLocalGrids;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIPerceptionStimuliSourceComponent : public ActorComponent
{
public:
	bool bAutoRegisterAsSource;
	TArray<class UClass*> RegisterAsSourceForSenses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavLinkProxy : public AActor
{
public:
	TArray<struct NavigationLink> PointLinks;
	TArray<struct NavigationSegmentLink> SegmentLinks;
	class UClass* SmartLinkComp;
	bool bSmartLinkIsRelevant;
	struct FScriptMulticastDelegate OnSmartLinkReached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AITask_MoveTo : public AITask
{
public:
	struct FScriptMulticastDelegate OnRequestFailed;
	struct FScriptMulticastDelegate OnMoveFinished;
	struct AIMoveRequest MoveRequest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIDataProvider : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIPerceptionSystem : public UAISubsystem
{
public:
	TArray<class UClass*> Senses;
	float PerceptionAgingRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryContext : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_Wait : public UBTTaskNode
{
public:
	float WaitTime;
	float RandomDeviation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator : public UBTAuxiliaryNode
{
public:
	bool bInverseCondition;
	EBTFlowAbortMode FlowAbortMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_BlackboardBase : public UBTDecorator
{
public:
	struct BlackboardKeySelector BlackboardKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTService_BlackboardBase : public UBTService
{
public:
	struct BlackboardKeySelector BlackboardKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_GameplayTaskBase : public UBTTaskNode
{
public:
	bool bWaitForGameplayTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CrowdManager : public CrowdManagerBase
{
public:
	class UClass* MyNavData;
	TArray<struct CrowdAvoidanceConfig> AvoidanceConfig;
	TArray<struct CrowdAvoidanceSamplingPattern> SamplingPatterns;
	int MaxAgents;
	float MaxAgentRadius;
	int MaxAvoidedAgents;
	int MaxAvoidedWalls;
	float NavmeshCheckInterval;
	float PathOptimizationInterval;
	float SeparationDirClamp;
	float PathOffsetRadiusMultiplier;
	bool bResolveCollisions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryManager : public UAISubsystem
{
public:
	TArray<struct EnvQueryInstanceCache> InstanceCache;
	TArray<class UClass*> LocalContexts;
	TArray<class UClass*> GCShieldedWrappers;
	float MaxAllowedTestingTime;
	bool bTestQueriesUsingBreadth;
	int QueryCountWarningThreshold;
	double QueryCountWarningInterval;
	double ExecutionTimeWarningSeconds;
	double HandlingResultTimeWarningSeconds;
	double GenerationTimeWarningSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator : public UEnvQueryNode
{
public:
	struct FString OptionName;
	class UClass* ItemType;
	bool bAutoSortTests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_ActorsOfClass : public UEnvQueryGenerator
{
public:
	class UClass* SearchedActorClass;
	struct AIDataProviderBoolValue GenerateOnlyActorsInRadius;
	struct AIDataProviderFloatValue SearchRadius;
	class UClass* SearchCenter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_ProjectedPoints : public UEnvQueryGenerator
{
public:
	struct EnvTraceData ProjectionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_OnCircle : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue CircleRadius;
	struct AIDataProviderFloatValue SpaceBetween;
	struct AIDataProviderIntValue NumberOfPoints;
	EPointOnCircleSpacingMethod PointOnCircleSpacingMethod;
	struct EnvDirection ArcDirection;
	struct AIDataProviderFloatValue ArcAngle;
	float AngleRadians;
	class UClass* CircleCenter;
	bool bIgnoreAnyContextActorsWhenGeneratingCircle;
	struct AIDataProviderFloatValue CircleCenterZOffset;
	struct EnvTraceData TraceData;
	bool bDefineArc;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryItemType : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryItemType_VectorBase : public UEnvQueryItemType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryItemType_ActorBase : public UEnvQueryItemType_VectorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryItemType_Point : public UEnvQueryItemType_VectorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GenericTeamAgentInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIAsyncTaskBlueprintProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFail;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIBlueprintHelperLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIDataProvider_QueryParams : public UAIDataProvider
{
public:
	struct FName ParamName;
	float FloatValue;
	int IntValue;
	bool BoolValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIDataProvider_Random : public UAIDataProvider_QueryParams
{
public:
	float Min;
	float Max;
	bool bInteger;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIPerceptionListenerInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIResourceInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIResource_Movement : public GameplayTaskResource
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIResource_Logic : public GameplayTaskResource
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Blueprint : public UAISense
{
public:
	class UClass* ListenerDataType;
	TArray<class UClass*> ListenerContainer;
	TArray<class UClass*> UnprocessedEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Damage : public UAISense
{
public:
	TArray<struct AIDamageEvent> RegisteredEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Prediction : public UAISense
{
public:
	TArray<struct AIPredictionEvent> RegisteredEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Sight : public UAISense
{
public:
	int MaxTracesPerTick;
	int MinQueriesPerTimeSliceCheck;
	double MaxTimeSlicePerTick;
	float HighImportanceQueryDistanceThreshold;
	float MaxQueryImportance;
	float SightLimitQueryImportance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Team : public UAISense
{
public:
	TArray<struct AITeamStimulusEvent> RegisteredEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISense_Touch : public UAISense
{
public:
	TArray<struct AITouchEvent> RegisteredEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AISenseBlueprintListener : public UserDefinedStruct
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig : public UObject
{
public:
	struct Color DebugColor;
	float MaxAge;
	bool bStartsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Blueprint : public UAISenseConfig
{
public:
	class UClass* Implementation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Damage : public UAISenseConfig
{
public:
	class UClass* Implementation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Hearing : public UAISenseConfig
{
public:
	class UClass* Implementation;
	float HearingRange;
	float LoSHearingRange;
	bool bUseLoSHearing;
	struct AISenseAffiliationFilter DetectionByAffiliation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Prediction : public UAISenseConfig
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Sight : public UAISenseConfig
{
public:
	class UClass* Implementation;
	float SightRadius;
	float LoseSightRadius;
	float PeripheralVisionAngleDegrees;
	struct AISenseAffiliationFilter DetectionByAffiliation;
	float AutoSuccessRangeFromLastSeenLocation;
	float PointOfViewBackwardOffset;
	float NearClippingRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Team : public UAISenseConfig
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseConfig_Touch : public UAISenseConfig
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseEvent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseEvent_Damage : public UAISenseEvent
{
public:
	struct AIDamageEvent Event;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseEvent_Hearing : public UAISenseEvent
{
public:
	struct AINoiseEvent Event;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AISightTargetInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AITask_LockLogic : public AITask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AITask_RunEQS : public AITask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBehaviorTree : public UObject
{
public:
	class UClass* RootNode;
	class UClass* BlackboardAsset;
	TArray<class UClass*> RootDecorators;
	TArray<struct BTDecoratorLogic> RootDecoratorOps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBehaviorTreeManager : public UObject
{
public:
	int MaxDebuggerSteps;
	TArray<struct BehaviorTreeTemplateInfo> LoadedTemplates;
	TArray<class UClass*> ActiveComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBehaviorTreeTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlackboardAssetProvider : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlackboardComponent : public ActorComponent
{
public:
	class UClass* BrainComp;
	class UClass* DefaultBlackboardAsset;
	class UClass* BlackboardAsset;
	TArray<class UClass*> KeyInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlackboardData : public DataAsset
{
public:
	class UClass* Parent;
	TArray<struct BlackboardEntry> Keys;
	bool bHasSynchronizedKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Bool : public UBlackboardKeyType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Class : public UBlackboardKeyType
{
public:
	class UClass* BASEClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Enum : public UBlackboardKeyType
{
public:
	class UClass* EnumType;
	struct FString EnumName;
	bool bIsEnumNameValid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Float : public UBlackboardKeyType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Int : public UBlackboardKeyType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Name : public UBlackboardKeyType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_NativeEnum : public UBlackboardKeyType
{
public:
	struct FString EnumName;
	class UClass* EnumType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Object : public UBlackboardKeyType
{
public:
	class UClass* BASEClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Rotator : public UBlackboardKeyType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_String : public UBlackboardKeyType
{
public:
	struct FString StringValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyType_Vector : public UBlackboardKeyType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTCompositeNode : public UBTNode
{
public:
	TArray<struct BTCompositeChild> Children;
	TArray<class UClass*> Services;
	bool bApplyDecoratorScope;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTComposite_Selector : public UBTCompositeNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTComposite_Sequence : public UBTCompositeNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTComposite_SimpleParallel : public UBTCompositeNode
{
public:
	EBTParallelMode FinishMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_Blackboard : public UBTDecorator_BlackboardBase
{
public:
	int IntValue;
	float FloatValue;
	struct FString StringValue;
	struct FString CachedDescription;
	byte OperationType;
	EBTBlackboardRestart NotifyObserver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_BlueprintBase : public UBTDecorator
{
public:
	class UClass* AIOwner;
	class UClass* ActorOwner;
	TArray<struct FName> ObservedKeyNames;
	bool bShowPropertyDetails;
	bool bCheckConditionOnlyBlackBoardChanges;
	bool bIsObservingBB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_CheckGameplayTagsOnActor : public UBTDecorator
{
public:
	struct BlackboardKeySelector ActorToCheck;
	EGameplayContainerMatchType TagsToMatch;
	struct GameplayTagContainer GameplayTags;
	struct FString CachedDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_CompareBBEntries : public UBTDecorator
{
public:
	EBlackBoardEntryComparison Operator;
	struct BlackboardKeySelector BlackboardKeyA;
	struct BlackboardKeySelector BlackboardKeyB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_ConditionalLoop : public UBTDecorator_Blackboard
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_ConeCheck : public UBTDecorator
{
public:
	float ConeHalfAngle;
	struct BlackboardKeySelector ConeOrigin;
	struct BlackboardKeySelector ConeDirection;
	struct BlackboardKeySelector Observed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_Cooldown : public UBTDecorator
{
public:
	float CoolDownTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_DoesPathExist : public UBTDecorator
{
public:
	struct BlackboardKeySelector BlackboardKeyA;
	struct BlackboardKeySelector BlackboardKeyB;
	bool bUseSelf;
	EPathExistanceQueryType PathQueryType;
	class UClass* FilterClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_ForceSuccess : public UBTDecorator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_IsAtLocation : public UBTDecorator_BlackboardBase
{
public:
	float AcceptableRadius;
	struct AIDataProviderFloatValue ParametrizedAcceptableRadius;
	EFAIDistanceType GeometricDistanceType;
	bool bUseParametrizedRadius;
	bool bUseNavAgentGoalLocation;
	bool bPathFindingBasedTest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_IsBBEntryOfClass : public UBTDecorator_BlackboardBase
{
public:
	class UClass* TestClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_KeepInCone : public UBTDecorator
{
public:
	float ConeHalfAngle;
	struct BlackboardKeySelector ConeOrigin;
	struct BlackboardKeySelector Observed;
	bool bUseSelfAsOrigin;
	bool bUseSelfAsObserved;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_Loop : public UBTDecorator
{
public:
	int NumLoops;
	bool bInfiniteLoop;
	float InfiniteLoopTimeoutTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_ReachedMoveGoal : public UBTDecorator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_SetTagCooldown : public UBTDecorator
{
public:
	struct GameplayTag CooldownTag;
	float CooldownDuration;
	bool bAddToExistingDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_TagCooldown : public UBTDecorator
{
public:
	struct GameplayTag CooldownTag;
	float CooldownDuration;
	bool bAddToExistingDuration;
	bool bActivatesCooldown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTDecorator_TimeLimit : public UBTDecorator
{
public:
	float TimeLimit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BTFunctionLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTService_BlueprintBase : public UBTService
{
public:
	class UClass* AIOwner;
	class UClass* ActorOwner;
	bool bShowPropertyDetails;
	bool bShowEventDetails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTService_DefaultFocus : public UBTService_BlackboardBase
{
public:
	byte FocusPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTService_RunEQS : public UBTService_BlackboardBase
{
public:
	struct EQSParametrizedQueryExecutionRequest EQSRequest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_BlueprintBase : public UBTTaskNode
{
public:
	class UClass* AIOwner;
	class UClass* ActorOwner;
	struct IntervalCountdown TickInterval;
	bool bShowPropertyDetails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_FinishWithResult : public UBTTaskNode
{
public:
	EBTNodeResult Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_MakeNoise : public UBTTaskNode
{
public:
	float Loudnes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_MoveDirectlyToward : public UBTTask_MoveTo
{
public:
	bool bDisablePathUpdateOnGoalLocationChange;
	bool bProjectVectorGoalToNavigation;
	bool bUpdatedDeprecatedProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_PawnActionBase : public UBTTaskNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_PlayAnimation : public UBTTaskNode
{
public:
	class UClass* AnimationToPlay;
	bool bLooping;
	bool bNonBlocking;
	class UClass* MyOwnerComp;
	class UClass* CachedSkelMesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_PlaySound : public UBTTaskNode
{
public:
	class UClass* SoundToPlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_PushPawnAction : public UBTTask_PawnActionBase
{
public:
	class UClass* Action;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_RotateToFaceBBEntry : public UBTTask_BlackboardBase
{
public:
	float Precision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_RunBehavior : public UBTTaskNode
{
public:
	class UClass* BehaviorAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_RunBehaviorDynamic : public UBTTaskNode
{
public:
	struct GameplayTag InjectionTag;
	class UClass* DefaultBehaviorAsset;
	class UClass* BehaviorAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_RunEQSQuery : public UBTTask_BlackboardBase
{
public:
	class UClass* QueryTemplate;
	TArray<struct EnvNamedValue> QueryParams;
	TArray<struct AIDynamicParam> QueryConfig;
	EEnvQueryRunMode RunMode;
	struct BlackboardKeySelector EQSQueryBlackboardKey;
	bool bUseBBKey;
	struct EQSParametrizedQueryExecutionRequest EQSRequest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_SetTagCooldown : public UBTTaskNode
{
public:
	struct GameplayTag CooldownTag;
	bool bAddToExistingDuration;
	float CooldownDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_WaitBlackboardTime : public UBTTask_Wait
{
public:
	struct BlackboardKeySelector BlackboardKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CrowdAgentInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class DetourCrowdAIController : public AIController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EnvQuery : public DataAsset
{
public:
	struct FName QueryName;
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryContext_BlueprintBase : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryContext_Item : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryContext_Querier : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryDebugHelpers : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_BlueprintBase : public UEnvQueryGenerator
{
public:
	struct FText GeneratorsActionDescription;
	class UClass* Context;
	class UClass* GeneratedItemType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_Composite : public UEnvQueryGenerator
{
public:
	TArray<class UClass*> Generators;
	bool bAllowDifferentItemTypes;
	bool bHasMatchingItemType;
	class UClass* ForcedItemType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_Cone : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue AlignedPointsDistance;
	struct AIDataProviderFloatValue ConeDegrees;
	struct AIDataProviderFloatValue AngleStep;
	struct AIDataProviderFloatValue Range;
	class UClass* CenterActor;
	bool bIncludeContextLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_CurrentLocation : public UEnvQueryGenerator
{
public:
	class UClass* QueryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_Donut : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue InnerRadius;
	struct AIDataProviderFloatValue OuterRadius;
	struct AIDataProviderIntValue NumberOfRings;
	struct AIDataProviderIntValue PointsPerRing;
	struct EnvDirection ArcDirection;
	struct AIDataProviderFloatValue ArcAngle;
	bool bUseSpiralPattern;
	class UClass* Center;
	bool bDefineArc;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_SimpleGrid : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue GridSize;
	struct AIDataProviderFloatValue SpaceBetween;
	class UClass* GenerateAround;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryGenerator_PathingGrid : public UEnvQueryGenerator_SimpleGrid
{
public:
	struct AIDataProviderBoolValue PathToItem;
	class UClass* NavigationFilter;
	struct AIDataProviderFloatValue ScanRangeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryInstanceBlueprintWrapper : public UObject
{
public:
	int QueryID;
	class UClass* ItemType;
	int OptionIndex;
	struct FScriptMulticastDelegate OnQueryFinishedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryItemType_Actor : public UEnvQueryItemType_ActorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryItemType_Direction : public UEnvQueryItemType_VectorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryOption : public UObject
{
public:
	class UClass* Generator;
	TArray<class UClass*> Tests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Distance : public UEnvQueryTest
{
public:
	EEnvTestDistance TestMode;
	class UClass* DistanceTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Dot : public UEnvQueryTest
{
public:
	struct EnvDirection LineA;
	struct EnvDirection LineB;
	EEnvTestDot TestMode;
	bool bAbsoluteValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_GameplayTags : public UEnvQueryTest
{
public:
	struct GameplayTagQuery TagQueryToMatch;
	bool bUpdatedToUseQuery;
	EGameplayContainerMatchType TagsToMatch;
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Overlap : public UEnvQueryTest
{
public:
	struct EnvOverlapData OverlapData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Pathfinding : public UEnvQueryTest
{
public:
	EEnvTestPathfinding TestMode;
	class UClass* Context;
	struct AIDataProviderBoolValue PathFromContext;
	struct AIDataProviderBoolValue SkipUnreachable;
	class UClass* FilterClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_PathfindingBatch : public UEnvQueryTest_Pathfinding
{
public:
	struct AIDataProviderFloatValue ScanRangeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Project : public UEnvQueryTest
{
public:
	struct EnvTraceData ProjectionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Random : public UEnvQueryTest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Trace : public UEnvQueryTest
{
public:
	struct EnvTraceData TraceData;
	struct AIDataProviderBoolValue TraceFromContext;
	struct AIDataProviderFloatValue ItemHeightOffset;
	struct AIDataProviderFloatValue ContextHeightOffset;
	class UClass* Context;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_Volume : public UEnvQueryTest
{
public:
	class UClass* VolumeContext;
	class UClass* VolumeClass;
	bool bDoComplexVolumeTest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EQSQueryResultSourceInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EQSRenderingComponent : public PrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EQSTestingPawn : public Character
{
public:
	class UClass* QueryTemplate;
	TArray<struct EnvNamedValue> QueryParams;
	TArray<struct AIDynamicParam> QueryConfig;
	float TimeLimitPerStep;
	int StepToDebugDraw;
	EEnvQueryHightlightMode HighlightMode;
	bool bDrawLabels;
	bool bDrawFailedItems;
	bool bReRunQueryOnlyOnFinishedMove;
	bool bShouldBeVisibleInGame;
	bool bTickDuringGame;
	EEnvQueryRunMode QueryingMode;
	struct NavAgentProperties NavAgentProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GridPathAIController : public AIController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GridPathFollowingComponent : public PathFollowingComponent
{
public:
	class UClass* GridManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavFilter_AIControllerDefault : public NavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLocalGridManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPathFollowingManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnAction : public UObject
{
public:
	class UClass* ChildAction;
	class UClass* ParentAction;
	class UClass* OwnerComponent;
	class UClass* Instigator;
	class UClass* BrainComp;
	bool bAllowNewSameClassInstance;
	bool bReplaceActiveSameClassInstance;
	bool bShouldPauseMovement;
	bool bAlwaysNotifyOnFinished;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnAction_BlueprintBase : public UPawnAction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnAction_Move : public UPawnAction
{
public:
	class UClass* GoalActor;
	struct Vector GoalLocation;
	float AcceptableRadius;
	class UClass* FilterClass;
	bool bAllowStrafe;
	bool bFinishOnOverlap;
	bool bUsePathfinding;
	bool bAllowPartialPath;
	bool bProjectGoalToNavigation;
	bool bUpdatePathToGoal;
	bool bAbortChildActionOnPathChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnAction_Repeat : public UPawnAction
{
public:
	class UClass* ActionToRepeat;
	class UClass* RecentActionCopy;
	EPawnActionFailHandling ChildFailureHandlingMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnAction_Sequence : public UPawnAction
{
public:
	TArray<class UClass*> ActionSequence;
	EPawnActionFailHandling ChildFailureHandlingMode;
	class UClass* RecentActionCopy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnAction_Wait : public UPawnAction
{
public:
	float TimeToWait;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PawnActionsComponent : public ActorComponent
{
public:
	class UClass* ControlledPawn;
	TArray<struct PawnActionStack> ActionStacks;
	TArray<struct PawnActionEvent> ActionEvents;
	class UClass* CurrentAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PawnSensingComponent : public ActorComponent
{
public:
	float HearingThreshold;
	float LOSHearingThreshold;
	float SightRadius;
	float SensingInterval;
	float HearingMaxSoundAge;
	bool bEnableSensingUpdates;
	bool bOnlySensePlayers;
	bool bSeePawns;
	bool bHearNoises;
	struct FScriptMulticastDelegate OnSeePawn;
	struct FScriptMulticastDelegate OnHearNoise;
	float PeripheralVisionAngle;
	float PeripheralVisionCosine;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVisualLoggerExtension : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AmbientAudioLoop : public AmbientAudioBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AmbientAudioOneShot : public AmbientAudioBase
{
public:
	struct Vector2D RetriggerTimeRange;
	struct Vector2D TriggerDistanceRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AmbientAudioDataAsset : public DataAsset
{
public:
	TArray<struct AmbientAudioLoop> LoopingSounds;
	TArray<struct AmbientAudioOneShot> OneShotSounds;
	float TagCrossfadeTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AmbientAudioSubsystem : public WorldSubsystem
{
public:
	struct FScriptMulticastDelegate OnTagChanged;
	struct FScriptMulticastDelegate OnEntryChanged;
	TArray<class UClass*> GlobalVolumes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AmbientVolume : public Volume
{
public:
	class UClass* AmbientAsset;
	int Priority;
	float CrossfadeTime;
	bool bEnabled;
	bool bGlobal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnalyticsBlueprintLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAndroidPermissionCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnPermissionsGrantedDynamicDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AndroidPermissionFunctionLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimationBudgetBlueprintLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkeletalMeshComponentBudgeted : public SkeletalMeshComponent
{
public:
	bool bAutoRegisterWithBudgetAllocator;
	bool bAutoCalculateSignificance;
	bool bShouldUseActorRenderedFlag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AimConstraintDescription : public ConstraintDescriptionEx
{
public:
	struct Axis LookAt_Axis;
	struct Axis LookUp_Axis;
	bool bUseLookUp;
	struct Vector LookUpTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TransformConstraintDescription : public ConstraintDescriptionEx
{
public:
	ETransformConstraintType TransformType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationDataSourceRegistry : public UObject
{
public:
	Unknown DataSources;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TickAnimationSharingFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimSharingStateInstance : public AnimInstance
{
public:
	class UClass* AnimationToPlay;
	float PermutationTimeOffset;
	float PlayRate;
	bool bStateBool;
	class UClass* Instance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimSharingTransitionInstance : public AnimInstance
{
public:
	Unknown FromComponent;
	Unknown ToComponent;
	float BlendTime;
	bool bBlendBool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimSharingAdditiveInstance : public AnimInstance
{
public:
	Unknown BaseComponent;
	Unknown AdditiveAnimation;
	float Alpha;
	bool bStateBool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimSharingInstance : public UObject
{
public:
	TArray<class UClass*> RegisteredActors;
	class UClass* StateProcessor;
	TArray<class UClass*> UsedAnimationSequences;
	class UClass* StateEnum;
	class UClass* SharingActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationSharingManager : public UObject
{
public:
	TArray<class UClass*> Skeletons;
	TArray<class UClass*> PerSkeletonData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationSharingSetup : public UObject
{
public:
	TArray<struct PerSkeletonAnimationSharingSetup> SkeletonSetups;
	struct AnimationSharingScalability ScalabilitySettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationSharingStateProcessor : public UObject
{
public:
	struct TSoftClassPtr<UObject> AnimationStateEnum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimSequencerInstanceProxy : public AnimInstanceProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SkeletalControlBase : public AnimNode_Base
{
public:
	struct ComponentSpacePoseLink ComponentPose;
	int LODThreshold;
	float ActualAlpha;
	EAnimAlphaInputType AlphaInputType;
	bool bAlphaBoolEnabled;
	float Alpha;
	struct InputScaleBias AlphaScaleBias;
	struct InputAlphaBoolBlend AlphaBoolBlend;
	struct FName AlphaCurveName;
	struct InputScaleBiasClamp AlphaScaleBiasClamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_RandomPlayer : public AnimNode_Base
{
public:
	TArray<struct RandomPlayerSequenceEntry> Entries;
	bool bShuffleMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LookAt : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference BoneToModify;
	struct BoneSocketTarget LookAtTarget;
	struct Vector LookAtLocation;
	struct Axis LookAt_Axis;
	bool bUseLookUpAxis;
	EInterpolationBlend InterpolationType;
	struct Axis LookUp_Axis;
	float LookAtClamp;
	float InterpolationTime;
	float InterpolationTriggerThreashold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendSpacePlayer : public AnimNode_AssetPlayerBase
{
public:
	float X;
	float Y;
	float Z;
	float PlayRate;
	bool bLoop;
	bool bResetPlayTimeWhenBlendSpaceChanges;
	float StartPosition;
	class UClass* BlendSpace;
	class UClass* PreviousBlendSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_AimOffsetLookAt : public AnimNode_BlendSpacePlayer
{
public:
	struct PoseLink BasePose;
	int LODThreshold;
	struct FName SourceSocketName;
	struct FName PivotSocketName;
	struct Vector LookAtLocation;
	struct Vector SocketAxis;
	float Alpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_AnimDynamics : public AnimNode_SkeletalControlBase
{
public:
	float LinearDampingOverride;
	float AngularDampingOverride;
	struct BoneReference RelativeSpaceBone;
	struct BoneReference BoundBone;
	struct BoneReference ChainEnd;
	struct Vector BoxExtents;
	struct Vector LocalJointOffset;
	float GravityScale;
	struct Vector GravityOverride;
	float LinearSpringConstant;
	float AngularSpringConstant;
	float WindScale;
	struct Vector ComponentLinearAccScale;
	struct Vector ComponentLinearVelScale;
	struct Vector ComponentAppliedLinearAccClamp;
	float AngularBiasOverride;
	int NumSolverIterationsPreUpdate;
	int NumSolverIterationsPostUpdate;
	struct AnimPhysConstraintSetup ConstraintSetup;
	TArray<struct AnimPhysSphericalLimit> SphericalLimits;
	float SphereCollisionRadius;
	struct Vector ExternalForce;
	TArray<struct AnimPhysPlanarLimit> PlanarLimits;
	EAnimPhysCollisionType CollisionType;
	EAnimPhysSimSpaceType SimulationSpace;
	bool bUseSphericalLimits;
	bool bUsePlanarLimit;
	bool bDoUpdate;
	bool bDoEval;
	bool bOverrideLinearDamping;
	bool bOverrideAngularBias;
	bool bOverrideAngularDamping;
	bool bEnableWind;
	bool bUseGravityOverride;
	bool bLinearSpring;
	bool bAngularSpring;
	bool bChain;
	struct RotationRetargetingInfo RetargetingSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ApplyAdditive : public AnimNode_Base
{
public:
	struct PoseLink Base;
	struct PoseLink Additive;
	float Alpha;
	struct InputScaleBias AlphaScaleBias;
	int LODThreshold;
	struct InputAlphaBoolBlend AlphaBoolBlend;
	struct FName AlphaCurveName;
	struct InputScaleBiasClamp AlphaScaleBiasClamp;
	EAnimAlphaInputType AlphaInputType;
	bool bAlphaBoolEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ApplyLimits : public AnimNode_SkeletalControlBase
{
public:
	TArray<struct AngularRangeLimit> AngularRangeLimits;
	TArray<struct Vector> AngularOffsets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendBoneByChannel : public AnimNode_Base
{
public:
	struct PoseLink A;
	struct PoseLink B;
	TArray<struct BlendBoneByChannelEntry> BoneDefinitions;
	float Alpha;
	struct InputScaleBias AlphaScaleBias;
	EBoneControlSpace TransformsSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendListBase : public AnimNode_Base
{
public:
	TArray<struct PoseLink> BlendPose;
	TArray<float> BlendTime;
	EBlendListTransitionType TransitionType;
	EAlphaBlendOption BlendType;
	bool bResetChildOnActivation;
	class UClass* CustomBlendCurve;
	class UClass* BlendProfile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendListByBool : public AnimNode_BlendListBase
{
public:
	bool bActiveValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendListByEnum : public AnimNode_BlendListBase
{
public:
	TArray<int> EnumToPoseIndex;
	byte ActiveEnumValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendListByInt : public AnimNode_BlendListBase
{
public:
	int ActiveChildIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BlendSpaceEvaluator : public AnimNode_BlendSpacePlayer
{
public:
	float NormalizedTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_BoneDrivenController : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference SourceBone;
	class UClass* DrivingCurve;
	float Multiplier;
	float RangeMin;
	float RangeMax;
	float RemappedMin;
	float RemappedMax;
	struct FName ParameterName;
	struct BoneReference TargetBone;
	EDrivenDestinationMode DestinationMode;
	EDrivenBoneModificationMode ModificationMode;
	EComponentType SourceComponent;
	bool bUseRange;
	bool bAffectTargetTranslationX;
	bool bAffectTargetTranslationY;
	bool bAffectTargetTranslationZ;
	bool bAffectTargetRotationX;
	bool bAffectTargetRotationY;
	bool bAffectTargetRotationZ;
	bool bAffectTargetScaleX;
	bool bAffectTargetScaleY;
	bool bAffectTargetScaleZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_CCDIK : public AnimNode_SkeletalControlBase
{
public:
	struct Vector EffectorLocation;
	EBoneControlSpace EffectorLocationSpace;
	struct BoneSocketTarget EffectorTarget;
	struct BoneReference TipBone;
	struct BoneReference RootBone;
	float Precision;
	int MaxIterations;
	bool bStartFromTail;
	bool bEnableRotationLimit;
	TArray<float> RotationLimitPerJoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_Constraint : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference BoneToModify;
	TArray<struct Constraint> ConstraintSetup;
	TArray<float> ConstraintWeights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_CopyBone : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference SourceBone;
	struct BoneReference TargetBone;
	bool bCopyTranslation;
	bool bCopyRotation;
	bool bCopyScale;
	EBoneControlSpace ControlSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_CopyBoneDelta : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference SourceBone;
	struct BoneReference TargetBone;
	bool bCopyTranslation;
	bool bCopyRotation;
	bool bCopyScale;
	ECopyBoneDeltaMode CopyMode;
	float TranslationMultiplier;
	float RotationMultiplier;
	float ScaleMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_CopyPoseFromMesh : public AnimNode_Base
{
public:
	Unknown SourceMeshComponent;
	bool bUseAttachedParent;
	bool bCopyCurves;
	bool bCopyCustomAttributes;
	bool bUseMeshPose;
	struct FName RootBoneToCopy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_CurveSource : public AnimNode_Base
{
public:
	struct PoseLink SourcePose;
	struct FName SourceBinding;
	float Alpha;
	Unknown CurveSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_Fabrik : public AnimNode_SkeletalControlBase
{
public:
	struct Transform EffectorTransform;
	struct BoneSocketTarget EffectorTarget;
	struct BoneReference TipBone;
	struct BoneReference RootBone;
	float Precision;
	int MaxIterations;
	EBoneControlSpace EffectorTransformSpace;
	EBoneRotationSource EffectorRotationSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_HandIKRetargeting : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference RightHandFK;
	struct BoneReference LeftHandFK;
	struct BoneReference RightHandIK;
	struct BoneReference LeftHandIK;
	TArray<struct BoneReference> IKBonesToMove;
	float HandFKWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LayeredBoneBlend : public AnimNode_Base
{
public:
	struct PoseLink BasePose;
	TArray<struct PoseLink> BlendPoses;
	TArray<struct InputBlendPose> LayerSetup;
	TArray<float> BlendWeights;
	bool bMeshSpaceRotationBlend;
	bool bMeshSpaceScaleBlend;
	ECurveBlendOption CurveBlendOption;
	bool bBlendRootMotionBasedOnRootBone;
	int LODThreshold;
	TArray<struct PerBoneBlendWeight> PerBoneBlendWeights;
	struct Guid SkeletonGuid;
	struct Guid VirtualBoneGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LegIK : public AnimNode_SkeletalControlBase
{
public:
	float ReachPrecision;
	int MaxIterations;
	TArray<struct AnimLegIKDefinition> LegsDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_MakeDynamicAdditive : public AnimNode_Base
{
public:
	struct PoseLink Base;
	struct PoseLink Additive;
	bool bMeshSpaceAdditive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ModifyBone : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference BoneToModify;
	struct Vector Translation;
	struct Rotator Rotation;
	struct Vector Scale;
	EBoneModificationMode TranslationMode;
	EBoneModificationMode RotationMode;
	EBoneModificationMode ScaleMode;
	EBoneControlSpace TranslationSpace;
	EBoneControlSpace RotationSpace;
	EBoneControlSpace ScaleSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ModifyCurve : public AnimNode_Base
{
public:
	struct PoseLink SourcePose;
	TArray<float> CurveValues;
	TArray<struct FName> CurveNames;
	float Alpha;
	EModifyCurveApplyMode ApplyMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_MultiWayBlend : public AnimNode_Base
{
public:
	TArray<struct PoseLink> Poses;
	TArray<float> DesiredAlphas;
	struct InputScaleBias AlphaScaleBias;
	bool bAdditiveNode;
	bool bNormalizeAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ObserveBone : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference BoneToObserve;
	EBoneControlSpace DisplaySpace;
	bool bRelativeToRefPose;
	struct Vector Translation;
	struct Rotator Rotation;
	struct Vector Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_PoseHandler : public AnimNode_AssetPlayerBase
{
public:
	class UClass* PoseAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_PoseBlendNode : public AnimNode_PoseHandler
{
public:
	struct PoseLink SourcePose;
	EAlphaBlendOption BlendOption;
	class UClass* CustomCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_PoseByName : public AnimNode_PoseHandler
{
public:
	struct FName PoseName;
	float PoseWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_PoseDriver : public AnimNode_PoseHandler
{
public:
	struct PoseLink SourcePose;
	TArray<struct BoneReference> SourceBones;
	TArray<struct BoneReference> OnlyDriveBones;
	TArray<struct PoseDriverTarget> PoseTargets;
	struct BoneReference EvalSpaceBone;
	struct RBFParams RBFParams;
	EPoseDriverSource DriveSource;
	EPoseDriverOutput DriveOutput;
	bool bOnlyDriveSelectedBones;
	int LODThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_PoseSnapshot : public AnimNode_Base
{
public:
	struct FName SnapshotName;
	struct PoseSnapshot Snapshot;
	ESnapshotSourceMode Mode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_MeshSpaceRefPose : public AnimNode_Base
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_RefPose : public AnimNode_Base
{
public:
	ERefPoseType RefPoseType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ResetRoot : public AnimNode_SkeletalControlBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_RigidBody : public AnimNode_SkeletalControlBase
{
public:
	class UClass* OverridePhysicsAsset;
	struct Vector OverrideWorldGravity;
	struct Vector ExternalForce;
	struct Vector ComponentLinearAccScale;
	struct Vector ComponentLinearVelScale;
	struct Vector ComponentAppliedLinearAccClamp;
	struct SimSpaceSettings SimSpaceSettings;
	float CachedBoundsScale;
	struct BoneReference BaseBoneRef;
	ECollisionChannel OverlapChannel;
	ESimulationSpace SimulationSpace;
	bool bForceDisableCollisionBetweenConstraintBodies;
	bool bEnableWorldGeometry;
	bool bOverrideWorldGravity;
	bool bTransferBoneVelocities;
	bool bFreezeIncomingPoseOnStart;
	bool bClampLinearTranslationLimitToRefPose;
	float WorldSpaceMinimumScale;
	float EvaluationResetTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_RotateRootBone : public AnimNode_Base
{
public:
	struct PoseLink BasePose;
	float Pitch;
	float Yaw;
	struct InputScaleBiasClamp PitchScaleBiasClamp;
	struct InputScaleBiasClamp YawScaleBiasClamp;
	struct Rotator MeshToComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_RotationMultiplier : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference TargetBone;
	struct BoneReference SourceBone;
	float Multiplier;
	EBoneAxis RotationAxisToRefer;
	bool bIsAdditive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_RotationOffsetBlendSpace : public AnimNode_BlendSpacePlayer
{
public:
	struct PoseLink BasePose;
	int LODThreshold;
	float Alpha;
	struct InputScaleBias AlphaScaleBias;
	struct InputAlphaBoolBlend AlphaBoolBlend;
	struct FName AlphaCurveName;
	struct InputScaleBiasClamp AlphaScaleBiasClamp;
	EAnimAlphaInputType AlphaInputType;
	bool bAlphaBoolEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ScaleChainLength : public AnimNode_Base
{
public:
	struct PoseLink InputPose;
	float DefaultChainLength;
	struct BoneReference ChainStartBone;
	struct BoneReference ChainEndBone;
	struct Vector TargetLocation;
	float Alpha;
	struct InputScaleBias AlphaScaleBias;
	EScaleChainInitialLength ChainInitialLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SequenceEvaluator : public AnimNode_AssetPlayerBase
{
public:
	class UClass* Sequence;
	float ExplicitTime;
	bool bShouldLoop;
	bool bTeleportToExplicitTime;
	ESequenceEvalReinit ReinitializationBehavior;
	float StartPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_Slot : public AnimNode_Base
{
public:
	struct PoseLink Source;
	struct FName SlotName;
	bool bAlwaysUpdateSourcePose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SplineIK : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference StartBone;
	struct BoneReference EndBone;
	ESplineBoneAxis BoneAxis;
	bool bAutoCalculateSpline;
	int PointCount;
	TArray<struct Transform> ControlPoints;
	float Roll;
	float TwistStart;
	float TwistEnd;
	struct AlphaBlend TwistBlend;
	float Stretch;
	float Offset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SpringBone : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference SpringBone;
	float MaxDisplacement;
	float SpringStiffness;
	float SpringDamping;
	float ErrorResetThresh;
	bool bLimitDisplacement;
	bool bTranslateX;
	bool bTranslateY;
	bool bTranslateZ;
	bool bRotateX;
	bool bRotateY;
	bool bRotateZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_StateResult : public AnimNode_Root
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_Trail : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference TrailBone;
	int ChainLength;
	EAxis ChainBoneAxis;
	bool bInvertChainBoneAxis;
	bool bLimitStretch;
	bool bLimitRotation;
	bool bUsePlanarLimit;
	bool bActorSpaceFakeVel;
	bool bReorientParentToChild;
	float MaxDeltaTime;
	float RelaxationSpeedScale;
	struct RuntimeFloatCurve TrailRelaxationSpeed;
	struct InputScaleBiasClamp RelaxationSpeedScaleInputProcessor;
	TArray<struct RotationLimit> RotationLimits;
	TArray<struct Vector> RotationOffsets;
	TArray<struct AnimPhysPlanarLimit> PlanarLimits;
	float StretchLimit;
	struct Vector FakeVelocity;
	struct BoneReference BaseJoint;
	float LastBoneRotationAnimAlphaBlend;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_TwistCorrectiveNode : public AnimNode_SkeletalControlBase
{
public:
	struct ReferenceBoneFrame BaseFrame;
	struct ReferenceBoneFrame TwistFrame;
	struct Axis TwistPlaneNormalAxis;
	float RangeMax;
	float RemappedMin;
	float RemappedMax;
	struct AnimCurveParam Curve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_TwoBoneIK : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference IKBone;
	float StartStretchRatio;
	float MaxStretchScale;
	struct Vector EffectorLocation;
	struct BoneSocketTarget EffectorTarget;
	struct Vector JointTargetLocation;
	struct BoneSocketTarget JointTarget;
	struct Axis TwistAxis;
	EBoneControlSpace EffectorLocationSpace;
	EBoneControlSpace JointTargetLocationSpace;
	bool bAllowStretching;
	bool bTakeRotationFromEffectorSpace;
	bool bMaintainEffectorRelRot;
	bool bAllowTwist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_TwoWayBlend : public AnimNode_Base
{
public:
	struct PoseLink A;
	struct PoseLink B;
	EAnimAlphaInputType AlphaInputType;
	bool bAlphaBoolEnabled;
	bool bResetChildOnActivation;
	float Alpha;
	struct InputScaleBias AlphaScaleBias;
	struct InputAlphaBoolBlend AlphaBoolBlend;
	struct FName AlphaCurveName;
	struct InputScaleBiasClamp AlphaScaleBiasClamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RBFTarget : public RBFEntry
{
public:
	float ScaleFactor;
	bool bApplyCustomCurve;
	struct RichCurve CustomCurve;
	ERBFDistanceMethod DistanceMethod;
	ERBFFunctionType FunctionType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimSequencerInstance : public AnimInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNotify_PlayMontageNotify : public AnimNotify
{
public:
	struct FName NotifyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNotify_PlayMontageNotifyWindow : public AnimNotifyState
{
public:
	struct FName NotifyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KismetAnimationLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayMontageCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnCompleted;
	struct FScriptMulticastDelegate OnBlendOut;
	struct FScriptMulticastDelegate OnInterrupted;
	struct FScriptMulticastDelegate OnNotifyBegin;
	struct FScriptMulticastDelegate OnNotifyEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SequencerAnimationSupport : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetRegistryImpl : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetRegistryHelpers : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AssetRegistry : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AssetTagsSubsystem : public EngineSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioAnalyzerAsset : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioAnalyzerNRTSettings : public UAudioAnalyzerAsset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioAnalyzerNRT : public UAudioAnalyzerAsset
{
public:
	class UClass* Sound;
	float DurationInSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundfieldEncodingSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpatializationPluginSourceSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioEndpointSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOcclusionPluginSourceSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReverbPluginSourceSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundModulatorBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundfieldEndpointSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundfieldEffectSettingsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundfieldEffectBase : public UObject
{
public:
	class UClass* Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioGameplayVolumeComponentBase : public AudioGameplayComponent
{
public:
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AttenuationVolumeComponent : public AudioGameplayVolumeComponentBase
{
public:
	float ExteriorVolume;
	float ExteriorTime;
	float InteriorVolume;
	float InteriorTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioGameplayVolume : public Volume
{
public:
	class UClass* AGVComponent;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioGameplayVolumeComponent : public AudioGameplayComponent
{
public:
	class UClass* Proxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioGameplayVolumeProxy : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAGVShapeProxy : public UAudioGameplayVolumeProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAGVTestProxy : public UAudioGameplayVolumeProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioGameplayVolumeSubsystem : public AudioEngineSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FilterVolumeComponent : public AudioGameplayVolumeComponentBase
{
public:
	float ExteriorLPF;
	float ExteriorLPFTime;
	float InteriorLPF;
	float InteriorLPFTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubmixSendVolumeComponent : public AudioGameplayVolumeComponentBase
{
public:
	TArray<struct AudioVolumeSubmixSendSettings> SubmixSendSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioGameplayComponent : public ActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthComponent : public SceneComponent
{
public:
	bool bAutoDestroy;
	bool bStopWhenOwnerDestroyed;
	bool bAllowSpatialization;
	bool bOverrideAttenuation;
	bool bOutputToBusOnly;
	class UClass* AttenuationSettings;
	struct SoundAttenuationSettings AttenuationOverrides;
	class UClass* ConcurrencySettings;
	Unknown ConcurrencySet;
	class UClass* SoundClass;
	class UClass* SourceEffectChain;
	class UClass* SoundSubmix;
	TArray<struct SoundSubmixSendInfo> SoundSubmixSends;
	TArray<struct SoundSourceBusSendInfo> BusSends;
	TArray<struct SoundSourceBusSendInfo> PreEffectBusSends;
	bool bIsUISound;
	bool bIsPreviewSound;
	int EnvelopeFollowerAttackTime;
	int EnvelopeFollowerReleaseTime;
	struct FScriptMulticastDelegate OnAudioEnvelopeValue;
	class UClass* Synth;
	class UClass* AudioComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioDeviceNotificationSubsystem : public EngineSubsystem
{
public:
	struct FScriptMulticastDelegate DefaultCaptureDeviceChanged;
	struct FScriptMulticastDelegate DefaultRenderDeviceChanged;
	struct FScriptMulticastDelegate DeviceAdded;
	struct FScriptMulticastDelegate DeviceRemoved;
	struct FScriptMulticastDelegate DeviceStateChanged;
	struct FScriptMulticastDelegate DeviceSwitched;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioGenerator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioMixerBlueprintLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UQuartzClockHandle : public UObject
{
public:
	class UClass* QuartzSubsystem;
	class UClass* WorldPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubmixEffectDynamicsProcessorPreset : public SoundEffectSubmixPreset
{
public:
	struct SubmixEffectDynamicsProcessorSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubmixEffectSubmixEQPreset : public SoundEffectSubmixPreset
{
public:
	struct SubmixEffectSubmixEQSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubmixEffectReverbPreset : public SoundEffectSubmixPreset
{
public:
	struct SubmixEffectReverbSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class QuartzSubsystem : public WorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthSound : public SoundWaveProcedural
{
public:
	class UClass* OwningSynthComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioSynesthesiaNRTSettings : public UAudioAnalyzerNRTSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioSynesthesiaNRT : public UAudioAnalyzerNRT
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConstantQNRTSettings : public UAudioSynesthesiaNRTSettings
{
public:
	float StartingFrequency;
	int NumBands;
	float NumBandsPerOctave;
	float AnalysisPeriod;
	bool bDownmixToMono;
	EConstantQFFTSizeEnum FFTSize;
	EFFTWindowType WindowType;
	EAudioSpectrumType SpectrumType;
	float BandWidthStretch;
	EConstantQNormalizationEnum CQTNormalization;
	float NoiseFloorDb;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConstantQNRT : public UAudioSynesthesiaNRT
{
public:
	class UClass* Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULoudnessNRTSettings : public UAudioSynesthesiaNRTSettings
{
public:
	float AnalysisPeriod;
	float MinimumFrequency;
	float MaximumFrequency;
	ELoudnessNRTCurveTypeEnum CurveType;
	float NoiseFloorDb;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULoudnessNRT : public UAudioSynesthesiaNRT
{
public:
	class UClass* Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnsetNRTSettings : public UAudioSynesthesiaNRTSettings
{
public:
	bool bDownmixToMono;
	float GranularityInSeconds;
	float Sensitivity;
	float MinimumFrequency;
	float MaximumFrequency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnsetNRT : public UAudioSynesthesiaNRT
{
public:
	class UClass* Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AARActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARBlueprintLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARTraceResultLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARBaseAsyncTaskBlueprintProxy : public BlueprintAsyncActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARSaveWorldAsyncTaskBlueprintProxy : public ARBaseAsyncTaskBlueprintProxy
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARGetCandidateObjectAsyncTaskBlueprintProxy : public ARBaseAsyncTaskBlueprintProxy
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARComponent : public SceneComponent
{
public:
	struct Guid NativeID;
	bool bUseDefaultReplication;
	class UClass* DefaultMeshMaterial;
	class UClass* DefaultWireframeMeshMaterial;
	class UClass* MRMeshComponent;
	class UClass* MyTrackedGeometry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARPlaneComponent : public ARComponent
{
public:
	struct ARPlaneUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARPointComponent : public ARComponent
{
public:
	struct ARPointUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARFaceComponent : public ARComponent
{
public:
	EARFaceTransformMixing TransformSetting;
	bool bUpdateVertexNormal;
	bool bFaceOutOfScreen;
	struct ARFaceUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARImageComponent : public ARComponent
{
public:
	struct ARImageUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARQRCodeComponent : public ARComponent
{
public:
	struct ARQRCodeUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARPoseComponent : public ARComponent
{
public:
	struct ARPoseUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AREnvironmentProbeComponent : public ARComponent
{
public:
	struct AREnvironmentProbeUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARObjectComponent : public ARComponent
{
public:
	struct ARObjectUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARMeshComponent : public ARComponent
{
public:
	struct ARMeshUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARGeoAnchorComponent : public ARComponent
{
public:
	struct ARGeoAnchorUpdatePayload ReplicatedPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARDependencyHandler : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARGeoTrackingSupport : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy : public ARBaseAsyncTaskBlueprintProxy
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GetGeoLocationAsyncTaskBlueprintProxy : public ARBaseAsyncTaskBlueprintProxy
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARLifeCycleComponent : public SceneComponent
{
public:
	struct FScriptMulticastDelegate OnARActorSpawnedDelegate;
	struct FScriptMulticastDelegate OnARActorToBeDestroyedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARLightEstimate : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARBasicLightEstimate : public UARLightEstimate
{
public:
	float AmbientIntensityLumens;
	float AmbientColorTemperatureKelvin;
	struct LinearColor AmbientColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAROriginActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARPin : public UObject
{
public:
	class UClass* TrackedGeometry;
	class UClass* PinnedComponent;
	struct Transform LocalToTrackingTransform;
	struct Transform LocalToAlignedTrackingTransform;
	EARTrackingState TrackingState;
	struct FScriptMulticastDelegate OnARTrackingStateChanged;
	struct FScriptMulticastDelegate OnARTransformUpdated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARSessionConfig : public DataAsset
{
public:
	bool bGenerateMeshDataFromTrackedGeometry;
	bool bGenerateCollisionForMeshData;
	bool bGenerateNavMeshForMeshData;
	bool bUseMeshDataForOcclusion;
	bool bRenderMeshDataInWireframe;
	bool bTrackSceneObjects;
	bool bUsePersonSegmentationForOcclusion;
	bool bUseSceneDepthForOcclusion;
	bool bUseAutomaticImageScaleEstimation;
	bool bUseStandardOnboardingUX;
	EARWorldAlignment WorldAlignment;
	EARSessionType SessionType;
	EARPlaneDetectionMode PlaneDetectionMode;
	bool bHorizontalPlaneDetection;
	bool bVerticalPlaneDetection;
	bool bEnableAutoFocus;
	EARLightEstimationMode LightEstimationMode;
	EARFrameSyncMode FrameSyncMode;
	bool bEnableAutomaticCameraOverlay;
	bool bEnableAutomaticCameraTracking;
	bool bResetCameraTracking;
	bool bResetTrackedObjects;
	TArray<class UClass*> CandidateImages;
	int MaxNumSimultaneousImagesTracked;
	EAREnvironmentCaptureProbeType EnvironmentCaptureProbeType;
	TArray<byte> WorldMapData;
	TArray<class UClass*> CandidateObjects;
	struct ARVideoFormat DesiredVideoFormat;
	bool bUseOptimalVideoFormat;
	EARFaceTrackingDirection FaceTrackingDirection;
	EARFaceTrackingUpdate FaceTrackingUpdate;
	int MaxNumberOfTrackedFaces;
	TArray<byte> SerializedARCandidateImageDatabase;
	EARSessionTrackingFeature EnabledSessionTrackingFeature;
	EARSceneReconstruction SceneReconstructionMethod;
	class UClass* PlaneComponentClass;
	class UClass* PointComponentClass;
	class UClass* FaceComponentClass;
	class UClass* ImageComponentClass;
	class UClass* QRCodeComponentClass;
	class UClass* PoseComponentClass;
	class UClass* EnvironmentProbeComponentClass;
	class UClass* ObjectComponentClass;
	class UClass* MeshComponentClass;
	class UClass* GeoAnchorComponentClass;
	class UClass* DefaultMeshMaterial;
	class UClass* DefaultWireframeMeshMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARSharedWorldGameMode : public GameMode
{
public:
	int BufferSizePerChunk;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARSharedWorldGameState : public GameState
{
public:
	TArray<byte> PreviewImageData;
	TArray<byte> ARWorldData;
	int PreviewImageBytesTotal;
	int ARWorldBytesTotal;
	int PreviewImageBytesDelivered;
	int ARWorldBytesDelivered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARSharedWorldPlayerController : public PlayerController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARSkyLight : public SkyLight
{
public:
	class UClass* CaptureProbe;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARTexture : public Texture
{
public:
	EARTextureType TextureType;
	float Timestamp;
	struct Guid ExternalTextureGuid;
	struct Vector2D Size;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARTextureCameraImage : public ARTexture
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARTextureCameraDepth : public ARTexture
{
public:
	EARDepthQuality DepthQuality;
	EARDepthAccuracy DepthAccuracy;
	bool bIsTemporallySmoothed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AREnvironmentCaptureProbeTexture : public TextureCube
{
public:
	EARTextureType TextureType;
	float Timestamp;
	struct Guid ExternalTextureGuid;
	struct Vector2D Size;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTraceResultDummy : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTrackedGeometry : public UObject
{
public:
	struct Guid UniqueId;
	struct Transform LocalToTrackingTransform;
	struct Transform LocalToAlignedTrackingTransform;
	EARTrackingState TrackingState;
	class UClass* UnderlyingMesh;
	EARObjectClassification ObjectClassification;
	int LastUpdateFrameNumber;
	struct FName DebugName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARPlaneGeometry : public UARTrackedGeometry
{
public:
	EARPlaneOrientation Orientation;
	struct Vector Center;
	struct Vector Extent;
	TArray<struct Vector> BoundaryPolygon;
	class UClass* SubsumedBy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTrackedPoint : public UARTrackedGeometry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTrackedImage : public UARTrackedGeometry
{
public:
	class UClass* DetectedImage;
	struct Vector2D EstimatedSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTrackedQRCode : public UARTrackedImage
{
public:
	struct FString QRCode;
	int Version;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARFaceGeometry : public UARTrackedGeometry
{
public:
	struct Vector LookAtTarget;
	bool bIsTracked;
	Unknown BlendShapes;
	struct Transform LeftEyeTransform;
	struct Transform RightEyeTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAREnvironmentCaptureProbe : public UARTrackedGeometry
{
public:
	struct Vector Extent;
	class UClass* EnvironmentCaptureTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTrackedObject : public UARTrackedGeometry
{
public:
	class UClass* DetectedObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTrackedPose : public UARTrackedGeometry
{
public:
	struct ARPose3D TrackedPose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARMeshGeometry : public UARTrackedGeometry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARGeoAnchor : public UARTrackedGeometry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARTrackableNotifyComponent : public ActorComponent
{
public:
	struct FScriptMulticastDelegate OnAddTrackedGeometry;
	struct FScriptMulticastDelegate OnUpdateTrackedGeometry;
	struct FScriptMulticastDelegate OnRemoveTrackedGeometry;
	struct FScriptMulticastDelegate OnAddTrackedPlane;
	struct FScriptMulticastDelegate OnUpdateTrackedPlane;
	struct FScriptMulticastDelegate OnRemoveTrackedPlane;
	struct FScriptMulticastDelegate OnAddTrackedPoint;
	struct FScriptMulticastDelegate OnUpdateTrackedPoint;
	struct FScriptMulticastDelegate OnRemoveTrackedPoint;
	struct FScriptMulticastDelegate OnAddTrackedImage;
	struct FScriptMulticastDelegate OnUpdateTrackedImage;
	struct FScriptMulticastDelegate OnRemoveTrackedImage;
	struct FScriptMulticastDelegate OnAddTrackedFace;
	struct FScriptMulticastDelegate OnUpdateTrackedFace;
	struct FScriptMulticastDelegate OnRemoveTrackedFace;
	struct FScriptMulticastDelegate OnAddTrackedEnvProbe;
	struct FScriptMulticastDelegate OnUpdateTrackedEnvProbe;
	struct FScriptMulticastDelegate OnRemoveTrackedEnvProbe;
	struct FScriptMulticastDelegate OnAddTrackedObject;
	struct FScriptMulticastDelegate OnUpdateTrackedObject;
	struct FScriptMulticastDelegate OnRemoveTrackedObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARTypesDummyClass : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARCandidateImage : public DataAsset
{
public:
	class UClass* CandidateTexture;
	struct FString FriendlyName;
	float Width;
	float Height;
	EARCandidateImageOrientation Orientation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARCandidateObject : public DataAsset
{
public:
	TArray<byte> CandidateObjectData;
	struct FString FriendlyName;
	struct Box BoundingBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AutomationUtilsBlueprintLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAvfMediaSettings : public UObject
{
public:
	bool NativeAudioOut;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassLandingPageBase : public CommonActivatableWidget
{
public:
	class UClass* LastHoveredPageButton;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassLandingPageButton : public CommonButtonBase
{
public:
	EBattlePassView SubPageType;
	EBattlePassFeatures FeatureType;
	struct BattlePassLandingPageEntryPreviewInfo PreviewInfo;
	class UClass* BangWrapper;
	bool bUsesTelemetry;
	struct IntPoint Telemetry_Size;
	struct IntPoint Telemetry_Position;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassRewardPageBase : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassSubPageInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassUIGameFeatureAction : public FortUIGameFeatureAction
{
public:
	struct TSoftClassPtr<UObject> BattlePassScreenClass;
	struct TSoftClassPtr<UObject> BatlePassInformationModalClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassBulkBuyPageBase : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassCheckBoxButton : public CommonButtonBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassCurrencyPanel : public UserWidget
{
public:
	class UClass* HBox_BattleStarContainer;
	class UClass* Text_BattleStar;
	class UClass* HBox_CustomSkinContainer;
	class UClass* Text_CustomSkin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassCustomSkinCategoryTile : public UserWidget
{
public:
	class UClass* ProgressBar;
	class UClass* FortDynamicEntryBox_Items;
	class UClass* Text_CategoryTitle;
	class UClass* PreviewedTile;
	int OwnedRewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassCustomSkinPageBase : public CommonActivatableWidget
{
public:
	class UClass* ScrollBox_Categories;
	class UClass* FortDynamicEntryBox_Categories;
	class UClass* EquipEnabledData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassPurchaseResourcesWidget : public CommonActivatableWidget
{
public:
	class UClass* Button_Addition;
	class UClass* Button_BatchAddition;
	class UClass* Button_Subtraction;
	class UClass* Button_BatchSubtraction;
	class UClass* Button_Purchase;
	class UClass* Button_GetVBucks;
	class UClass* Button_Back;
	class UClass* CheckBox_Bundle;
	class UClass* Button_CloseMobile;
	int CurrentLevel;
	bool bIsOfferActive;
	int CurrentVBucks;
	int CurrentBattleStars;
	int BatchNum;
	int CurrentPage;
	bool bOfferUnavailable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassRewardGrid : public CommonActivatableWidget
{
public:
	class UClass* GridTileClass;
	class UClass* GridEmptyTileClass;
	struct Vector2D GridCellPadding;
	class UClass* PageHeader;
	class UClass* GridPanel_Rewards;
	class UClass* TopLeftTile;
	Unknown LastFocusedTile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassRewardGridHeader : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassTileBase : public FortHoldableButton
{
public:
	class UClass* SizeBox_Content;
	float UnitHeight;
	float UnitWidth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassTile : public FortBattlePassTileBase
{
public:
	class UClass* Image_RewardItem;
	class UClass* Image_Currency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassLandingPageS17 : public BattlePassLandingPageBase
{
public:
	class UClass* Button_Rewards;
	class UClass* Button_CharacterCustomizer;
	class UClass* Button_BonusRewards;
	class UClass* Button_Quests;
	class UClass* Button_BuyBattlePass;
	class UClass* Button_JoinSubscription;
	class UClass* Button_BuyResources;
	class UClass* Button_GiftBattlePass;
	class UClass* SeasonData_BattleStar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassMysteryRewardPageS17 : public BattlePassRewardPageBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassRewardPageS17 : public BattlePassRewardPageBase
{
public:
	class UClass* RewardsGridClass;
	class UClass* PageNavigator;
	class UClass* FocusedReward;
	TArray<class UClass*> GridPages;
	ERewardPageType RewardPageType;
	int HoldTileTooltip_ClaimedRewardsToHide;
	int HoldTileTooltip_RequiredBattleStarsToShow;
	class UClass* TutorialTooltip_SecondPageUnlock;
	class UClass* TutorialTooltip_ClaimAllRewards;
	class UClass* TutorialTooltip_HoldTile;
	class UClass* SeasonData_BattleStar;
	class UClass* BulkBuyInputData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassScreenS17 : public BattlePassScreenBase
{
public:
	class UClass* ResourcePurchaseScreenClass;
	class UClass* Button_Close;
	class UClass* Button_CloseMobile;
	class UClass* Button_BulkBuyRewards;
	class UClass* Button_ToggleViewDetails;
	class UClass* Button_ToggleViewDetails_Mobile;
	class UClass* Button_ReplayTrailer;
	class UClass* Button_ReplayTrailer_Mobile;
	class UClass* Button_ShowAbout;
	class UClass* Button_ShowAbout_Mobile;
	class UClass* Button_ShowAboutCustomization;
	class UClass* Button_ShowAboutCustomization_Mobile;
	class UClass* MobileVisibilitySwitcher;
	class UClass* BattlePassCurrencyPanel;
	class UClass* AthenaExclusiveRewardBanner;
	class UClass* Text_Description;
	class UClass* Text_ItemName;
	class UClass* ItemRewardTag;
	class UClass* Text_SetDetails;
	class UClass* Switcher_ContextualButtons;
	class UClass* Button_BuyLevels;
	class UClass* Button_BuyBattlePass;
	class UClass* Button_ClaimReward;
	class UClass* Tag_RequiresBP;
	class UClass* Tag_PageLocked;
	class UClass* Tag_BaseItem;
	class UClass* Tag_Prerequisite;
	class UClass* Tag_NotEnough_Currency;
	class UClass* Tag_Cost;
	class UClass* Tag_Owned;
	class UClass* Tag_Delayed;
	class UClass* SeasonData_BattleStar;
	class UClass* CurrentSelectedEntry;
	TArray<EBattlePassView> SwitcherSubPageTypes;
	class UClass* SubPageSwitcher;
	int BattleStarsTooltipHideLevel;
	class UClass* TutorialTooltip_BattleStars;
	class UClass* TutorialTooltip_AlienArtifacts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassBulkBuyPageS17 : public FortBattlePassBulkBuyPageBase
{
public:
	class UClass* Button_Addition;
	class UClass* Button_Subtraction;
	class UClass* DynamicEntryBox_TilesEntries;
	class UClass* Switcher_BottomButtons;
	class UClass* Button_BuyLevels;
	class UClass* Button_ClaimReward;
	class UClass* SeasonData_BattleStar;
	class UClass* SeasonItemDefinition;
	class UClass* FocusedReward;
	class UClass* ScrollBox_Pages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassCustomSkinPageS17 : public FortBattlePassCustomSkinPageBase
{
public:
	class UClass* TutorialTooltip_PurchaseStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassTutorialTooltipS17 : public CommonUserWidget
{
public:
	class UClass* Text_Tooltip;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMutator_BlueCheese : public FortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueCheeseWidgetBase : public LTMWidgetBase
{
public:
	class UClass* CachedBlueCheeseMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintContextBase : public Subsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintContextLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildPatchManifest : public UObject
{
public:
	byte ManifestFileVersion;
	bool bIsFileData;
	uint32_t AppID;
	struct FString AppName;
	struct FString BuildVersion;
	struct FString LaunchExe;
	struct FString LaunchCommand;
	Unknown PrereqIds;
	struct FString PrereqName;
	struct FString PrereqPath;
	struct FString PrereqArgs;
	TArray<struct FileManifestData> FileManifestList;
	TArray<struct ChunkInfoData> ChunkList;
	TArray<struct CustomFieldData> CustomFields;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACableActor : public AActor
{
public:
	class UClass* CableComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CableComponent : public MeshComponent
{
public:
	bool bAttachStart;
	bool bAttachEnd;
	struct ComponentReference AttachEndTo;
	struct FName AttachEndToSocketName;
	struct Vector EndLocation;
	float CableLength;
	int NumSegments;
	float SubstepTime;
	int SolverIterations;
	bool bEnableStiffness;
	bool bUseSubstepping;
	bool bSkipCableUpdateWhenNotVisible;
	bool bSkipCableUpdateWhenNotOwnerRecentlyRendered;
	bool bEnableCollision;
	float CollisionFriction;
	struct Vector CableForce;
	float CableGravityScale;
	float CableWidth;
	int NumSides;
	float TileMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosClothConfig : public ClothConfigCommon
{
public:
	EClothMassMode MassMode;
	float UniformMass;
	float TotalMass;
	float Density;
	float MinPerParticleMass;
	struct ChaosClothWeightedValue EdgeStiffnessWeighted;
	struct ChaosClothWeightedValue BendingStiffnessWeighted;
	bool bUseBendingElements;
	struct ChaosClothWeightedValue AreaStiffnessWeighted;
	float VolumeStiffness;
	struct ChaosClothWeightedValue TetherStiffness;
	struct ChaosClothWeightedValue TetherScale;
	bool bUseGeodesicDistance;
	float ShapeTargetStiffness;
	float CollisionThickness;
	float FrictionCoefficient;
	bool bUseCCD;
	bool bUseSelfCollisions;
	float SelfCollisionThickness;
	bool bUseLegacyBackstop;
	float DampingCoefficient;
	bool bUsePointBasedWindModel;
	struct ChaosClothWeightedValue Drag;
	struct ChaosClothWeightedValue Lift;
	bool bUseGravityOverride;
	float GravityScale;
	struct Vector Gravity;
	struct ChaosClothWeightedValue AnimDriveStiffness;
	struct ChaosClothWeightedValue AnimDriveDamping;
	struct Vector LinearVelocityScale;
	float AngularVelocityScale;
	float FictitiousAngularScale;
	bool bUseTetrahedralConstraints;
	bool bUseThinShellVolumeConstraints;
	bool bUseContinuousCollisionDetection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosClothSharedSimConfig : public ClothSharedConfigCommon
{
public:
	int IterationCount;
	int SubdivisionCount;
	bool bUseLocalSpaceSimulation;
	bool bUseXPBDConstraints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosClothingSimulationFactory : public ClothingSimulationFactory
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosClothingInteractor : public ClothingInteractor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosClothingSimulationInteractor : public ClothingSimulationInteractor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraDataInterfaceChaosDestruction : public NiagaraDataInterface
{
public:
	Unknown ChaosSolverActorSet;
	EDataSourceTypeEnum DataSourceType;
	int DataProcessFrequency;
	int MaxNumberOfDataEntriesToSpawn;
	bool DoSpawn;
	struct Vector2D SpawnMultiplierMinMax;
	float SpawnChance;
	struct Vector2D ImpulseToSpawnMinMax;
	struct Vector2D SpeedToSpawnMinMax;
	struct Vector2D MassToSpawnMinMax;
	struct Vector2D ExtentMinToSpawnMinMax;
	struct Vector2D ExtentMaxToSpawnMinMax;
	struct Vector2D VolumeToSpawnMinMax;
	struct Vector2D SolverTimeToSpawnMinMax;
	int SurfaceTypeToSpawn;
	ELocationFilteringModeEnum LocationFilteringMode;
	ELocationXToSpawnEnum LocationXToSpawn;
	struct Vector2D LocationXToSpawnMinMax;
	ELocationYToSpawnEnum LocationYToSpawn;
	struct Vector2D LocationYToSpawnMinMax;
	ELocationZToSpawnEnum LocationZToSpawn;
	struct Vector2D LocationZToSpawnMinMax;
	EDataSortTypeEnum DataSortingType;
	bool bGetExternalCollisionData;
	bool DoSpatialHash;
	struct Vector SpatialHashVolumeMin;
	struct Vector SpatialHashVolumeMax;
	struct Vector SpatialHashVolumeCellSize;
	int MaxDataPerCell;
	bool bApplyMaterialsFilter;
	Unknown ChaosBreakingMaterialSet;
	bool bGetExternalBreakingData;
	bool bGetExternalTrailingData;
	struct Vector2D RandomPositionMagnitudeMinMax;
	float InheritedVelocityMultiplier;
	ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType;
	struct Vector2D RandomVelocityMagnitudeMinMax;
	float SpreadAngleMax;
	struct Vector VelocityOffsetMin;
	struct Vector VelocityOffsetMax;
	struct Vector2D FinalVelocityMagnitudeMinMax;
	float MaxLatency;
	EDebugTypeEnum DebugType;
	int LastSpawnedPointID;
	float LastSpawnTime;
	float SolverTime;
	float TimeStampOfLastProcessedData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraDataInterfacePhysicsField : public NiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosDebugDrawComponent : public ActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosEventListenerComponent : public ActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosGameplayEventDispatcher : public ChaosEventListenerComponent
{
public:
	Unknown CollisionEventRegistrations;
	Unknown BreakEventRegistrations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosNotifyHandlerInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosSolverEngineBlueprintLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChaosSolver : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AChaosSolverActor : public AActor
{
public:
	struct ChaosSolverConfiguration Properties;
	float TimeStepMultiplier;
	int CollisionIterations;
	int PushOutIterations;
	int PushOutPairIterations;
	float ClusterConnectionFactor;
	EClusterConnectionTypeEnum ClusterUnionConnectionType;
	bool DoGenerateCollisionData;
	struct SolverCollisionFilterSettings CollisionFilterSettings;
	bool DoGenerateBreakingData;
	struct SolverBreakingFilterSettings BreakingFilterSettings;
	bool DoGenerateTrailingData;
	struct SolverTrailingFilterSettings TrailingFilterSettings;
	float MassScale;
	bool bGenerateContactGraph;
	bool bHasFloor;
	float FloorHeight;
	struct ChaosDebugSubstepControl ChaosDebugSubstepControl;
	class UClass* SpriteComponent;
	class UClass* GameplayEventDispatcherComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChaosSolverSettings : public DeveloperSettings
{
public:
	struct SoftClassPath DefaultChaosSolverActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CineCameraActor : public CameraActor
{
public:
	struct CameraLookatTrackingSettings LookatTrackingSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CineCameraComponent : public CameraComponent
{
public:
	struct CameraFilmbackSettings FilmbackSettings;
	struct CameraFilmbackSettings Filmback;
	struct CameraLensSettings LensSettings;
	struct CameraFocusSettings FocusSettings;
	float CurrentFocalLength;
	float CurrentAperture;
	float CurrentFocusDistance;
	TArray<struct NamedFilmbackPreset> FilmbackPresets;
	TArray<struct NamedLensPreset> LensPresets;
	struct FString DefaultFilmbackPresetName;
	struct FString DefaultFilmbackPreset;
	struct FString DefaultLensPresetName;
	float DefaultLensFocalLength;
	float DefaultLensFStop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACameraRig_Crane : public AActor
{
public:
	float CranePitch;
	float CraneYaw;
	float CraneArmLength;
	bool bLockMountPitch;
	bool bLockMountYaw;
	class UClass* TransformComponent;
	class UClass* CraneYawControl;
	class UClass* CranePitchControl;
	class UClass* CraneCameraMount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACameraRig_Rail : public AActor
{
public:
	float CurrentPositionOnRail;
	bool bLockOrientationToRail;
	class UClass* TransformComponent;
	class UClass* RailSplineComponent;
	class UClass* RailCameraMount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClientPilotComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClientPilotBlackboard : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClientPilotBlackboardManager : public UObject
{
public:
	class UClass* PilotBlackboard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ClothConfigCommon : public ClothConfigBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ClothSharedConfigCommon : public ClothConfigCommon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingAssetCustomData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ClothingAssetCommon : public ClothingAssetBase
{
public:
	class UClass* PhysicsAsset;
	Unknown ClothConfigs;
	class UClass* ClothSharedSimConfig;
	class UClass* ClothSimConfig;
	class UClass* ChaosClothSimConfig;
	TArray<class UClass*> ClothLODData;
	TArray<struct ClothLODDataCommon> LODData;
	TArray<int> LodMap;
	TArray<struct FName> UsedBoneNames;
	TArray<int> UsedBoneIndices;
	int ReferenceBoneIndex;
	class UClass* CustomData;
	struct ClothConfig_Legacy ClothConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothLODDataCommon_Legacy : public UObject
{
public:
	class UClass* PhysicalMeshData;
	struct ClothPhysicalMeshData ClothPhysicalMeshData;
	struct ClothCollisionData CollisionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothConfigBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingSimulationFactory : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingInteractor : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingSimulationInteractor : public UObject
{
public:
	Unknown ClothingInteractors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothSharedSimConfigBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingAssetBase : public UObject
{
public:
	struct FString ImportedFilePath;
	struct Guid AssetGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothPhysicalMeshDataBase_Legacy : public UObject
{
public:
	TArray<struct Vector> Vertices;
	TArray<struct Vector> Normals;
	TArray<uint32_t> Indices;
	TArray<float> InverseMasses;
	TArray<struct ClothVertBoneData> BoneData;
	int NumFixedVerts;
	int MaxBoneWeights;
	TArray<uint32_t> SelfCollisionIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ClothConfigNv : public ClothConfigCommon
{
public:
	EClothingWindMethodNv ClothingWindMethod;
	struct ClothConstraintSetupNv VerticalConstraint;
	struct ClothConstraintSetupNv HorizontalConstraint;
	struct ClothConstraintSetupNv BendConstraint;
	struct ClothConstraintSetupNv ShearConstraint;
	float SelfCollisionRadius;
	float SelfCollisionStiffness;
	float SelfCollisionCullScale;
	struct Vector Damping;
	float Friction;
	float WindDragCoefficient;
	float WindLiftCoefficient;
	struct Vector LinearDrag;
	struct Vector AngularDrag;
	struct Vector LinearInertiaScale;
	struct Vector AngularInertiaScale;
	struct Vector CentrifugalInertiaScale;
	float SolverFrequency;
	float StiffnessFrequency;
	float GravityScale;
	struct Vector GravityOverride;
	bool bUseGravityOverride;
	float TetherStiffness;
	float TetherLimit;
	float CollisionThickness;
	float AnimDriveSpringStiffness;
	float AnimDriveDamperStiffness;
	EClothingWindMethod_Legacy WindMethod;
	struct ClothConstraintSetup_Legacy VerticalConstraintConfig;
	struct ClothConstraintSetup_Legacy HorizontalConstraintConfig;
	struct ClothConstraintSetup_Legacy BendConstraintConfig;
	struct ClothConstraintSetup_Legacy ShearConstraintConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingSimulationFactoryNv : public UClothingSimulationFactory
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothingSimulationInteractorNv : public UClothingSimulationInteractor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClothPhysicalMeshDataNv_Legacy : public UClothPhysicalMeshDataBase_Legacy
{
public:
	TArray<float> MaxDistances;
	TArray<float> BackstopDistances;
	TArray<float> BackstopRadiuses;
	TArray<float> AnimDriveMultipliers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConversationParticipantComponent : public ActorComponent
{
public:
	int ConversationsActive;
	class UClass* Auth_CurrentConversation;
	TArray<class UClass*> Auth_Conversations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationNode : public UObject
{
public:
	class UClass* EvalWorldContextObj;
	struct FString NodeName;
	struct Guid Compiled_NodeGUID;
	class UClass* ParentNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationSubNode : public UConversationNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationChoiceNode : public UConversationSubNode
{
public:
	struct FText DefaultChoiceDisplayText;
	struct GameplayTagContainer ChoiceTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConversationContextHelpers : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConversationDatabase : public PrimaryDataAsset
{
public:
	int CompilerVersion;
	Unknown ReachableNodeMap;
	TArray<struct ConversationEntryList> EntryTags;
	struct GameplayTagContainer ExitTags;
	TArray<struct Guid> InternalNodeIds;
	TArray<struct Guid> LinkedToNodeIds;
	TArray<struct CommonDialogueBankParticipant> Speakers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationNodeWithLinks : public UConversationNode
{
public:
	TArray<struct Guid> OutputConnections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationEntryPointNode : public UConversationNodeWithLinks
{
public:
	struct GameplayTag EntryTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationInstance : public UObject
{
public:
	struct ConversationParticipants Participants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConversationLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationTaskNode : public UConversationNodeWithLinks
{
public:
	TArray<class UClass*> SubNodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationLinkNode : public UConversationTaskNode
{
public:
	struct GameplayTag RemoteEntryTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConversationRegistry : public WorldSubsystem
{
public:
	struct NetSerializeScriptStructCache_ConvVersion ConversationChoiceDataStructCache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationRequirementNode : public UConversationSubNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConversationSettings : public DeveloperSettings
{
public:
	struct TSoftClassPtr<UObject> ConversationInstanceClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConversationSideEffectNode : public UConversationSubNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonUIInputData : public UObject
{
public:
	struct DataTableRowHandle DefaultClickAction;
	struct DataTableRowHandle DefaultBackAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonInputBaseControllerData : public UObject
{
public:
	ECommonInputType InputType;
	struct FName GamepadName;
	struct TSoftClassPtr<UObject> ControllerTexture;
	struct TSoftClassPtr<UObject> ControllerButtonMaskTexture;
	TArray<struct CommonInputKeyBrushConfiguration> InputBrushDataMap;
	TArray<struct CommonInputKeySetBrushConfiguration> InputBrushKeySets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonInputSettings : public UObject
{
public:
	struct TSoftClassPtr<UObject> InputData;
	Unknown CommonInputPlatformData;
	bool bEnableInputMethodThrashingProtection;
	int InputMethodThrashingLimit;
	double InputMethodThrashingWindowInSeconds;
	double InputMethodThrashingCooldownInSeconds;
	bool bAllowOutOfFocusDeviceInput;
	class UClass* InputDataClass;
	struct CommonInputPlatformBaseData CurrentPlatform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonInputSubsystem : public LocalPlayerSubsystem
{
public:
	struct FScriptMulticastDelegate OnInputMethodChanged;
	int NumberOfInputMethodChangesRecently;
	double LastInputMethodChangeTime;
	double LastTimeInputMethodThrashingBegan;
	ECommonInputType LastInputType;
	ECommonInputType CurrentInputType;
	struct FName GamepadInputType;
	Unknown CurrentInputLocks;
	bool bIsGamepadSimulatedClick;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonInputActionData : public CommonInputActionDataBase
{
public:
	Unknown GamepadInputTypeInfoOverrides;
	struct CommonInputTypeInfo GamepadInputTypeInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActivatablePanelLegacy : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate OnWidgetActivated;
	struct FScriptMulticastDelegate OnWidgetDeactivated;
	bool bConsumeAllActions;
	bool bExposeActionsExternally;
	bool bShouldBypassStack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonButtonLegacy : public CommonButtonBase
{
public:
	struct FScriptMulticastDelegate OnSelectedChanged;
	struct FScriptMulticastDelegate OnButtonClicked;
	struct FScriptMulticastDelegate OnButtonDoubleClicked;
	struct FScriptMulticastDelegate OnButtonHovered;
	struct FScriptMulticastDelegate OnButtonUnhovered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonButtonGroupLegacy : public CommonButtonGroupBase
{
public:
	struct FScriptMulticastDelegate OnSelectedButtonChanged;
	struct FScriptMulticastDelegate OnHoveredButtonChanged;
	struct FScriptMulticastDelegate OnButtonClicked;
	struct FScriptMulticastDelegate OnButtonDoubleClicked;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonButtonInternalLegacy : public CommonButtonInternalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonGlobalInputHandlerLegacy : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonInputManagerLegacy : public UObject
{
public:
	Unknown CurrentlyHeldActionInputHandler;
	TArray<class UClass*> ActivatablePanelStack;
	class UClass* GlobalInputHandler;
	TArray<struct Operation> Operations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonInputReflectorLegacy : public CommonUserWidget
{
public:
	class UClass* ButtonType;
	TArray<class UClass*> ActiveButtons;
	TArray<class UClass*> InactiveButtons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonPopupButtonLegacy : public CommonButtonLegacy
{
public:
	class UClass* PopupMenuAnchor;
	class UClass* PopupMenu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonPopupMenuLegacy : public CommonActivatablePanelLegacy
{
public:
	bool bUseInputStack;
	Unknown OwningMenuAnchor;
	Unknown ContextProvidingObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonTabListWidgetLegacy : public CommonTabListWidgetBase
{
public:
	struct FScriptMulticastDelegate OnTabButtonCreated;
	struct FScriptMulticastDelegate OnTabButtonRemoved;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonUIActionRouterLegacy : public CommonUIActionRouterBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonUISubsystemLegacy : public CommonUISubsystemBase
{
public:
	struct FScriptMulticastDelegate OnInputSuspensionChanged;
	class UClass* CommonInputManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonVisibilityWidgetLegacy : public CommonBorder
{
public:
	bool bShowForGamepad;
	bool bShowForMouseAndKeyboard;
	bool bShowForTouch;
	bool bShowForPC;
	bool bShowForMac;
	bool bShowForPS4;
	bool bShowForPS5;
	bool bShowForXBox;
	bool bShowForXSX;
	bool bShowForIOS;
	bool bShowForAndroid;
	bool bShowForErebus;
	ESlateVisibility VisibleType;
	ESlateVisibility HiddenType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonWidgetStackLegacy : public CommonVisibilitySwitcher
{
public:
	struct FScriptMulticastDelegate OnActiveWidgetChangedLegacyEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonWidgetSwitcherLegacy : public CommonAnimatedSwitcher
{
public:
	struct FScriptMulticastDelegate OnActiveWidgetDeactivated;
	struct FScriptMulticastDelegate OnActiveWidgetChanged;
	bool bWidgetActivationEnabled;
	bool bOutroPanelBelow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UITag : public GameplayTag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIActionTag : public UITag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RichTextIconData : public TableRowBase
{
public:
	struct FText DisplayName;
	struct TSoftClassPtr<UObject> ResourceObject;
	struct Vector2D ImageSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonInputActionDataBase : public TableRowBase
{
public:
	struct FText DisplayName;
	struct FText HoldDisplayName;
	struct CommonInputTypeInfo KeyboardInputTypeInfo;
	struct CommonInputTypeInfo DefaultGamepadInputTypeInfo;
	Unknown GamepadInputOverrides;
	struct CommonInputTypeInfo TouchInputTypeInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonUserWidget : public UserWidget
{
public:
	bool bDisplayInActionBar;
	bool bConsumePointerInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActivatableWidget : public CommonUserWidget
{
public:
	bool bAutoActivate;
	bool bIsBackHandler;
	bool bSupportsActivationFocus;
	bool bIsModal;
	bool bAutoRestoreFocus;
	bool bSetVisibilityOnActivated;
	ESlateVisibility ActivatedVisibility;
	bool bSetVisibilityOnDeactivated;
	ESlateVisibility DeactivatedVisibility;
	struct FScriptMulticastDelegate BP_OnWidgetActivated;
	struct FScriptMulticastDelegate BP_OnWidgetDeactivated;
	bool bIsActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonButtonBase : public CommonUserWidget
{
public:
	int MinWidth;
	int MinHeight;
	class UClass* Style;
	bool bHideInputAction;
	struct SlateSound PressedSlateSoundOverride;
	struct SlateSound HoveredSlateSoundOverride;
	bool bApplyAlphaOnDisable;
	bool bSelectable;
	bool bShouldSelectUponReceivingFocus;
	bool bInteractableWhenSelected;
	bool bToggleable;
	bool bDisplayInputActionWhenNotInteractable;
	bool bHideInputActionWithKeyboard;
	bool bShouldUseFallbackDefaultInputAction;
	EButtonClickMethod ClickMethod;
	EButtonTouchMethod TouchMethod;
	EButtonPressMethod PressMethod;
	int InputPriority;
	struct DataTableRowHandle TriggeringInputAction;
	struct FScriptMulticastDelegate OnSelectedChangedBase;
	struct FScriptMulticastDelegate OnButtonBaseClicked;
	struct FScriptMulticastDelegate OnButtonBaseDoubleClicked;
	struct FScriptMulticastDelegate OnButtonBaseHovered;
	struct FScriptMulticastDelegate OnButtonBaseUnhovered;
	bool bIsPersistentBinding;
	ECommonInputMode InputModeOverride;
	class UClass* SingleMaterialStyleMID;
	struct ButtonStyle NormalStyle;
	struct ButtonStyle SelectedStyle;
	struct ButtonStyle DisabledStyle;
	bool bStopDoubleClickPropagation;
	class UClass* InputActionWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnalogSlider : public Slider
{
public:
	struct FScriptMulticastDelegate OnAnalogCapture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActionHandlerInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActionWidget : public Widget
{
public:
	struct FScriptMulticastDelegate OnInputMethodChanged;
	struct SlateBrush ProgressMaterialBrush;
	struct FName ProgressMaterialParam;
	struct SlateBrush IconRimBrush;
	TArray<struct DataTableRowHandle> InputActions;
	class UClass* ProgressDynamicMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActivatableWidgetContainerBase : public Widget
{
public:
	ECommonSwitcherTransition TransitionType;
	ETransitionCurve TransitionCurveType;
	float TransitionDuration;
	TArray<class UClass*> WidgetList;
	class UClass* DisplayedWidget;
	struct UserWidgetPool GeneratedWidgetsPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActivatableWidgetStack : public CommonActivatableWidgetContainerBase
{
public:
	class UClass* RootContentWidgetClass;
	class UClass* RootContentWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActivatableWidgetQueue : public CommonActivatableWidgetContainerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonAnimatedSwitcher : public WidgetSwitcher
{
public:
	ECommonSwitcherTransition TransitionType;
	ETransitionCurve TransitionCurveType;
	float TransitionDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonActivatableWidgetSwitcher : public CommonAnimatedSwitcher
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonBorderStyle : public UObject
{
public:
	struct SlateBrush Background;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonBorder : public Border
{
public:
	class UClass* Style;
	bool bReducePaddingBySafezone;
	struct Margin MinimumPadding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonBoundActionBar : public DynamicEntryBoxBase
{
public:
	class UClass* ActionButtonClass;
	bool bDisplayOwningPlayerActionsOnly;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonBoundActionButton : public CommonButtonBase
{
public:
	class UClass* Text_ActionName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonButtonStyle : public UObject
{
public:
	bool bSingleMaterial;
	struct SlateBrush SingleMaterialBrush;
	struct SlateBrush NormalBase;
	struct SlateBrush NormalHovered;
	struct SlateBrush NormalPressed;
	struct SlateBrush SelectedBase;
	struct SlateBrush SelectedHovered;
	struct SlateBrush SelectedPressed;
	struct SlateBrush Disabled;
	struct Margin ButtonPadding;
	struct Margin CustomPadding;
	int MinWidth;
	int MinHeight;
	class UClass* NormalTextStyle;
	class UClass* NormalHoveredTextStyle;
	class UClass* SelectedTextStyle;
	class UClass* SelectedHoveredTextStyle;
	class UClass* DisabledTextStyle;
	struct SlateSound PressedSlateSound;
	struct CommonButtonStyleOptionalSlateSound SelectedPressedSlateSound;
	struct CommonButtonStyleOptionalSlateSound DisabledPressedSlateSound;
	struct SlateSound HoveredSlateSound;
	struct CommonButtonStyleOptionalSlateSound SelectedHoveredSlateSound;
	struct CommonButtonStyleOptionalSlateSound DisabledHoveredSlateSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonButtonInternalBase : public Button
{
public:
	struct FScriptMulticastDelegate OnDoubleClicked;
	int MinWidth;
	int MinHeight;
	bool bButtonEnabled;
	bool bInteractionEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonWidgetGroupBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonButtonGroupBase : public UCommonWidgetGroupBase
{
public:
	struct FScriptMulticastDelegate OnSelectedButtonBaseChanged;
	struct FScriptMulticastDelegate OnHoveredButtonBaseChanged;
	struct FScriptMulticastDelegate OnButtonBaseClicked;
	struct FScriptMulticastDelegate OnButtonBaseDoubleClicked;
	struct FScriptMulticastDelegate OnSelectionCleared;
	bool bSelectionRequired;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonCustomNavigation : public Border
{
public:
	struct FDelegate OnNavigationEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonTextBlock : public TextBlock
{
public:
	class UClass* Style;
	class UClass* ScrollStyle;
	bool bDisplayAllCaps;
	bool bAutoCollapseWithEmptyText;
	float MobileFontSizeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonDateTimeTextBlock : public CommonTextBlock
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonGameViewportClient : public GameViewportClient
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonGenericInputActionDataTable : public DataTable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonInputActionDataProcessor : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonHierarchicalScrollBox : public ScrollBox
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonLazyImage : public Image
{
public:
	struct SlateBrush LoadingBackgroundBrush;
	struct FName MaterialTextureParamName;
	struct FScriptMulticastDelegate BP_OnLoadingStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonLazyWidget : public Widget
{
public:
	struct SlateBrush LoadingBackgroundBrush;
	class UClass* Content;
	struct FScriptMulticastDelegate BP_OnLoadingStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonListView : public ListView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LoadGuardSlot : public PanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonLoadGuard : public ContentWidget
{
public:
	struct SlateBrush LoadingBackgroundBrush;
	EHorizontalAlignment ThrobberAlignment;
	struct Margin ThrobberPadding;
	struct FText LoadingText;
	class UClass* TextStyle;
	struct FScriptMulticastDelegate BP_OnLoadingStateChanged;
	struct SoftObjectPath SpinnerMaterialPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonNumericTextBlock : public CommonTextBlock
{
public:
	struct FScriptMulticastDelegate OnInterpolationStartedEvent;
	struct FScriptMulticastDelegate OnInterpolationUpdatedEvent;
	struct FScriptMulticastDelegate OnOutroEvent;
	struct FScriptMulticastDelegate OnInterpolationEndedEvent;
	float CurrentNumericValue;
	ECommonNumericType NumericType;
	struct CommonNumberFormattingOptions FormattingSpecification;
	float EaseOutInterpolationExponent;
	float InterpolationUpdateInterval;
	float PostInterpolationShrinkDuration;
	bool PerformSizeInterpolation;
	bool IsPercentage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonPoolableWidgetInterface : public Interface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonRichTextBlock : public RichTextBlock
{
public:
	ERichTextInlineIconDisplayMode InlineIconDisplayMode;
	bool bTintInlineIcon;
	class UClass* DefaultTextStyleOverrideClass;
	float MobileTextBlockScale;
	class UClass* ScrollStyle;
	bool bDisplayAllCaps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonRotator : public CommonButtonBase
{
public:
	struct FScriptMulticastDelegate OnRotated;
	class UClass* MyText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonTabListWidgetBase : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnTabSelected;
	struct FScriptMulticastDelegate OnTabButtonCreation;
	struct FScriptMulticastDelegate OnTabButtonRemoval;
	struct DataTableRowHandle NextTabInputActionData;
	struct DataTableRowHandle PreviousTabInputActionData;
	bool bAutoListenForInput;
	Unknown LinkedSwitcher;
	class UClass* TabButtonGroup;
	Unknown RegisteredTabsByID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonTextStyle : public UObject
{
public:
	struct SlateFontInfo Font;
	struct LinearColor Color;
	bool bUsesDropShadow;
	struct Vector2D ShadowOffset;
	struct LinearColor ShadowColor;
	struct Margin Margin;
	struct SlateBrush StrikeBrush;
	float LineHeightPercentage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonTextScrollStyle : public UObject
{
public:
	float Speed;
	float StartDelay;
	float EndDelay;
	float FadeInDelay;
	float FadeOutDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonTileView : public TileView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonTreeView : public TreeView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonUIActionRouterBase : public LocalPlayerSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonUIEditorSettings : public UObject
{
public:
	struct TSoftClassPtr<UObject> TemplateTextStyle;
	struct TSoftClassPtr<UObject> TemplateButtonStyle;
	struct TSoftClassPtr<UObject> TemplateBorderStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonUIInputSettings : public UObject
{
public:
	bool bLinkCursorToGamepadFocus;
	int UIActionProcessingPriority;
	TArray<struct UIInputAction> InputActions;
	TArray<struct UIInputAction> ActionOverrides;
	struct CommonAnalogCursorSettings AnalogCursorSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonUILibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonUIRichTextData : public UObject
{
public:
	class UClass* InlineIconSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonUISettings : public UObject
{
public:
	bool bAutoLoadData;
	struct TSoftClassPtr<UObject> DefaultImageResourceObject;
	struct TSoftClassPtr<UObject> DefaultThrobberMaterial;
	struct TSoftClassPtr<UObject> DefaultRichTextDataClass;
	class UClass* DefaultImageResourceObjectInstance;
	class UClass* DefaultThrobberMaterialInstance;
	struct SlateBrush DefaultThrobberBrush;
	class UClass* RichTextDataInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonUISubsystemBase : public GameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonVideoPlayer : public Widget
{
public:
	class UClass* Video;
	class UClass* MediaPlayer;
	class UClass* MediaTexture;
	class UClass* VideoMaterial;
	class UClass* SoundComponent;
	struct SlateBrush VideoBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonVisibilitySwitcher : public Overlay
{
public:
	ESlateVisibility ShownVisibility;
	int ActiveWidgetIndex;
	bool bAutoActivateSlot;
	bool bActivateFirstSlotOnAdding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonVisibilitySwitcherSlot : public OverlaySlot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommonVisibilityWidgetBase : public CommonBorder
{
public:
	Unknown VisibilityControls;
	bool bShowForGamepad;
	bool bShowForMouseAndKeyboard;
	bool bShowForTouch;
	ESlateVisibility VisibleType;
	ESlateVisibility HiddenType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonVisualAttachment : public SizeBox
{
public:
	struct Vector2D ContentAnchor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonWidgetCarousel : public PanelWidget
{
public:
	int ActiveWidgetIndex;
	struct FScriptMulticastDelegate OnCurrentPageIndexChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonWidgetCarouselNavBar : public Widget
{
public:
	class UClass* ButtonWidgetType;
	struct Margin ButtonPadding;
	class UClass* LinkedCarousel;
	class UClass* ButtonGroup;
	TArray<class UClass*> Buttons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataDrivenInputActionProcessor : public UCommonInputActionDataProcessor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigBone : public RigElement
{
public:
	struct FName ParentName;
	int ParentIndex;
	struct Transform InitialTransform;
	struct Transform GlobalTransform;
	struct Transform LocalTransform;
	TArray<int> Dependents;
	ERigBoneType Type;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigSpace : public RigElement
{
public:
	ERigSpaceType SpaceType;
	struct FName ParentName;
	int ParentIndex;
	struct Transform InitialTransform;
	struct Transform LocalTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigControl : public RigElement
{
public:
	ERigControlType ControlType;
	struct FName DisplayName;
	struct FName ParentName;
	int ParentIndex;
	struct FName SpaceName;
	int SpaceIndex;
	struct Transform OffsetTransform;
	struct RigControlValue InitialValue;
	struct RigControlValue Value;
	ERigControlAxis PrimaryAxis;
	bool bIsCurve;
	bool bAnimatable;
	bool bLimitTranslation;
	bool bLimitRotation;
	bool bLimitScale;
	bool bDrawLimits;
	struct RigControlValue MinimumValue;
	struct RigControlValue MaximumValue;
	bool bGizmoEnabled;
	bool bGizmoVisible;
	struct FName GizmoName;
	struct Transform GizmoTransform;
	struct LinearColor GizmoColor;
	TArray<int> Dependents;
	bool bIsTransientControl;
	class UClass* ControlEnum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigCurve : public RigElement
{
public:
	float Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimationHierarchy : public NodeHierarchyWithUserData
{
public:
	TArray<struct ConstraintNodeData> UserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ControlRigBase : public AnimNode_CustomProperty
{
public:
	struct PoseLink Source;
	Unknown ControlRigBoneMapping;
	Unknown ControlRigCurveMapping;
	Unknown InputToCurveMappingUIDs;
	Unknown NodeMappingContainer;
	struct ControlRigIOSettings InputSettings;
	struct ControlRigIOSettings OutputSettings;
	bool bExecute;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ControlRig : public AnimNode_ControlRigBase
{
public:
	class UClass* ControlRigClass;
	class UClass* ControlRig;
	float Alpha;
	EAnimAlphaInputType AlphaInputType;
	bool bAlphaBoolEnabled;
	struct InputScaleBias AlphaScaleBias;
	struct InputAlphaBoolBlend AlphaBoolBlend;
	struct FName AlphaCurveName;
	struct InputScaleBiasClamp AlphaScaleBiasClamp;
	Unknown InputMapping;
	Unknown OutputMapping;
	int LODThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ControlRig_ExternalSource : public AnimNode_ControlRigBase
{
public:
	Unknown ControlRig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigAnimInstanceProxy : public AnimInstanceProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigExecuteContext : public RigVMExecuteContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigDrawInterface : public ControlRigDrawContainer
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigLayerInstanceProxy : public AnimInstanceProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ControlRigInputPose : public AnimNode_Base
{
public:
	struct PoseLink InputPose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigSequencerAnimInstanceProxy : public AnimSequencerInstanceProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CRSimPointContainer : public CRSimContainer
{
public:
	TArray<struct CRSimPoint> Points;
	TArray<struct CRSimLinearSpring> Springs;
	TArray<struct CRSimPointForce> Forces;
	TArray<struct CRSimSoftCollision> CollisionVolumes;
	TArray<struct CRSimPointConstraint> Constraints;
	TArray<struct CRSimPoint> PreviousStep;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneControlRigInstanceData : public MovieSceneSequenceInstanceData
{
public:
	bool bAdditive;
	bool bApplyBoneFilter;
	struct InputBlendPose BoneFilter;
	struct MovieSceneFloatChannel Weight;
	struct MovieSceneEvaluationOperand Operand;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneControlRigParameterTemplate : public MovieSceneParameterSectionTemplate
{
public:
	TArray<struct EnumParameterNameAndCurve> Enums;
	TArray<struct IntegerParameterNameAndCurve> Integers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit : public RigVMStruct
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnitMutable : public RigUnit
{
public:
	struct ControlRigExecuteContext ExecuteContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SimBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateVectorRange : public RigUnit_SimBase
{
public:
	struct Vector Value;
	struct Vector Minimum;
	struct Vector Maximum;
	struct Vector AccumulatedMinimum;
	struct Vector AccumulatedMaximum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateFloatRange : public RigUnit_SimBase
{
public:
	float Value;
	float Minimum;
	float Maximum;
	float AccumulatedMinimum;
	float AccumulatedMaximum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateTransformLerp : public RigUnit_SimBase
{
public:
	struct Transform TargetValue;
	struct Transform InitialValue;
	float Blend;
	bool bIntegrateDeltaTime;
	struct Transform Result;
	struct Transform AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateQuatLerp : public RigUnit_SimBase
{
public:
	struct Quat TargetValue;
	struct Quat InitialValue;
	float Blend;
	bool bIntegrateDeltaTime;
	struct Quat Result;
	struct Quat AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateVectorLerp : public RigUnit_SimBase
{
public:
	struct Vector TargetValue;
	struct Vector InitialValue;
	float Blend;
	bool bIntegrateDeltaTime;
	struct Vector Result;
	struct Vector AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateFloatLerp : public RigUnit_SimBase
{
public:
	float TargetValue;
	float InitialValue;
	float Blend;
	bool bIntegrateDeltaTime;
	float Result;
	float AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateTransformMul : public RigUnit_SimBase
{
public:
	struct Transform Multiplier;
	struct Transform InitialValue;
	bool bFlipOrder;
	bool bIntegrateDeltaTime;
	struct Transform Result;
	struct Transform AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateQuatMul : public RigUnit_SimBase
{
public:
	struct Quat Multiplier;
	struct Quat InitialValue;
	bool bFlipOrder;
	bool bIntegrateDeltaTime;
	struct Quat Result;
	struct Quat AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateVectorMul : public RigUnit_SimBase
{
public:
	struct Vector Multiplier;
	struct Vector InitialValue;
	bool bIntegrateDeltaTime;
	struct Vector Result;
	struct Vector AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateFloatMul : public RigUnit_SimBase
{
public:
	float Multiplier;
	float InitialValue;
	bool bIntegrateDeltaTime;
	float Result;
	float AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateVectorAdd : public RigUnit_SimBase
{
public:
	struct Vector Increment;
	struct Vector InitialValue;
	bool bIntegrateDeltaTime;
	struct Vector Result;
	struct Vector AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AccumulateFloatAdd : public RigUnit_SimBase
{
public:
	float Increment;
	float InitialValue;
	bool bIntegrateDeltaTime;
	float Result;
	float AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AddBoneTransform : public RigUnitMutable
{
public:
	struct FName Bone;
	struct Transform Transform;
	float Weight;
	bool bPostMultiply;
	bool bPropagateToChildren;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HighlevelBaseMutable : public RigUnitMutable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AimItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKey Item;
	struct RigUnit_AimItem_Target Primary;
	struct RigUnit_AimItem_Target Secondary;
	float Weight;
	struct RigUnit_AimBone_DebugSettings DebugSettings;
	struct CachedRigElement CachedItem;
	struct CachedRigElement PrimaryCachedSpace;
	struct CachedRigElement SecondaryCachedSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AimBone : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName Bone;
	struct RigUnit_AimBone_Target Primary;
	struct RigUnit_AimBone_Target Secondary;
	float Weight;
	bool bPropagateToChildren;
	struct RigUnit_AimBone_DebugSettings DebugSettings;
	struct CachedRigElement CachedBoneIndex;
	struct CachedRigElement PrimaryCachedSpace;
	struct CachedRigElement SecondaryCachedSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HighlevelBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AimBoneMath : public RigUnit_HighlevelBase
{
public:
	struct Transform InputTransform;
	struct RigUnit_AimItem_Target Primary;
	struct RigUnit_AimItem_Target Secondary;
	float Weight;
	struct Transform Result;
	struct RigUnit_AimBone_DebugSettings DebugSettings;
	struct CachedRigElement PrimaryCachedSpace;
	struct CachedRigElement SecondaryCachedSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AimConstraint : public RigUnitMutable
{
public:
	struct FName Joint;
	EAimMode AimMode;
	EAimMode UpMode;
	struct Vector AimVector;
	struct Vector UpVector;
	TArray<struct AimTarget> AimTargets;
	TArray<struct AimTarget> UpTargets;
	struct RigUnit_AimConstraint_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AlphaInterpVector : public RigUnit_SimBase
{
public:
	struct Vector Value;
	float Scale;
	float Bias;
	bool bMapRange;
	struct InputRange InRange;
	struct InputRange OutRange;
	bool bClampResult;
	float ClampMin;
	float ClampMax;
	bool bInterpResult;
	float InterpSpeedIncreasing;
	float InterpSpeedDecreasing;
	struct Vector Result;
	struct InputScaleBiasClamp ScaleBiasClamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AlphaInterp : public RigUnit_SimBase
{
public:
	float Value;
	float Scale;
	float Bias;
	bool bMapRange;
	struct InputRange InRange;
	struct InputRange OutRange;
	bool bClampResult;
	float ClampMin;
	float ClampMax;
	bool bInterpResult;
	float InterpSpeedIncreasing;
	float InterpSpeedDecreasing;
	float Result;
	struct InputScaleBiasClamp ScaleBiasClamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AnimBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AnimEasing : public RigUnit_AnimBase
{
public:
	float Value;
	EControlRigAnimEasingType Type;
	float SourceMinimum;
	float SourceMaximum;
	float TargetMinimum;
	float TargetMaximum;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AnimEasingType : public RigUnit_AnimBase
{
public:
	EControlRigAnimEasingType Type;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AnimEvalRichCurve : public RigUnit_AnimBase
{
public:
	float Value;
	struct RuntimeFloatCurve Curve;
	float SourceMinimum;
	float SourceMaximum;
	float TargetMinimum;
	float TargetMaximum;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_AnimRichCurve : public RigUnit_AnimBase
{
public:
	struct RuntimeFloatCurve Curve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ApplyFK : public RigUnitMutable
{
public:
	struct FName Joint;
	struct Transform Transform;
	struct TransformFilter Filter;
	EApplyTransformMode ApplyTransformMode;
	ETransformSpaceMode ApplyTransformSpace;
	struct Transform BaseTransform;
	struct FName BaseJoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BeginExecution : public RigUnit
{
public:
	struct ControlRigExecuteContext ExecuteContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BlendTransform : public RigUnit
{
public:
	struct Transform Source;
	TArray<struct BlendTarget> Targets;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ItemHarmonics : public RigUnit_HighlevelBaseMutable
{
public:
	TArray<struct RigUnit_Harmonics_TargetItem> Targets;
	struct Vector WaveSpeed;
	struct Vector WaveFrequency;
	struct Vector WaveAmplitude;
	struct Vector WaveOffset;
	struct Vector WaveNoise;
	EControlRigAnimEasingType WaveEase;
	float WaveMinimum;
	float WaveMaximum;
	EControlRigRotationOrder RotationOrder;
	struct RigUnit_BoneHarmonics_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BoneHarmonics : public RigUnit_HighlevelBaseMutable
{
public:
	TArray<struct RigUnit_BoneHarmonics_BoneTarget> Bones;
	struct Vector WaveSpeed;
	struct Vector WaveFrequency;
	struct Vector WaveAmplitude;
	struct Vector WaveOffset;
	struct Vector WaveNoise;
	EControlRigAnimEasingType WaveEase;
	float WaveMinimum;
	float WaveMaximum;
	EControlRigRotationOrder RotationOrder;
	bool bPropagateToChildren;
	struct RigUnit_BoneHarmonics_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ControlName : public RigUnit
{
public:
	struct FName Control;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SpaceName : public RigUnit
{
public:
	struct FName Space;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BoneName : public RigUnit
{
public:
	struct FName Bone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Item : public RigUnit
{
public:
	struct RigElementKey Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CCDIKPerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKeyCollection Items;
	struct Transform EffectorTransform;
	float Precision;
	float Weight;
	int MaxIterations;
	bool bStartFromTail;
	float BaseRotationLimit;
	TArray<struct RigUnit_CCDIK_RotationLimitPerItem> RotationLimits;
	bool bPropagateToChildren;
	struct RigUnit_CCDIK_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CCDIK : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EffectorBone;
	struct Transform EffectorTransform;
	float Precision;
	float Weight;
	int MaxIterations;
	bool bStartFromTail;
	float BaseRotationLimit;
	TArray<struct RigUnit_CCDIK_RotationLimit> RotationLimits;
	bool bPropagateToChildren;
	struct RigUnit_CCDIK_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ChainHarmonicsPerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKey ChainRoot;
	struct Vector Speed;
	struct RigUnit_ChainHarmonics_Reach Reach;
	struct RigUnit_ChainHarmonics_Wave Wave;
	struct RuntimeFloatCurve WaveCurve;
	struct RigUnit_ChainHarmonics_Pendulum Pendulum;
	bool bDrawDebug;
	struct Transform DrawWorldOffset;
	struct RigUnit_ChainHarmonics_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ChainHarmonics : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName ChainRoot;
	struct Vector Speed;
	struct RigUnit_ChainHarmonics_Reach Reach;
	struct RigUnit_ChainHarmonics_Wave Wave;
	struct RuntimeFloatCurve WaveCurve;
	struct RigUnit_ChainHarmonics_Pendulum Pendulum;
	bool bDrawDebug;
	struct Transform DrawWorldOffset;
	struct RigUnit_ChainHarmonics_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionBaseMutable : public RigUnitMutable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionLoop : public RigUnit_CollectionBaseMutable
{
public:
	struct RigElementKeyCollection Collection;
	struct RigElementKey Item;
	int Index;
	int Count;
	float Ratio;
	bool Continue;
	struct ControlRigExecuteContext Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionItemAtIndex : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection Collection;
	int Index;
	struct RigElementKey Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionCount : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection Collection;
	int Count;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionReverse : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection Collection;
	struct RigElementKeyCollection Reversed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionDifference : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection A;
	struct RigElementKeyCollection B;
	struct RigElementKeyCollection Collection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionIntersection : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection A;
	struct RigElementKeyCollection B;
	struct RigElementKeyCollection Collection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionUnion : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection A;
	struct RigElementKeyCollection B;
	struct RigElementKeyCollection Collection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionItems : public RigUnit_CollectionBase
{
public:
	TArray<struct RigElementKey> Items;
	struct RigElementKeyCollection Collection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionReplaceItems : public RigUnit_CollectionBase
{
public:
	struct RigElementKeyCollection Items;
	struct FName Old;
	struct FName New;
	bool RemoveInvalidItems;
	struct RigElementKeyCollection Collection;
	struct RigElementKeyCollection CachedCollection;
	int CachedHierarchyHash;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionChildren : public RigUnit_CollectionBase
{
public:
	struct RigElementKey Parent;
	bool bIncludeParent;
	bool bRecursive;
	ERigElementType TypeToSearch;
	struct RigElementKeyCollection Collection;
	struct RigElementKeyCollection CachedCollection;
	int CachedHierarchyHash;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionNameSearch : public RigUnit_CollectionBase
{
public:
	struct FName PartialName;
	ERigElementType TypeToSearch;
	struct RigElementKeyCollection Collection;
	struct RigElementKeyCollection CachedCollection;
	int CachedHierarchyHash;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_CollectionChain : public RigUnit_CollectionBase
{
public:
	struct RigElementKey FirstItem;
	struct RigElementKey LastItem;
	bool Reverse;
	struct RigElementKeyCollection Collection;
	struct RigElementKeyCollection CachedCollection;
	int CachedHierarchyHash;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Control : public RigUnit
{
public:
	struct EulerTransform Transform;
	struct Transform Base;
	struct Transform InitTransform;
	struct Transform Result;
	struct TransformFilter Filter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Control_StaticMesh : public RigUnit_Control
{
public:
	struct Transform MeshTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToSwingAndTwist : public RigUnit
{
public:
	struct Quat Input;
	struct Vector TwistAxis;
	struct Quat Swing;
	struct Quat Twist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertQuaternionToVector : public RigUnit
{
public:
	struct Quat Input;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertRotationToVector : public RigUnit
{
public:
	struct Rotator Input;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertVectorToQuaternion : public RigUnit
{
public:
	struct Vector Input;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertVectorToRotation : public RigUnit
{
public:
	struct Vector Input;
	struct Rotator Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertQuaternion : public RigUnit
{
public:
	struct Quat Input;
	struct Rotator Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertRotation : public RigUnit
{
public:
	struct Rotator Input;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertVectorRotation : public RigUnit_ConvertRotation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertEulerTransform : public RigUnit
{
public:
	struct EulerTransform Input;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ConvertTransform : public RigUnit
{
public:
	struct Transform Input;
	struct EulerTransform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugBaseMutable : public RigUnitMutable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugBezierItemSpace : public RigUnit_DebugBaseMutable
{
public:
	struct CRFourPointBezier Bezier;
	float MinimumU;
	float MaximumU;
	struct LinearColor Color;
	float Thickness;
	int Detail;
	struct RigElementKey Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugBezier : public RigUnit_DebugBaseMutable
{
public:
	struct CRFourPointBezier Bezier;
	float MinimumU;
	float MaximumU;
	struct LinearColor Color;
	float Thickness;
	int Detail;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugHierarchy : public RigUnit_DebugBaseMutable
{
public:
	float Scale;
	struct LinearColor Color;
	float Thickness;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugLineItemSpace : public RigUnit_DebugBaseMutable
{
public:
	struct Vector A;
	struct Vector B;
	struct LinearColor Color;
	float Thickness;
	struct RigElementKey Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugLine : public RigUnit_DebugBaseMutable
{
public:
	struct Vector A;
	struct Vector B;
	struct LinearColor Color;
	float Thickness;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugLineStripItemSpace : public RigUnit_DebugBaseMutable
{
public:
	TArray<struct Vector> Points;
	struct LinearColor Color;
	float Thickness;
	struct RigElementKey Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugLineStrip : public RigUnit_DebugBaseMutable
{
public:
	TArray<struct Vector> Points;
	struct LinearColor Color;
	float Thickness;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugPointMutable : public RigUnit_DebugBaseMutable
{
public:
	struct Vector Vector;
	ERigUnitDebugPointMode Mode;
	struct LinearColor Color;
	float Scale;
	float Thickness;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugPoint : public RigUnit_DebugBase
{
public:
	struct Vector Vector;
	ERigUnitDebugPointMode Mode;
	struct LinearColor Color;
	float Scale;
	float Thickness;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugArcItemSpace : public RigUnit_DebugBaseMutable
{
public:
	struct Transform Transform;
	struct LinearColor Color;
	float Radius;
	float MinimumDegrees;
	float MaximumDegrees;
	float Thickness;
	int Detail;
	struct RigElementKey Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugArc : public RigUnit_DebugBaseMutable
{
public:
	struct Transform Transform;
	struct LinearColor Color;
	float Radius;
	float MinimumDegrees;
	float MaximumDegrees;
	float Thickness;
	int Detail;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugRectangleItemSpace : public RigUnit_DebugBaseMutable
{
public:
	struct Transform Transform;
	struct LinearColor Color;
	float Scale;
	float Thickness;
	struct RigElementKey Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugRectangle : public RigUnit_DebugBaseMutable
{
public:
	struct Transform Transform;
	struct LinearColor Color;
	float Scale;
	float Thickness;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugTransformArrayMutable : public RigUnit_DebugBaseMutable
{
public:
	TArray<struct Transform> Transforms;
	ERigUnitDebugTransformMode Mode;
	struct LinearColor Color;
	float Thickness;
	float Scale;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;
	struct RigUnit_DebugTransformArrayMutable_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugTransformMutableItemSpace : public RigUnit_DebugBaseMutable
{
public:
	struct Transform Transform;
	ERigUnitDebugTransformMode Mode;
	struct LinearColor Color;
	float Thickness;
	float Scale;
	struct RigElementKey Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugTransformMutable : public RigUnit_DebugBaseMutable
{
public:
	struct Transform Transform;
	ERigUnitDebugTransformMode Mode;
	struct LinearColor Color;
	float Thickness;
	float Scale;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DebugTransform : public RigUnit_DebugBase
{
public:
	struct Transform Transform;
	ERigUnitDebugTransformMode Mode;
	struct LinearColor Color;
	float Thickness;
	float Scale;
	struct FName Space;
	struct Transform WorldOffset;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DeltaFromPreviousTransform : public RigUnit_SimBase
{
public:
	struct Transform Value;
	struct Transform Delta;
	struct Transform PreviousValue;
	struct Transform Cache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DeltaFromPreviousQuat : public RigUnit_SimBase
{
public:
	struct Quat Value;
	struct Quat Delta;
	struct Quat PreviousValue;
	struct Quat Cache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DeltaFromPreviousVector : public RigUnit_SimBase
{
public:
	struct Vector Value;
	struct Vector Delta;
	struct Vector PreviousValue;
	struct Vector Cache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DeltaFromPreviousFloat : public RigUnit_SimBase
{
public:
	float Value;
	float Delta;
	float PreviousValue;
	float Cache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DistributeRotationForCollection : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKeyCollection Items;
	TArray<struct RigUnit_DistributeRotation_Rotation> Rotations;
	EControlRigAnimEasingType RotationEaseType;
	float Weight;
	struct RigUnit_DistributeRotation_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DistributeRotation : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EndBone;
	TArray<struct RigUnit_DistributeRotation_Rotation> Rotations;
	EControlRigAnimEasingType RotationEaseType;
	float Weight;
	bool bPropagateToChildren;
	struct RigUnit_DistributeRotation_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DrawContainerSetTransform : public RigUnitMutable
{
public:
	struct FName InstructionName;
	struct Transform Transform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DrawContainerSetThickness : public RigUnitMutable
{
public:
	struct FName InstructionName;
	float Thickness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DrawContainerSetColor : public RigUnitMutable
{
public:
	struct FName InstructionName;
	struct LinearColor Color;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_DrawContainerGetInstruction : public RigUnit
{
public:
	struct FName InstructionName;
	struct LinearColor Color;
	struct Transform Transform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_FABRIKPerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKeyCollection Items;
	struct Transform EffectorTransform;
	float Precision;
	float Weight;
	bool bPropagateToChildren;
	int MaxIterations;
	struct RigUnit_FABRIK_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_FABRIK : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EffectorBone;
	struct Transform EffectorTransform;
	float Precision;
	float Weight;
	bool bPropagateToChildren;
	int MaxIterations;
	struct RigUnit_FABRIK_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_FitChainToCurvePerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKeyCollection Items;
	struct CRFourPointBezier Bezier;
	EControlRigCurveAlignment Alignment;
	float Minimum;
	float Maximum;
	int SamplingPrecision;
	struct Vector PrimaryAxis;
	struct Vector SecondaryAxis;
	struct Vector PoleVectorPosition;
	TArray<struct RigUnit_FitChainToCurve_Rotation> Rotations;
	EControlRigAnimEasingType RotationEaseType;
	float Weight;
	bool bPropagateToChildren;
	struct RigUnit_FitChainToCurve_DebugSettings DebugSettings;
	struct RigUnit_FitChainToCurve_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_FitChainToCurve : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EndBone;
	struct CRFourPointBezier Bezier;
	EControlRigCurveAlignment Alignment;
	float Minimum;
	float Maximum;
	int SamplingPrecision;
	struct Vector PrimaryAxis;
	struct Vector SecondaryAxis;
	struct Vector PoleVectorPosition;
	TArray<struct RigUnit_FitChainToCurve_Rotation> Rotations;
	EControlRigAnimEasingType RotationEaseType;
	float Weight;
	bool bPropagateToChildren;
	struct RigUnit_FitChainToCurve_DebugSettings DebugSettings;
	struct RigUnit_FitChainToCurve_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MapRange_Float : public RigUnit
{
public:
	float Value;
	float MinIn;
	float MaxIn;
	float MinOut;
	float MaxOut;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Clamp_Float : public RigUnit
{
public:
	float Value;
	float Min;
	float Max;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BinaryFloatOp : public RigUnit
{
public:
	float Argument0;
	float Argument1;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Divide_FloatFloat : public RigUnit_BinaryFloatOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Subtract_FloatFloat : public RigUnit_BinaryFloatOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Add_FloatFloat : public RigUnit_BinaryFloatOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Multiply_FloatFloat : public RigUnit_BinaryFloatOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ForLoopCount : public RigUnitMutable
{
public:
	int Count;
	int Index;
	float Ratio;
	bool Continue;
	struct ControlRigExecuteContext Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetBoneTransform : public RigUnit
{
public:
	struct FName Bone;
	EBoneGetterSetterMode Space;
	struct Transform Transform;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlInitialTransform : public RigUnit
{
public:
	struct FName Control;
	EBoneGetterSetterMode Space;
	struct Transform Transform;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlTransform : public RigUnit
{
public:
	struct FName Control;
	EBoneGetterSetterMode Space;
	struct Transform Transform;
	struct Transform Minimum;
	struct Transform Maximum;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlRotator : public RigUnit
{
public:
	struct FName Control;
	EBoneGetterSetterMode Space;
	struct Rotator Rotator;
	struct Rotator Minimum;
	struct Rotator Maximum;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlVector : public RigUnit
{
public:
	struct FName Control;
	EBoneGetterSetterMode Space;
	struct Vector Vector;
	struct Vector Minimum;
	struct Vector Maximum;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlVector2D : public RigUnit
{
public:
	struct FName Control;
	struct Vector2D Vector;
	struct Vector2D Minimum;
	struct Vector2D Maximum;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlInteger : public RigUnit
{
public:
	struct FName Control;
	int IntegerValue;
	int Minimum;
	int Maximum;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlFloat : public RigUnit
{
public:
	struct FName Control;
	float FloatValue;
	float Minimum;
	float Maximum;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetControlBool : public RigUnit
{
public:
	struct FName Control;
	bool BoolValue;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetCurveValue : public RigUnit
{
public:
	struct FName Curve;
	float Value;
	struct CachedRigElement CachedCurveIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetDeltaTime : public RigUnit_AnimBase
{
public:
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetInitialBoneTransform : public RigUnit
{
public:
	struct FName Bone;
	EBoneGetterSetterMode Space;
	struct Transform Transform;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetJointTransform : public RigUnitMutable
{
public:
	struct FName Joint;
	ETransformGetterType Type;
	ETransformSpaceMode TransformSpace;
	struct Transform BaseTransform;
	struct FName BaseJoint;
	struct Transform Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetRelativeBoneTransform : public RigUnit
{
public:
	struct FName Bone;
	struct FName Space;
	struct Transform Transform;
	struct CachedRigElement CachedBone;
	struct CachedRigElement CachedSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetRelativeTransformForItem : public RigUnit
{
public:
	struct RigElementKey Child;
	bool bChildInitial;
	struct RigElementKey Parent;
	bool bParentInitial;
	struct Transform RelativeTransform;
	struct CachedRigElement CachedChild;
	struct CachedRigElement CachedParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetSpaceTransform : public RigUnit
{
public:
	struct FName Space;
	EBoneGetterSetterMode SpaceType;
	struct Transform Transform;
	struct CachedRigElement CachedSpaceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetTransform : public RigUnit
{
public:
	struct RigElementKey Item;
	EBoneGetterSetterMode Space;
	bool bInitial;
	struct Transform Transform;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetWorldTime : public RigUnit_AnimBase
{
public:
	float Year;
	float Month;
	float Day;
	float WeekDay;
	float Hours;
	float Minutes;
	float Seconds;
	float OverallSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HierarchyBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HierarchyGetSiblings : public RigUnit_HierarchyBase
{
public:
	struct RigElementKey Item;
	bool bIncludeItem;
	struct RigElementKeyCollection Siblings;
	struct CachedRigElement CachedItem;
	struct RigElementKeyCollection CachedSiblings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HierarchyGetChildren : public RigUnit_HierarchyBase
{
public:
	struct RigElementKey Parent;
	bool bIncludeParent;
	bool bRecursive;
	struct RigElementKeyCollection Children;
	struct CachedRigElement CachedParent;
	struct RigElementKeyCollection CachedChildren;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HierarchyGetParents : public RigUnit_HierarchyBase
{
public:
	struct RigElementKey Child;
	bool bIncludeChild;
	bool bReverse;
	struct RigElementKeyCollection Parents;
	struct CachedRigElement CachedChild;
	struct RigElementKeyCollection CachedParents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_HierarchyGetParent : public RigUnit_HierarchyBase
{
public:
	struct RigElementKey Child;
	struct RigElementKey Parent;
	struct CachedRigElement CachedChild;
	struct CachedRigElement CachedParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_InverseExecution : public RigUnit
{
public:
	struct ControlRigExecuteContext ExecuteContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_IsInteracting : public RigUnit
{
public:
	bool bIsInteracting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ItemBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ItemReplace : public RigUnit_ItemBase
{
public:
	struct RigElementKey Item;
	struct FName Old;
	struct FName New;
	struct RigElementKey Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ItemExists : public RigUnit_ItemBase
{
public:
	struct RigElementKey Item;
	bool Exists;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ItemBaseMutable : public RigUnitMutable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_KalmanTransform : public RigUnit_SimBase
{
public:
	struct Transform Value;
	int BufferSize;
	struct Transform Result;
	TArray<struct Transform> Buffer;
	int LastInsertIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_KalmanVector : public RigUnit_SimBase
{
public:
	struct Vector Value;
	int BufferSize;
	struct Vector Result;
	TArray<struct Vector> Buffer;
	int LastInsertIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_KalmanFloat : public RigUnit_SimBase
{
public:
	float Value;
	int BufferSize;
	float Result;
	TArray<float> Buffer;
	int LastInsertIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolNotEquals : public RigUnit_MathBoolBase
{
public:
	bool A;
	bool B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolEquals : public RigUnit_MathBoolBase
{
public:
	bool A;
	bool B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolBinaryOp : public RigUnit_MathBoolBase
{
public:
	bool A;
	bool B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolOr : public RigUnit_MathBoolBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolNand : public RigUnit_MathBoolBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolAnd : public RigUnit_MathBoolBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolUnaryOp : public RigUnit_MathBoolBase
{
public:
	bool Value;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolNot : public RigUnit_MathBoolUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolConstant : public RigUnit_MathBoolBase
{
public:
	bool Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolConstFalse : public RigUnit_MathBoolConstant
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathBoolConstTrue : public RigUnit_MathBoolConstant
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorLerp : public RigUnit_MathColorBase
{
public:
	struct LinearColor A;
	struct LinearColor B;
	float T;
	struct LinearColor Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorBinaryOp : public RigUnit_MathColorBase
{
public:
	struct LinearColor A;
	struct LinearColor B;
	struct LinearColor Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorMul : public RigUnit_MathColorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorSub : public RigUnit_MathColorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorAdd : public RigUnit_MathColorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathColorFromFloat : public RigUnit_MathColorBase
{
public:
	float Value;
	struct LinearColor Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatLawOfCosine : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	float C;
	float AlphaAngle;
	float BetaAngle;
	float GammaAngle;
	bool bValid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatUnaryOp : public RigUnit_MathFloatBase
{
public:
	float Value;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatAtan : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatAcos : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatAsin : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatTan : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatCos : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatSin : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatRad : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatDeg : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatSelectBool : public RigUnit_MathFloatBase
{
public:
	bool Condition;
	float IfTrue;
	float IfFalse;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatIsNearlyEqual : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	float Tolerance;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatIsNearlyZero : public RigUnit_MathFloatBase
{
public:
	float Value;
	float Tolerance;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatLessEqual : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatGreaterEqual : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatLess : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatGreater : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatNotEquals : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatEquals : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatRemap : public RigUnit_MathFloatBase
{
public:
	float Value;
	float SourceMinimum;
	float SourceMaximum;
	float TargetMinimum;
	float TargetMaximum;
	bool bClamp;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatLerp : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	float T;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatClamp : public RigUnit_MathFloatBase
{
public:
	float Value;
	float Minimum;
	float Maximum;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatSign : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatToInt : public RigUnit_MathFloatBase
{
public:
	float Value;
	int Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatRound : public RigUnit_MathFloatBase
{
public:
	float Value;
	float Result;
	int Int;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatCeil : public RigUnit_MathFloatBase
{
public:
	float Value;
	float Result;
	int Int;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatFloor : public RigUnit_MathFloatBase
{
public:
	float Value;
	float Result;
	int Int;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatAbs : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatNegate : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatSqrt : public RigUnit_MathFloatUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatBinaryOp : public RigUnit_MathFloatBase
{
public:
	float A;
	float B;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatPow : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatMax : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatMin : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatMod : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatDiv : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatMul : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatSub : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatAdd : public RigUnit_MathFloatBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatConstant : public RigUnit_MathFloatBase
{
public:
	float Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatConstTwoPi : public RigUnit_MathFloatConstant
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatConstHalfPi : public RigUnit_MathFloatConstant
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathFloatConstPi : public RigUnit_MathFloatConstant
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntLessEqual : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntGreaterEqual : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntLess : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntGreater : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntNotEquals : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntEquals : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntClamp : public RigUnit_MathIntBase
{
public:
	int Value;
	int Minimum;
	int Maximum;
	int Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntUnaryOp : public RigUnit_MathIntBase
{
public:
	int Value;
	int Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntSign : public RigUnit_MathIntUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntToFloat : public RigUnit_MathIntBase
{
public:
	int Value;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntAbs : public RigUnit_MathIntUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntNegate : public RigUnit_MathIntUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntBinaryOp : public RigUnit_MathIntBase
{
public:
	int A;
	int B;
	int Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntPow : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntMax : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntMin : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntMod : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntDiv : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntMul : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntSub : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntAdd : public RigUnit_MathIntBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionRotationOrder : public RigUnit_MathBase
{
public:
	EControlRigRotationOrder RotationOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionSwingTwist : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Input;
	struct Vector TwistAxis;
	struct Quat Swing;
	struct Quat Twist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionGetAxis : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Quaternion;
	EAxis Axis;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionRotateVector : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Quaternion;
	struct Vector Vector;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionUnaryOp : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Value;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionUnit : public RigUnit_MathQuaternionUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionDot : public RigUnit_MathQuaternionBase
{
public:
	struct Quat A;
	struct Quat B;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionSelectBool : public RigUnit_MathQuaternionBase
{
public:
	bool Condition;
	struct Quat IfTrue;
	struct Quat IfFalse;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionNotEquals : public RigUnit_MathQuaternionBase
{
public:
	struct Quat A;
	struct Quat B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionEquals : public RigUnit_MathQuaternionBase
{
public:
	struct Quat A;
	struct Quat B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionSlerp : public RigUnit_MathQuaternionBase
{
public:
	struct Quat A;
	struct Quat B;
	float T;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionInverse : public RigUnit_MathQuaternionUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionBinaryOp : public RigUnit_MathQuaternionBase
{
public:
	struct Quat A;
	struct Quat B;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionMul : public RigUnit_MathQuaternionBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionToRotator : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Value;
	struct Rotator Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionToEuler : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Value;
	EControlRigRotationOrder RotationOrder;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionScale : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Value;
	float Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionToAxisAndAngle : public RigUnit_MathQuaternionBase
{
public:
	struct Quat Value;
	struct Vector Axis;
	float Angle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionFromTwoVectors : public RigUnit_MathQuaternionBase
{
public:
	struct Vector A;
	struct Vector B;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionFromRotator : public RigUnit_MathQuaternionBase
{
public:
	struct Rotator Rotator;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionFromEuler : public RigUnit_MathQuaternionBase
{
public:
	struct Vector Euler;
	EControlRigRotationOrder RotationOrder;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathQuaternionFromAxisAndAngle : public RigUnit_MathQuaternionBase
{
public:
	struct Vector Axis;
	float Angle;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateVectorBase : public RigUnit_MathRBFInterpolateBase
{
public:
	struct Vector Input;
	ERBFVectorDistanceType DistanceFunction;
	ERBFKernelType SmoothingFunction;
	float SmoothingRadius;
	bool bNormalizeOutput;
	struct RigUnit_MathRBFInterpolateVectorWorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateVectorXform : public RigUnit_MathRBFInterpolateVectorBase
{
public:
	TArray<struct MathRBFInterpolateVectorXform_Target> Targets;
	struct Transform Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateVectorQuat : public RigUnit_MathRBFInterpolateVectorBase
{
public:
	TArray<struct MathRBFInterpolateVectorQuat_Target> Targets;
	struct Quat Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateVectorColor : public RigUnit_MathRBFInterpolateVectorBase
{
public:
	TArray<struct MathRBFInterpolateVectorColor_Target> Targets;
	struct LinearColor Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateVectorVector : public RigUnit_MathRBFInterpolateVectorBase
{
public:
	TArray<struct MathRBFInterpolateVectorVector_Target> Targets;
	struct Vector Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateVectorFloat : public RigUnit_MathRBFInterpolateVectorBase
{
public:
	TArray<struct MathRBFInterpolateVectorFloat_Target> Targets;
	float Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateQuatBase : public RigUnit_MathRBFInterpolateBase
{
public:
	struct Quat Input;
	ERBFQuatDistanceType DistanceFunction;
	ERBFKernelType SmoothingFunction;
	float SmoothingAngle;
	bool bNormalizeOutput;
	struct Vector TwistAxis;
	struct RigUnit_MathRBFInterpolateQuatWorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateQuatXform : public RigUnit_MathRBFInterpolateQuatBase
{
public:
	TArray<struct MathRBFInterpolateQuatXform_Target> Targets;
	struct Transform Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateQuatQuat : public RigUnit_MathRBFInterpolateQuatBase
{
public:
	TArray<struct MathRBFInterpolateQuatQuat_Target> Targets;
	struct Quat Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateQuatColor : public RigUnit_MathRBFInterpolateQuatBase
{
public:
	TArray<struct MathRBFInterpolateQuatColor_Target> Targets;
	struct LinearColor Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateQuatVector : public RigUnit_MathRBFInterpolateQuatBase
{
public:
	TArray<struct MathRBFInterpolateQuatVector_Target> Targets;
	struct Vector Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathRBFInterpolateQuatFloat : public RigUnit_MathRBFInterpolateQuatBase
{
public:
	TArray<struct MathRBFInterpolateQuatFloat_Target> Targets;
	float Output;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformClampSpatially : public RigUnit_MathTransformBase
{
public:
	struct Transform Value;
	EAxis Axis;
	EControlRigClampSpatialMode Type;
	float Minimum;
	float Maximum;
	struct Transform Space;
	bool bDrawDebug;
	struct LinearColor DebugColor;
	float DebugThickness;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformFromSRT : public RigUnit_MathTransformBase
{
public:
	struct Vector Location;
	struct Vector Rotation;
	EControlRigRotationOrder RotationOrder;
	struct Vector Scale;
	struct Transform Transform;
	struct EulerTransform EulerTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformTransformVector : public RigUnit_MathTransformBase
{
public:
	struct Transform Transform;
	struct Vector Location;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformRotateVector : public RigUnit_MathTransformBase
{
public:
	struct Transform Transform;
	struct Vector Direction;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformSelectBool : public RigUnit_MathTransformBase
{
public:
	bool Condition;
	struct Transform IfTrue;
	struct Transform IfFalse;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformLerp : public RigUnit_MathTransformBase
{
public:
	struct Transform A;
	struct Transform B;
	float T;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformUnaryOp : public RigUnit_MathTransformBase
{
public:
	struct Transform Value;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformInverse : public RigUnit_MathTransformUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformMakeAbsolute : public RigUnit_MathTransformBase
{
public:
	struct Transform Local;
	struct Transform Parent;
	struct Transform Global;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformMakeRelative : public RigUnit_MathTransformBase
{
public:
	struct Transform Global;
	struct Transform Parent;
	struct Transform Local;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformBinaryOp : public RigUnit_MathTransformBase
{
public:
	struct Transform A;
	struct Transform B;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformMul : public RigUnit_MathTransformBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformToEulerTransform : public RigUnit_MathTransformBase
{
public:
	struct Transform Value;
	struct EulerTransform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathTransformFromEulerTransform : public RigUnit_MathTransformBase
{
public:
	struct EulerTransform EulerTransform;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorBase : public RigUnit_MathBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathIntersectPlane : public RigUnit_MathVectorBase
{
public:
	struct Vector Start;
	struct Vector Direction;
	struct Vector PlanePoint;
	struct Vector PlaneNormal;
	struct Vector Result;
	float Distance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorClampSpatially : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	EAxis Axis;
	EControlRigClampSpatialMode Type;
	float Minimum;
	float Maximum;
	struct Transform Space;
	bool bDrawDebug;
	struct LinearColor DebugColor;
	float DebugThickness;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorMakeBezierFourPoint : public RigUnit_MathVectorBase
{
public:
	struct CRFourPointBezier Bezier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorBezierFourPoint : public RigUnit_MathVectorBase
{
public:
	struct CRFourPointBezier Bezier;
	float T;
	struct Vector Result;
	struct Vector Tangent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorOrthogonal : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorParallel : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorAngle : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorMirror : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	struct Vector Normal;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorClampLength : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	float MinimumLength;
	float MaximumLength;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorSetLength : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	float Length;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorUnaryOp : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorUnit : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorDot : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorBinaryOp : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorCross : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorDistance : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorLength : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorLengthSquared : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorRad : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorDeg : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorSelectBool : public RigUnit_MathVectorBase
{
public:
	bool Condition;
	struct Vector IfTrue;
	struct Vector IfFalse;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorIsNearlyEqual : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	float Tolerance;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorIsNearlyZero : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	float Tolerance;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorNotEquals : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorEquals : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorRemap : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	struct Vector SourceMinimum;
	struct Vector SourceMaximum;
	struct Vector TargetMinimum;
	struct Vector TargetMaximum;
	bool bClamp;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorLerp : public RigUnit_MathVectorBase
{
public:
	struct Vector A;
	struct Vector B;
	float T;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorClamp : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	struct Vector Minimum;
	struct Vector Maximum;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorSign : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorRound : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorCeil : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorFloor : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorAbs : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorNegate : public RigUnit_MathVectorUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorMax : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorMin : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorMod : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorDiv : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorScale : public RigUnit_MathVectorBase
{
public:
	struct Vector Value;
	float Factor;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorMul : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorSub : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorAdd : public RigUnit_MathVectorBinaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MathVectorFromFloat : public RigUnit_MathVectorBase
{
public:
	float Value;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ModifyBoneTransforms_WorkData : public RigUnit_ModifyTransforms_WorkData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ModifyBoneTransforms : public RigUnit_HighlevelBaseMutable
{
public:
	TArray<struct RigUnit_ModifyBoneTransforms_PerBone> BoneToModify;
	float Weight;
	float WeightMinimum;
	float WeightMaximum;
	EControlRigModifyBoneMode Mode;
	struct RigUnit_ModifyBoneTransforms_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ModifyTransforms : public RigUnit_HighlevelBaseMutable
{
public:
	TArray<struct RigUnit_ModifyTransforms_PerItem> ItemToModify;
	float Weight;
	float WeightMinimum;
	float WeightMaximum;
	EControlRigModifyBoneMode Mode;
	struct RigUnit_ModifyTransforms_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MultiFABRIK : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName RootBone;
	TArray<struct RigUnit_MultiFABRIK_EndEffector> Effectors;
	float Precision;
	bool bPropagateToChildren;
	int MaxIterations;
	struct RigUnit_MultiFABRIK_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_NameBase : public RigUnit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Contains : public RigUnit_NameBase
{
public:
	struct FName Name;
	struct FName Search;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_StartsWith : public RigUnit_NameBase
{
public:
	struct FName Name;
	struct FName Start;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_EndsWith : public RigUnit_NameBase
{
public:
	struct FName Name;
	struct FName Ending;
	bool Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_NameReplace : public RigUnit_NameBase
{
public:
	struct FName Name;
	struct FName Old;
	struct FName New;
	struct FName Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_NameTruncate : public RigUnit_NameBase
{
public:
	struct FName Name;
	int Count;
	bool FromEnd;
	struct FName Remainder;
	struct FName Chopped;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_NameConcat : public RigUnit_NameBase
{
public:
	struct FName A;
	struct FName B;
	struct FName Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_NoiseVector : public RigUnit_MathBase
{
public:
	struct Vector Position;
	struct Vector Speed;
	struct Vector Frequency;
	float Minimum;
	float Maximum;
	struct Vector Result;
	struct Vector Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_NoiseFloat : public RigUnit_MathBase
{
public:
	float Value;
	float Speed;
	float Frequency;
	float Minimum;
	float Maximum;
	float Result;
	float Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_OffsetTransformForItem : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	struct Transform OffsetTransform;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ParentSwitchConstraint : public RigUnitMutable
{
public:
	struct RigElementKey Subject;
	int ParentIndex;
	struct RigElementKeyCollection Parents;
	struct Transform InitialGlobalTransform;
	float Weight;
	struct Transform Transform;
	bool Switched;
	struct CachedRigElement CachedSubject;
	struct CachedRigElement CachedParent;
	struct Transform RelativeOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SimBaseMutable : public RigUnitMutable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_PointSimulation : public RigUnit_SimBaseMutable
{
public:
	TArray<struct CRSimPoint> Points;
	TArray<struct CRSimLinearSpring> Links;
	TArray<struct CRSimPointForce> Forces;
	TArray<struct CRSimSoftCollision> CollisionVolumes;
	float SimulatedStepsPerSecond;
	ECRSimPointIntegrateType IntegratorType;
	float VerletBlend;
	TArray<struct RigUnit_PointSimulation_BoneTarget> BoneTargets;
	bool bLimitLocalPosition;
	bool bPropagateToChildren;
	struct Vector PrimaryAimAxis;
	struct Vector SecondaryAimAxis;
	struct RigUnit_PointSimulation_DebugSettings DebugSettings;
	struct CRFourPointBezier Bezier;
	struct RigUnit_PointSimulation_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_PrepareForExecution : public RigUnit
{
public:
	struct ControlRigExecuteContext ExecuteContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_EndProfilingTimer : public RigUnit_DebugBaseMutable
{
public:
	int NumberOfMeasurements;
	struct FString Prefix;
	float AccumulatedTime;
	int MeasurementsLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_StartProfilingTimer : public RigUnit_DebugBaseMutable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ProjectTransformToNewParent : public RigUnit
{
public:
	struct RigElementKey Child;
	bool bChildInitial;
	struct RigElementKey OldParent;
	bool bOldParentInitial;
	struct RigElementKey NewParent;
	bool bNewParentInitial;
	struct Transform Transform;
	struct CachedRigElement CachedChild;
	struct CachedRigElement CachedOldParent;
	struct CachedRigElement CachedNewParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_PropagateTransform : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	bool bRecomputeGlobal;
	bool bApplyToChildren;
	bool bRecursive;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_QuaternionToAngle : public RigUnit
{
public:
	struct Vector Axis;
	struct Quat Argument;
	float Angle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_QuaternionFromAxisAndAngle : public RigUnit
{
public:
	struct Vector Axis;
	float Angle;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_QuaternionToAxisAndAngle : public RigUnit
{
public:
	struct Quat Argument;
	struct Vector Axis;
	float Angle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_UnaryQuaternionOp : public RigUnit
{
public:
	struct Quat Argument;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_InverseQuaterion : public RigUnit_UnaryQuaternionOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BinaryQuaternionOp : public RigUnit
{
public:
	struct Quat Argument0;
	struct Quat Argument1;
	struct Quat Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MultiplyQuaternion : public RigUnit_BinaryQuaternionOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_RandomVector : public RigUnit_MathBase
{
public:
	int Seed;
	float Minimum;
	float Maximum;
	float Duration;
	struct Vector Result;
	struct Vector LastResult;
	int LastSeed;
	float TimeLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_RandomFloat : public RigUnit_MathBase
{
public:
	int Seed;
	float Minimum;
	float Maximum;
	float Duration;
	float Result;
	float LastResult;
	int LastSeed;
	float TimeLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SendEvent : public RigUnitMutable
{
public:
	ERigEvent Event;
	struct RigElementKey Item;
	float OffsetInSeconds;
	bool bEnable;
	bool bOnlyDuringInteraction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SequenceExecution : public RigUnit
{
public:
	struct ControlRigExecuteContext ExecuteContext;
	struct ControlRigExecuteContext A;
	struct ControlRigExecuteContext B;
	struct ControlRigExecuteContext C;
	struct ControlRigExecuteContext D;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetBoneInitialTransform : public RigUnitMutable
{
public:
	struct FName Bone;
	struct Transform Transform;
	struct Transform Result;
	EBoneGetterSetterMode Space;
	bool bPropagateToChildren;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetBoneRotation : public RigUnitMutable
{
public:
	struct FName Bone;
	struct Quat Rotation;
	EBoneGetterSetterMode Space;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetBoneTransform : public RigUnitMutable
{
public:
	struct FName Bone;
	struct Transform Transform;
	struct Transform Result;
	EBoneGetterSetterMode Space;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetBoneTranslation : public RigUnitMutable
{
public:
	struct FName Bone;
	struct Vector Translation;
	EBoneGetterSetterMode Space;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlColor : public RigUnitMutable
{
public:
	struct FName Control;
	struct LinearColor Color;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlOffset : public RigUnitMutable
{
public:
	struct FName Control;
	struct Transform Offset;
	EBoneGetterSetterMode Space;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlTransform : public RigUnitMutable
{
public:
	struct FName Control;
	float Weight;
	struct Transform Transform;
	EBoneGetterSetterMode Space;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetMultiControlRotator : public RigUnitMutable
{
public:
	TArray<struct RigUnit_SetMultiControlRotator_Entry> Entries;
	float Weight;
	TArray<struct CachedRigElement> CachedControlIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlRotator : public RigUnitMutable
{
public:
	struct FName Control;
	float Weight;
	struct Rotator Rotator;
	EBoneGetterSetterMode Space;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlVector : public RigUnitMutable
{
public:
	struct FName Control;
	float Weight;
	struct Vector Vector;
	EBoneGetterSetterMode Space;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetMultiControlVector2D : public RigUnitMutable
{
public:
	TArray<struct RigUnit_SetMultiControlVector2D_Entry> Entries;
	float Weight;
	TArray<struct CachedRigElement> CachedControlIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlVector2D : public RigUnitMutable
{
public:
	struct FName Control;
	float Weight;
	struct Vector2D Vector;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetMultiControlInteger : public RigUnitMutable
{
public:
	TArray<struct RigUnit_SetMultiControlInteger_Entry> Entries;
	float Weight;
	TArray<struct CachedRigElement> CachedControlIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlInteger : public RigUnitMutable
{
public:
	struct FName Control;
	int Weight;
	int IntegerValue;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetMultiControlFloat : public RigUnitMutable
{
public:
	TArray<struct RigUnit_SetMultiControlFloat_Entry> Entries;
	float Weight;
	TArray<struct CachedRigElement> CachedControlIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlFloat : public RigUnitMutable
{
public:
	struct FName Control;
	float Weight;
	float FloatValue;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetMultiControlBool : public RigUnitMutable
{
public:
	TArray<struct RigUnit_SetMultiControlBool_Entry> Entries;
	TArray<struct CachedRigElement> CachedControlIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlBool : public RigUnitMutable
{
public:
	struct FName Control;
	bool BoolValue;
	struct CachedRigElement CachedControlIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetControlVisibility : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	struct FString Pattern;
	bool bVisible;
	TArray<struct CachedRigElement> CachedControlIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetCurveValue : public RigUnitMutable
{
public:
	struct FName Curve;
	float Value;
	struct CachedRigElement CachedCurveIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetRelativeBoneTransform : public RigUnitMutable
{
public:
	struct FName Bone;
	struct FName Space;
	struct Transform Transform;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedBone;
	struct CachedRigElement CachedSpaceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetRelativeTransformForItem : public RigUnitMutable
{
public:
	struct RigElementKey Child;
	struct RigElementKey Parent;
	bool bParentInitial;
	struct Transform RelativeTransform;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedChild;
	struct CachedRigElement CachedParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetSpaceInitialTransform : public RigUnitMutable
{
public:
	struct FName SpaceName;
	struct Transform Transform;
	struct Transform Result;
	EBoneGetterSetterMode Space;
	struct CachedRigElement CachedSpaceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetSpaceTransform : public RigUnitMutable
{
public:
	struct FName Space;
	float Weight;
	struct Transform Transform;
	EBoneGetterSetterMode SpaceType;
	struct CachedRigElement CachedSpaceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetScale : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	EBoneGetterSetterMode Space;
	struct Vector Scale;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetRotation : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	EBoneGetterSetterMode Space;
	struct Quat Rotation;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetTranslation : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	EBoneGetterSetterMode Space;
	struct Vector Translation;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SetTransform : public RigUnitMutable
{
public:
	struct RigElementKey Item;
	EBoneGetterSetterMode Space;
	bool bInitial;
	struct Transform Transform;
	float Weight;
	bool bPropagateToChildren;
	struct CachedRigElement CachedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SlideChainPerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKeyCollection Items;
	float SlideAmount;
	bool bPropagateToChildren;
	struct RigUnit_SlideChain_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SlideChain : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EndBone;
	float SlideAmount;
	bool bPropagateToChildren;
	struct RigUnit_SlideChain_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SpringIK : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EndBone;
	float HierarchyStrength;
	float EffectorStrength;
	float EffectorRatio;
	float RootStrength;
	float RootRatio;
	float Damping;
	struct Vector PoleVector;
	bool bFlipPolePlane;
	EControlRigVectorKind PoleVectorKind;
	struct FName PoleVectorSpace;
	struct Vector PrimaryAxis;
	struct Vector SecondaryAxis;
	bool bLiveSimulation;
	int Iterations;
	bool bLimitLocalPosition;
	bool bPropagateToChildren;
	struct RigUnit_SpringIK_DebugSettings DebugSettings;
	struct RigUnit_SpringIK_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SecondsToFrames : public RigUnit_AnimBase
{
public:
	float Seconds;
	float Frames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_FramesToSeconds : public RigUnit_AnimBase
{
public:
	float Frames;
	float Seconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Timeline : public RigUnit_SimBase
{
public:
	float Speed;
	float Time;
	float AccumulatedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TimeOffsetTransform : public RigUnit_SimBase
{
public:
	struct Transform Value;
	float SecondsAgo;
	int BufferSize;
	float TimeRange;
	struct Transform Result;
	TArray<struct Transform> Buffer;
	TArray<float> DeltaTimes;
	int LastInsertIndex;
	int UpperBound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TimeOffsetVector : public RigUnit_SimBase
{
public:
	struct Vector Value;
	float SecondsAgo;
	int BufferSize;
	float TimeRange;
	struct Vector Result;
	TArray<struct Vector> Buffer;
	TArray<float> DeltaTimes;
	int LastInsertIndex;
	int UpperBound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TimeOffsetFloat : public RigUnit_SimBase
{
public:
	float Value;
	float SecondsAgo;
	int BufferSize;
	float TimeRange;
	float Result;
	TArray<float> Buffer;
	TArray<float> DeltaTimes;
	int LastInsertIndex;
	int UpperBound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BinaryTransformOp : public RigUnit
{
public:
	struct Transform Argument0;
	struct Transform Argument1;
	struct Transform Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_GetRelativeTransform : public RigUnit_BinaryTransformOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_MultiplyTransform : public RigUnit_BinaryTransformOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TransformConstraintPerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKey Item;
	ETransformSpaceMode BaseTransformSpace;
	struct Transform BaseTransform;
	struct RigElementKey BaseItem;
	TArray<struct ConstraintTarget> Targets;
	bool bUseInitialTransforms;
	struct RigUnit_TransformConstraint_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TransformConstraint : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName Bone;
	ETransformSpaceMode BaseTransformSpace;
	struct Transform BaseTransform;
	struct FName BaseBone;
	TArray<struct ConstraintTarget> Targets;
	bool bUseInitialTransforms;
	struct RigUnit_TransformConstraint_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwistBonesPerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKeyCollection Items;
	struct Vector TwistAxis;
	struct Vector PoleAxis;
	EControlRigAnimEasingType TwistEaseType;
	float Weight;
	bool bPropagateToChildren;
	struct RigUnit_TwistBones_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwistBones : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName StartBone;
	struct FName EndBone;
	struct Vector TwistAxis;
	struct Vector PoleAxis;
	EControlRigAnimEasingType TwistEaseType;
	float Weight;
	bool bPropagateToChildren;
	struct RigUnit_TwistBones_WorkData WorkData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwoBoneIKFK : public RigUnitMutable
{
public:
	struct FName StartJoint;
	struct FName EndJoint;
	struct Vector PoleTarget;
	float Spin;
	struct Transform EndEffector;
	float IKBlend;
	struct Transform StartJointFKTransform;
	struct Transform MidJointFKTransform;
	struct Transform EndJointFKTransform;
	float PreviousFKIKBlend;
	struct Transform StartJointIKTransform;
	struct Transform MidJointIKTransform;
	struct Transform EndJointIKTransform;
	int StartJointIndex;
	int MidJointIndex;
	int EndJointIndex;
	float UpperLimbLength;
	float LowerLimbLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwoBoneIKSimpleTransforms : public RigUnit_HighlevelBase
{
public:
	struct Transform Root;
	struct Vector PoleVector;
	struct Transform Effector;
	struct Vector PrimaryAxis;
	struct Vector SecondaryAxis;
	float SecondaryAxisWeight;
	bool bEnableStretch;
	float StretchStartRatio;
	float StretchMaximumRatio;
	float BoneALength;
	float BoneBLength;
	struct Transform Elbow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwoBoneIKSimpleVectors : public RigUnit_HighlevelBase
{
public:
	struct Vector Root;
	struct Vector PoleVector;
	struct Vector Effector;
	bool bEnableStretch;
	float StretchStartRatio;
	float StretchMaximumRatio;
	float BoneALength;
	float BoneBLength;
	struct Vector Elbow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwoBoneIKSimplePerItem : public RigUnit_HighlevelBaseMutable
{
public:
	struct RigElementKey ItemA;
	struct RigElementKey ItemB;
	struct RigElementKey EffectorItem;
	struct Transform Effector;
	struct Vector PrimaryAxis;
	struct Vector SecondaryAxis;
	float SecondaryAxisWeight;
	struct Vector PoleVector;
	EControlRigVectorKind PoleVectorKind;
	struct RigElementKey PoleVectorSpace;
	bool bEnableStretch;
	float StretchStartRatio;
	float StretchMaximumRatio;
	float Weight;
	float ItemALength;
	float ItemBLength;
	bool bPropagateToChildren;
	struct RigUnit_TwoBoneIKSimple_DebugSettings DebugSettings;
	struct CachedRigElement CachedItemAIndex;
	struct CachedRigElement CachedItemBIndex;
	struct CachedRigElement CachedEffectorItemIndex;
	struct CachedRigElement CachedPoleVectorSpaceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_TwoBoneIKSimple : public RigUnit_HighlevelBaseMutable
{
public:
	struct FName BoneA;
	struct FName BoneB;
	struct FName EffectorBone;
	struct Transform Effector;
	struct Vector PrimaryAxis;
	struct Vector SecondaryAxis;
	float SecondaryAxisWeight;
	struct Vector PoleVector;
	EControlRigVectorKind PoleVectorKind;
	struct FName PoleVectorSpace;
	bool bEnableStretch;
	float StretchStartRatio;
	float StretchMaximumRatio;
	float Weight;
	float BoneALength;
	float BoneBLength;
	bool bPropagateToChildren;
	struct RigUnit_TwoBoneIKSimple_DebugSettings DebugSettings;
	struct CachedRigElement CachedBoneAIndex;
	struct CachedRigElement CachedBoneBIndex;
	struct CachedRigElement CachedEffectorBoneIndex;
	struct CachedRigElement CachedPoleVectorSpaceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Distance_VectorVector : public RigUnit
{
public:
	struct Vector Argument0;
	struct Vector Argument1;
	float Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_BinaryVectorOp : public RigUnit
{
public:
	struct Vector Argument0;
	struct Vector Argument1;
	struct Vector Result;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Divide_VectorVector : public RigUnit_BinaryVectorOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Subtract_VectorVector : public RigUnit_BinaryVectorOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Add_VectorVector : public RigUnit_BinaryVectorOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_Multiply_VectorVector : public RigUnit_BinaryVectorOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VerletIntegrateVector : public RigUnit_SimBase
{
public:
	struct Vector Target;
	float Strength;
	float Damp;
	float Blend;
	struct Vector Position;
	struct Vector Velocity;
	struct Vector Acceleration;
	struct CRSimPoint Point;
	bool bInitialized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VisualDebugTransformItemSpace : public RigUnit_DebugBase
{
public:
	struct Transform Value;
	bool bEnabled;
	float Thickness;
	float Scale;
	struct RigElementKey Space;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VisualDebugTransform : public RigUnit_DebugBase
{
public:
	struct Transform Value;
	bool bEnabled;
	float Thickness;
	float Scale;
	struct FName BoneSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VisualDebugQuatItemSpace : public RigUnit_DebugBase
{
public:
	struct Quat Value;
	bool bEnabled;
	float Thickness;
	float Scale;
	struct RigElementKey Space;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VisualDebugQuat : public RigUnit_DebugBase
{
public:
	struct Quat Value;
	bool bEnabled;
	float Thickness;
	float Scale;
	struct FName BoneSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VisualDebugVectorItemSpace : public RigUnit_DebugBase
{
public:
	struct Vector Value;
	bool bEnabled;
	ERigUnitVisualDebugPointMode Mode;
	struct LinearColor Color;
	float Thickness;
	float Scale;
	struct RigElementKey Space;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_VisualDebugVector : public RigUnit_DebugBase
{
public:
	struct Vector Value;
	bool bEnabled;
	ERigUnitVisualDebugPointMode Mode;
	struct LinearColor Color;
	float Thickness;
	float Scale;
	struct FName BoneSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_SphereTraceWorld : public RigUnit
{
public:
	struct Vector Start;
	struct Vector End;
	ECollisionChannel Channel;
	float Radius;
	bool bHit;
	struct Vector HitLocation;
	struct Vector HitNormal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToRigSpace_Rotation : public RigUnit
{
public:
	struct Quat Rotation;
	struct Quat Global;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToWorldSpace_Rotation : public RigUnit
{
public:
	struct Quat Rotation;
	struct Quat World;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToRigSpace_Location : public RigUnit
{
public:
	struct Vector Location;
	struct Vector Global;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToWorldSpace_Location : public RigUnit
{
public:
	struct Vector Location;
	struct Vector World;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToRigSpace_Transform : public RigUnit
{
public:
	struct Transform Transform;
	struct Transform Global;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigUnit_ToWorldSpace_Transform : public RigUnit
{
public:
	struct Transform Transform;
	struct Transform World;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlRig : public UObject
{
public:
	ERigExecutionType ExecutionType;
	class UClass* VM;
	struct RigHierarchyContainer Hierarchy;
	struct TSoftClassPtr<UObject> GizmoLibrary;
	Unknown InputProperties;
	Unknown OutputProperties;
	struct ControlRigDrawContainer DrawContainer;
	class UClass* DataSourceRegistry;
	TArray<struct FName> EventQueue;
	struct RigInfluenceMapPerEvent Influences;
	class UClass* InteractionRig;
	class UClass* InteractionRigClass;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAdditiveControlRig : public UControlRig
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigAnimInstance : public AnimInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigBlueprintGeneratedClass : public BlueprintGeneratedClass
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigComponent : public PrimitiveComponent
{
public:
	class UClass* ControlRigClass;
	struct FScriptMulticastDelegate OnPostInitializeDelegate;
	struct FScriptMulticastDelegate OnPreSetupDelegate;
	struct FScriptMulticastDelegate OnPostSetupDelegate;
	struct FScriptMulticastDelegate OnPreUpdateDelegate;
	struct FScriptMulticastDelegate OnPostUpdateDelegate;
	TArray<struct ControlRigComponentMappedElement> MappedElements;
	bool bResetTransformBeforeTick;
	bool bResetInitialsBeforeSetup;
	bool bUpdateRigOnTick;
	bool bUpdateInEditor;
	bool bDrawBones;
	class UClass* ControlRig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AControlRigControlActor : public AActor
{
public:
	class UClass* ActorToTrack;
	class UClass* ControlRigClass;
	bool bRefreshOnTick;
	bool bIsSelectable;
	class UClass* MaterialOverride;
	struct FString ColorParameter;
	bool bCastShadows;
	class UClass* ActorRootComponent;
	class UClass* ControlRig;
	TArray<struct FName> ControlNames;
	TArray<struct Transform> GizmoTransforms;
	TArray<class UClass*> Components;
	TArray<class UClass*> Materials;
	struct FName ColorParameterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AControlRigGizmoActor : public AActor
{
public:
	class UClass* ActorRootComponent;
	class UClass* StaticMeshComponent;
	uint32_t ControlRigIndex;
	struct FName ControlName;
	struct FName ColorParameterName;
	bool bEnabled;
	bool bSelected;
	bool bSelectable;
	bool bHovered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlRigGizmoLibrary : public UObject
{
public:
	struct ControlRigGizmoDefinition DefaultGizmo;
	struct TSoftClassPtr<UObject> DefaultMaterial;
	struct FName MaterialColorParameter;
	TArray<struct ControlRigGizmoDefinition> Gizmos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigLayerInstance : public AnimInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlRigValidationPass : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlRigNumericalValidationPass : public UControlRigValidationPass
{
public:
	bool bCheckControls;
	bool bCheckBones;
	bool bCheckCurves;
	float TranslationPrecision;
	float RotationPrecision;
	float ScalePrecision;
	float CurvePrecision;
	struct FName EventNameA;
	struct FName EventNameB;
	struct RigPose Pose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlRigObjectHolder : public UObject
{
public:
	TArray<class UClass*> Objects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigSequence : public LevelSequence
{
public:
	struct TSoftClassPtr<UObject> LastExportedToAnimationSequence;
	struct TSoftClassPtr<UObject> LastExportedUsingSkeletalMesh;
	float LastExportedFrameRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigSequencerAnimInstance : public AnimSequencerInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlRigSettings : public DeveloperSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlRigValidator : public UObject
{
public:
	TArray<class UClass*> Passes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFKControlRig : public UControlRig
{
public:
	TArray<bool> IsControlActive;
	EControlRigFKRigExecuteMode ApplyMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneControlRigParameterSection : public MovieSceneParameterSection
{
public:
	class UClass* ControlRig;
	class UClass* ControlRigClass;
	TArray<bool> ControlsMask;
	struct MovieSceneTransformMask TransformMask;
	struct MovieSceneFloatChannel Weight;
	Unknown ControlChannelMap;
	TArray<struct EnumParameterNameAndCurve> EnumParameterNamesAndCurves;
	TArray<struct IntegerParameterNameAndCurve> IntegerParameterNamesAndCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneControlRigParameterTrack : public MovieSceneNameableTrack
{
public:
	class UClass* ControlRig;
	class UClass* SectionToKey;
	TArray<class UClass*> Sections;
	struct FName TrackName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Plane : public Vector
{
public:
	float W;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SoftClassPath : public SoftObjectPath
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterface : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPackage : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UField : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStruct : public UField
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClass : public UStruct
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGCObjectReferencer : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextBuffer : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScriptStruct : public UStruct
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFunction : public UStruct
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDelegateFunction : public UFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USparseDelegateFunction : public UDelegateFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicClass : public UClass
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPackageMap : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnum : public UField
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULinkerPlaceholderClass : public UClass
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULinkerPlaceholderExportObject : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULinkerPlaceholderFunction : public UFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMetaData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectRedirector : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProperty : public UField
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnumProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UArrayProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectPropertyBase : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoolProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNumericProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UByteProperty : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectProperty : public UObjectPropertyBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClassProperty : public UObjectProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDelegateProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDoubleProperty : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFloatProperty : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIntProperty : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInt8Property : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInt16Property : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInt64Property : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterfaceProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULazyObjectProperty : public UObjectPropertyBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMapProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMulticastDelegateProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMulticastInlineDelegateProperty : public UMulticastDelegateProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMulticastSparseDelegateProperty : public UMulticastDelegateProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNameProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USetProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoftObjectProperty : public UObjectPropertyBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoftClassProperty : public USoftObjectProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStrProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStructProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUInt16Property : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUInt32Property : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUInt64Property : public UNumericProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWeakObjectProperty : public UObjectPropertyBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextProperty : public UProperty
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPropertyWrapper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMulticastDelegatePropertyWrapper : public UPropertyWrapper
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMulticastInlineDelegatePropertyWrapper : public UMulticastDelegatePropertyWrapper
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CraftingIngredientUIData : public TableRowBase
{
public:
	struct GameplayTagContainer IngredientTags;
	TArray<struct TSoftClassPtr<UObject>> ItemDefs;
	TArray<struct TSoftClassPtr<UObject>> Icons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CraftingFormula : public TableRowBase
{
public:
	struct FText DisplayName;
	bool bEnabled;
	bool bAlwaysKnownFormula;
	bool bInstantlyConsumeIngredients;
	struct GameplayTag SourceObjectTag;
	TArray<struct CraftingIngredientRequirement> RequiredIngredients;
	struct FName ResultLootTierKey;
	struct TSoftClassPtr<UObject> WhileCraftingAbility;
	TArray<struct CraftingUpgradeRule> UpgradeRules;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CraftingCheatManager : public ChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CraftingLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CraftingObjectBGA : public BuildingGameplayActor
{
public:
	class UClass* Inventory;
	class UClass* SphereComponent_InteractionRange;
	struct TSoftClassPtr<UObject> MenuWidget;
	class UClass* WidgetComponent_PotContents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CraftingObjectComponent : public GameFrameworkComponent
{
public:
	struct FScriptMulticastDelegate CraftingObjectStateChanged;
	struct FScriptMulticastDelegate OnFormulaCraftableChanged;
	struct FScriptMulticastDelegate OnCraftingSuccess;
	struct CraftingObjectRepStateData CraftingObjectRepStateData;
	struct FName CraftingFormulaRow;
	Unknown CraftingInstigator;
	TArray<struct FortItemEntry> AllOfTheIngredientItems;
	TArray<int> NonConsumedIngredientItemIndices;
	struct FString LastIngredientStringForAnalytics;
	struct FString LastFormulaStringForAnalytics;
	struct FString LastResultsStringForAnalytics;
	TArray<struct ItemAndCount> CraftingResults;
	struct GameplayAbilitySpecHandle WhileCraftingAbilitySpecHandle;
	struct GameplayAbilitySpecHandle OwnerCraftingAbilitySpecHandle;
	struct GameplayTag CraftingObjectTag;
	struct ScalableFloat CraftingTimeLength;
	struct ScalableFloat ReadyTimeLength;
	struct ScalableFloat OverCraftingTimeLength;
	struct ScalableFloat ResettingTimeLength;
	struct FName OverCraftingLootTierKey;
	bool bTakeItemsAtCraftingStart;
	bool bGiveIngredientsToCraftingObject;
	bool bGiveIngredientsToInstigator;
	struct Vector IngredientSpawnOffset;
	bool bGiveToCraftingObject;
	bool bGiveResultToInstigator;
	struct TSoftClassPtr<UObject> OwnerCraftingAbility;
	struct GameplayTagContainer CraftingFailedTags;
	class UClass* PendingPickupCraftingItem;
	struct FName PendingPickupCraftingFormula;
	struct FortItemEntry PendingPickupCraftingItemEntry;
	int PendingPickupHeldCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortContextualTutorial_CraftingComplete : public FortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortContextualTutorial_CraftingReady : public FortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortContextualTutorial_CraftingTabOpen : public FortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_CraftingNetworkEvents : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate OnCraftingSuccess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_Crafting : public FortGameStateComponent
{
public:
	struct DataRegistryType CraftingFormulaRegistryType;
	struct DataRegistryType CraftingIngredientsUIDataRegistryType;
	TArray<struct CraftingResult> CraftingResultsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPickupInteractOverrideComponent_Crafting : public FortPickupInteractOverrideComponent
{
public:
	class UClass* LastPickupItemDef;
	class UClass* LastFocusedItemDef;
	struct FName LastTargetFormulaName;
	float ContextualCraftingInteractDuration;
	ETInteractionType CachedInteractionType;
	EInteractionBeingAttempted CachedInteractionBeingAttempted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCraftingQuickBarButton : public AthenaQuickBarSlotButtonBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEquippedItemCraftingIndicator : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryItemInfoCraftingIndicator : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuickBarSlotCraftingIndicator : public AthenaQuickBarSlotExtensionWidgetBase
{
public:
	bool bCheckForIngredientChangesWhenCraftable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCookingScreen : public CommonActivatableWidget
{
public:
	struct DataTableRowHandle CloseInputAction;
	class UClass* Button_EjectAll;
	class UClass* Button_Cancel;
	class UClass* Text_RecipeName;
	class UClass* Text_RecipeDescription;
	class UClass* Image_Recipe;
	class UClass* RadialMenu_Recipes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCraftingFormulaIngredientsWidget : public CommonUserWidget
{
public:
	class UClass* EntryBox_Ingredients;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCraftingIngredientWidget : public CommonUserWidget
{
public:
	class UClass* Text_NumAvailable;
	class UClass* Text_NumRequired;
	class UClass* ItemIcon;
	class UClass* LazyImage_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCraftingItemInfoWidget : public CommonActivatableWidget
{
public:
	struct FText RarityTextFormat;
	class UClass* Text_ItemName;
	class UClass* Text_ItemRarity;
	class UClass* Text_ItemCategory;
	class UClass* ItemCategoryIndicator;
	class UClass* Text_ItemDescription;
	class UClass* ItemStatsWidget;
	class UClass* IngredientsWidget;
	class UClass* Button_StartCrafting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCraftingListEntry : public CommonButtonLegacy
{
public:
	class UClass* ItemIcon;
	bool bCanCraftItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCraftingListItem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCraftingTab : public CommonActivatableWidget
{
public:
	struct FName TabNameID;
	struct FortTabButtonLabelInfo TabButtonLabelInfo;
	struct GameplayTagContainer PrimaryIngredientTags;
	class UClass* CraftingItemInfo;
	class UClass* ListView_Recipes;
	class UClass* QuickbarEditor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPotContentsPopup : public UserWidget
{
public:
	int MaxItemsToShow;
	class UClass* TileView_PotContents;
	class UClass* Text_MoreItems;
	class UClass* Overlay_Popup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPotContentsTile : public CommonButtonLegacy
{
public:
	class UClass* Image_Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CurieEntityStateDefinitionBase : public TableRowBase
{
public:
	class UClass* StateBehaviorClass;
	bool bIsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CurieElementDefinitionBase : public TableRowBase
{
public:
	TArray<class UClass*> ElementAttachHandlers;
	class UClass* ElementAttachConditionHandler;
	TArray<class UClass*> ElementInteractHandlers;
	TArray<class UClass*> ElementMaterialInteractHandlers;
	TArray<class UClass*> ElementContainerInteractHandlers;
	struct GameplayTagContainer ElementalImmunities;
	bool bIsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CurieMaterialDefinitionBase : public TableRowBase
{
public:
	struct GameplayTagContainer ElementalImmunities;
	struct GameplayTagContainer ElementAttachmentImmunities;
	struct GameplayTagContainer ElementsAllowedWhenCannotBeDamaged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CurieComponent : public ActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementBehavior : public UObject
{
public:
	TArray<struct CurieEffectContainer> OnBeginAttachmentEffects;
	TArray<struct CurieEffectContainer> OngoingAttachmentEffects;
	TArray<struct CurieEffectContainer> OnEndAttachmentEffects;
	TArray<struct CurieEffectContainer> OnInstantInteractionEffects;
	TArray<struct CurieEffectContainer> OnBeginInteractionEffects;
	TArray<struct CurieEffectContainer> OngoingInteractionEffects;
	TArray<struct CurieEffectContainer> OnEndInteractionEffects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieEntityStateBehavior : public UObject
{
public:
	struct GameplayTagContainer RequiredAttachedElements;
	struct GameplayTagContainer RequiredInteractingElements;
	struct GameplayTagContainer AllowedAttachmentEntityTypes;
	TArray<struct CurieEffectContainer> OnBeginEffects;
	TArray<struct CurieEffectContainer> OngoingEffects;
	TArray<struct CurieEffectContainer> OnEndEffects;
	bool bShouldDetach;
	bool bSkipExecuteAttachDetach;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieGlobals : public UObject
{
public:
	bool bEnableCurie;
	struct SoftClassPath CurieGlobalsClassName;
	class UClass* RegisteredCurieManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementInteractWithElementHandler : public UObject
{
public:
	ECurieHandlerPriority HandlerPriority;
	ECurieHandlerBehavior HandlerBehavior;
	struct GameplayTag ElementTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementInteractWithMaterialHandler : public UObject
{
public:
	ECurieHandlerPriority HandlerPriority;
	ECurieHandlerBehavior HandlerBehavior;
	struct GameplayTag ElementTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementGameplayEffectOwner : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementAttachHandler : public UCurieElementGameplayEffectOwner
{
public:
	ECurieHandlerPriority HandlerPriority;
	ECurieHandlerBehavior HandlerBehavior;
	struct GameplayTag ElementTag;
	TArray<struct CurieEffectContainer> OnBeginAttachmentEffects;
	TArray<struct CurieEffectContainer> OngoingAttachmentEffects;
	TArray<struct CurieEffectContainer> OnEndAttachmentEffects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementAttachConditionHandler : public UObject
{
public:
	ECurieHandlerPriority HandlerPriority;
	struct GameplayTag ElementTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieElementInteractWithContainerHandler : public UCurieElementGameplayEffectOwner
{
public:
	ECurieHandlerPriority HandlerPriority;
	ECurieHandlerBehavior HandlerBehavior;
	struct GameplayTag ElementTag;
	TArray<struct CurieEffectContainer> OnInstantInteractionEffects;
	TArray<struct CurieEffectContainer> OnBeginInteractionEffects;
	TArray<struct CurieEffectContainer> OngoingInteractionEffects;
	TArray<struct CurieEffectContainer> OnEndInteractionEffects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurieInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CurieManager : public GameStateComponent
{
public:
	class UClass* CurieComponentClass;
	struct FName MaterialDataRegistryName;
	struct FName ElementDataRegistryName;
	struct FName EntityStateDataRegistryName;
	class UClass* MaterialDefinitionsTable;
	class UClass* ElementDefinitionsTable;
	class UClass* EntityStateDefinitionsTable;
	Unknown ElementAttachmentHandlers;
	Unknown ElementAttachmentConditionHandlers;
	Unknown ElementInteractWithElementHandlers;
	Unknown ElementInteractWithMaterialHandlers;
	Unknown ElementInteractWithContainerHandlers;
	bool bUseDataRegistry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryManager : public UObject
{
public:
	struct DateTime LastUpdateCheck;
	bool bUpdateCheckPending;
	uint32_t UpdateCheckLimitSeconds;
	bool bEnabled;
	bool bFailOnError;
	bool bAnalyticsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryPatcher : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectorySimpleObject : public UObject
{
public:
	int IntProperty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryTestPODAsset : public UObject
{
public:
	struct FString AssetName;
	EDataAssetDirectoryTestEnum EnumProperty;
	int IntProperty;
	float FloatProperty;
	bool BoolProperty;
	struct FString StringProperty;
	struct FName NameProperty;
	struct FText TextProperty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryTestStructAsset : public UObject
{
public:
	struct DataAssetDirectoryTestPODStruct TestStruct;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryTestArrayAsset : public UObject
{
public:
	TArray<int> IntArray;
	TArray<struct DataAssetDirectoryTestSimpleStruct> SimpleStructArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryTestObjectAsset : public UObject
{
public:
	class UClass* SimpleObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAssetDirectoryTestMapAsset : public UObject
{
public:
	Unknown StringIntMap;
	Unknown ShrinkStringIntMap;
	Unknown GrowStringIntMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataRegistry : public UObject
{
public:
	struct FName RegistryType;
	struct DataRegistryIdFormat IdFormat;
	class UClass* ItemStruct;
	TArray<class UClass*> DataSources;
	TArray<class UClass*> RuntimeSources;
	float TimerUpdateFrequency;
	struct DataRegistryCachePolicy DefaultCachePolicy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DataRegistrySettings : public DeveloperSettings
{
public:
	TArray<struct DirectoryPath> DirectoriesToScan;
	bool bInitializeAllLoadedRegistries;
	bool bIgnoreMissingCookedAssetRegistryData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataRegistrySource : public UObject
{
public:
	class UClass* ParentSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMetaDataRegistrySource : public UDataRegistrySource
{
public:
	EMetaDataRegistrySourceAssetUsage AssetUsage;
	struct AssetManagerSearchRules SearchRules;
	Unknown RuntimeChildren;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataRegistrySource_CurveTable : public UDataRegistrySource
{
public:
	struct TSoftClassPtr<UObject> SourceTable;
	struct DataRegistrySource_DataTableRules TableRules;
	class UClass* CachedTable;
	class UClass* PreloadTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMetaDataRegistrySource_CurveTable : public UMetaDataRegistrySource
{
public:
	class UClass* CreatedSource;
	struct DataRegistrySource_DataTableRules TableRules;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataRegistrySource_DataTable : public UDataRegistrySource
{
public:
	struct TSoftClassPtr<UObject> SourceTable;
	struct DataRegistrySource_DataTableRules TableRules;
	class UClass* CachedTable;
	class UClass* PreloadTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMetaDataRegistrySource_DataTable : public UMetaDataRegistrySource
{
public:
	class UClass* CreatedSource;
	struct DataRegistrySource_DataTableRules TableRules;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DataRegistrySubsystem : public EngineSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeveloperSettings : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDiscordRuntimeSettings : public UObject
{
public:
	bool bEnableJoinSecrets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DLSSLibrary : public BlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDLSSOverrideSettings : public UObject
{
public:
	EDLSSSettingOverride EnableDLSSInEditorViewportsOverride;
	EDLSSSettingOverride EnableScreenpercentageManipulationInDLSSEditorViewportsOverride;
	EDLSSSettingOverride EnableDLSSInPlayInEditorViewportsOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDLSSSettings : public UObject
{
public:
	uint32_t NVIDIANGXApplicationId;
	struct FString ProductionBinariesPath;
	bool bProductionBinariesExists;
	struct FString NonProductionBinariesPath;
	bool bNonProductionBinariesExists;
	bool bEnableNonProductionBinariesInShipping;
	bool bEnableDLSSD3D12;
	bool bEnableDLSSD3D11;
	bool bEnableDLSSVulkan;
	bool bEnableDLSSInEditorViewports;
	bool bEnableScreenpercentageManipulationInDLSSEditorViewports;
	bool bEnableDLSSInPlayInEditorViewports;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintOverrideBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADynamicHUDDirectorBase : public AActor
{
public:
	TArray<class UClass*> DefaultScenes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintBase : public UObject
{
public:
	class UClass* ConstraintOverride;
	bool bUseOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintPosition : public UDynamicHUDConstraintBase
{
public:
	struct Vector2D Position;
	EDynamicHUDAnchor Anchor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintAlignment : public UDynamicHUDConstraintBase
{
public:
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	EDynamicHUDAnchor Anchor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintWidget : public UDynamicHUDConstraintBase
{
public:
	EDynamicHUDAnchor Anchor;
	struct TSoftClassPtr<UObject> TargetWidget;
	struct FName TargetUniqueID;
	EDynamicHUDAnchor TargetAnchor;
	EDynamicHUDStrength Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintComparison : public UDynamicHUDConstraintBase
{
public:
	EDynamicHUDSide Side;
	float Offset;
	EDynamicHUDComparison Comparison;
	struct TSoftClassPtr<UObject> TargetWidget;
	struct FName TargetUniqueID;
	EDynamicHUDSide TargetSide;
	float TargetOffset;
	EDynamicHUDStrength Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicHUDConstraintEquation : public UDynamicHUDConstraintBase
{
public:
	EDynamicHUDSide Side;
	EDynamicHUDOperator Operator;
	struct TSoftClassPtr<UObject> TargetWidget;
	struct FName TargetUniqueID;
	EDynamicHUDSide TargetSide;
	EDynamicHUDComparison Comparison;
	float Result;
	EDynamicHUDStrength Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DynamicHUDManager : public WorldSubsystem
{
public:
	Unknown ActiveScenes;
	Unknown ActiveDirectors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DynamicHUDScene : public DataAsset
{
public:
	TArray<struct DynamicHUDAllowed> Allowed;
	TArray<struct DynamicHUDUnallowed> Unallowed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DynamicHUDVisualizerWidget : public UserWidget
{
public:
	TArray<class UClass*> Scenes;
	bool bRefresh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EasyAntiCheatNetComponent : public ActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AdaptorTriangleID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableMeshAdapter : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGeometryCollectionAdapter : public UEditableMeshAdapter
{
public:
	class UClass* GeometryCollection;
	class UClass* OriginalGeometryCollection;
	int GeometryCollectionLODIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableMesh : public UObject
{
public:
	TArray<class UClass*> Adapters;
	int TextureCoordinateCount;
	int PendingCompactCounter;
	int SubdivisionCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableMeshFactory : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableStaticMeshAdapter : public UEditableMeshAdapter
{
public:
	class UClass* StaticMesh;
	class UClass* OriginalStaticMesh;
	int StaticMeshLODIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConsoleSettings : public UObject
{
public:
	int MaxScrollbackSize;
	TArray<struct AutoCompleteCommand> ManualAutoCompleteList;
	TArray<struct FString> AutoCompleteMapPaths;
	float BackgroundOpacityPercentage;
	bool bOrderTopToBottom;
	bool bDisplayHelpInAutoComplete;
	struct Color InputColor;
	struct Color HistoryColor;
	struct Color AutoCompleteCommandColor;
	struct Color AutoCompleteCVarColor;
	struct Color AutoCompleteFadedColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameMapsSettings : public UObject
{
public:
	struct FString LocalMapOptions;
	struct SoftObjectPath TransitionMap;
	bool bUseSplitscreen;
	ETwoPlayerSplitScreenType TwoPlayerSplitscreenLayout;
	EThreePlayerSplitScreenType ThreePlayerSplitscreenLayout;
	EFourPlayerSplitScreenType FourPlayerSplitscreenLayout;
	bool bOffsetPlayerGamepadIds;
	struct SoftClassPath GameInstanceClass;
	struct SoftObjectPath GameDefaultMap;
	struct SoftObjectPath ServerDefaultMap;
	struct SoftClassPath GlobalDefaultGameMode;
	struct SoftClassPath GlobalDefaultServerGameMode;
	TArray<struct GameModeName> GameModeMapPrefixes;
	TArray<struct GameModeName> GameModeClassAliases;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameNetworkManagerSettings : public UObject
{
public:
	int MinDynamicBandwidth;
	int MaxDynamicBandwidth;
	int TotalNetBandwidth;
	int BadPingThreshold;
	bool bIsStandbyCheckingEnabled;
	float StandbyRxCheatTime;
	float StandbyTxCheatTime;
	float PercentMissingForRxStandby;
	float PercentMissingForTxStandby;
	float PercentForBadPing;
	float JoinInProgressStandbyWaitTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameSessionSettings : public UObject
{
public:
	int MaxSpectators;
	int MaxPlayers;
	bool bRequiresPushToTalk;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGeneralEngineSettings : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGeneralProjectSettings : public UObject
{
public:
	struct FString CompanyName;
	struct FString CompanyDistinguishedName;
	struct FString CopyrightNotice;
	struct FString Description;
	struct FString Homepage;
	struct FString LicensingTerms;
	struct FString PrivacyPolicy;
	struct Guid ProjectID;
	struct FString ProjectName;
	struct FString ProjectVersion;
	struct FString SupportContact;
	struct FText ProjectDisplayedTitle;
	struct FText ProjectDebugTitleInfo;
	bool bShouldWindowPreserveAspectRatio;
	bool bUseBorderlessWindow;
	bool bStartInVR;
	bool bAllowWindowResize;
	bool bAllowClose;
	bool bAllowMaximize;
	bool bAllowMinimize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHudSettings : public UObject
{
public:
	bool bShowHUD;
	TArray<struct FName> DebugDisplay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActorComponentTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActorTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class Vector_NetQuantize100 : public Vector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UniqueNetIdRepl : public UniqueNetIdWrapper
{
public:
	TArray<byte> ReplicationBytes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BodyInstance : public BodyInstanceCore
{
public:
	ECollisionChannel ObjectType;
	ECollisionEnabled CollisionEnabled;
	ESleepFamily SleepFamily;
	EDOFMode DOFMode;
	bool bUseCCD;
	bool bIgnoreAnalyticCollisions;
	bool bNotifyRigidBodyCollision;
	bool bLockTranslation;
	bool bLockRotation;
	bool bLockXTranslation;
	bool bLockYTranslation;
	bool bLockZTranslation;
	bool bLockXRotation;
	bool bLockYRotation;
	bool bLockZRotation;
	bool bOverrideMaxAngularVelocity;
	bool bOverrideMaxDepenetrationVelocity;
	bool bOverrideWalkableSlopeOnInstance;
	bool bInterpolateWhenSubStepping;
	struct FName CollisionProfileName;
	byte PositionSolverIterationCount;
	byte VelocitySolverIterationCount;
	struct CollisionResponse CollisionResponses;
	float MaxDepenetrationVelocity;
	float MassInKgOverride;
	float LinearDamping;
	float AngularDamping;
	struct Vector CustomDOFPlaneNormal;
	struct Vector COMNudge;
	float MassScale;
	struct Vector InertiaTensorScale;
	struct WalkableSlopeOverride WalkableSlopeOverride;
	class UClass* PhysMaterialOverride;
	float MaxAngularVelocity;
	float CustomSleepThresholdMultiplier;
	float StabilizationThresholdMultiplier;
	float PhysicsBlendWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNotifyEvent : public AnimLinkableElement
{
public:
	float DisplayTime;
	float TriggerTimeOffset;
	float EndTriggerTimeOffset;
	float TriggerWeightThreshold;
	struct FName NotifyName;
	class UClass* Notify;
	class UClass* NotifyStateClass;
	float Duration;
	struct AnimLinkableElement EndLink;
	bool bConvertedFromBranchingPoint;
	EMontageNotifyTickType MontageTickType;
	float NotifyTriggerChance;
	ENotifyFilterType NotifyFilterType;
	int NotifyFilterLOD;
	bool bTriggerOnDedicatedServer;
	bool bTriggerOnFollower;
	int TrackIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Vector_NetQuantize10 : public Vector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavAgentProperties : public MovementProperties
{
public:
	float AgentRadius;
	float AgentHeight;
	float AgentStepHeight;
	float NavWalkingSearchHeightScale;
	struct SoftClassPath PreferredNavData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RealCurve : public IndexedCurve
{
public:
	float DefaultValue;
	ERichCurveExtrapolation PreInfinityExtrap;
	ERichCurveExtrapolation PostInfinityExtrap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RichCurve : public RealCurve
{
public:
	TArray<struct RichCurveKey> Keys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SoundAttenuationSettings : public BaseAttenuationSettings
{
public:
	bool bAttenuate;
	bool bSpatialize;
	bool bAttenuateWithLPF;
	bool bEnableListenerFocus;
	bool bEnableFocusInterpolation;
	bool bEnableOcclusion;
	bool bUseComplexCollisionForOcclusion;
	bool bEnableReverbSend;
	bool bEnablePriorityAttenuation;
	bool bApplyNormalizationToStereoSounds;
	bool bEnableLogFrequencyScaling;
	bool bEnableSubmixSends;
	ESoundSpatializationAlgorithm SpatializationAlgorithm;
	float BinauralRadius;
	EAirAbsorptionMethod AbsorptionMethod;
	ECollisionChannel OcclusionTraceChannel;
	EReverbSendMethod ReverbSendMethod;
	EPriorityAttenuationMethod PriorityAttenuationMethod;
	float OmniRadius;
	float StereoSpread;
	float LPFRadiusMin;
	float LPFRadiusMax;
	struct RuntimeFloatCurve CustomLowpassAirAbsorptionCurve;
	struct RuntimeFloatCurve CustomHighpassAirAbsorptionCurve;
	float LPFFrequencyAtMin;
	float LPFFrequencyAtMax;
	float HPFFrequencyAtMin;
	float HPFFrequencyAtMax;
	float FocusAzimuth;
	float NonFocusAzimuth;
	float FocusDistanceScale;
	float NonFocusDistanceScale;
	float FocusPriorityScale;
	float NonFocusPriorityScale;
	float FocusVolumeAttenuation;
	float NonFocusVolumeAttenuation;
	float FocusAttackInterpSpeed;
	float FocusReleaseInterpSpeed;
	float OcclusionLowPassFilterFrequency;
	float OcclusionVolumeAttenuation;
	float OcclusionInterpolationTime;
	float ReverbWetLevelMin;
	float ReverbWetLevelMax;
	float ReverbDistanceMin;
	float ReverbDistanceMax;
	float ManualReverbSendLevel;
	struct RuntimeFloatCurve CustomReverbSendCurve;
	TArray<struct AttenuationSubmixSendSettings> SubmixSendSettings;
	float PriorityAttenuationMin;
	float PriorityAttenuationMax;
	float PriorityAttenuationDistanceMin;
	float PriorityAttenuationDistanceMax;
	float ManualPriorityAttenuation;
	struct RuntimeFloatCurve CustomPriorityAttenuationCurve;
	struct SoundAttenuationPluginSettings PluginSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Vector_NetQuantize : public Vector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class Vector_NetQuantizeNormal : public Vector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SoundModulationDefaultRoutingSettings : public SoundModulationDefaultSettings
{
public:
	EModulationRouting VolumeRouting;
	EModulationRouting PitchRouting;
	EModulationRouting HighpassRouting;
	EModulationRouting LowpassRouting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LightmassPointLightSettings : public LightmassLightSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CharacterMovementComponentPostPhysicsTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavigationLink : public NavigationLinkBase
{
public:
	struct Vector Left;
	struct Vector Right;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavigationSegmentLink : public NavigationLinkBase
{
public:
	struct Vector LeftStart;
	struct Vector LeftEnd;
	struct Vector RightStart;
	struct Vector RightEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StaticSwitchParameter : public StaticParameterBase
{
public:
	bool Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StaticComponentMaskParameter : public StaticParameterBase
{
public:
	bool R;
	bool G;
	bool B;
	bool A;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StaticTerrainLayerWeightParameter : public StaticParameterBase
{
public:
	int WeightmapIndex;
	bool bWeightBasedBlend;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StaticMaterialLayersParameter : public StaticParameterBase
{
public:
	struct MaterialLayersFunctions Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimationTransitionBetweenStates : public AnimationStateBase
{
public:
	int PreviousState;
	int NextState;
	float CrossfadeDuration;
	int StartNotify;
	int EndNotify;
	int InterruptNotify;
	EAlphaBlendOption BlendMode;
	class UClass* CustomCurve;
	class UClass* BlendProfile;
	ETransitionLogicType LogicType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FloatCurve : public AnimCurveBase
{
public:
	struct RichCurve FloatCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CompositeSection : public AnimLinkableElement
{
public:
	struct FName SectionName;
	float StartTime;
	struct FName NextSectionName;
	TArray<class UClass*> MetaData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BranchingPoint : public AnimLinkableElement
{
public:
	struct FName EventName;
	float DisplayTime;
	float TriggerTimeOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StringCurve : public IndexedCurve
{
public:
	struct FString DefaultValue;
	TArray<struct StringCurveKey> Keys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class IntegralCurve : public IndexedCurve
{
public:
	TArray<struct IntegralKey> Keys;
	int DefaultValue;
	bool bUseDefaultValueBeforeFirstKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SimpleCurve : public RealCurve
{
public:
	ERichCurveInterpMode InterpMode;
	TArray<struct SimpleCurveKey> Keys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KSphereElem : public KShapeElem
{
public:
	struct Vector Center;
	float Radius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KBoxElem : public KShapeElem
{
public:
	struct Vector Center;
	struct Rotator Rotation;
	float X;
	float Y;
	float Z;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KSphylElem : public KShapeElem
{
public:
	struct Vector Center;
	struct Rotator Rotation;
	float Radius;
	float Length;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KConvexElem : public KShapeElem
{
public:
	TArray<struct Vector> VertexData;
	TArray<int> IndexData;
	struct Box ElemBox;
	struct Transform Transform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KTaperedCapsuleElem : public KShapeElem
{
public:
	struct Vector Center;
	struct Rotator Rotation;
	float Radius0;
	float Radius1;
	float Length;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LightmassDirectionalLightSettings : public LightmassLightSettings
{
public:
	float LightSourceAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ForceFeedbackAttenuationSettings : public BaseAttenuationSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintInputActionDelegateBinding : public BlueprintInputDelegateBinding
{
public:
	struct FName InputActionName;
	EInputEvent InputKeyEvent;
	struct FName FunctionNameToBind;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintInputAxisDelegateBinding : public BlueprintInputDelegateBinding
{
public:
	struct FName InputAxisName;
	struct FName FunctionNameToBind;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintInputAxisKeyDelegateBinding : public BlueprintInputDelegateBinding
{
public:
	struct Key AxisKey;
	struct FName FunctionNameToBind;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintInputKeyDelegateBinding : public BlueprintInputDelegateBinding
{
public:
	struct InputChord InputChord;
	EInputEvent InputKeyEvent;
	struct FName FunctionNameToBind;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BlueprintInputTouchDelegateBinding : public BlueprintInputDelegateBinding
{
public:
	EInputEvent InputKeyEvent;
	struct FName FunctionNameToBind;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ScalarMaterialInput : public MaterialInput
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class VectorMaterialInput : public MaterialInput
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ColorMaterialInput : public MaterialInput
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MaterialAttributesInput : public ExpressionInput
{
public:
	int PropertyConnectedBitmask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ShadingModelMaterialInput : public MaterialInput
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CollectionScalarParameter : public CollectionParameterBase
{
public:
	float DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CollectionVectorParameter : public CollectionParameterBase
{
public:
	struct LinearColor DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RawDistributionVector : public RawDistribution
{
public:
	float MinValue;
	float MaxValue;
	struct Vector MinValueVec;
	struct Vector MaxValueVec;
	class UClass* Distribution;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RawDistributionFloat : public RawDistribution
{
public:
	float MinValue;
	float MaxValue;
	class UClass* Distribution;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LinearConstraint : public ConstraintBaseParams
{
public:
	float Limit;
	ELinearConstraintMotion XMotion;
	ELinearConstraintMotion YMotion;
	ELinearConstraintMotion ZMotion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConeConstraint : public ConstraintBaseParams
{
public:
	float Swing1LimitDegrees;
	float Swing2LimitDegrees;
	EAngularConstraintMotion Swing1Motion;
	EAngularConstraintMotion Swing2Motion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TwistConstraint : public ConstraintBaseParams
{
public:
	float TwistLimitDegrees;
	EAngularConstraintMotion TwistMotion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ConstraintInstance : public ConstraintInstanceBase
{
public:
	struct FName JointName;
	struct FName ConstraintBone1;
	struct FName ConstraintBone2;
	struct Vector Pos1;
	struct Vector PriAxis1;
	struct Vector SecAxis1;
	struct Vector Pos2;
	struct Vector PriAxis2;
	struct Vector SecAxis2;
	struct Rotator AngularRotationOffset;
	bool bScaleLinearLimits;
	struct ConstraintProfileProperties ProfileInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioEQEffect : public AudioEffectParameters
{
public:
	float FrequencyCenter0;
	float Gain0;
	float Bandwidth0;
	float FrequencyCenter1;
	float Gain1;
	float Bandwidth1;
	float FrequencyCenter2;
	float Gain2;
	float Bandwidth2;
	float FrequencyCenter3;
	float Gain3;
	float Bandwidth3;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TTEventTrack : public TTTrackBase
{
public:
	struct FName FunctionName;
	class UClass* CurveKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TTPropertyTrack : public TTTrackBase
{
public:
	struct FName PropertyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TTFloatTrack : public TTPropertyTrack
{
public:
	class UClass* CurveFloat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TTVectorTrack : public TTPropertyTrack
{
public:
	class UClass* CurveVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TTLinearColorTrack : public TTPropertyTrack
{
public:
	class UClass* CurveLinearColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Vector2MaterialInput : public MaterialInput
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PoseLink : public PoseLinkBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_CustomProperty : public AnimNode_Base
{
public:
	TArray<struct FName> SourcePropertyNames;
	TArray<struct FName> DestPropertyNames;
	class UClass* TargetInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ComponentSpacePoseLink : public PoseLinkBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RootMotionSource_ConstantForce : public RootMotionSource
{
public:
	struct Vector Force;
	class UClass* StrengthOverTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_AssetPlayerBase : public AnimNode_Base
{
public:
	struct FName GroupName;
	EAnimGroupRole GroupRole;
	EAnimSyncGroupScope GroupScope;
	bool bIgnoreForRelevancyTest;
	float BlendWeight;
	float InternalTimeAccumulator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_Root : public AnimNode_Base
{
public:
	struct PoseLink Result;
	struct FName Name;
	struct FName Group;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SceneComponentInstanceData : public ActorComponentInstanceData
{
public:
	Unknown AttachedInstanceComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VectorCurve : public AnimCurveBase
{
public:
	struct RichCurve FloatCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TransformCurve : public AnimCurveBase
{
public:
	struct VectorCurve TranslationCurve;
	struct VectorCurve RotationCurve;
	struct VectorCurve ScaleCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class A2CSPose : public A2Pose
{
public:
	TArray<byte> ComponentSpaceFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ApplyMeshSpaceAdditive : public AnimNode_Base
{
public:
	struct PoseLink Base;
	struct PoseLink Additive;
	EAnimAlphaInputType AlphaInputType;
	float Alpha;
	bool bAlphaBoolEnabled;
	struct InputAlphaBoolBlend AlphaBoolBlend;
	struct FName AlphaCurveName;
	struct InputScaleBias AlphaScaleBias;
	struct InputScaleBiasClamp AlphaScaleBiasClamp;
	int LODThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_Inertialization : public AnimNode_Base
{
public:
	struct PoseLink Source;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LinkedAnimGraph : public AnimNode_CustomProperty
{
public:
	TArray<struct PoseLink> InputPoses;
	TArray<struct FName> InputPoseNames;
	class UClass* InstanceClass;
	struct FName Tag;
	bool bReceiveNotifiesFromLinkedInstances;
	bool bPropagateNotifiesToLinkedInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LinkedAnimLayer : public AnimNode_LinkedAnimGraph
{
public:
	class UClass* Interface;
	struct FName Layer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LinkedInputPose : public AnimNode_Base
{
public:
	struct FName Name;
	struct FName Graph;
	struct PoseLink InputPose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SaveCachedPose : public AnimNode_Base
{
public:
	struct PoseLink Pose;
	struct FName CachePoseName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SequencePlayer : public AnimNode_AssetPlayerBase
{
public:
	class UClass* Sequence;
	float PlayRateBasis;
	float PlayRate;
	struct InputScaleBiasClamp PlayRateScaleBiasClamp;
	float StartPosition;
	bool bLoopAnimation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_StateMachine : public AnimNode_Base
{
public:
	int StateMachineIndexInClass;
	int MaxTransitionsPerFrame;
	bool bSkipFirstUpdateTransition;
	bool bReinitializeOnBecomingRelevant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_TransitionPoseEvaluator : public AnimNode_Base
{
public:
	int FramesToCachePose;
	EEvaluatorDataSource DataSource;
	EEvaluatorMode EvaluatorMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_TransitionResult : public AnimNode_Base
{
public:
	bool bCanEnterTransition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_UseCachedPose : public AnimNode_Base
{
public:
	struct PoseLink LinkToCachingNode;
	struct FName CachePoseName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ConvertLocalToComponentSpace : public AnimNode_Base
{
public:
	struct PoseLink LocalPose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_ConvertComponentToLocalSpace : public AnimNode_Base
{
public:
	struct ComponentSpacePoseLink ComponentPose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimSingleNodeInstanceProxy : public AnimInstanceProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_SingleNode : public AnimNode_Base
{
public:
	struct PoseLink SourcePose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimationState : public AnimationStateBase
{
public:
	TArray<struct AnimationTransitionRule> Transitions;
	int StateRootNodeIndex;
	int StartNotify;
	int EndNotify;
	int FullyBlendedNotify;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AtmospherePrecomputeInstanceData : public SceneComponentInstanceData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AudioReverbEffect : public AudioEffectParameters
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BookmarkJumpToSettings : public BookmarkBaseJumpToSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CharacterMovementComponentPrePhysicsTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CharacterMoveResponsePackedBits : public CharacterNetworkSerializationPackedBits
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CharacterServerMovePackedBits : public CharacterNetworkSerializationPackedBits
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChildActorComponentInstanceData : public SceneComponentInstanceData
{
public:
	class UClass* ChildActorClass;
	struct FName ChildActorName;
	TArray<struct ChildActorAttachedActorInfo> AttachedActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EdGraphSchemaAction_NewNode : public EdGraphSchemaAction
{
public:
	class UClass* NodeTemplate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RadialDamageEvent : public DamageEvent
{
public:
	struct RadialDamageParams Params;
	struct Vector Origin;
	TArray<struct HitResult> ComponentHits;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PointDamageEvent : public DamageEvent
{
public:
	float Damage;
	struct Vector_NetQuantizeNormal ShotDirection;
	struct HitResult HitInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InstancedStaticMeshComponentInstanceData : public SceneComponentInstanceData
{
public:
	class UClass* StaticMesh;
	struct InstancedStaticMeshLightMapInstanceData CachedStaticLighting;
	TArray<struct InstancedStaticMeshInstanceData> PerInstanceSMData;
	TArray<float> PerInstanceSMCustomData;
	int InstancingRandomSeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DynamicTextureInstance : public StreamableTextureInstance
{
public:
	class UClass* Texture;
	bool bAttached;
	float OriginalRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PrecomputedLightInstanceData : public SceneComponentInstanceData
{
public:
	struct Transform Transform;
	struct Guid LightGuid;
	int PreviewShadowMapChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NameCurve : public IndexedCurve
{
public:
	TArray<struct NameCurveKey> Keys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavDataConfig : public NavAgentProperties
{
public:
	struct FName Name;
	struct Color Color;
	struct Vector DefaultQueryExtent;
	class UClass* NavigationDataClass;
	struct TSoftClassPtr<UObject> NavDataClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ParticleSystemWorldManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PrimitiveComponentInstanceData : public SceneComponentInstanceData
{
public:
	struct Transform ComponentTransform;
	int VisibilityId;
	class UClass* LODParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RootMotionSource_JumpForce : public RootMotionSource
{
public:
	struct Rotator Rotation;
	float Distance;
	float Height;
	bool bDisableTimeout;
	class UClass* PathOffsetCurve;
	class UClass* TimeMappingCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RootMotionSource_MoveToDynamicForce : public RootMotionSource
{
public:
	struct Vector StartLocation;
	struct Vector InitialTargetLocation;
	struct Vector TargetLocation;
	bool bRestrictSpeedToExpected;
	class UClass* PathOffsetCurve;
	class UClass* TimeMappingCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RootMotionSource_MoveToForce : public RootMotionSource
{
public:
	struct Vector StartLocation;
	struct Vector TargetLocation;
	bool bRestrictSpeedToExpected;
	class UClass* PathOffsetCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RootMotionSource_RadialForce : public RootMotionSource
{
public:
	struct Vector Location;
	class UClass* LocationActor;
	float Radius;
	float Strength;
	bool bIsPush;
	bool bNoZForce;
	class UClass* StrengthDistanceFalloff;
	class UClass* StrengthOverTime;
	bool bUseFixedWorldDirection;
	struct Rotator FixedWorldDirection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RPCDoSStateConfig : public RPCDoSState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkeletalMeshComponentClothTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkeletalMeshComponentEndPhysicsTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkinWeightProfileManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PrecomputedSkyLightInstanceData : public SceneComponentInstanceData
{
public:
	struct Guid LightGuid;
	float AverageBrightness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SplineInstanceData : public SceneComponentInstanceData
{
public:
	bool bSplineHasBeenEdited;
	struct SplineCurves SplineCurves;
	struct SplineCurves SplineCurvesPreUCS;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SplineMeshInstanceData : public SceneComponentInstanceData
{
public:
	struct Vector StartPos;
	struct Vector EndPos;
	struct Vector StartTangent;
	struct Vector EndTangent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StaticMeshComponentInstanceData : public PrimitiveComponentInstanceData
{
public:
	class UClass* StaticMesh;
	TArray<struct StaticMeshVertexColorLODData> VertexColorLODs;
	TArray<struct Guid> CachedStaticLighting;
	TArray<struct StreamingTextureBuildInfo> StreamingTextureData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EndPhysicsTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class StartPhysicsTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UActorComponent : public UObject
{
public:
	struct ActorComponentTickFunction PrimaryComponentTick;
	TArray<struct FName> ComponentTags;
	TArray<class UClass*> AssetUserData;
	int UCSSerializationIndex;
	bool bNetAddressable;
	bool bReplicates;
	bool bAutoActivate;
	bool bIsActive;
	bool bEditableWhenInherited;
	bool bCanEverAffectNavigation;
	bool bIsEditorOnly;
	EComponentCreationMethod CreationMethod;
	struct FScriptMulticastDelegate OnComponentActivated;
	struct FScriptMulticastDelegate OnComponentDeactivated;
	TArray<struct SimpleMemberReference> UCSModifiedProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintAsyncActionBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintFunctionLibrary : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UActor : public UObject
{
public:
	struct ActorTickFunction PrimaryActorTick;
	bool bNetTemporary;
	bool bNetStartup;
	bool bOnlyRelevantToOwner;
	bool bAlwaysRelevant;
	bool bReplicateMovement;
	bool bHidden;
	bool bTearOff;
	bool bForceNetAddressable;
	bool bExchangedRoles;
	bool bNetLoadOnClient;
	bool bNetUseOwnerRelevancy;
	bool bRelevantForNetworkReplays;
	bool bRelevantForLevelBounds;
	bool bReplayRewindable;
	bool bAllowTickBeforeBeginPlay;
	bool bAutoDestroyWhenFinished;
	bool bCanBeDamaged;
	bool bBlockInput;
	bool bCollideWhenPlacing;
	bool bFindCameraComponentWhenViewTarget;
	bool bGenerateOverlapEventsDuringLevelStreaming;
	bool bIgnoresOriginShifting;
	bool bEnableAutoLODGeneration;
	bool bIsEditorOnlyActor;
	bool bActorSeamlessTraveled;
	bool bReplicates;
	bool bCanBeInCluster;
	bool bAllowReceiveTickEventOnDedicatedServer;
	bool bActorEnableCollision;
	bool bActorIsBeingDestroyed;
	EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming;
	EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming;
	ENetRole RemoteRole;
	struct RepMovement ReplicatedMovement;
	float InitialLifeSpan;
	float CustomTimeDilation;
	struct RepAttachment AttachmentReplication;
	class UClass* Owner;
	struct FName NetDriverName;
	ENetRole Role;
	ENetDormancy NetDormancy;
	ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod;
	EAutoReceiveInput AutoReceiveInput;
	int InputPriority;
	class UClass* InputComponent;
	float NetCullDistanceSquared;
	int NetTag;
	float NetUpdateFrequency;
	float MinNetUpdateFrequency;
	float NetPriority;
	class UClass* Instigator;
	TArray<class UClass*> Children;
	class UClass* RootComponent;
	TArray<class UClass*> ControllingMatineeActors;
	TArray<struct FName> Layers;
	Unknown ParentComponent;
	TArray<struct FName> Tags;
	struct FScriptMulticastDelegate OnTakeAnyDamage;
	struct FScriptMulticastDelegate OnTakePointDamage;
	struct FScriptMulticastDelegate OnTakeRadialDamage;
	struct FScriptMulticastDelegate OnActorBeginOverlap;
	struct FScriptMulticastDelegate OnActorEndOverlap;
	struct FScriptMulticastDelegate OnBeginCursorOver;
	struct FScriptMulticastDelegate OnEndCursorOver;
	struct FScriptMulticastDelegate OnClicked;
	struct FScriptMulticastDelegate OnReleased;
	struct FScriptMulticastDelegate OnInputTouchBegin;
	struct FScriptMulticastDelegate OnInputTouchEnd;
	struct FScriptMulticastDelegate OnInputTouchEnter;
	struct FScriptMulticastDelegate OnInputTouchLeave;
	struct FScriptMulticastDelegate OnActorHit;
	struct FScriptMulticastDelegate OnDestroyed;
	struct FScriptMulticastDelegate OnEndPlay;
	TArray<class UClass*> InstanceComponents;
	TArray<class UClass*> BlueprintCreatedComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AHUD : public AActor
{
public:
	class UClass* PlayerOwner;
	bool bLostFocusPaused;
	bool bShowHUD;
	bool bShowDebugInfo;
	int CurrentTargetIndex;
	bool bShowHitBoxDebugInfo;
	bool bShowOverlays;
	bool bEnableDebugTextShadow;
	TArray<class UClass*> PostRenderedActors;
	TArray<struct FName> DebugDisplay;
	TArray<struct FName> ToggledDebugCategories;
	class UClass* Canvas;
	class UClass* DebugCanvas;
	TArray<struct DebugTextInfo> DebugTextList;
	class UClass* ShowDebugTargetDesiredClass;
	class UClass* ShowDebugTargetActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APawn : public AActor
{
public:
	bool bUseControllerRotationPitch;
	bool bUseControllerRotationYaw;
	bool bUseControllerRotationRoll;
	bool bCanAffectNavigationGeneration;
	float BaseEyeHeight;
	EAutoReceiveInput AutoPossessPlayer;
	EAutoPossessAI AutoPossessAI;
	byte RemoteViewPitch;
	class UClass* AIControllerClass;
	class UClass* PlayerState;
	class UClass* LastHitBy;
	class UClass* Controller;
	struct Vector ControlInputVector;
	struct Vector LastControlInputVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADefaultPawn : public APawn
{
public:
	float BaseTurnRate;
	float BaseLookUpRate;
	class UClass* MovementComponent;
	class UClass* CollisionComponent;
	class UClass* MeshComponent;
	bool bAddDefaultMovementBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintCore : public UObject
{
public:
	class UClass* SkeletonGeneratedClass;
	class UClass* GeneratedClass;
	bool bLegacyNeedToPurgeSkelRefs;
	struct Guid BlueprintGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprint : public UBlueprintCore
{
public:
	class UClass* ParentClass;
	EBlueprintType BlueprintType;
	bool bRecompileOnLoad;
	bool bHasBeenRegenerated;
	bool bIsRegeneratingOnLoad;
	int BlueprintSystemVersion;
	class UClass* SimpleConstructionScript;
	TArray<class UClass*> ComponentTemplates;
	TArray<class UClass*> Timelines;
	TArray<struct BPComponentClassOverride> ComponentClassOverrides;
	class UClass* InheritableComponentHandler;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataAsset : public UObject
{
public:
	class UClass* NativeClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubsystem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicSubsystem : public USubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEngineSubsystem : public UDynamicSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameInstance : public UObject
{
public:
	TArray<class UClass*> LocalPlayers;
	class UClass* OnlineSession;
	TArray<class UClass*> ReferencedObjects;
	struct FScriptMulticastDelegate OnPawnControllerChangedDelegates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameInstanceSubsystem : public USubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPrimaryDataAsset : public UDataAsset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEngine : public UObject
{
public:
	class UClass* TinyFont;
	struct SoftObjectPath TinyFontName;
	class UClass* SmallFont;
	struct SoftObjectPath SmallFontName;
	class UClass* MediumFont;
	struct SoftObjectPath MediumFontName;
	class UClass* LargeFont;
	struct SoftObjectPath LargeFontName;
	class UClass* SubtitleFont;
	struct SoftObjectPath SubtitleFontName;
	TArray<class UClass*> AdditionalFonts;
	TArray<struct FString> AdditionalFontNames;
	class UClass* ConsoleClass;
	struct SoftClassPath ConsoleClassName;
	class UClass* GameViewportClientClass;
	struct SoftClassPath GameViewportClientClassName;
	class UClass* LocalPlayerClass;
	struct SoftClassPath LocalPlayerClassName;
	class UClass* WorldSettingsClass;
	struct SoftClassPath WorldSettingsClassName;
	struct SoftClassPath NavigationSystemClassName;
	class UClass* NavigationSystemClass;
	struct SoftClassPath NavigationSystemConfigClassName;
	class UClass* NavigationSystemConfigClass;
	struct SoftClassPath AvoidanceManagerClassName;
	class UClass* AvoidanceManagerClass;
	struct SoftClassPath AIControllerClassName;
	class UClass* PhysicsCollisionHandlerClass;
	struct SoftClassPath PhysicsCollisionHandlerClassName;
	struct SoftClassPath GameUserSettingsClassName;
	class UClass* GameUserSettingsClass;
	class UClass* GameUserSettings;
	class UClass* LevelScriptActorClass;
	struct SoftClassPath LevelScriptActorClassName;
	struct SoftClassPath DefaultBlueprintBaseClassName;
	struct SoftClassPath GameSingletonClassName;
	class UClass* GameSingleton;
	struct SoftClassPath AssetManagerClassName;
	class UClass* AssetManager;
	class UClass* DefaultTexture;
	struct SoftObjectPath DefaultTextureName;
	class UClass* DefaultDiffuseTexture;
	struct SoftObjectPath DefaultDiffuseTextureName;
	class UClass* DefaultBSPVertexTexture;
	struct SoftObjectPath DefaultBSPVertexTextureName;
	class UClass* HighFrequencyNoiseTexture;
	struct SoftObjectPath HighFrequencyNoiseTextureName;
	class UClass* DefaultBokehTexture;
	struct SoftObjectPath DefaultBokehTextureName;
	class UClass* DefaultBloomKernelTexture;
	struct SoftObjectPath DefaultBloomKernelTextureName;
	class UClass* WireframeMaterial;
	struct FString WireframeMaterialName;
	class UClass* DebugMeshMaterial;
	struct SoftObjectPath DebugMeshMaterialName;
	class UClass* EmissiveMeshMaterial;
	struct SoftObjectPath EmissiveMeshMaterialName;
	class UClass* LevelColorationLitMaterial;
	struct FString LevelColorationLitMaterialName;
	class UClass* LevelColorationUnlitMaterial;
	struct FString LevelColorationUnlitMaterialName;
	class UClass* LightingTexelDensityMaterial;
	struct FString LightingTexelDensityName;
	class UClass* ShadedLevelColorationLitMaterial;
	struct FString ShadedLevelColorationLitMaterialName;
	class UClass* ShadedLevelColorationUnlitMaterial;
	struct FString ShadedLevelColorationUnlitMaterialName;
	class UClass* RemoveSurfaceMaterial;
	struct SoftObjectPath RemoveSurfaceMaterialName;
	class UClass* VertexColorMaterial;
	struct FString VertexColorMaterialName;
	class UClass* VertexColorViewModeMaterial_ColorOnly;
	struct FString VertexColorViewModeMaterialName_ColorOnly;
	class UClass* VertexColorViewModeMaterial_AlphaAsColor;
	struct FString VertexColorViewModeMaterialName_AlphaAsColor;
	class UClass* VertexColorViewModeMaterial_RedOnly;
	struct FString VertexColorViewModeMaterialName_RedOnly;
	class UClass* VertexColorViewModeMaterial_GreenOnly;
	struct FString VertexColorViewModeMaterialName_GreenOnly;
	class UClass* VertexColorViewModeMaterial_BlueOnly;
	struct FString VertexColorViewModeMaterialName_BlueOnly;
	struct SoftObjectPath DebugEditorMaterialName;
	class UClass* ConstraintLimitMaterial;
	class UClass* ConstraintLimitMaterialX;
	class UClass* ConstraintLimitMaterialXAxis;
	class UClass* ConstraintLimitMaterialY;
	class UClass* ConstraintLimitMaterialYAxis;
	class UClass* ConstraintLimitMaterialZ;
	class UClass* ConstraintLimitMaterialZAxis;
	class UClass* ConstraintLimitMaterialPrismatic;
	class UClass* InvalidLightmapSettingsMaterial;
	struct SoftObjectPath InvalidLightmapSettingsMaterialName;
	class UClass* PreviewShadowsIndicatorMaterial;
	struct SoftObjectPath PreviewShadowsIndicatorMaterialName;
	class UClass* ArrowMaterial;
	class UClass* ArrowMaterialYellow;
	struct SoftObjectPath ArrowMaterialName;
	struct LinearColor LightingOnlyBrightness;
	TArray<struct LinearColor> ShaderComplexityColors;
	TArray<struct LinearColor> QuadComplexityColors;
	TArray<struct LinearColor> LightComplexityColors;
	TArray<struct LinearColor> StationaryLightOverlapColors;
	TArray<struct LinearColor> LODColorationColors;
	TArray<struct LinearColor> HLODColorationColors;
	TArray<struct LinearColor> StreamingAccuracyColors;
	float MaxPixelShaderAdditiveComplexityCount;
	float MaxES3PixelShaderAdditiveComplexityCount;
	float MinLightMapDensity;
	float IdealLightMapDensity;
	float MaxLightMapDensity;
	bool bRenderLightMapDensityGrayscale;
	float RenderLightMapDensityGrayscaleScale;
	float RenderLightMapDensityColorScale;
	struct LinearColor LightMapDensityVertexMappedColor;
	struct LinearColor LightMapDensitySelectedColor;
	TArray<struct StatColorMapping> StatColorMappings;
	class UClass* DefaultPhysMaterial;
	struct SoftObjectPath DefaultPhysMaterialName;
	TArray<struct GameNameRedirect> ActiveGameNameRedirects;
	TArray<struct ClassRedirect> ActiveClassRedirects;
	TArray<struct PluginRedirect> ActivePluginRedirects;
	TArray<struct StructRedirect> ActiveStructRedirects;
	class UClass* PreIntegratedSkinBRDFTexture;
	struct SoftObjectPath PreIntegratedSkinBRDFTextureName;
	class UClass* BlueNoiseTexture;
	struct SoftObjectPath BlueNoiseTextureName;
	class UClass* MiniFontTexture;
	struct SoftObjectPath MiniFontTextureName;
	class UClass* WeightMapPlaceholderTexture;
	struct SoftObjectPath WeightMapPlaceholderTextureName;
	class UClass* LightMapDensityTexture;
	struct SoftObjectPath LightMapDensityTextureName;
	class UClass* GameViewport;
	TArray<struct FString> DeferredCommands;
	float NearClipPlane;
	bool bSubtitlesEnabled;
	bool bSubtitlesForcedOff;
	int MaximumLoopIterationCount;
	bool bCanBlueprintsTickByDefault;
	bool bOptimizeAnimBlueprintMemberVariableAccess;
	bool bAllowMultiThreadedAnimationUpdate;
	bool bEnableEditorPSysRealtimeLOD;
	bool bSmoothFrameRate;
	bool bUseFixedFrameRate;
	float FixedFrameRate;
	struct FloatRange SmoothedFrameRateRange;
	class UClass* CustomTimeStep;
	struct SoftClassPath CustomTimeStepClassName;
	class UClass* TimecodeProvider;
	struct SoftClassPath TimecodeProviderClassName;
	bool bGenerateDefaultTimecode;
	struct FrameRate GenerateDefaultTimecodeFrameRate;
	float GenerateDefaultTimecodeFrameDelay;
	bool bCheckForMultiplePawnsSpawnedInAFrame;
	int NumPawnsAllowedToBeSpawnedInAFrame;
	bool bShouldGenerateLowQualityLightmaps;
	struct Color C_WorldBox;
	struct Color C_BrushWire;
	struct Color C_AddWire;
	struct Color C_SubtractWire;
	struct Color C_SemiSolidWire;
	struct Color C_NonSolidWire;
	struct Color C_WireBackground;
	struct Color C_ScaleBoxHi;
	struct Color C_VolumeCollision;
	struct Color C_BSPCollision;
	struct Color C_OrthoBackground;
	struct Color C_Volume;
	struct Color C_BrushShape;
	float StreamingDistanceFactor;
	struct DirectoryPath GameScreenshotSaveDirectory;
	bool UseStaticMeshMinLODPerQualityLevels;
	ETransitionType TransitionType;
	struct FString TransitionDescription;
	struct FString TransitionGameMode;
	bool bAllowMatureLanguage;
	float CameraRotationThreshold;
	float CameraTranslationThreshold;
	float PrimitiveProbablyVisibleTime;
	float MaxOcclusionPixelsFraction;
	bool bPauseOnLossOfFocus;
	int MaxParticleResize;
	int MaxParticleResizeWarn;
	TArray<struct DropNoteInfo> PendingDroppedNotes;
	float NetClientTicksPerSecond;
	float DisplayGamma;
	float MinDesiredFrameRate;
	struct LinearColor DefaultSelectedMaterialColor;
	struct LinearColor SelectedMaterialColor;
	struct LinearColor SelectionOutlineColor;
	struct LinearColor SubduedSelectionOutlineColor;
	struct LinearColor SelectedMaterialColorOverride;
	bool bIsOverridingSelectedColor;
	bool bEnableOnScreenDebugMessages;
	bool bEnableOnScreenDebugMessagesDisplay;
	bool bSuppressMapWarnings;
	bool bDisableAILogging;
	uint32_t bEnableVisualLogRecordingOnStart;
	int ScreenSaverInhibitorSemaphore;
	bool bLockReadOnlyLevels;
	struct FString ParticleEventManagerClassPath;
	float SelectionHighlightIntensity;
	float BSPSelectionHighlightIntensity;
	float SelectionHighlightIntensityBillboards;
	TArray<struct NetDriverDefinition> NetDriverDefinitions;
	TArray<struct FString> ServerActors;
	TArray<struct FString> RuntimeServerActors;
	float NetErrorLogInterval;
	bool bStartedLoadMapMovie;
	int NextWorldContextHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScriptViewportClient : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameViewportClient : public UScriptViewportClient
{
public:
	class UClass* ViewportConsole;
	TArray<struct DebugDisplayProperty> DebugProperties;
	int MaxSplitscreenPlayers;
	class UClass* World;
	class UClass* GameInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataTable : public UObject
{
public:
	class UClass* RowStruct;
	bool bStripFromClientBuilds;
	bool bIgnoreExtraFields;
	bool bIgnoreMissingFields;
	struct FString ImportKeyField;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayer : public UObject
{
public:
	class UClass* PlayerController;
	int CurrentNetSpeed;
	int ConfiguredInternetSpeed;
	int ConfiguredLanSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalPlayer : public UPlayer
{
public:
	class UClass* ViewportClient;
	EAspectRatioAxisConstraint AspectRatioAxisConstraint;
	class UClass* PendingLevelPlayerControllerClass;
	bool bSentSplitJoin;
	int ControllerId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalPlayerSubsystem : public USubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInfo : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineBlueprintCallProxyBase : public UBlueprintAsyncActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetConnection : public UPlayer
{
public:
	TArray<class UClass*> Children;
	class UClass* Driver;
	class UClass* PackageMapClass;
	class UClass* PackageMap;
	TArray<class UClass*> OpenChannels;
	TArray<class UClass*> SentTemporaries;
	class UClass* ViewTarget;
	class UClass* OwningActor;
	int MaxPacket;
	bool InternalAck;
	struct UniqueNetIdRepl PlayerID;
	double LastReceiveTime;
	TArray<class UClass*> ChannelsToTick;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetDriver : public UObject
{
public:
	struct FString NetConnectionClassName;
	struct FString ReplicationDriverClassName;
	int MaxDownloadSize;
	bool bClampListenServerTickRate;
	int NetServerMaxTickRate;
	int MaxNetTickRate;
	int MaxInternetClientRate;
	int MaxClientRate;
	float ServerTravelPause;
	float SpawnPrioritySeconds;
	float RelevantTimeout;
	float KeepAliveTime;
	float InitialConnectTimeout;
	float ConnectionTimeout;
	float TimeoutMultiplierForUnoptimizedBuilds;
	bool bNoTimeouts;
	bool bNeverApplyNetworkEmulationSettings;
	class UClass* ServerConnection;
	TArray<class UClass*> ClientConnections;
	int RecentlyDisconnectedTrackingTime;
	class UClass* World;
	class UClass* WorldPackage;
	class UClass* NetConnectionClass;
	class UClass* ReplicationDriverClass;
	struct FName NetDriverName;
	TArray<struct ChannelDefinition> ChannelDefinitions;
	Unknown ChannelDefinitionMap;
	TArray<class UClass*> ActorChannelPool;
	float Time;
	class UClass* ReplicationDriver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineEngineInterface : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineSession : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USceneComponent : public UActorComponent
{
public:
	Unknown PhysicsVolume;
	class UClass* AttachParent;
	struct FName AttachSocketName;
	TArray<class UClass*> AttachChildren;
	TArray<class UClass*> ClientAttachedChildren;
	struct Vector RelativeLocation;
	struct Rotator RelativeRotation;
	struct Vector RelativeScale3D;
	struct Vector ComponentVelocity;
	bool bComponentToWorldUpdated;
	bool bAbsoluteLocation;
	bool bAbsoluteRotation;
	bool bAbsoluteScale;
	bool bVisible;
	bool bShouldBeAttached;
	bool bShouldSnapLocationWhenAttached;
	bool bShouldSnapRotationWhenAttached;
	bool bShouldUpdatePhysicsVolume;
	bool bHiddenInGame;
	bool bBoundsChangeTriggersStreamingDataRebuild;
	bool bUseAttachParentBound;
	EComponentMobility Mobility;
	EDetailMode DetailMode;
	struct FScriptMulticastDelegate PhysicsVolumeChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorldSubsystem : public USubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPrimitiveComponent : public USceneComponent
{
public:
	float MinDrawDistance;
	float LDMaxDrawDistance;
	float CachedMaxDrawDistance;
	ESceneDepthPriorityGroup DepthPriorityGroup;
	ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup;
	EIndirectLightingCacheQuality IndirectLightingCacheQuality;
	ELightmapType LightmapType;
	bool bUseMaxLODAsImposter;
	bool bBatchImpostersAsInstances;
	bool bNeverDistanceCull;
	bool bAlwaysCreatePhysicsState;
	bool bGenerateOverlapEvents;
	bool bMultiBodyOverlap;
	bool bTraceComplexOnMove;
	bool bReturnMaterialOnMove;
	bool bUseViewOwnerDepthPriorityGroup;
	bool bAllowCullDistanceVolume;
	bool bHasMotionBlurVelocityMeshes;
	bool bVisibleInReflectionCaptures;
	bool bVisibleInRealTimeSkyCaptures;
	bool bVisibleInRayTracing;
	bool bRenderInMainPass;
	bool bRenderInDepthPass;
	bool bReceivesDecals;
	bool bOwnerNoSee;
	bool bOnlyOwnerSee;
	bool bTreatAsBackgroundForOcclusion;
	bool bUseAsOccluder;
	bool bSelectable;
	bool bForceMipStreaming;
	bool bHasPerInstanceHitProxies;
	bool CastShadow;
	bool bAffectDynamicIndirectLighting;
	bool bAffectDistanceFieldLighting;
	bool bCastDynamicShadow;
	bool bCastStaticShadow;
	bool bCastVolumetricTranslucentShadow;
	bool bCastContactShadow;
	bool bSelfShadowOnly;
	bool bCastFarShadow;
	bool bCastInsetShadow;
	bool bCastCinematicShadow;
	bool bCastHiddenShadow;
	bool bCastShadowAsTwoSided;
	bool bLightAsIfStatic;
	bool bLightAttachmentsAsGroup;
	bool bExcludeFromLightAttachmentGroup;
	bool bReceiveMobileCSMShadows;
	bool bSingleSampleShadowFromStationaryLights;
	bool bIgnoreRadialImpulse;
	bool bIgnoreRadialForce;
	bool bApplyImpulseOnDamage;
	bool bReplicatePhysicsToAutonomousProxy;
	bool bFillCollisionUnderneathForNavmesh;
	bool AlwaysLoadOnClient;
	bool AlwaysLoadOnServer;
	bool bUseEditorCompositing;
	bool bRenderCustomDepth;
	EHasCustomNavigableGeometry bHasCustomNavigableGeometry;
	ECanBeCharacterBase CanCharacterStepUpOn;
	struct LightingChannels LightingChannels;
	ERendererStencilMask CustomDepthStencilWriteMask;
	int CustomDepthStencilValue;
	struct CustomPrimitiveData CustomPrimitiveData;
	struct CustomPrimitiveData CustomPrimitiveDataInternal;
	int TranslucencySortPriority;
	float TranslucencySortDistanceOffset;
	int VisibilityId;
	TArray<class UClass*> RuntimeVirtualTextures;
	int8_t VirtualTextureLodBias;
	int8_t VirtualTextureCullMips;
	int8_t VirtualTextureMinCoverage;
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType;
	float LpvBiasMultiplier;
	float BoundsScale;
	TArray<class UClass*> MoveIgnoreActors;
	TArray<class UClass*> MoveIgnoreComponents;
	struct BodyInstance BodyInstance;
	struct FScriptMulticastDelegate OnComponentHit;
	struct FScriptMulticastDelegate OnComponentBeginOverlap;
	struct FScriptMulticastDelegate OnComponentEndOverlap;
	struct FScriptMulticastDelegate OnComponentWake;
	struct FScriptMulticastDelegate OnComponentSleep;
	struct FScriptMulticastDelegate OnBeginCursorOver;
	struct FScriptMulticastDelegate OnEndCursorOver;
	struct FScriptMulticastDelegate OnClicked;
	struct FScriptMulticastDelegate OnReleased;
	struct FScriptMulticastDelegate OnInputTouchBegin;
	struct FScriptMulticastDelegate OnInputTouchEnd;
	struct FScriptMulticastDelegate OnInputTouchEnter;
	struct FScriptMulticastDelegate OnInputTouchLeave;
	class UClass* LODParentPrimitive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshComponent : public UPrimitiveComponent
{
public:
	TArray<class UClass*> OverrideMaterials;
	bool bEnableMaterialParameterCaching;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkinnedMeshComponent : public UMeshComponent
{
public:
	class UClass* SkeletalMesh;
	Unknown MasterPoseComponent;
	TArray<ESkinCacheUsage> SkinCacheUsage;
	TArray<struct VertexOffsetUsage> VertexOffsetUsage;
	class UClass* PhysicsAssetOverride;
	int ForcedLodModel;
	int MinLodModel;
	float StreamingDistanceMultiplier;
	TArray<struct SkelMeshComponentLODInfo> LODInfo;
	EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption;
	bool bOverrideMinLOD;
	bool bUseBoundsFromMasterPoseComponent;
	bool bForceWireframe;
	bool bDisplayBones;
	bool bDisableMorphTarget;
	bool bHideSkin;
	bool bPerBoneMotionBlur;
	bool bComponentUseFixedSkelBounds;
	bool bConsiderAllBodiesForBounds;
	bool bSyncAttachParentLOD;
	bool bCanHighlightSelectedSections;
	bool bRecentlyRendered;
	bool bCastCapsuleDirectShadow;
	bool bCastCapsuleIndirectShadow;
	bool bCPUSkinning;
	bool bEnableUpdateRateOptimizations;
	bool bDisplayDebugUpdateRateOptimizations;
	bool bRenderStatic;
	bool bIgnoreMasterPoseComponentLOD;
	bool bCachedLocalBoundsUpToDate;
	bool bForceMeshObjectUpdate;
	float CapsuleIndirectShadowMinVisibility;
	struct BoxSphereBounds CachedWorldSpaceBounds;
	struct Matrix CachedWorldToLocalTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMeshComponent : public USkinnedMeshComponent
{
public:
	class UClass* AnimBlueprintGeneratedClass;
	class UClass* AnimClass;
	class UClass* AnimScriptInstance;
	class UClass* PostProcessAnimInstance;
	struct SingleAnimationPlayData AnimationData;
	struct Vector RootBoneTranslation;
	struct Vector LineCheckBoundsScale;
	TArray<class UClass*> LinkedInstances;
	TArray<struct Transform> CachedBoneSpaceTransforms;
	TArray<struct Transform> CachedComponentSpaceTransforms;
	float GlobalAnimRateScale;
	EKinematicBonesUpdateToPhysics KinematicBonesUpdateType;
	EPhysicsTransformUpdateMode PhysicsTransformUpdateMode;
	EAnimationMode AnimationMode;
	bool bDisablePostProcessBlueprint;
	bool bUpdateOverlapsOnAnimationFinalize;
	bool bHasValidBodies;
	bool bBlendPhysics;
	bool bEnablePhysicsOnDedicatedServer;
	bool bUpdateJointsFromAnimation;
	bool bAllowClothActors;
	bool bDisableClothSimulation;
	bool bDisableRigidBodyAnimNode;
	bool bAllowAnimCurveEvaluation;
	bool bDisableAnimCurves;
	bool bCollideWithEnvironment;
	bool bCollideWithAttachedChildren;
	bool bLocalSpaceSimulation;
	bool bResetAfterTeleport;
	bool bDeferKinematicBoneUpdate;
	bool bNoSkeletonUpdate;
	bool bPauseAnims;
	bool bUseRefPoseOnInitAnim;
	bool bEnablePerPolyCollision;
	bool bForceRefpose;
	bool bOnlyAllowAutonomousTickPose;
	bool bIsAutonomousTickPose;
	bool bOldForceRefPose;
	bool bShowPrePhysBones;
	bool bRequiredBonesUpToDate;
	bool bAnimTreeInitialised;
	bool bIncludeComponentLocationIntoBounds;
	bool bEnableLineCheckWithBounds;
	bool bPropagateCurvesToSlaves;
	bool bSkipKinematicUpdateWhenInterpolating;
	bool bSkipBoundsUpdateWhenInterpolating;
	bool bNeedsQueuedAnimEventsDispatched;
	uint16_t CachedAnimCurveUidVersion;
	float ClothBlendWeight;
	bool bWaitForParallelClothTask;
	TArray<struct FName> DisallowedAnimCurves;
	class UClass* BodySetup;
	struct FScriptMulticastDelegate OnConstraintBroken;
	class UClass* ClothingSimulationFactory;
	float TeleportDistanceThreshold;
	float TeleportRotationThreshold;
	uint32_t LastPoseTickFrame;
	class UClass* ClothingInteractor;
	struct FScriptMulticastDelegate OnAnimInitialized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimInstance : public UObject
{
public:
	class UClass* CurrentSkeleton;
	ERootMotionMode RootMotionMode;
	bool bUseMultiThreadedAnimationUpdate;
	bool bUsingCopyPoseFromMesh;
	bool bReceiveNotifiesFromLinkedInstances;
	bool bPropagateNotifiesToLinkedInstances;
	bool bQueueMontageEvents;
	struct FScriptMulticastDelegate OnMontageBlendingOut;
	struct FScriptMulticastDelegate OnMontageStarted;
	struct FScriptMulticastDelegate OnMontageEnded;
	struct FScriptMulticastDelegate OnAllMontageInstancesEnded;
	struct AnimNotifyQueue NotifyQueue;
	TArray<struct AnimNotifyEvent> ActiveAnimNotifyState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AController : public AActor
{
public:
	class UClass* PlayerState;
	struct FScriptMulticastDelegate OnInstigatedAnyDamage;
	struct FName StateName;
	class UClass* Pawn;
	class UClass* Character;
	class UClass* TransformComponent;
	struct Rotator ControlRotation;
	bool bAttachToPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayerController : public AController
{
public:
	class UClass* Player;
	class UClass* AcknowledgedPawn;
	class UClass* ControllingDirTrackInst;
	class UClass* MyHUD;
	class UClass* PlayerCameraManager;
	class UClass* PlayerCameraManagerClass;
	bool bAutoManageActiveCameraTarget;
	struct Rotator TargetViewRotation;
	float SmoothTargetViewRotationSpeed;
	TArray<class UClass*> HiddenActors;
	TArray<Unknown> HiddenPrimitiveComponents;
	float LastSpectatorStateSynchTime;
	struct Vector LastSpectatorSyncLocation;
	struct Rotator LastSpectatorSyncRotation;
	int ClientCap;
	class UClass* CheatManager;
	class UClass* CheatClass;
	class UClass* PlayerInput;
	TArray<struct ActiveForceFeedbackEffect> ActiveForceFeedbackEffects;
	bool bPlayerIsWaiting;
	byte NetPlayerIndex;
	class UClass* PendingSwapConnection;
	class UClass* NetConnection;
	float InputYawScale;
	float InputPitchScale;
	float InputRollScale;
	bool bShowMouseCursor;
	bool bEnableClickEvents;
	bool bEnableTouchEvents;
	bool bEnableMouseOverEvents;
	bool bEnableTouchOverEvents;
	bool bForceFeedbackEnabled;
	float ForceFeedbackScale;
	TArray<struct Key> ClickEventKeys;
	EMouseCursor DefaultMouseCursor;
	EMouseCursor CurrentMouseCursor;
	ECollisionChannel DefaultClickTraceChannel;
	ECollisionChannel CurrentClickTraceChannel;
	float HitResultTraceDistance;
	uint16_t SeamlessTravelCount;
	uint16_t LastCompletedSeamlessTravelCount;
	class UClass* InactiveStateInputComponent;
	bool bShouldPerformFullTickWhenPaused;
	class UClass* CurrentTouchInterface;
	class UClass* SpectatorPawn;
	bool bIsLocalPlayerController;
	struct Vector SpawnLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCheatManager : public UObject
{
public:
	class UClass* DebugCameraControllerRef;
	class UClass* DebugCameraControllerClass;
	TArray<class UClass*> CheatManagerExtensions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCheatManagerExtension : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABrush : public AActor
{
public:
	EBrushType BrushType;
	struct Color BrushColor;
	int PolyFlags;
	bool bColored;
	bool bSolidWhenSelected;
	bool bPlaceableFromClassBrowser;
	bool bNotForClientOrServer;
	class UClass* Brush;
	class UClass* BrushComponent;
	bool bInManipulation;
	TArray<struct GeomSelection> SavedSelections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AVolume : public ABrush
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCommandlet : public UObject
{
public:
	struct FString HelpDescription;
	struct FString HelpUsage;
	struct FString HelpWebLink;
	TArray<struct FString> HelpParamNames;
	TArray<struct FString> HelpParamDescriptions;
	bool IsServer;
	bool IsClient;
	bool IsEditor;
	bool LogToConsole;
	bool ShowErrorCount;
	bool ShowProgress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UShapeComponent : public UPrimitiveComponent
{
public:
	class UClass* ShapeBodySetup;
	class UClass* AreaClass;
	struct Color ShapeColor;
	bool bDrawOnlyIfSelected;
	bool bShouldCollideWhenPlacing;
	bool bDynamicObstacle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoxComponent : public UShapeComponent
{
public:
	struct Vector BoxExtent;
	float LineThickness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APhysicsVolume : public AVolume
{
public:
	float TerminalVelocity;
	int Priority;
	float FluidFriction;
	bool bWaterVolume;
	bool bPhysicsOnContact;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USplineComponent : public UPrimitiveComponent
{
public:
	struct SplineCurves SplineCurves;
	struct InterpCurveVector SplineInfo;
	struct InterpCurveQuat SplineRotInfo;
	struct InterpCurveVector SplineScaleInfo;
	struct InterpCurveFloat SplineReparamTable;
	bool bAllowSplineEditingPerInstance;
	int ReparamStepsPerSegment;
	float Duration;
	bool bStationaryEndpoints;
	bool bSplineHasBeenEdited;
	bool bModifiedByConstructionScript;
	bool bInputSplinePointsToConstructionScript;
	bool bDrawDebug;
	bool bClosedLoop;
	bool bLoopPositionOverride;
	float LoopPosition;
	struct Vector DefaultUpVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USplineMetadata : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFXSystemComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFXSystemAsset : public UObject
{
public:
	uint32_t MaxPoolSize;
	uint32_t PoolPrimeSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundEffectPreset : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundEffectSourcePreset : public USoundEffectPreset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundEffectSubmixPreset : public USoundEffectPreset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraShakeBase : public UObject
{
public:
	bool bSingleInstance;
	float ShakeScale;
	class UClass* RootShakePattern;
	class UClass* CameraManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraShakePattern : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpression : public UObject
{
public:
	class UClass* Material;
	class UClass* Function;
	bool bIsParameterExpression;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureBase : public UMaterialExpression
{
public:
	class UClass* Texture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
{
public:
	struct ExpressionInput Coordinates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
{
public:
	struct FName ParameterName;
	struct Guid ExpressionGUID;
	struct FName Group;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACharacter : public APawn
{
public:
	class UClass* Mesh;
	class UClass* CharacterMovement;
	class UClass* CapsuleComponent;
	struct BasedMovementInfo BasedMovement;
	struct BasedMovementInfo ReplicatedBasedMovement;
	float AnimRootMotionTranslationScale;
	struct Vector BaseTranslationOffset;
	struct Quat BaseRotationOffset;
	float ReplicatedServerLastTransformUpdateTimeStamp;
	float ReplayLastTransformUpdateTimeStamp;
	byte ReplicatedMovementMode;
	bool bInBaseReplication;
	float CrouchedEyeHeight;
	bool bIsCrouched;
	bool bProxyIsJumpForceApplied;
	bool bPressedJump;
	bool bClientUpdating;
	bool bClientWasFalling;
	bool bClientResimulateRootMotion;
	bool bClientResimulateRootMotionSources;
	bool bSimGravityDisabled;
	bool bClientCheckEncroachmentOnNetUpdate;
	bool bServerMoveIgnoreRootMotion;
	bool bWasJumping;
	float JumpKeyHoldTime;
	float JumpForceTimeRemaining;
	float ProxyJumpForceStartedTime;
	float JumpMaxHoldTime;
	int JumpMaxCount;
	int JumpCurrentCount;
	int JumpCurrentCountPreJump;
	struct FScriptMulticastDelegate OnReachedJumpApex;
	struct FScriptMulticastDelegate MovementModeChangedDelegate;
	struct FScriptMulticastDelegate OnCharacterMovementUpdated;
	struct RootMotionSourceGroup SavedRootMotion;
	struct RootMotionMovementParams ClientRootMotionParams;
	TArray<struct SimulatedRootMotionReplicatedMove> RootMotionRepMoves;
	struct RepRootMotionMontage RepRootMotion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStaticMeshComponent : public UMeshComponent
{
public:
	int ForcedLodModel;
	int PreviousLODLevel;
	int MinLOD;
	int SubDivisionStepSize;
	class UClass* StaticMesh;
	struct Color WireframeColorOverride;
	bool bEvaluateWorldPositionOffset;
	bool bOverrideWireframeColor;
	bool bOverrideMinLOD;
	bool bOverrideNavigationExport;
	bool bForceNavigationObstacle;
	bool bDisallowMeshPaintPerInstance;
	bool bIgnoreInstanceForTextureStreaming;
	bool bOverrideLightMapRes;
	bool bCastDistanceFieldIndirectShadow;
	bool bOverrideDistanceFieldSelfShadowBias;
	bool bUseSubDivisions;
	bool bUseDefaultCollision;
	bool bReverseCulling;
	int OverriddenLightMapRes;
	float DistanceFieldIndirectShadowMinVisibility;
	float DistanceFieldSelfShadowBias;
	float StreamingDistanceMultiplier;
	TArray<struct StaticMeshComponentLODInfo> LODData;
	TArray<struct StreamingTextureBuildInfo> StreamingTextureData;
	struct LightmassPrimitiveSettings LightmassSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameModeBase : public AInfo
{
public:
	struct FString OptionsString;
	class UClass* GameSessionClass;
	class UClass* GameStateClass;
	class UClass* PlayerControllerClass;
	class UClass* PlayerStateClass;
	class UClass* HUDClass;
	class UClass* DefaultPawnClass;
	class UClass* SpectatorClass;
	class UClass* ReplaySpectatorPlayerControllerClass;
	class UClass* ServerStatReplicatorClass;
	class UClass* GameSession;
	class UClass* GameState;
	class UClass* ServerStatReplicator;
	struct FText DefaultPlayerName;
	bool bUseSeamlessTravel;
	bool bStartPlayersAsSpectators;
	bool bPauseable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameMode : public AGameModeBase
{
public:
	struct FName MatchState;
	bool bDelayedStart;
	int NumSpectators;
	int NumPlayers;
	int NumBots;
	float MinRespawnDelay;
	int NumTravellingPlayers;
	class UClass* EngineMessageClass;
	TArray<class UClass*> InactivePlayerArray;
	float InactivePlayerStateLifeSpan;
	int MaxInactivePlayers;
	bool bHandleDedicatedServerReplays;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameStateBase : public AInfo
{
public:
	class UClass* GameModeClass;
	class UClass* AuthorityGameMode;
	class UClass* SpectatorClass;
	TArray<class UClass*> PlayerArray;
	bool bReplicatedHasBegunPlay;
	float ReplicatedWorldTimeSeconds;
	float ServerWorldTimeSecondsDelta;
	float ServerWorldTimeSecondsUpdateFrequency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameState : public AGameStateBase
{
public:
	struct FName MatchState;
	struct FName PreviousMatchState;
	int ElapsedTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationConnectionDriver : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationDriver : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimecodeProvider : public UObject
{
public:
	float FrameDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintGeneratedClass : public UClass
{
public:
	int NumReplicatedProperties;
	bool bHasNativizedParent;
	bool bHasCookedComponentInstancingData;
	TArray<class UClass*> DynamicBindingObjects;
	TArray<class UClass*> ComponentTemplates;
	TArray<class UClass*> Timelines;
	TArray<struct BPComponentClassOverride> ComponentClassOverrides;
	class UClass* SimpleConstructionScript;
	class UClass* InheritableComponentHandler;
	class UClass* UberGraphFramePointerProperty;
	class UClass* UberGraphFunction;
	Unknown CookedComponentInstancingData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChannel : public UObject
{
public:
	class UClass* Connection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovementComponent : public UActorComponent
{
public:
	class UClass* UpdatedComponent;
	class UClass* UpdatedPrimitive;
	struct Vector Velocity;
	struct Vector PlaneConstraintNormal;
	struct Vector PlaneConstraintOrigin;
	bool bUpdateOnlyIfRendered;
	bool bAutoUpdateTickRegistration;
	bool bTickBeforeOwner;
	bool bAutoRegisterUpdatedComponent;
	bool bConstrainToPlane;
	bool bSnapToPlaneAtStart;
	bool bAutoRegisterPhysicsVolumeUpdates;
	bool bComponentShouldUpdatePhysicsVolume;
	EPlaneConstraintAxisSetting PlaneConstraintAxisSetting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavMovementComponent : public UMovementComponent
{
public:
	struct NavAgentProperties NavAgentProps;
	float FixedPathBrakingDistance;
	bool bUpdateNavAgentWithOwnersCollision;
	bool bUseAccelerationForPaths;
	bool bUseFixedBrakingDistanceForPaths;
	struct MovementProperties MovementState;
	class UClass* PathFollowingComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnMovementComponent : public UNavMovementComponent
{
public:
	class UClass* PawnOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundBase : public UObject
{
public:
	class UClass* SoundClassObject;
	bool bDebug;
	bool bOverrideConcurrency;
	bool bOutputToBusOnly;
	bool bHasDelayNode;
	bool bHasConcatenatorNode;
	bool bBypassVolumeScaleForPriority;
	EVirtualizationMode VirtualizationMode;
	Unknown ConcurrencySet;
	struct SoundConcurrencySettings ConcurrencyOverrides;
	float Duration;
	float MaxDistance;
	float TotalSamples;
	float Priority;
	class UClass* AttenuationSettings;
	class UClass* SoundSubmixObject;
	TArray<struct SoundSubmixSendInfo> SoundSubmixSends;
	class UClass* SourceEffectChain;
	TArray<struct SoundSourceBusSendInfo> BusSends;
	TArray<struct SoundSourceBusSendInfo> PreEffectBusSends;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundCue : public USoundBase
{
public:
	bool bPrimeOnLoad;
	class UClass* FirstNode;
	float VolumeMultiplier;
	float PitchMultiplier;
	struct SoundAttenuationSettings AttenuationOverrides;
	float SubtitlePriority;
	bool bOverrideAttenuation;
	bool bExcludeFromRandomNodeBranchCulling;
	int CookedQualityIndex;
	bool bHasPlayWhenSilent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioEngineSubsystem : public UDynamicSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimBoneCompressionCodec : public UObject
{
public:
	struct FString Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCurveCompressionCodec : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStreamableRenderAsset : public UObject
{
public:
	double ForceMipLevelsToBeResidentTimestamp;
	int NumCinematicMipLevels;
	int StreamingIndex;
	int CachedCombinedLODBias;
	bool NeverStream;
	bool bGlobalForceMipLevelsToBeResident;
	bool bHasStreamingUpdatePending;
	bool bForceMiplevelsToBeResident;
	bool bIgnoreStreamingMipBias;
	bool bUseCinematicMipLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTexture : public UStreamableRenderAsset
{
public:
	struct Guid LightingGuid;
	int LODBias;
	ETextureCompressionSettings CompressionSettings;
	ETextureFilter Filter;
	ETextureMipLoadOptions MipLoadOptions;
	ETextureGroup LODGroup;
	struct PerPlatformFloat Downscale;
	ETextureDownscaleOptions DownscaleOptions;
	bool SRGB;
	bool bNoTiling;
	bool VirtualTextureStreaming;
	bool CompressionYCoCg;
	bool bNotOfflineProcessed;
	bool bAsyncResourceReleaseHasBeenStarted;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASpectatorPawn : public ADefaultPawn
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USceneCaptureComponent : public USceneComponent
{
public:
	ESceneCapturePrimitiveRenderMode PrimitiveRenderMode;
	ESceneCaptureSource CaptureSource;
	bool bCaptureEveryFrame;
	bool bCaptureOnMovement;
	bool bAlwaysPersistRenderingState;
	TArray<Unknown> HiddenComponents;
	TArray<class UClass*> HiddenActors;
	TArray<Unknown> ShowOnlyComponents;
	TArray<class UClass*> ShowOnlyActors;
	float LODDistanceFactor;
	float MaxViewDistanceOverride;
	int CaptureSortPriority;
	bool bUseRayTracingIfEnabled;
	TArray<struct EngineShowFlagsSetting> ShowFlagSettings;
	struct FString ProfilingEventName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USceneCaptureComponent2D : public USceneCaptureComponent
{
public:
	ECameraProjectionMode ProjectionType;
	float FOVAngle;
	float OrthoWidth;
	class UClass* TextureTarget;
	ESceneCaptureCompositeMode CompositeMode;
	struct PostProcessSettings PostProcessSettings;
	float PostProcessBlendWeight;
	bool bOverride_CustomNearClippingPlane;
	float CustomNearClippingPlane;
	bool bUseCustomProjectionMatrix;
	struct Matrix CustomProjectionMatrix;
	bool bEnableOrthographicTiling;
	int NumXTiles;
	int NumYTiles;
	bool bEnableClipPlane;
	struct Vector ClipPlaneBase;
	struct Vector ClipPlaneNormal;
	bool bCameraCutThisFrame;
	bool bConsiderUnrenderedOpaquePixelAsFullyTranslucent;
	bool bDisableFlipCopyGLES;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISystemBase : public UObject
{
public:
	struct SoftClassPath AISystemClassName;
	struct FName AISystemModuleName;
	bool bInstantiateAISystemOnClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAvoidanceManager : public UObject
{
public:
	float DefaultTimeToLive;
	float LockTimeAfterAvoid;
	float LockTimeAfterClean;
	float DeltaTimeToPredict;
	float ArtificialRadiusExpansion;
	float TestHeightDifference;
	float HeightCheckMargin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProjectileMovementComponent : public UMovementComponent
{
public:
	float InitialSpeed;
	float MaxSpeed;
	bool bRotationFollowsVelocity;
	bool bRotationRemainsVertical;
	bool bShouldBounce;
	bool bInitialVelocityInLocalSpace;
	bool bForceSubStepping;
	bool bSimulationEnabled;
	bool bSweepCollision;
	bool bIsHomingProjectile;
	bool bBounceAngleAffectsFriction;
	bool bIsSliding;
	bool bInterpMovement;
	bool bInterpRotation;
	float PreviousHitTime;
	struct Vector PreviousHitNormal;
	float ProjectileGravityScale;
	float Buoyancy;
	float Bounciness;
	float Friction;
	float BounceVelocityStopSimulatingThreshold;
	float MinFrictionFraction;
	struct FScriptMulticastDelegate OnProjectileBounce;
	struct FScriptMulticastDelegate OnProjectileStop;
	float HomingAccelerationMagnitude;
	Unknown HomingTargetComponent;
	float MaxSimulationTimeStep;
	int MaxSimulationIterations;
	int BounceAdditionalIterations;
	float InterpLocationTime;
	float InterpRotationTime;
	float InterpLocationMaxLagDistance;
	float InterpLocationSnapToTargetDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChildActorComponent : public USceneComponent
{
public:
	class UClass* ChildActorClass;
	class UClass* ChildActor;
	class UClass* ChildActorTemplate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorld : public UObject
{
public:
	class UClass* PersistentLevel;
	class UClass* NetDriver;
	class UClass* LineBatcher;
	class UClass* PersistentLineBatcher;
	class UClass* ForegroundLineBatcher;
	class UClass* NetworkManager;
	class UClass* PhysicsCollisionHandler;
	TArray<class UClass*> ExtraReferencedObjects;
	TArray<class UClass*> PerModuleDataObjects;
	TArray<class UClass*> StreamingLevels;
	struct StreamingLevelsToConsider StreamingLevelsToConsider;
	struct FString StreamingLevelsPrefix;
	class UClass* CurrentLevelPendingVisibility;
	class UClass* CurrentLevelPendingInvisibility;
	class UClass* DemoNetDriver;
	class UClass* MyParticleEventManager;
	class UClass* DefaultPhysicsVolume;
	bool bAreConstraintsDirty;
	class UClass* NavigationSystem;
	class UClass* AuthorityGameMode;
	class UClass* GameState;
	class UClass* AISystem;
	class UClass* AvoidanceManager;
	TArray<class UClass*> Levels;
	TArray<struct LevelCollection> LevelCollections;
	class UClass* OwningGameInstance;
	TArray<class UClass*> ParameterCollectionInstances;
	class UClass* CanvasForRenderingToTarget;
	class UClass* CanvasForDrawMaterialToRenderTarget;
	class UClass* PhysicsField;
	Unknown ComponentsThatNeedPreEndOfFrameSync;
	TArray<class UClass*> ComponentsThatNeedEndOfFrameUpdate;
	TArray<class UClass*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread;
	class UClass* WorldComposition;
	struct WorldPSCPool PSCPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationSystemBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationSystemConfig : public UObject
{
public:
	struct SoftClassPath NavigationSystemClass;
	struct NavAgentSelector SupportedAgentsMask;
	struct FName DefaultAgentName;
	bool bIsOverriden;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavAreaBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACameraActor : public AActor
{
public:
	EAutoReceiveInput AutoActivateForPlayer;
	class UClass* CameraComponent;
	class UClass* SceneComponent;
	bool bConstrainAspectRatio;
	float AspectRatio;
	float FOVAngle;
	float PostProcessBlendWeight;
	struct PostProcessSettings PostProcessSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleSystem : public UFXSystemAsset
{
public:
	float UpdateTime_FPS;
	float UpdateTime_Delta;
	float WarmupTime;
	float WarmupTickRate;
	TArray<class UClass*> Emitters;
	class UClass* PreviewComponent;
	class UClass* CurveEdSetup;
	float LODDistanceCheckTime;
	float MacroUVRadius;
	TArray<float> LODDistances;
	TArray<struct ParticleSystemLOD> LODSettings;
	struct Box FixedRelativeBoundingBox;
	float SecondsBeforeInactive;
	float Delay;
	float DelayLow;
	bool bOrientZAxisTowardCamera;
	bool bUseFixedRelativeBoundingBox;
	bool bShouldResetPeakCounts;
	bool bHasPhysics;
	bool bUseRealtimeThumbnail;
	bool ThumbnailImageOutOfDate;
	bool bUseDelayRange;
	bool bAllowManagedTicking;
	bool bAutoDeactivate;
	bool bRegenerateLODDuplicate;
	EParticleSystemUpdateMode SystemUpdateMode;
	EParticleSystemLODMethod LODMethod;
	EParticleSystemInsignificanceReaction InsignificantReaction;
	EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod;
	EParticleSignificanceLevel MaxSignificanceLevel;
	uint32_t MinTimeBetweenTicks;
	float InsignificanceDelay;
	struct Vector MacroUVPosition;
	struct Box CustomOcclusionBounds;
	TArray<struct LODSoloTrack> SoloTracking;
	TArray<struct NamedEmitterMaterial> NamedMaterialSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModule : public UObject
{
public:
	bool bSpawnModule;
	bool bUpdateModule;
	bool bFinalUpdateModule;
	bool bUpdateForGPUEmitter;
	bool bCurvesAsColor;
	bool b3DDrawMode;
	bool bSupported3DDrawMode;
	bool bEnabled;
	bool bEditable;
	bool LODDuplicate;
	bool bSupportsRandomSeed;
	bool bRequiresLoopingNotification;
	byte LODValidity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USaveGame : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_PlaySound : public UAnimNotify
{
public:
	class UClass* Sound;
	float VolumeMultiplier;
	float PitchMultiplier;
	bool bFollow;
	struct FName AttachName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_PlayParticleEffect : public UAnimNotify
{
public:
	class UClass* PSTemplate;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	struct Vector Scale;
	bool Attached;
	struct FName SocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetManager : public UObject
{
public:
	TArray<class UClass*> ObjectReferenceList;
	bool bIsGlobalAsyncScanEnvironment;
	bool bShouldGuessTypeAndName;
	bool bShouldUseSynchronousLoad;
	bool bIsLoadingFromPakFiles;
	bool bShouldAcquireMissingChunksOnLoad;
	bool bOnlyCookProductionAssets;
	int NumBulkScanRequests;
	bool bIsPrimaryAssetDirectoryCurrent;
	bool bIsManagementDatabaseCurrent;
	bool bUpdateManagementDatabaseAfterScan;
	bool bIncludeOnlyOnDiskAssets;
	bool bHasCompletedInitialScan;
	int NumberOfSpawnedNotifications;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AStaticMeshActor : public AActor
{
public:
	class UClass* StaticMeshComponent;
	bool bStaticMeshReplicateMovement;
	ENavDataGatheringMode NavigationGeometryGatheringMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveVector : public UCurveBase
{
public:
	struct RichCurve FloatCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimMetaData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraModifier : public UObject
{
public:
	bool bDebug;
	bool bExclusive;
	byte Priority;
	class UClass* CameraOwner;
	float AlphaInTime;
	float AlphaOutTime;
	float Alpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConsole : public UObject
{
public:
	class UClass* ConsoleTargetPlayer;
	class UClass* DefaultTexture_Black;
	class UClass* DefaultTexture_White;
	TArray<struct FString> HistoryBuffer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADebugCameraController : public APlayerController
{
public:
	bool bShowSelectedInfo;
	bool bIsFrozenRendering;
	bool bIsOrbitingSelectedActor;
	bool bOrbitPivotUseCenter;
	bool bEnableBufferVisualization;
	bool bEnableBufferVisualizationFullMode;
	bool bIsBufferVisualizationInputSetup;
	bool bLastDisplayEnabled;
	class UClass* DrawFrustum;
	class UClass* SelectedActor;
	class UClass* SelectedComponent;
	struct HitResult SelectedHitPoint;
	class UClass* OriginalControllerRef;
	class UClass* OriginalPlayer;
	float SpeedScale;
	float InitialMaxSpeed;
	float InitialAccel;
	float InitialDecel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AEmitter : public AActor
{
public:
	class UClass* ParticleSystemComponent;
	bool bDestroyOnSystemFinish;
	bool bPostUpdateTickGroup;
	bool bCurrentlyActive;
	struct FScriptMulticastDelegate OnParticleSpawn;
	struct FScriptMulticastDelegate OnParticleBurst;
	struct FScriptMulticastDelegate OnParticleDeath;
	struct FScriptMulticastDelegate OnParticleCollide;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AEmitterCameraLensEffectBase : public AEmitter
{
public:
	class UClass* PS_CameraEffect;
	class UClass* PS_CameraEffectNonExtremeContent;
	class UClass* BaseCamera;
	struct Transform RelativeTransform;
	float BaseFOV;
	bool bAllowMultipleInstances;
	bool bResetWhenRetriggered;
	TArray<class UClass*> EmittersToTreatAsSame;
	float DistFromCamera;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameEngine : public UEngine
{
public:
	float MaxDeltaTime;
	float ServerFlushLogInterval;
	class UClass* GameInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameSession : public AInfo
{
public:
	int MaxSpectators;
	int MaxPlayers;
	int MaxPartySize;
	byte MaxSplitscreensPerConnection;
	bool bRequiresPushToTalk;
	struct FName SessionName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameUserSettings : public UObject
{
public:
	bool bUseVSync;
	bool bUseDynamicResolution;
	uint32_t ResolutionSizeX;
	uint32_t ResolutionSizeY;
	uint32_t LastUserConfirmedResolutionSizeX;
	uint32_t LastUserConfirmedResolutionSizeY;
	int WindowPosX;
	int WindowPosY;
	int FullscreenMode;
	int LastConfirmedFullscreenMode;
	int PreferredFullscreenMode;
	uint32_t Version;
	int AudioQualityLevel;
	int LastConfirmedAudioQualityLevel;
	float FrameRateLimit;
	int DesiredScreenWidth;
	bool bUseDesiredScreenHeight;
	int DesiredScreenHeight;
	int LastUserConfirmedDesiredScreenWidth;
	int LastUserConfirmedDesiredScreenHeight;
	float LastRecommendedScreenWidth;
	float LastRecommendedScreenHeight;
	float LastCPUBenchmarkResult;
	float LastGPUBenchmarkResult;
	TArray<float> LastCPUBenchmarkSteps;
	TArray<float> LastGPUBenchmarkSteps;
	float LastGPUBenchmarkMultiplier;
	bool bUseHDRDisplayOutput;
	int HDRDisplayOutputNits;
	struct FScriptMulticastDelegate OnGameUserSettingsUINeedsUpdate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioComponent : public USceneComponent
{
public:
	class UClass* Sound;
	TArray<struct AudioComponentParam> InstanceParameters;
	class UClass* SoundClassOverride;
	bool bAutoDestroy;
	bool bStopWhenOwnerDestroyed;
	bool bShouldRemainActiveIfDropped;
	bool bAllowSpatialization;
	bool bOverrideAttenuation;
	bool bOverrideSubtitlePriority;
	bool bIsUISound;
	bool bEnableLowPassFilter;
	bool bOverridePriority;
	bool bSuppressSubtitles;
	bool bAutoManageAttachment;
	struct FName AudioComponentUserID;
	float PitchModulationMin;
	float PitchModulationMax;
	float VolumeModulationMin;
	float VolumeModulationMax;
	float VolumeMultiplier;
	int EnvelopeFollowerAttackTime;
	int EnvelopeFollowerReleaseTime;
	float Priority;
	float SubtitlePriority;
	class UClass* SourceEffectChain;
	float PitchMultiplier;
	float LowPassFilterFrequency;
	class UClass* AttenuationSettings;
	struct SoundAttenuationSettings AttenuationOverrides;
	class UClass* ConcurrencySettings;
	Unknown ConcurrencySet;
	EAttachmentRule AutoAttachLocationRule;
	EAttachmentRule AutoAttachRotationRule;
	EAttachmentRule AutoAttachScaleRule;
	struct SoundModulationDefaultRoutingSettings ModulationRouting;
	struct FScriptMulticastDelegate OnAudioPlayStateChanged;
	struct FScriptMulticastDelegate OnAudioVirtualizationChanged;
	struct FScriptMulticastDelegate OnAudioFinished;
	struct FScriptMulticastDelegate OnAudioPlaybackPercent;
	struct FScriptMulticastDelegate OnAudioSingleEnvelopeValue;
	struct FScriptMulticastDelegate OnAudioMultiEnvelopeValue;
	struct FDelegate OnQueueSubtitles;
	Unknown AutoAttachParent;
	struct FName AutoAttachSocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraComponent : public USceneComponent
{
public:
	float FieldOfView;
	float OrthoWidth;
	float OrthoNearClipPlane;
	float OrthoFarClipPlane;
	float AspectRatio;
	bool bConstrainAspectRatio;
	bool bUseFieldOfViewForLOD;
	bool bLockToHmd;
	bool bUsePawnControlRotation;
	ECameraProjectionMode ProjectionMode;
	float PostProcessBlendWeight;
	struct PostProcessSettings PostProcessSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetUserData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALevelScriptActor : public AActor
{
public:
	bool bInputEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightComponentBase : public USceneComponent
{
public:
	struct Guid LightGuid;
	float Brightness;
	float Intensity;
	struct Color LightColor;
	bool bAffectsWorld;
	bool CastShadows;
	bool CastStaticShadows;
	bool CastDynamicShadows;
	bool bAffectTranslucentLighting;
	bool bTransmission;
	bool bCastVolumetricShadow;
	bool bCastDeepShadow;
	bool bCastRaytracedShadow;
	bool bAffectReflection;
	bool bAffectGlobalIllumination;
	float DeepShadowLayerDistribution;
	float IndirectLightingIntensity;
	float VolumetricScatteringIntensity;
	int SamplesPerPixel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightComponent : public ULightComponentBase
{
public:
	float Temperature;
	float MaxDrawDistance;
	float MaxDistanceFadeRange;
	bool bUseTemperature;
	int ShadowMapChannel;
	float MinRoughness;
	float SpecularScale;
	float ShadowResolutionScale;
	float ShadowBias;
	float ShadowSlopeBias;
	float ShadowSharpen;
	float ContactShadowLength;
	bool ContactShadowLengthInWS;
	bool InverseSquaredFalloff;
	bool CastTranslucentShadows;
	bool bCastShadowsFromCinematicObjectsOnly;
	bool bAffectDynamicIndirectLighting;
	bool bForceCachedShadowsForMovablePrimitives;
	struct LightingChannels LightingChannels;
	class UClass* LightFunctionMaterial;
	struct Vector LightFunctionScale;
	class UClass* IESTexture;
	bool bUseIESBrightness;
	float IESBrightnessScale;
	float LightFunctionFadeDistance;
	float DisabledBrightness;
	bool bEnableLightShaftBloom;
	float BloomScale;
	float BloomThreshold;
	float BloomMaxBrightness;
	struct Color BloomTint;
	bool bUseRayTracedDistanceFieldShadows;
	float RayStartOffsetDepthScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalLightComponent : public ULightComponent
{
public:
	ELightUnits IntensityUnits;
	float Radius;
	float AttenuationRadius;
	struct LightmassPointLightSettings LightmassSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPointLightComponent : public ULocalLightComponent
{
public:
	bool bUseInverseSquaredFalloff;
	float LightFalloffExponent;
	float SourceRadius;
	float SoftSourceRadius;
	float SourceLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpotLightComponent : public UPointLightComponent
{
public:
	float InnerConeAngle;
	float OuterConeAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputComponent : public UActorComponent
{
public:
	TArray<struct CachedKeyToActionInfo> CachedKeyToActionInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCharacterMovementComponent : public UPawnMovementComponent
{
public:
	class UClass* CharacterOwner;
	float GravityScale;
	float MaxStepHeight;
	float JumpZVelocity;
	float JumpOffJumpZFactor;
	float WalkableFloorAngle;
	float WalkableFloorZ;
	EMovementMode MovementMode;
	byte CustomMovementMode;
	ENetworkSmoothingMode NetworkSmoothingMode;
	float GroundFriction;
	float MaxWalkSpeed;
	float MaxWalkSpeedCrouched;
	float MaxSwimSpeed;
	float MaxFlySpeed;
	float MaxCustomMovementSpeed;
	float MaxAcceleration;
	float MinAnalogWalkSpeed;
	float BrakingFrictionFactor;
	float BrakingFriction;
	float BrakingSubStepTime;
	float BrakingDecelerationWalking;
	float BrakingDecelerationFalling;
	float BrakingDecelerationSwimming;
	float BrakingDecelerationFlying;
	float AirControl;
	float AirControlBoostMultiplier;
	float AirControlBoostVelocityThreshold;
	float FallingLateralFriction;
	float CrouchedHalfHeight;
	float Buoyancy;
	float PerchRadiusThreshold;
	float PerchAdditionalHeight;
	struct Rotator RotationRate;
	bool bUseSeparateBrakingFriction;
	bool bApplyGravityWhileJumping;
	bool bUseControllerDesiredRotation;
	bool bOrientRotationToMovement;
	bool bSweepWhileNavWalking;
	bool bMovementInProgress;
	bool bEnableScopedMovementUpdates;
	bool bEnableServerDualMoveScopedMovementUpdates;
	bool bForceMaxAccel;
	bool bRunPhysicsWithNoController;
	bool bForceNextFloorCheck;
	bool bShrinkProxyCapsule;
	bool bCanWalkOffLedges;
	bool bCanWalkOffLedgesWhenCrouching;
	bool bNetworkSkipProxyPredictionOnNetUpdate;
	bool bNetworkAlwaysReplicateTransformUpdateTimestamp;
	bool bDeferUpdateMoveComponent;
	bool bEnablePhysicsInteraction;
	bool bTouchForceScaledToMass;
	bool bPushForceScaledToMass;
	bool bPushForceUsingZOffset;
	bool bScalePushForceToVelocity;
	class UClass* DeferredUpdatedMoveComponent;
	float MaxOutOfWaterStepHeight;
	float OutofWaterZ;
	float Mass;
	float StandingDownwardForceScale;
	float InitialPushForceFactor;
	float PushForceFactor;
	float PushForcePointZOffsetFactor;
	float TouchForceFactor;
	float MinTouchForce;
	float MaxTouchForce;
	float RepulsionForce;
	struct Vector Acceleration;
	struct Quat LastUpdateRotation;
	struct Vector LastUpdateLocation;
	struct Vector LastUpdateVelocity;
	float ServerLastTransformUpdateTimeStamp;
	float ServerLastClientGoodMoveAckTime;
	float ServerLastClientAdjustmentTime;
	struct Vector PendingImpulseToApply;
	struct Vector PendingForceToApply;
	float AnalogInputModifier;
	float MaxSimulationTimeStep;
	int MaxSimulationIterations;
	int MaxJumpApexAttemptsPerSimulation;
	float MaxDepenetrationWithGeometry;
	float MaxDepenetrationWithGeometryAsProxy;
	float MaxDepenetrationWithPawn;
	float MaxDepenetrationWithPawnAsProxy;
	float NetworkSimulatedSmoothLocationTime;
	float NetworkSimulatedSmoothRotationTime;
	float ListenServerNetworkSimulatedSmoothLocationTime;
	float ListenServerNetworkSimulatedSmoothRotationTime;
	float NetProxyShrinkRadius;
	float NetProxyShrinkHalfHeight;
	float NetworkMaxSmoothUpdateDistance;
	float NetworkNoSmoothUpdateDistance;
	float NetworkMinTimeBetweenClientAckGoodMoves;
	float NetworkMinTimeBetweenClientAdjustments;
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection;
	float NetworkLargeClientCorrectionDistance;
	float LedgeCheckThreshold;
	float JumpOutOfWaterPitch;
	struct FindFloorResult CurrentFloor;
	EMovementMode DefaultLandMovementMode;
	EMovementMode DefaultWaterMovementMode;
	EMovementMode GroundMovementMode;
	bool bMaintainHorizontalGroundVelocity;
	bool bImpartBaseVelocityX;
	bool bImpartBaseVelocityY;
	bool bImpartBaseVelocityZ;
	bool bImpartBaseAngularVelocity;
	bool bJustTeleported;
	bool bNetworkUpdateReceived;
	bool bNetworkMovementModeChanged;
	bool bIgnoreClientMovementErrorChecksAndCorrection;
	bool bServerAcceptClientAuthoritativePosition;
	bool bNotifyApex;
	bool bCheatFlying;
	bool bWantsToCrouch;
	bool bCrouchMaintainsBaseLocation;
	bool bIgnoreBaseRotation;
	bool bFastAttachedMove;
	bool bAlwaysCheckFloor;
	bool bUseFlatBaseForFloorChecks;
	bool bPerformingJumpOff;
	bool bWantsToLeaveNavWalking;
	bool bUseRVOAvoidance;
	bool bRequestedMoveUseAcceleration;
	bool bWasSimulatingRootMotion;
	bool bAllowPhysicsRotationDuringAnimRootMotion;
	bool bHasRequestedVelocity;
	bool bRequestedMoveWithMaxSpeed;
	bool bWasAvoidanceUpdated;
	bool bProjectNavMeshWalking;
	bool bProjectNavMeshOnBothWorldChannels;
	float AvoidanceConsiderationRadius;
	struct Vector RequestedVelocity;
	int AvoidanceUID;
	struct NavAvoidanceMask AvoidanceGroup;
	struct NavAvoidanceMask GroupsToAvoid;
	struct NavAvoidanceMask GroupsToIgnore;
	float AvoidanceWeight;
	struct Vector PendingLaunchVelocity;
	float NavMeshProjectionInterval;
	float NavMeshProjectionTimer;
	float NavMeshProjectionInterpSpeed;
	float NavMeshProjectionHeightScaleUp;
	float NavMeshProjectionHeightScaleDown;
	float NavWalkingFloorDistTolerance;
	struct CharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction;
	float MinTimeBetweenTimeStampResets;
	struct RootMotionSourceGroup CurrentRootMotion;
	struct RootMotionSourceGroup ServerCorrectionRootMotion;
	struct RootMotionMovementParams RootMotionParams;
	struct Vector AnimRootMotionVelocity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkDefinition : public UObject
{
public:
	TArray<struct NavigationLink> Links;
	TArray<struct NavigationSegmentLink> SegmentLinks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalMessage : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavigationObjectBase : public AActor
{
public:
	class UClass* CapsuleComponent;
	class UClass* GoodSprite;
	class UClass* BadSprite;
	bool bIsPIEPlayerStart;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayerCameraManager : public AActor
{
public:
	class UClass* PCOwner;
	class UClass* TransformComponent;
	float DefaultFOV;
	float DefaultOrthoWidth;
	float DefaultAspectRatio;
	struct CameraCacheEntry CameraCache;
	struct CameraCacheEntry LastFrameCameraCache;
	struct TViewTarget ViewTarget;
	struct TViewTarget PendingViewTarget;
	struct CameraCacheEntry CameraCachePrivate;
	struct CameraCacheEntry LastFrameCameraCachePrivate;
	TArray<class UClass*> ModifierList;
	TArray<class UClass*> DefaultModifiers;
	float FreeCamDistance;
	struct Vector FreeCamOffset;
	struct Vector ViewTargetOffset;
	struct FScriptMulticastDelegate OnAudioFadeChangeEvent;
	TArray<Unknown> CameraLensEffects;
	class UClass* CachedCameraShakeMod;
	class UClass* AnimInstPool;
	TArray<struct PostProcessSettings> PostProcessBlendCache;
	TArray<class UClass*> ActiveAnims;
	TArray<class UClass*> FreeAnims;
	class UClass* AnimCameraActor;
	bool bIsOrthographic;
	bool bDefaultConstrainAspectRatio;
	bool bClientSimulatingViewTarget;
	bool bUseClientSideCameraUpdates;
	bool bGameCameraCutThisFrame;
	float ViewPitchMin;
	float ViewPitchMax;
	float ViewYawMin;
	float ViewYawMax;
	float ViewRollMin;
	float ViewRollMax;
	float ServerUpdateCameraTimeout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayerInput : public UObject
{
public:
	TArray<struct KeyBind> DebugExecBindings;
	TArray<struct FName> InvertedAxis;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkeletalMeshActor : public AActor
{
public:
	bool bShouldDoAnimNotifies;
	bool bWakeOnLevelStart;
	class UClass* SkeletalMeshComponent;
	class UClass* ReplicatedMesh;
	class UClass* ReplicatedPhysAsset;
	class UClass* ReplicatedMaterial0;
	class UClass* ReplicatedMaterial1;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayerStart : public ANavigationObjectBase
{
public:
	struct FName PlayerStartTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayerState : public AInfo
{
public:
	float Score;
	int PlayerID;
	byte Ping;
	bool bShouldUpdateReplicatedPing;
	bool bIsSpectator;
	bool bOnlySpectator;
	bool bIsABot;
	bool bIsInactive;
	bool bFromPreviousLevel;
	int StartTime;
	class UClass* EngineMessageClass;
	struct FString SavedNetworkAddress;
	struct UniqueNetIdRepl UniqueId;
	class UClass* PawnPrivate;
	struct FString PlayerNamePrivate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCapsuleComponent : public UShapeComponent
{
public:
	float CapsuleHalfHeight;
	float CapsuleRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URuntimeOptionsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNode : public UObject
{
public:
	TArray<class UClass*> ChildNodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWorldSettings : public AInfo
{
public:
	int VisibilityCellSize;
	EVisibilityAggressiveness VisibilityAggressiveness;
	bool bPrecomputeVisibility;
	bool bPlaceCellsOnlyAlongCameraTracks;
	bool bEnableWorldBoundsChecks;
	bool bEnableNavigationSystem;
	bool bEnableAISystem;
	bool bEnableWorldComposition;
	bool bUseClientSideLevelStreamingVolumes;
	bool bEnableWorldOriginRebasing;
	bool bWorldGravitySet;
	bool bGlobalGravitySet;
	bool bMinimizeBSPSections;
	bool bForceNoPrecomputedLighting;
	bool bHighPriorityLoading;
	bool bHighPriorityLoadingLocal;
	bool bOverrideDefaultBroadphaseSettings;
	class UClass* NavigationSystemConfig;
	class UClass* NavigationSystemConfigOverride;
	float WorldToMeters;
	float KillZ;
	class UClass* KillZDamageType;
	float WorldGravityZ;
	float GlobalGravityZ;
	class UClass* DefaultPhysicsVolumeClass;
	class UClass* PhysicsCollisionHandlerClass;
	class UClass* DefaultGameMode;
	class UClass* GameNetworkManagerClass;
	int PackedLightAndShadowMapTextureSize;
	struct Vector DefaultColorScale;
	float DefaultMaxDistanceFieldOcclusionDistance;
	float GlobalDistanceFieldViewDistance;
	float DynamicIndirectShadowsSelfShadowingIntensity;
	struct ReverbSettings DefaultReverbSettings;
	struct InteriorSettings DefaultAmbientZoneSettings;
	float MonoCullingDistance;
	class UClass* DefaultBaseSoundMix;
	float TimeDilation;
	float MatineeTimeDilation;
	float DemoPlayTimeDilation;
	float MinGlobalTimeDilation;
	float MaxGlobalTimeDilation;
	float MinUndilatedFrameTime;
	float MaxUndilatedFrameTime;
	struct BroadphaseSettings BroadphaseSettings;
	class UClass* Pauser;
	TArray<struct NetViewer> ReplicationViewers;
	TArray<class UClass*> AssetUserData;
	class UClass* PauserPlayerState;
	int MaxNumberOfBookmarks;
	class UClass* DefaultBookmarkClass;
	TArray<class UClass*> BookmarkArray;
	class UClass* LastBookmarkClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFloatingPawnMovement : public UPawnMovementComponent
{
public:
	float MaxSpeed;
	float Acceleration;
	float Deceleration;
	float TurningBoost;
	bool bPositionCorrected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpectatorPawnMovement : public UFloatingPawnMovement
{
public:
	bool bIgnoreTimeDilation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyLight : public AInfo
{
public:
	class UClass* LightComponent;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureCube : public UTexture
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInstancedStaticMeshComponent : public UStaticMeshComponent
{
public:
	TArray<struct InstancedStaticMeshInstanceData> PerInstanceSMData;
	int NumCustomDataFloats;
	TArray<float> PerInstanceSMCustomData;
	int InstancingRandomSeed;
	int InstanceStartCullDistance;
	int InstanceEndCullDistance;
	TArray<int> InstanceReorderTable;
	int NumPendingLightmaps;
	TArray<struct InstancedStaticMeshMappingInfo> CachedMappings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{
public:
	TArray<int> SortedInstances;
	int NumBuiltInstances;
	struct Box BuiltInstanceBounds;
	struct Box UnbuiltInstanceBounds;
	TArray<struct Box> UnbuiltInstanceBoundsList;
	bool bEnableDensityScaling;
	int OcclusionLayerNumNodes;
	struct BoxSphereBounds CacheMeshExtendedBounds;
	bool bDisableCollision;
	int InstanceCountToRender;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialInterface : public UObject
{
public:
	class UClass* SubsurfaceProfile;
	struct LightmassMaterialInterfaceSettings LightmassSettings;
	TArray<struct MaterialTextureInfo> TextureStreamingData;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialInstance : public UMaterialInterface
{
public:
	class UClass* PhysMaterial;
	class UClass* PhysicalMaterialMap;
	class UClass* Parent;
	bool bHasStaticPermutationResource;
	bool bOverrideSubsurfaceProfile;
	TArray<struct ScalarParameterValue> ScalarParameterValues;
	TArray<struct VectorParameterValue> VectorParameterValues;
	TArray<struct TextureParameterValue> TextureParameterValues;
	TArray<struct RuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues;
	TArray<struct FontParameterValue> FontParameterValues;
	struct MaterialInstanceBasePropertyOverrides BasePropertyOverrides;
	struct StaticParameterSet StaticParameters;
	struct MaterialCachedParameters CachedLayerParameters;
	TArray<class UClass*> CachedReferencedTextures;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialInstanceConstant : public UMaterialInstance
{
public:
	class UClass* PhysMaterialMask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCustomOutput : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEngineCustomTimeStep : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicBlueprintBinding : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundWave : public USoundBase
{
public:
	int CompressionQuality;
	int StreamingPriority;
	ESoundwaveSampleRateSettings SampleRateQuality;
	ESoundGroup SoundGroup;
	bool bLooping;
	bool bStreaming;
	bool bSeekableStreaming;
	ESoundWaveLoadingBehavior LoadingBehavior;
	bool bMature;
	bool bManualWordWrap;
	bool bSingleLine;
	bool bIsAmbisonics;
	struct SoundModulationDefaultRoutingSettings ModulationSettings;
	TArray<float> FrequenciesToAnalyze;
	TArray<struct SoundWaveSpectralTimeData> CookedSpectralTimeData;
	TArray<struct SoundWaveEnvelopeTimeData> CookedEnvelopeTimeData;
	int InitialChunkSize;
	struct FString SpokenText;
	float SubtitlePriority;
	float Volume;
	float Pitch;
	int NumChannels;
	int SampleRate;
	TArray<struct SubtitleCue> Subtitles;
	class UClass* Curves;
	class UClass* InternalCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundWaveProcedural : public USoundWave
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UModel : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UActiveSoundUpdateInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UActorChannel : public UChannel
{
public:
	class UClass* Actor;
	TArray<class UClass*> CreateSubObjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationAsset : public UObject
{
public:
	class UClass* Skeleton;
	TArray<class UClass*> MetaData;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlendSpaceBase : public UAnimationAsset
{
public:
	bool bRotationBlendInMeshSpace;
	float AnimLength;
	struct InterpolationParameter InterpolationParam;
	float TargetWeightInterpolationSpeedPerSec;
	ENotifyTriggerMode NotifyTriggerMode;
	TArray<struct PerBoneInterpolation> PerBoneBlend;
	int SampleIndexWithMarkers;
	TArray<struct BlendSample> SampleData;
	TArray<struct EditorElement> GridSamples;
	struct BlendParameter BlendParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlendSpace : public UBlendSpaceBase
{
public:
	EBlendSpaceAxis AxisToScaleAnimation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAimOffsetBlendSpace : public UBlendSpace
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlendSpace1D : public UBlendSpaceBase
{
public:
	bool bScaleAnimation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAimOffsetBlendSpace1D : public UBlendSpace1D
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAmbientSound : public AActor
{
public:
	class UClass* AudioComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimationSettings : public UDeveloperSettings
{
public:
	int CompressCommandletVersion;
	TArray<struct FString> KeyEndEffectorsMatchNameArray;
	bool ForceRecompression;
	bool bForceBelowThreshold;
	bool bFirstRecompressUsingCurrentOrDefault;
	bool bRaiseMaxErrorToExisting;
	bool bEnablePerformanceLog;
	bool bStripAnimationDataOnDedicatedServer;
	bool bTickAnimationOnSkeletalMeshInit;
	TArray<struct CustomAttributeSetting> BoneCustomAttributesNames;
	TArray<struct FString> BoneNamesWithCustomAttributes;
	Unknown AttributeBlendModes;
	ECustomAttributeBlendType DefaultAttributeBlendMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimBlueprint : public UBlueprint
{
public:
	class UClass* TargetSkeleton;
	TArray<struct AnimGroupInfo> Groups;
	bool bUseMultiThreadedAnimationUpdate;
	bool bWarnAboutBlueprintUsage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
{
public:
	TArray<struct BakedAnimationStateMachine> BakedStateMachines;
	class UClass* TargetSkeleton;
	TArray<struct AnimNotifyEvent> AnimNotifies;
	Unknown OrderedSavedPoseIndicesMap;
	TArray<struct FName> SyncGroupNames;
	TArray<struct ExposedValueHandler> EvaluateGraphExposedInputs;
	Unknown GraphAssetPlayerInformation;
	Unknown GraphBlendOptions;
	struct PropertyAccessLibrary PropertyAccessLibrary;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimBoneCompressionSettings : public UObject
{
public:
	TArray<class UClass*> Codecs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimClassData : public UObject
{
public:
	TArray<struct BakedAnimationStateMachine> BakedStateMachines;
	class UClass* TargetSkeleton;
	TArray<struct AnimNotifyEvent> AnimNotifies;
	Unknown OrderedSavedPoseIndicesMap;
	TArray<struct AnimBlueprintFunction> AnimBlueprintFunctions;
	TArray<struct AnimBlueprintFunctionData> AnimBlueprintFunctionData;
	TArray<Unknown> AnimNodeProperties;
	TArray<Unknown> LinkedAnimGraphNodeProperties;
	TArray<Unknown> LinkedAnimLayerNodeProperties;
	TArray<Unknown> PreUpdateNodeProperties;
	TArray<Unknown> DynamicResetNodeProperties;
	TArray<Unknown> StateMachineNodeProperties;
	TArray<Unknown> InitializationNodeProperties;
	Unknown GraphNameAssetPlayers;
	TArray<struct FName> SyncGroupNames;
	TArray<struct ExposedValueHandler> EvaluateGraphExposedInputs;
	Unknown GraphBlendOptions;
	struct PropertyAccessLibrary PropertyAccessLibrary;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimClassInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimSequenceBase : public UAnimationAsset
{
public:
	TArray<struct AnimNotifyEvent> Notifies;
	float SequenceLength;
	float RateScale;
	struct RawCurveTracks RawCurveData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompositeBase : public UAnimSequenceBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimComposite : public UAnimCompositeBase
{
public:
	struct AnimTrack AnimationTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress : public UAnimBoneCompressionCodec
{
public:
	bool bNeedsSkeleton;
	EAnimationCompressionFormat TranslationCompressionFormat;
	EAnimationCompressionFormat RotationCompressionFormat;
	EAnimationCompressionFormat ScaleCompressionFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress_LeastDestructive : public UAnimCompress_BitwiseCompressOnly
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress_RemoveLinearKeys : public UAnimCompress
{
public:
	float MaxPosDiff;
	float MaxAngleDiff;
	float MaxScaleDiff;
	float MaxEffectorDiff;
	float MinEffectorDiff;
	float EffectorDiffSocket;
	float ParentKeyScale;
	bool bRetarget;
	bool bActuallyFilterLinearKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
{
public:
	float MaxZeroingThreshold;
	float MaxPosDiffBitwise;
	float MaxAngleDiffBitwise;
	float MaxScaleDiffBitwise;
	TArray<EAnimationCompressionFormat> AllowedRotationFormats;
	TArray<EAnimationCompressionFormat> AllowedTranslationFormats;
	TArray<EAnimationCompressionFormat> AllowedScaleFormats;
	bool bResampleAnimation;
	float ResampledFramerate;
	int MinKeysForResampling;
	bool bUseAdaptiveError;
	bool bUseOverrideForEndEffectors;
	int TrackHeightBias;
	float ParentingDivisor;
	float ParentingDivisorExponent;
	bool bUseAdaptiveError2;
	float RotationErrorSourceRatio;
	float TranslationErrorSourceRatio;
	float ScaleErrorSourceRatio;
	float MaxErrorPerTrackRatio;
	float PerturbationProbeSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
{
public:
	int MinKeys;
	bool bStartAtSecondKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
{
public:
	float MaxPosDiff;
	float MaxAngleDiff;
	float MaxScaleDiff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCurveCompressionCodec_CompressedRichCurve : public UAnimCurveCompressionCodec
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCurveCompressionCodec_UniformIndexable : public UAnimCurveCompressionCodec
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCurveCompressionCodec_UniformlySampled : public UAnimCurveCompressionCodec
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimCurveCompressionSettings : public UObject
{
public:
	class UClass* Codec;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimLayerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimMontage : public UAnimCompositeBase
{
public:
	struct AlphaBlend BlendIn;
	float BlendInTime;
	struct AlphaBlend BlendOut;
	float BlendOutTime;
	float BlendOutTriggerTime;
	struct FName SyncGroup;
	int SyncSlotIndex;
	struct MarkerSyncData MarkerData;
	TArray<struct CompositeSection> CompositeSections;
	TArray<struct SlotAnimationTrack> SlotAnimTracks;
	TArray<struct BranchingPoint> BranchingPoints;
	bool bEnableRootMotionTranslation;
	bool bEnableRootMotionRotation;
	bool bEnableAutoBlendOut;
	ERootMotionRootLock RootMotionRootLock;
	TArray<struct BranchingPointMarker> BranchingPointMarkers;
	TArray<int> BranchingPointStateNotifyIndices;
	struct TimeStretchCurve TimeStretchCurve;
	struct FName TimeStretchCurveName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_PauseClothingSimulation : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_ResetClothingSimulation : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_ResetDynamics : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
{
public:
	class UClass* PSTemplate;
	struct FName SocketName;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	bool bDestroyAtEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState_Trail : public UAnimNotifyState
{
public:
	class UClass* PSTemplate;
	struct FName FirstSocketName;
	struct FName SecondSocketName;
	ETrailWidthMode WidthScaleMode;
	struct FName WidthScaleCurve;
	bool bRecycleSpawnedSystems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimSequence : public UAnimSequenceBase
{
public:
	int NumFrames;
	TArray<struct TrackToSkeletonMap> TrackToSkeletonMapTable;
	class UClass* BoneCompressionSettings;
	class UClass* CurveCompressionSettings;
	EAdditiveAnimationType AdditiveAnimType;
	EAdditiveBasePoseType RefPoseType;
	class UClass* RefPoseSeq;
	int RefFrameIndex;
	struct FName RetargetSource;
	TArray<struct Transform> RetargetSourceAssetReferencePose;
	EAnimInterpolationType Interpolation;
	bool bEnableRootMotion;
	ERootMotionRootLock RootMotionRootLock;
	bool bForceRootLock;
	bool bUseNormalizedRootMotionScale;
	bool bRootMotionSettingsCopiedFromMontage;
	TArray<struct AnimSyncMarker> AuthoredSyncMarkers;
	TArray<struct BakedCustomAttributePerBoneData> BakedPerBoneCustomAttributeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimSet : public UObject
{
public:
	bool bAnimRotationOnly;
	TArray<struct FName> TrackBoneNames;
	TArray<struct AnimSetMeshLinkup> LinkupCache;
	TArray<byte> BoneUseAnimTranslation;
	TArray<byte> ForceUseMeshTranslation;
	TArray<struct FName> UseTranslationBoneNames;
	TArray<struct FName> ForceMeshTranslationBoneNames;
	struct FName PreviewSkelMeshName;
	struct FName BestRatioSkelMeshName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimSingleNodeInstance : public UAnimInstance
{
public:
	class UClass* CurrentAsset;
	struct FDelegate PostEvaluateAnimEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimStateMachineTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimStreamable : public UAnimSequenceBase
{
public:
	int NumFrames;
	EAnimInterpolationType Interpolation;
	struct FName RetargetSource;
	class UClass* BoneCompressionSettings;
	class UClass* CurveCompressionSettings;
	bool bEnableRootMotion;
	ERootMotionRootLock RootMotionRootLock;
	bool bForceRootLock;
	bool bUseNormalizedRootMotionScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UApplicationLifecycleComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate ApplicationWillDeactivateDelegate;
	struct FScriptMulticastDelegate ApplicationHasReactivatedDelegate;
	struct FScriptMulticastDelegate ApplicationWillEnterBackgroundDelegate;
	struct FScriptMulticastDelegate ApplicationHasEnteredForegroundDelegate;
	struct FScriptMulticastDelegate ApplicationWillTerminateDelegate;
	struct FScriptMulticastDelegate ApplicationShouldUnloadResourcesDelegate;
	struct FScriptMulticastDelegate ApplicationReceivedStartupArgumentsDelegate;
	struct FScriptMulticastDelegate OnTemperatureChangeDelegate;
	struct FScriptMulticastDelegate OnLowPowerModeDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UArrowComponent : public UPrimitiveComponent
{
public:
	struct Color ArrowColor;
	float ArrowSize;
	float ArrowLength;
	float ScreenSize;
	bool bIsScreenSizeScaled;
	bool bTreatAsASprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetExportTask : public UObject
{
public:
	class UClass* Object;
	class UClass* Exporter;
	struct FString Filename;
	bool bSelected;
	bool bReplaceIdentical;
	bool bPrompt;
	bool bAutomated;
	bool bUseFileArchive;
	bool bWriteEmptyFiles;
	TArray<class UClass*> IgnoreObjectList;
	class UClass* Options;
	TArray<struct FString> Errors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetImportData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetManagerSettings : public UDeveloperSettings
{
public:
	TArray<struct PrimaryAssetTypeInfo> PrimaryAssetTypesToScan;
	TArray<struct DirectoryPath> DirectoriesToExclude;
	TArray<struct PrimaryAssetRulesOverride> PrimaryAssetRules;
	TArray<struct PrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules;
	bool bOnlyCookProductionAssets;
	bool bShouldManagerDetermineTypeAndName;
	bool bShouldGuessTypeAndNameInEditor;
	bool bShouldAcquireMissingChunksOnLoad;
	TArray<struct AssetManagerRedirect> PrimaryAssetIdRedirects;
	TArray<struct AssetManagerRedirect> PrimaryAssetTypeRedirects;
	TArray<struct AssetManagerRedirect> AssetPathRedirects;
	Unknown MetaDataTagsForAssetRegistry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetMappingTable : public UObject
{
public:
	TArray<struct AssetMapping> MappedAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionHandleSaveGame : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate Completed;
	class UClass* SaveGameObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
{
public:
	struct FScriptMulticastDelegate Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
{
public:
	struct FScriptMulticastDelegate Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
{
public:
	struct FScriptMulticastDelegate Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
{
public:
	struct FScriptMulticastDelegate Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
{
public:
	struct FScriptMulticastDelegate Completed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAtmosphericFog : public AInfo
{
public:
	class UClass* AtmosphericFogComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAtmosphericFogComponent : public USceneComponent
{
public:
	float SunMultiplier;
	float FogMultiplier;
	float DensityMultiplier;
	float DensityOffset;
	float DistanceScale;
	float AltitudeScale;
	float DistanceOffset;
	float GroundOffset;
	float StartDistance;
	float SunDiscScale;
	float DefaultBrightness;
	struct Color DefaultLightColor;
	bool bDisableSunDisk;
	bool bAtmosphereAffectsSunIlluminance;
	bool bDisableGroundScattering;
	struct AtmospherePrecomputeParameters PrecomputeParams;
	class UClass* TransmittanceTexture;
	class UClass* IrradianceTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioBus : public UObject
{
public:
	EAudioBusChannels AudioBusChannels;
	bool bIsAutomatic;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInitialActiveSoundParams : public UObject
{
public:
	TArray<struct AudioComponentParam> AudioParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioSubsystemCollectionRoot : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioSettings : public UDeveloperSettings
{
public:
	struct SoftObjectPath DefaultSoundClassName;
	struct SoftObjectPath DefaultMediaSoundClassName;
	struct SoftObjectPath DefaultSoundConcurrencyName;
	struct SoftObjectPath DefaultBaseSoundMix;
	struct SoftObjectPath VoiPSoundClass;
	struct SoftObjectPath MasterSubmix;
	struct SoftObjectPath BaseDefaultSubmix;
	struct SoftObjectPath ReverbSubmix;
	struct SoftObjectPath EQSubmix;
	EVoiceSampleRate VoiPSampleRate;
	float DefaultReverbSendLevel;
	int MaximumConcurrentStreams;
	float GlobalMinPitchScale;
	float GlobalMaxPitchScale;
	TArray<struct AudioQualitySettings> QualityLevels;
	bool bAllowPlayWhenSilent;
	bool bDisableMasterEQ;
	bool bAllowCenterChannel3DPanning;
	uint32_t NumStoppingSources;
	EPanningMethod PanningMethod;
	EMonoChannelUpmixMethod MonoChannelUpmixMethod;
	struct FString DialogueFilenameFormat;
	TArray<struct SoundDebugEntry> DebugSounds;
	TArray<struct DefaultAudioBusSettings> DefaultAudioBuses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAudioVolume : public AVolume
{
public:
	float Priority;
	bool bEnabled;
	struct ReverbSettings Settings;
	struct InteriorSettings AmbientZoneSettings;
	TArray<struct AudioVolumeSubmixSendSettings> SubmixSendSettings;
	TArray<struct AudioVolumeSubmixOverrideSettings> SubmixOverrideSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAutoDestroySubsystem : public UWorldSubsystem
{
public:
	TArray<class UClass*> ActorsToPoll;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAutomationTestSettings : public UObject
{
public:
	TArray<struct FString> EngineTestModules;
	TArray<struct FString> EditorTestModules;
	struct SoftObjectPath AutomationTestmap;
	TArray<struct EditorMapPerformanceTestDefinition> EditorPerformanceTestMaps;
	TArray<struct SoftObjectPath> AssetsToOpen;
	TArray<struct FString> MapsToPIETest;
	struct BuildPromotionTestSettings BuildPromotionTest;
	struct MaterialEditorPromotionSettings MaterialEditorPromotionTest;
	struct ParticleEditorPromotionSettings ParticleEditorPromotionTest;
	struct BlueprintEditorPromotionSettings BlueprintEditorPromotionTest;
	TArray<struct FString> TestLevelFolders;
	TArray<struct ExternalToolDefinition> ExternalTools;
	TArray<struct EditorImportExportTestDefinition> ImportExportTestDefinitions;
	TArray<struct LaunchOnTestSettings> LaunchOnSettings;
	struct IntPoint DefaultScreenshotResolution;
	float PIETestDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABandwidthTestActor : public AActor
{
public:
	struct BandwidthTestGenerator BandwidthGenerator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBillboardComponent : public UPrimitiveComponent
{
public:
	class UClass* Sprite;
	bool bIsScreenSizeScaled;
	float ScreenSize;
	float U;
	float UL;
	float V;
	float vL;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlendableInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeleton : public UObject
{
public:
	TArray<struct BoneNode> BoneTree;
	TArray<struct Transform> RefLocalPoses;
	struct Guid VirtualBoneGuid;
	TArray<struct VirtualBone> VirtualBones;
	TArray<class UClass*> Sockets;
	struct SmartNameContainer SmartNames;
	TArray<class UClass*> BlendProfiles;
	TArray<struct AnimSlotGroup> SlotGroups;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlendProfile : public UObject
{
public:
	class UClass* OwningSkeleton;
	TArray<struct BlendProfileBoneEntry> ProfileEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABlockingVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintExtension : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintPathsLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlatformGameInstance : public UGameInstance
{
public:
	struct FScriptMulticastDelegate ApplicationWillDeactivateDelegate;
	struct FScriptMulticastDelegate ApplicationHasReactivatedDelegate;
	struct FScriptMulticastDelegate ApplicationWillEnterBackgroundDelegate;
	struct FScriptMulticastDelegate ApplicationHasEnteredForegroundDelegate;
	struct FScriptMulticastDelegate ApplicationWillTerminateDelegate;
	struct FScriptMulticastDelegate ApplicationShouldUnloadResourcesDelegate;
	struct FScriptMulticastDelegate ApplicationReceivedStartupArgumentsDelegate;
	struct FScriptMulticastDelegate ApplicationRegisteredForRemoteNotificationsDelegate;
	struct FScriptMulticastDelegate ApplicationRegisteredForUserNotificationsDelegate;
	struct FScriptMulticastDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate;
	struct FScriptMulticastDelegate ApplicationReceivedRemoteNotificationDelegate;
	struct FScriptMulticastDelegate ApplicationReceivedLocalNotificationDelegate;
	struct FScriptMulticastDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BodySetup : public BodySetupCore
{
public:
	struct KAggregateGeom AggGeom;
	bool bAlwaysFullAnimWeight;
	bool bConsiderForBounds;
	bool bMeshCollideAll;
	bool bDoubleSidedGeometry;
	bool bGenerateNonMirroredCollision;
	bool bSharedCookedData;
	bool bGenerateMirroredCollision;
	bool bSupportUVsAndFaceRemap;
	class UClass* PhysMaterial;
	struct WalkableSlopeOverride WalkableSlopeOverride;
	struct BodyInstance DefaultInstance;
	struct Vector BuildScale3D;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoneMaskFilter : public UObject
{
public:
	TArray<struct InputBlendPose> BlendPoses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBookmarkBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBookMark : public UBookmarkBase
{
public:
	struct Vector Location;
	struct Rotator Rotation;
	TArray<struct FString> HiddenLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBookMark2D : public UBookmarkBase
{
public:
	float Zoom2D;
	struct IntPoint Location;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoundsCopyComponent : public UActorComponent
{
public:
	struct TSoftClassPtr<UObject> BoundsSourceActor;
	bool bUseCollidingComponentsForSourceBounds;
	bool bKeepOwnBoundsScale;
	bool bUseCollidingComponentsForOwnBounds;
	struct Transform PostTransform;
	bool bCopyXBounds;
	bool bCopyYBounds;
	bool bCopyZBounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AReflectionCapture : public AActor
{
public:
	class UClass* CaptureComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABoxReflectionCapture : public AReflectionCapture
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReflectionCaptureComponent : public USceneComponent
{
public:
	class UClass* CaptureOffsetComponent;
	EReflectionSourceType ReflectionSourceType;
	EMobileReflectionCompression MobileReflectionCompression;
	class UClass* Cubemap;
	float SourceCubemapAngle;
	float Brightness;
	bool bModifyMaxValueRGBM;
	float MaxValueRGBM;
	struct Vector CaptureOffset;
	struct Guid MapBuildDataId;
	class UClass* CachedEncodedHDRCubemap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	float BoxTransitionDistance;
	class UClass* PreviewInfluenceBox;
	class UClass* PreviewCaptureBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBreakpoint : public UObject
{
public:
	bool bEnabled;
	class UClass* Node;
	bool bStepOnce;
	bool bStepOnce_WasPreviouslyDisabled;
	bool bStepOnce_RemoveAfterHit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBrushBuilder : public UObject
{
public:
	struct FString BitmapFilename;
	struct FString Tooltip;
	bool NotifyBadParams;
	TArray<struct Vector> Vertices;
	TArray<struct BuilderPoly> Polys;
	struct FName Layer;
	bool MergeCoplanars;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBrushComponent : public UPrimitiveComponent
{
public:
	class UClass* Brush;
	class UClass* BrushBodySetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABrushShape : public ABrush
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UButtonStyleAsset : public UObject
{
public:
	struct ButtonStyle ButtonStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraAnim : public UObject
{
public:
	class UClass* CameraInterpGroup;
	float AnimLength;
	struct Box BoundingBox;
	bool bRelativeToInitialTransform;
	bool bRelativeToInitialFOV;
	float BaseFOV;
	struct PostProcessSettings BasePostProcessSettings;
	float BasePostProcessBlendWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraAnimInst : public UObject
{
public:
	class UClass* CamAnim;
	class UClass* InterpGroupInst;
	float PlayRate;
	class UClass* MoveTrack;
	class UClass* MoveInst;
	ECameraShakePlaySpace Playspace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACameraBlockingVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraLensEffectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraLensEffectInterfaceClassSupportLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraModifier_CameraShake : public UCameraModifier
{
public:
	TArray<struct ActiveCameraShakeInfo> ActiveShakes;
	Unknown ExpiredPooledShakesMap;
	float SplitScreenShakeScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACameraShakeSourceActor : public AActor
{
public:
	class UClass* CameraShakeSourceComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraShakeSourceComponent : public USceneComponent
{
public:
	ECameraShakeAttenuation Attenuation;
	float InnerAttenuationRadius;
	float OuterAttenuationRadius;
	class UClass* CameraShake;
	bool bAutoStart;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCanvas : public UObject
{
public:
	float OrgX;
	float OrgY;
	float ClipX;
	float ClipY;
	struct Color DrawColor;
	bool bCenterX;
	bool bCenterY;
	bool bNoSmooth;
	int SizeX;
	int SizeY;
	struct Plane ColorModulate;
	class UClass* DefaultTexture;
	class UClass* GradientTexture0;
	class UClass* ReporterGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureRenderTarget : public UTexture
{
public:
	float TargetGamma;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureRenderTarget2D : public UTextureRenderTarget
{
public:
	int SizeX;
	int SizeY;
	struct LinearColor ClearColor;
	ETextureAddress AddressX;
	ETextureAddress AddressY;
	bool bForceLinearGamma;
	bool bHDR;
	bool bGPUSharedFlag;
	ETextureRenderTargetFormat RenderTargetFormat;
	bool bAutoGenerateMips;
	ETextureFilter MipsSamplerFilter;
	ETextureAddress MipsAddressU;
	ETextureAddress MipsAddressV;
	EPixelFormat OverrideFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCanvasRenderTarget2D : public UTextureRenderTarget2D
{
public:
	struct FScriptMulticastDelegate OnCanvasRenderTargetUpdate;
	Unknown World;
	bool bShouldClearRenderTargetOnReceiveUpdate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCheckBoxStyleAsset : public UObject
{
public:
	struct CheckBoxStyle CheckBoxStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChildConnection : public UNetConnection
{
public:
	class UClass* Parent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlatformInterfaceBase : public UObject
{
public:
	TArray<struct DelegateArray> AllDelegates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCloudStorageBase : public UPlatformInterfaceBase
{
public:
	TArray<struct FString> LocalCloudFiles;
	bool bSuppressDelegateCalls;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCollisionProfile : public UDeveloperSettings
{
public:
	TArray<struct CollisionResponseTemplate> Profiles;
	TArray<struct CustomChannelSetup> DefaultChannelResponses;
	TArray<struct CustomProfile> EditProfiles;
	TArray<struct Redirector> ProfileRedirects;
	TArray<struct Redirector> CollisionChannelRedirects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UComponentDelegateBinding : public UDynamicBlueprintBinding
{
public:
	TArray<struct BlueprintComponentDelegateBinding> ComponentDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UActorComponentInstanceDataTransientOuter : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveTable : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCompositeCurveTable : public UCurveTable
{
public:
	TArray<class UClass*> ParentTables;
	TArray<class UClass*> OldParentTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCompositeDataTable : public UDataTable
{
public:
	TArray<class UClass*> ParentTables;
	TArray<class UClass*> OldParentTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlChannel : public UChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStreamingSettings : public UDeveloperSettings
{
public:
	bool AsyncLoadingThreadEnabled;
	bool WarnIfTimeLimitExceeded;
	float TimeLimitExceededMultiplier;
	float TimeLimitExceededMinTime;
	int MinBulkDataSizeForAsyncLoading;
	bool UseBackgroundLevelStreaming;
	bool AsyncLoadingUseFullTimeLimit;
	float AsyncLoadingTimeLimit;
	float PriorityAsyncLoadingExtraTime;
	float LevelStreamingActorsUpdateTimeLimit;
	float PriorityLevelStreamingActorsUpdateExtraTime;
	int LevelStreamingComponentsRegistrationGranularity;
	float LevelStreamingUnregisterComponentsTimeLimit;
	int LevelStreamingComponentsUnregistrationGranularity;
	bool FlushStreamingOnExit;
	bool EventDrivenLoaderEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGarbageCollectionSettings : public UDeveloperSettings
{
public:
	float TimeBetweenPurgingPendingKillObjects;
	bool FlushStreamingOnGC;
	bool AllowParallelGC;
	bool IncrementalBeginDestroyEnabled;
	bool MultithreadedDestructionEnabled;
	bool CreateGCClusters;
	bool AssetClusteringEnabled;
	bool ActorClusteringEnabled;
	bool BlueprintClusteringEnabled;
	bool UseDisregardForGCOnDedicatedServers;
	int MinGCClusterSize;
	int NumRetriesBeforeForcingGC;
	int MaxObjectsNotConsideredByGC;
	int SizeOfPermanentObjectPool;
	int MaxObjectsInGame;
	int MaxObjectsInEditor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACullDistanceVolume : public AVolume
{
public:
	TArray<struct CullDistanceSizePair> CullDistances;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveEdPresetCurve : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveFloat : public UCurveBase
{
public:
	struct RichCurve FloatCurve;
	bool bIsEventCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveLinearColor : public UCurveBase
{
public:
	struct RichCurve FloatCurves;
	float AdjustHue;
	float AdjustSaturation;
	float AdjustBrightness;
	float AdjustBrightnessCurve;
	float AdjustVibrance;
	float AdjustMinAlpha;
	float AdjustMaxAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTexture2D : public UTexture
{
public:
	int LevelIndex;
	int FirstResourceMemMip;
	bool bTemporarilyDisableStreaming;
	ETextureAddress AddressX;
	ETextureAddress AddressY;
	struct IntPoint ImportedSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveLinearColorAtlas : public UTexture2D
{
public:
	uint32_t TextureSize;
	bool bSquareResolution;
	uint32_t TextureHeight;
	TArray<class UClass*> GradientCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCurveSourceInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDamageType : public UObject
{
public:
	bool bCausedByWorld;
	bool bScaleMomentumByMass;
	bool bRadialDamageVelChange;
	float DamageImpulse;
	float DestructibleImpulse;
	float DestructibleDamageSpreadScale;
	float DamageFalloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataDrivenCVarEngineSubsystem : public UEngineSubsystem
{
public:
	struct FScriptMulticastDelegate OnDataDrivenCVarDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataDrivenConsoleVariableSettings : public UDeveloperSettings
{
public:
	TArray<struct DataDrivenConsoleVariable> CVarsArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDebugCameraControllerSettings : public UDeveloperSettings
{
public:
	TArray<struct DebugCameraControllerSettingsViewModeIndex> CycleViewModes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADebugCameraHUD : public AHUD
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDebugDrawService : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADecalActor : public AActor
{
public:
	class UClass* Decal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDecalComponent : public USceneComponent
{
public:
	class UClass* DecalMaterial;
	int SortOrder;
	float FadeScreenSize;
	float FadeStartDelay;
	float FadeDuration;
	float FadeInDuration;
	float FadeInStartDelay;
	bool bDestroyOwnerAfterFade;
	struct Vector DecalSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADefaultPhysicsVolume : public APhysicsVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDemoNetConnection : public UNetConnection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDemoNetDriver : public UNetDriver
{
public:
	Unknown RollbackNetStartupActors;
	float CheckpointSaveMaxMSPerFrame;
	TArray<struct MulticastRecordOptions> MulticastRecordOptions;
	bool bIsLocalReplay;
	TArray<class UClass*> SpectatorControllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPendingNetGame : public UObject
{
public:
	class UClass* NetDriver;
	class UClass* DemoNetDriver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDemoPendingNetGame : public UPendingNetGame
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDestructibleInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureLODSettings : public UObject
{
public:
	TArray<struct TextureLODGroup> TextureLODGroups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeviceProfile : public UTextureLODSettings
{
public:
	struct FString DeviceType;
	struct FString BaseProfileName;
	class UClass* Parent;
	TArray<struct FString> CVars;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeviceProfileFragment : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeviceProfileManager : public UObject
{
public:
	TArray<class UClass*> Profiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDialogueSoundWaveProxy : public USoundBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDialogueVoice : public UObject
{
public:
	EGrammaticalGender Gender;
	EGrammaticalNumber Plurality;
	struct Guid LocalizationGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDialogueWave : public UObject
{
public:
	bool bMature;
	bool bOverride_SubtitleOverride;
	struct FString SpokenText;
	struct FString SubtitleOverride;
	TArray<struct DialogueContextMapping> ContextMappings;
	struct Guid LocalizationGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALight : public AActor
{
public:
	class UClass* LightComponent;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADirectionalLight : public ALight
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDirectionalLightComponent : public ULightComponent
{
public:
	float ShadowCascadeBiasDistribution;
	bool bEnableLightShaftOcclusion;
	float OcclusionMaskDarkness;
	float OcclusionDepthRange;
	struct Vector LightShaftOverrideDirection;
	float WholeSceneDynamicShadowRadius;
	float DynamicShadowDistanceMovableLight;
	float DynamicShadowDistanceStationaryLight;
	int DynamicShadowCascades;
	float CascadeDistributionExponent;
	float CascadeTransitionFraction;
	float ShadowDistanceFadeoutFraction;
	bool bUseInsetShadowsForMovableObjects;
	int FarShadowCascadeCount;
	float FarShadowDistance;
	float DistanceFieldShadowDistance;
	float LightSourceAngle;
	float LightSourceSoftAngle;
	float ShadowSourceAngleFactor;
	float TraceDistance;
	bool bUsedAsAtmosphereSunLight;
	int AtmosphereSunLightIndex;
	struct LinearColor AtmosphereSunDiskColorScale;
	bool bPerPixelAtmosphereTransmittance;
	bool bCastShadowsOnClouds;
	bool bCastShadowsOnAtmosphere;
	bool bCastCloudShadows;
	float CloudShadowStrength;
	float CloudShadowOnAtmosphereStrength;
	float CloudShadowOnSurfaceStrength;
	float CloudShadowDepthBias;
	float CloudShadowExtent;
	float CloudShadowMapResolutionScale;
	float CloudShadowRaySampleCountScale;
	struct LinearColor CloudScatteredLuminanceScale;
	struct LightmassDirectionalLightSettings LightmassSettings;
	bool bCastModulatedShadows;
	struct Color ModulatedShadowColor;
	float ShadowAmount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistribution : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloat : public UDistribution
{
public:
	bool bCanBeBaked;
	bool bBakedDataSuccesfully;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloatConstant : public UDistributionFloat
{
public:
	float Constant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloatConstantCurve : public UDistributionFloat
{
public:
	struct InterpCurveFloat ConstantCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloatParameterBase : public UDistributionFloatConstant
{
public:
	struct FName ParameterName;
	float MinInput;
	float MaxInput;
	float MinOutput;
	float MaxOutput;
	EDistributionParamMode ParamMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloatUniform : public UDistributionFloat
{
public:
	float Min;
	float Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionFloatUniformCurve : public UDistributionFloat
{
public:
	struct InterpCurveVector2D ConstantCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVector : public UDistribution
{
public:
	bool bCanBeBaked;
	bool bIsDirty;
	bool bBakedDataSuccesfully;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVectorConstant : public UDistributionVector
{
public:
	struct Vector Constant;
	bool bLockAxes;
	EDistributionVectorLockFlags LockedAxes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVectorConstantCurve : public UDistributionVector
{
public:
	struct InterpCurveVector ConstantCurve;
	bool bLockAxes;
	EDistributionVectorLockFlags LockedAxes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVectorParameterBase : public UDistributionVectorConstant
{
public:
	struct FName ParameterName;
	struct Vector MinInput;
	struct Vector MaxInput;
	struct Vector MinOutput;
	struct Vector MaxOutput;
	EDistributionParamMode ParamModes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVectorUniform : public UDistributionVector
{
public:
	struct Vector Max;
	struct Vector Min;
	bool bLockAxes;
	EDistributionVectorLockFlags LockedAxes;
	EDistributionVectorMirrorFlags MirrorFlags;
	bool bUseExtremes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDistributionVectorUniformCurve : public UDistributionVector
{
public:
	struct InterpCurveTwoVectors ConstantCurve;
	bool bLockAxes1;
	bool bLockAxes2;
	EDistributionVectorLockFlags LockedAxes;
	EDistributionVectorMirrorFlags MirrorFlags;
	bool bUseExtremes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADocumentationActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDPICustomScalingRule : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDrawFrustumComponent : public UPrimitiveComponent
{
public:
	struct Color FrustumColor;
	float FrustumAngle;
	float FrustumAspectRatio;
	float FrustumStartDist;
	float FrustumEndDist;
	class UClass* Texture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USphereComponent : public UShapeComponent
{
public:
	float SphereRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDrawSphereComponent : public USphereComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEdGraph : public UObject
{
public:
	class UClass* Schema;
	TArray<class UClass*> Nodes;
	bool bEditable;
	bool bAllowDeletion;
	bool bAllowRenaming;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGraphNodeContextMenuContext : public UObject
{
public:
	class UClass* Blueprint;
	class UClass* Graph;
	class UClass* Node;
	bool bIsDebugging;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEdGraphNode : public UObject
{
public:
	TArray<class UClass*> DeprecatedPins;
	int NodePosX;
	int NodePosY;
	int NodeWidth;
	int NodeHeight;
	ENodeAdvancedPins AdvancedPinDisplay;
	ENodeEnabledState EnabledState;
	bool bDisplayAsDisabled;
	bool bUserSetEnabledState;
	bool bIsNodeEnabled;
	bool bHasCompilerMessage;
	struct FString NodeComment;
	int ErrorType;
	struct FString ErrorMsg;
	struct Guid NodeGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEdGraphNode_Documentation : public UEdGraphNode
{
public:
	struct FString Link;
	struct FString Excerpt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEdGraphPin_Deprecated : public UObject
{
public:
	struct FString PinName;
	struct FString PinToolTip;
	EEdGraphPinDirection Direction;
	struct EdGraphPinType PinType;
	struct FString DefaultValue;
	struct FString AutogeneratedDefaultValue;
	class UClass* DefaultObject;
	struct FText DefaultTextValue;
	TArray<class UClass*> LinkedTo;
	TArray<class UClass*> SubPins;
	class UClass* ParentPin;
	class UClass* ReferencePassThroughConnection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEdGraphSchema : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UViewModeUtils : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEngineBaseTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EngineHandlerComponentFactory : public HandlerComponentFactory
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEngineMessage : public ULocalMessage
{
public:
	struct FString FailedPlaceMessage;
	struct FString MaxedOutMessage;
	struct FString EnteredMessage;
	struct FString LeftMessage;
	struct FString GlobalNameChange;
	struct FString SpecEnteredMessage;
	struct FString NewPlayerMessage;
	struct FString NewSpecMessage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEngineTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AExponentialHeightFog : public AInfo
{
public:
	class UClass* Component;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UExponentialHeightFogComponent : public USceneComponent
{
public:
	float FogDensity;
	float FogHeightFalloff;
	struct ExponentialHeightFogData SecondFogData;
	struct LinearColor FogInscatteringColor;
	class UClass* InscatteringColorCubemap;
	float InscatteringColorCubemapAngle;
	struct LinearColor InscatteringTextureTint;
	float FullyDirectionalInscatteringColorDistance;
	float NonDirectionalInscatteringColorDistance;
	float DirectionalInscatteringExponent;
	float DirectionalInscatteringStartDistance;
	struct LinearColor DirectionalInscatteringColor;
	float FogMaxOpacity;
	float StartDistance;
	float FogCutoffDistance;
	bool bEnableVolumetricFog;
	float VolumetricFogScatteringDistribution;
	struct Color VolumetricFogAlbedo;
	struct LinearColor VolumetricFogEmissive;
	float VolumetricFogExtinctionScale;
	float VolumetricFogDistance;
	float VolumetricFogStaticLightingScatteringIntensity;
	bool bOverrideLightColorsWithFogInscatteringColors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UExporter : public UObject
{
public:
	class UClass* SupportedClass;
	class UClass* ExportRootScope;
	TArray<struct FString> FormatExtension;
	TArray<struct FString> FormatDescription;
	int PreferredFormatIndex;
	int TextIndent;
	bool bText;
	bool bSelectedOnly;
	bool bForceFileOperations;
	class UClass* ExportTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFont : public UObject
{
public:
	EFontCacheType FontCacheType;
	TArray<struct FontCharacter> Characters;
	TArray<class UClass*> Textures;
	int IsRemapped;
	float EmScale;
	float Ascent;
	float Descent;
	float Leading;
	int Kerning;
	struct FontImportOptionsData ImportOptions;
	int NumCharacters;
	TArray<int> MaxCharHeight;
	float ScalingFactor;
	int LegacyFontSize;
	struct FName LegacyFontName;
	struct CompositeFont CompositeFont;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFontFace : public UObject
{
public:
	struct FString SourceFilename;
	EFontHinting Hinting;
	EFontLoadingPolicy LoadingPolicy;
	EFontLayoutMethod LayoutMethod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFontImportOptions : public UObject
{
public:
	struct FontImportOptionsData Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UForceFeedbackAttenuation : public UObject
{
public:
	struct ForceFeedbackAttenuationSettings Attenuation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UForceFeedbackComponent : public USceneComponent
{
public:
	class UClass* ForceFeedbackEffect;
	bool bAutoDestroy;
	bool bStopWhenOwnerDestroyed;
	bool bLooping;
	bool bIgnoreTimeDilation;
	bool bOverrideAttenuation;
	float IntensityMultiplier;
	class UClass* AttenuationSettings;
	struct ForceFeedbackAttenuationSettings AttenuationOverrides;
	struct FScriptMulticastDelegate OnForceFeedbackFinished;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UForceFeedbackEffect : public UObject
{
public:
	TArray<struct ForceFeedbackChannelDetails> ChannelDetails;
	float Duration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameNetworkManager : public AInfo
{
public:
	float BadPacketLossThreshold;
	float SeverePacketLossThreshold;
	int BadPingThreshold;
	int SeverePingThreshold;
	int AdjustedNetSpeed;
	float LastNetSpeedUpdateTime;
	int TotalNetBandwidth;
	int MinDynamicBandwidth;
	int MaxDynamicBandwidth;
	bool bIsStandbyCheckingEnabled;
	bool bHasStandbyCheatTriggered;
	float StandbyRxCheatTime;
	float StandbyTxCheatTime;
	float PercentMissingForRxStandby;
	float PercentMissingForTxStandby;
	float PercentForBadPing;
	float JoinInProgressStandbyWaitTime;
	float MoveRepSize;
	float MAXPOSITIONERRORSQUARED;
	float MAXNEARZEROVELOCITYSQUARED;
	float CLIENTADJUSTUPDATECOST;
	float MAXCLIENTUPDATEINTERVAL;
	float MaxClientForcedUpdateDuration;
	float ServerForcedUpdateHitchThreshold;
	float ServerForcedUpdateHitchCooldown;
	float MaxMoveDeltaTime;
	float MaxClientSmoothingDeltaTime;
	float ClientNetSendMoveDeltaTime;
	float ClientNetSendMoveDeltaTimeThrottled;
	float ClientNetSendMoveDeltaTimeStationary;
	int ClientNetSendMoveThrottleAtNetSpeed;
	int ClientNetSendMoveThrottleOverPlayerCount;
	bool ClientAuthorativePosition;
	float ClientErrorUpdateRateLimit;
	float ClientNetCamUpdateDeltaTime;
	float ClientNetCamUpdatePositionLimit;
	bool bMovementTimeDiscrepancyDetection;
	bool bMovementTimeDiscrepancyResolution;
	float MovementTimeDiscrepancyMaxTimeMargin;
	float MovementTimeDiscrepancyMinTimeMargin;
	float MovementTimeDiscrepancyResolutionRate;
	float MovementTimeDiscrepancyDriftAllowance;
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution;
	bool bUseDistanceBasedRelevancy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASpotLight : public ALight
{
public:
	class UClass* SpotLightComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGeneratedMeshAreaLight : public ASpotLight
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHapticFeedbackEffect_Base : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
{
public:
	TArray<byte> Amplitudes;
	int SampleRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
{
public:
	struct HapticFeedbackDetails_Curve HapticDetails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
{
public:
	class UClass* SoundWave;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHLODEngineSubsystem : public UEngineSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHLODProxy : public UObject
{
public:
	TArray<struct HLODProxyMesh> ProxyMeshes;
	Unknown HLODActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHLODProxyDesc : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImportantToggleSettingInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInGameAdManager : public UPlatformInterfaceBase
{
public:
	bool bShouldPauseWhileAdOpen;
	TArray<struct FDelegate> ClickedBannerDelegates;
	TArray<struct FDelegate> ClosedAdDelegates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInheritableComponentHandler : public UObject
{
public:
	TArray<struct ComponentOverrideRecord> Records;
	TArray<class UClass*> UnnecessaryComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputDelegateBinding : public UDynamicBlueprintBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputActionDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct BlueprintInputActionDelegateBinding> InputActionDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputAxisDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct BlueprintInputAxisDelegateBinding> InputAxisDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct BlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputKeyDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct BlueprintInputKeyDelegateBinding> InputKeyDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputSettings : public UObject
{
public:
	TArray<struct InputAxisConfigEntry> AxisConfig;
	bool bAltEnterTogglesFullscreen;
	bool bF11TogglesFullscreen;
	bool bUseMouseForTouch;
	bool bEnableMouseSmoothing;
	bool bEnableFOVScaling;
	bool bCaptureMouseOnLaunch;
	bool bDefaultViewportMouseLock;
	bool bAlwaysShowTouchInterface;
	bool bShowConsoleOnFourFingerTap;
	bool bEnableGestureRecognizer;
	bool bUseAutocorrect;
	TArray<struct FString> ExcludedAutocorrectOS;
	TArray<struct FString> ExcludedAutocorrectCultures;
	TArray<struct FString> ExcludedAutocorrectDeviceModels;
	EMouseCaptureMode DefaultViewportMouseCaptureMode;
	EMouseLockMode DefaultViewportMouseLockMode;
	float FOVScale;
	float DoubleClickTime;
	TArray<struct InputActionKeyMapping> ActionMappings;
	TArray<struct InputAxisKeyMapping> AxisMappings;
	TArray<struct InputActionSpeechMapping> SpeechMappings;
	struct TSoftClassPtr<UObject> DefaultPlayerInputClass;
	struct TSoftClassPtr<UObject> DefaultInputComponentClass;
	struct SoftObjectPath DefaultTouchInterface;
	struct Key ConsoleKey;
	TArray<struct Key> ConsoleKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputTouchDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct BlueprintInputTouchDelegateBinding> InputTouchDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterface_ActorSubobject : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterface_AssetUserData : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoneReferenceSkeletonProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterface_CollisionDataProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterface_PostProcessVolume : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterface_PreviewMeshProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpCurveEdSetup : public UObject
{
public:
	TArray<struct CurveEdTab> Tabs;
	int ActiveTab;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpData : public UObject
{
public:
	float InterpLength;
	float PathBuildTime;
	TArray<class UClass*> InterpGroups;
	class UClass* CurveEdSetup;
	float EdSectionStart;
	float EdSectionEnd;
	bool bShouldBakeAndPrune;
	class UClass* CachedDirectorGroup;
	TArray<struct FName> AllEventNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpFilter : public UObject
{
public:
	struct FString Caption;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpFilter_Classes : public UInterpFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpFilter_Custom : public UInterpFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpGroup : public UObject
{
public:
	TArray<class UClass*> InterpTracks;
	struct FName GroupName;
	struct Color GroupColor;
	bool bCollapsed;
	bool bVisible;
	bool bIsFolder;
	bool bIsParented;
	bool bIsSelected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpGroupCamera : public UInterpGroup
{
public:
	class UClass* CameraAnimInst;
	float CompressTolerance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpGroupDirector : public UInterpGroup
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpGroupInst : public UObject
{
public:
	class UClass* Group;
	class UClass* GroupActor;
	TArray<class UClass*> TrackInst;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpGroupInstCamera : public UInterpGroupInst
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpGroupInstDirector : public UInterpGroupInst
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpToMovementComponent : public UMovementComponent
{
public:
	float Duration;
	bool bPauseOnImpact;
	bool bSweep;
	ETeleportType TeleportType;
	EInterpToBehaviourType BehaviourType;
	bool bCheckIfStillInWorld;
	bool bForceSubStepping;
	struct FScriptMulticastDelegate OnInterpToReverse;
	struct FScriptMulticastDelegate OnInterpToStop;
	struct FScriptMulticastDelegate OnWaitBeginDelegate;
	struct FScriptMulticastDelegate OnWaitEndDelegate;
	struct FScriptMulticastDelegate OnResetDelegate;
	float MaxSimulationTimeStep;
	int MaxSimulationIterations;
	TArray<struct InterpControlPoint> ControlPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrack : public UObject
{
public:
	TArray<class UClass*> SubTracks;
	class UClass* TrackInstClass;
	ETrackActiveCondition ActiveCondition;
	struct FString TrackTitle;
	bool bOnePerGroup;
	bool bDirGroupOnly;
	bool bDisableTrack;
	bool bIsSelected;
	bool bIsAnimControlTrack;
	bool bSubTrackOnly;
	bool bVisible;
	bool bIsRecording;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackFloatBase : public UInterpTrack
{
public:
	struct InterpCurveFloat FloatTrack;
	float CurveTension;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackAnimControl : public UInterpTrackFloatBase
{
public:
	struct FName SlotName;
	TArray<struct AnimControlTrackKey> AnimSeqs;
	bool bSkipAnimNotifiers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackVectorBase : public UInterpTrack
{
public:
	struct InterpCurveVector VectorTrack;
	float CurveTension;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackAudioMaster : public UInterpTrackVectorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackBoolProp : public UInterpTrack
{
public:
	TArray<struct BoolTrackKey> BoolTrack;
	struct FName PropertyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackColorProp : public UInterpTrackVectorBase
{
public:
	struct FName PropertyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackColorScale : public UInterpTrackVectorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackDirector : public UInterpTrack
{
public:
	TArray<struct DirectorTrackCut> CutTrack;
	bool bSimulateCameraCutsOnClients;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackEvent : public UInterpTrack
{
public:
	TArray<struct EventTrackKey> EventTrack;
	bool bFireEventsWhenForwards;
	bool bFireEventsWhenBackwards;
	bool bFireEventsWhenJumpingForwards;
	bool bUseCustomEventName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackFade : public UInterpTrackFloatBase
{
public:
	bool bPersistFade;
	bool bFadeAudio;
	struct LinearColor FadeColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
{
public:
	class UClass* AnimBlueprintClass;
	class UClass* AnimClass;
	struct FName ParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
{
public:
	TArray<class UClass*> TargetMaterials;
	struct FName ParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
{
public:
	struct FName ParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackFloatProp : public UInterpTrackFloatBase
{
public:
	struct FName PropertyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInst : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstAnimControl : public UInterpTrackInst
{
public:
	float LastUpdatePosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstAudioMaster : public UInterpTrackInst
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstProperty : public UInterpTrackInst
{
public:
	Unknown InterpProperty;
	class UClass* PropertyOuterObjectInst;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
{
public:
	bool ResetBool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstColorProp : public UInterpTrackInstProperty
{
public:
	struct Color ResetColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstColorScale : public UInterpTrackInst
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstDirector : public UInterpTrackInst
{
public:
	class UClass* OldViewTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstEvent : public UInterpTrackInst
{
public:
	float LastUpdatePosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstFade : public UInterpTrackInst
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
{
public:
	class UClass* AnimScriptInstance;
	float ResetFloat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
{
public:
	TArray<class UClass*> MaterialInstances;
	TArray<float> ResetFloats;
	TArray<struct PrimitiveMaterialRef> PrimitiveMaterialRefs;
	class UClass* InstancedTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
{
public:
	float ResetFloat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
{
public:
	float ResetFloat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
{
public:
	struct LinearColor ResetColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstMove : public UInterpTrackInst
{
public:
	struct Vector ResetLocation;
	struct Rotator ResetRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstParticleReplay : public UInterpTrackInst
{
public:
	float LastUpdatePosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstSlomo : public UInterpTrackInst
{
public:
	float OldTimeDilation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstSound : public UInterpTrackInst
{
public:
	float LastUpdatePosition;
	class UClass* PlayAudioComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstToggle : public UInterpTrackInst
{
public:
	ETrackToggleAction Action;
	float LastUpdatePosition;
	bool bSavedActiveState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
{
public:
	TArray<class UClass*> MaterialInstances;
	TArray<struct Vector> ResetVectors;
	TArray<struct PrimitiveMaterialRef> PrimitiveMaterialRefs;
	class UClass* InstancedTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
{
public:
	struct Vector ResetVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackInstVisibility : public UInterpTrackInst
{
public:
	EVisibilityTrackAction Action;
	float LastUpdatePosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackLinearColorBase : public UInterpTrack
{
public:
	struct InterpCurveLinearColor LinearColorTrack;
	float CurveTension;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
{
public:
	struct FName PropertyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackMove : public UInterpTrack
{
public:
	struct InterpCurveVector PosTrack;
	struct InterpCurveVector EulerTrack;
	struct InterpLookupTrack LookupTrack;
	struct FName LookAtGroupName;
	float LinCurveTension;
	float AngCurveTension;
	bool bUseQuatInterpolation;
	bool bShowArrowAtKeys;
	bool bDisableMovement;
	bool bShowTranslationOnCurveEd;
	bool bShowRotationOnCurveEd;
	bool bHide3DTrack;
	EInterpTrackMoveRotMode RotMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackMoveAxis : public UInterpTrackFloatBase
{
public:
	EInterpMoveAxis MoveAxis;
	struct InterpLookupTrack LookupTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackParticleReplay : public UInterpTrack
{
public:
	TArray<struct ParticleReplayTrackKey> TrackKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackSlomo : public UInterpTrackFloatBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackSound : public UInterpTrackVectorBase
{
public:
	TArray<struct SoundTrackKey> Sounds;
	bool bPlayOnReverse;
	bool bContinueSoundOnMatineeEnd;
	bool bSuppressSubtitles;
	bool bTreatAsDialogue;
	bool bAttach;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackToggle : public UInterpTrack
{
public:
	TArray<struct ToggleTrackKey> ToggleTrack;
	bool bActivateSystemEachUpdate;
	bool bActivateWithJustAttachedFlag;
	bool bFireEventsWhenForwards;
	bool bFireEventsWhenBackwards;
	bool bFireEventsWhenJumpingForwards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
{
public:
	TArray<class UClass*> TargetMaterials;
	struct FName ParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackVectorProp : public UInterpTrackVectorBase
{
public:
	struct FName PropertyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInterpTrackVisibility : public UInterpTrack
{
public:
	TArray<struct VisibilityTrackKey> VisibilityTrack;
	bool bFireEventsWhenForwards;
	bool bFireEventsWhenBackwards;
	bool bFireEventsWhenJumpingForwards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIntSerialization : public UObject
{
public:
	uint16_t UnsignedInt16Variable;
	uint32_t UnsignedInt32Variable;
	uint64_t UnsignedInt64Variable;
	int8_t SignedInt8Variable;
	int16_t SignedInt16Variable;
	int64_t SignedInt64Variable;
	byte UnsignedInt8Variable;
	int SignedInt32Variable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKillZVolume : public APhysicsVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetArrayLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetGuidLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetInputLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetMathLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetStringLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetSystemLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetTextLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULayer : public UObject
{
public:
	struct FName LayerName;
	bool bIsVisible;
	TArray<struct LayerActorStats> ActorStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelPartitionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevel : public UObject
{
public:
	class UClass* OwningWorld;
	class UClass* Model;
	TArray<class UClass*> ModelComponents;
	class UClass* ActorCluster;
	int NumTextureStreamingUnbuiltComponents;
	int NumTextureStreamingDirtyResources;
	class UClass* LevelScriptActor;
	class UClass* NavListStart;
	class UClass* NavListEnd;
	TArray<class UClass*> NavDataChunks;
	float LightmapTotalSize;
	float ShadowmapTotalSize;
	TArray<struct Vector> StaticNavigableGeometry;
	TArray<struct Guid> StreamingTextureGuids;
	struct Guid LevelBuildDataId;
	class UClass* MapBuildData;
	struct IntVector LightBuildLevelOffset;
	bool bIsLightingScenario;
	bool bTextureStreamingRotationChanged;
	bool bStaticComponentsRegisteredInStreamingManager;
	bool bIsVisible;
	class UClass* WorldSettings;
	TArray<class UClass*> AssetUserData;
	TArray<struct ReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelActorContainer : public UObject
{
public:
	TArray<class UClass*> Actors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALevelBounds : public AActor
{
public:
	class UClass* BoxComponent;
	bool bAutoUpdateBounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelScriptBlueprint : public UBlueprint
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelStreaming : public UObject
{
public:
	struct TSoftClassPtr<UObject> WorldAsset;
	struct FName PackageNameToLoad;
	TArray<struct FName> LODPackageNames;
	struct Transform LevelTransform;
	int LevelLODIndex;
	int StreamingPriority;
	bool bShouldBeVisible;
	bool bShouldBeLoaded;
	bool bLocked;
	bool bIsStatic;
	bool bShouldBlockOnLoad;
	bool bShouldBlockOnUnload;
	bool bDisableDistanceStreaming;
	bool bDrawOnLevelStatusMap;
	struct LinearColor LevelColor;
	TArray<class UClass*> EditorStreamingVolumes;
	float MinTimeBetweenVolumeUnloadRequests;
	struct FScriptMulticastDelegate OnLevelLoaded;
	struct FScriptMulticastDelegate OnLevelUnloaded;
	struct FScriptMulticastDelegate OnLevelShown;
	struct FScriptMulticastDelegate OnLevelHidden;
	class UClass* LoadedLevel;
	class UClass* PendingUnloadLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelStreamingAlwaysLoaded : public ULevelStreaming
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelStreamingDynamic : public ULevelStreaming
{
public:
	bool bInitiallyLoaded;
	bool bInitiallyVisible;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelStreamingPersistent : public ULevelStreaming
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALevelStreamingVolume : public AVolume
{
public:
	TArray<struct FName> StreamingLevelNames;
	bool bEditorPreVisOnly;
	bool bDisabled;
	EStreamingVolumeUsage StreamingUsage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightmappedSurfaceCollection : public UObject
{
public:
	class UClass* SourceModel;
	TArray<int> Surfaces;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightMapTexture2D : public UTexture2D
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightMapVirtualTexture2D : public UTexture2D
{
public:
	TArray<int8_t> TypeToLayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALightmassCharacterIndirectDetailVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALightmassImportanceVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALightmassPortal : public AActor
{
public:
	class UClass* PortalComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightmassPortalComponent : public USceneComponent
{
public:
	class UClass* PreviewBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightmassPrimitiveSettingsObject : public UObject
{
public:
	struct LightmassPrimitiveSettings LightmassSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULineBatchComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALODActor : public AActor
{
public:
	class UClass* StaticMeshComponent;
	Unknown InstancedStaticMeshComponents;
	class UClass* Proxy;
	struct FName Key;
	float LODDrawDistance;
	int LODLevel;
	TArray<class UClass*> SubActors;
	byte CachedNumHLODLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULODSyncComponent : public UActorComponent
{
public:
	int NumLODs;
	int ForcedLOD;
	TArray<struct ComponentSync> ComponentsToSync;
	Unknown CustomLODMapping;
	int CurrentLOD;
	int CurrentNumLODs;
	TArray<class UClass*> DriveComponents;
	TArray<class UClass*> SubComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULODSyncInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMapBuildDataRegistry : public UObject
{
public:
	ELightingBuildQuality LevelLightingQuality;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterial : public UMaterialInterface
{
public:
	class UClass* PhysMaterial;
	class UClass* PhysMaterialMask;
	class UClass* PhysicalMaterialMap;
	struct ScalarMaterialInput Metallic;
	struct ScalarMaterialInput Specular;
	struct ScalarMaterialInput Anisotropy;
	struct VectorMaterialInput Normal;
	struct VectorMaterialInput Tangent;
	struct ColorMaterialInput EmissiveColor;
	EMaterialDomain MaterialDomain;
	EBlendMode BlendMode;
	EDecalBlendMode DecalBlendMode;
	EMaterialDecalResponse MaterialDecalResponse;
	EMaterialShadingModel ShadingModel;
	bool bCastDynamicShadowAsMasked;
	struct MaterialShadingModelField ShadingModels;
	float OpacityMaskClipValue;
	struct VectorMaterialInput WorldPositionOffset;
	struct ScalarMaterialInput Refraction;
	struct MaterialAttributesInput MaterialAttributes;
	struct ScalarMaterialInput PixelDepthOffset;
	struct ShadingModelMaterialInput ShadingModelFromMaterialExpression;
	bool bEnableSeparateTranslucency;
	bool bEnableResponsiveAA;
	bool bScreenSpaceReflections;
	bool bContactShadows;
	bool TwoSided;
	bool DitheredLODTransition;
	bool DitherOpacityMask;
	bool bAllowNegativeEmissiveColor;
	ETranslucencyLightingMode TranslucencyLightingMode;
	bool bEnableMobileSeparateTranslucency;
	int NumCustomizedUVs;
	float TranslucencyDirectionalLightingIntensity;
	float TranslucentShadowDensityScale;
	float TranslucentSelfShadowDensityScale;
	float TranslucentSelfShadowSecondDensityScale;
	float TranslucentSelfShadowSecondOpacity;
	float TranslucentBackscatteringExponent;
	struct LinearColor TranslucentMultipleScatteringExtinction;
	float TranslucentShadowStartOffset;
	bool bDisableDepthTest;
	bool bWriteOnlyAlpha;
	bool bGenerateSphericalParticleNormals;
	bool bTangentSpaceNormal;
	bool bUseEmissiveForDynamicAreaLighting;
	bool bBlockGI;
	bool bUsedAsSpecialEngineMaterial;
	bool bUsedWithSkeletalMesh;
	bool bUsedWithEditorCompositing;
	bool bUsedWithParticleSprites;
	bool bUsedWithBeamTrails;
	bool bUsedWithMeshParticles;
	bool bUsedWithNiagaraSprites;
	bool bUsedWithNiagaraRibbons;
	bool bUsedWithNiagaraMeshParticles;
	bool bUsedWithGeometryCache;
	bool bUsedWithStaticLighting;
	bool bUsedWithMorphTargets;
	bool bUsedWithSplineMeshes;
	bool bUsedWithInstancedStaticMeshes;
	bool bUsedWithGeometryCollections;
	bool bUsesDistortion;
	bool bUsedWithClothing;
	bool bUsedWithWater;
	bool bUsedWithHairStrands;
	bool bUsedWithLidarPointCloud;
	bool bUsedWithVirtualHeightfieldMesh;
	bool bUsedWithUI;
	bool bAutomaticallySetUsageInEditor;
	bool bFullyRough;
	bool bUseFullPrecision;
	bool bUseLightmapDirectionality;
	bool bUseAlphaToCoverage;
	bool bForwardRenderUsePreintegratedGFForSimpleIBL;
	bool bUseHQForwardReflections;
	bool bUsePlanarForwardReflections;
	bool bNormalCurvatureToRoughness;
	EMaterialTessellationMode D3D11TessellationMode;
	bool bEnableCrackFreeDisplacement;
	bool bEnableAdaptiveTessellation;
	bool AllowTranslucentCustomDepthWrites;
	bool Wireframe;
	EMaterialShadingRate ShadingRate;
	bool bCanMaskedBeAssumedOpaque;
	bool bIsMasked;
	bool bIsPreviewMaterial;
	bool bIsFunctionPreviewMaterial;
	bool bUseMaterialAttributes;
	bool bCastRayTracedShadows;
	bool bUseTranslucencyVertexFog;
	bool bApplyCloudFogging;
	bool bIsSky;
	bool bComputeFogPerPixel;
	bool bOutputTranslucentVelocity;
	bool bAllowDevelopmentShaderCompile;
	bool bIsMaterialEditorStatsMaterial;
	EBlendableLocation BlendableLocation;
	bool BlendableOutputAlpha;
	bool bEnableStencilTest;
	EMaterialStencilCompare StencilCompare;
	byte StencilRefValue;
	ERefractionMode RefractionMode;
	int BlendablePriority;
	bool bIsBlendable;
	uint32_t UsageFlagWarnings;
	float RefractionDepthBias;
	struct Guid StateId;
	float MaxDisplacement;
	struct MaterialCachedExpressionData CachedExpressionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialBillboardComponent : public UPrimitiveComponent
{
public:
	TArray<struct MaterialSpriteElement> Elements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAbs : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionActorPositionWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAdd : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	float ConstA;
	float ConstB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
{
public:
	float Threshold;
	ETextureColorChannel Channel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAppendVector : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArccosine : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArccosineFast : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArcsine : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArcsineFast : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArctangent : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArctangent2 : public UMaterialExpression
{
public:
	struct ExpressionInput Y;
	struct ExpressionInput X;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArctangent2Fast : public UMaterialExpression
{
public:
	struct ExpressionInput Y;
	struct ExpressionInput X;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionArctangentFast : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
{
public:
	struct ExpressionInput WorldPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionBlackBody : public UMaterialExpression
{
public:
	struct ExpressionInput Temp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
{
public:
	struct MaterialAttributesInput A;
	struct MaterialAttributesInput B;
	struct ExpressionInput Alpha;
	EMaterialAttributeBlend PixelAttributeBlendType;
	EMaterialAttributeBlend VertexAttributeBlendType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
{
public:
	struct MaterialAttributesInput MaterialAttributes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionBumpOffset : public UMaterialExpression
{
public:
	struct ExpressionInput Coordinate;
	struct ExpressionInput Height;
	struct ExpressionInput HeightRatioInput;
	float HeightRatio;
	float ReferencePlane;
	uint32_t ConstCoordinate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCameraPositionWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCameraVectorWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCeil : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParameter : public UMaterialExpression
{
public:
	struct FName ParameterName;
	struct Guid ExpressionGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
{
public:
	struct LinearColor DefaultValue;
	bool bUseCustomPrimitiveData;
	byte PrimitiveDataIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
{
public:
	EChannelMaskParameterColor MaskChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionClamp : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	struct ExpressionInput Min;
	struct ExpressionInput Max;
	EClampMode ClampMode;
	float MinDefault;
	float MaxDefault;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCloudSampleAttribute : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCollectionParameter : public UMaterialExpression
{
public:
	class UClass* Collection;
	struct FName ParameterName;
	struct Guid ParameterId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionComment : public UMaterialExpression
{
public:
	int SizeX;
	int SizeY;
	struct FString Text;
	struct LinearColor CommentColor;
	int FontSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionComponentMask : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	bool R;
	bool G;
	bool B;
	bool A;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionConstant : public UMaterialExpression
{
public:
	float R;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionConstant2Vector : public UMaterialExpression
{
public:
	float R;
	float G;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionConstant3Vector : public UMaterialExpression
{
public:
	struct LinearColor Constant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionConstant4Vector : public UMaterialExpression
{
public:
	struct LinearColor Constant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionConstantBiasScale : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	float Bias;
	float Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCosine : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	float Period;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCrossProduct : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
{
public:
	float DefaultValue;
	bool bUseCustomPrimitiveData;
	byte PrimitiveDataIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
{
public:
	class UClass* Curve;
	class UClass* Atlas;
	struct ExpressionInput InputTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionCustom : public UMaterialExpression
{
public:
	struct FString Code;
	ECustomMaterialOutputType OutputType;
	struct FString Description;
	TArray<struct CustomInput> Inputs;
	TArray<struct CustomOutput> AdditionalOutputs;
	TArray<struct CustomDefine> AdditionalDefines;
	TArray<struct FString> IncludeFilePaths;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDDX : public UMaterialExpression
{
public:
	struct ExpressionInput Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDDY : public UMaterialExpression
{
public:
	struct ExpressionInput Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDecalDerivative : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
{
public:
	struct ExpressionInput TextureSize;
	float ConstWidth;
	float ConstHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDeltaTime : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDepthFade : public UMaterialExpression
{
public:
	struct ExpressionInput InOpacity;
	struct ExpressionInput FadeDistance;
	float OpacityDefault;
	float FadeDistanceDefault;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
{
public:
	EDepthOfFieldFunctionValue FunctionValue;
	struct ExpressionInput Depth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
{
public:
	struct ExpressionInput InXY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDesaturation : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	struct ExpressionInput Fraction;
	struct LinearColor LuminanceFactors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDistance : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDistanceCullFade : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
{
public:
	struct ExpressionInput Position;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDistanceFieldsRenderingSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput No;
	struct ExpressionInput Yes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
{
public:
	struct ExpressionInput Position;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDivide : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	float ConstA;
	float ConstB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDotProduct : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionDynamicParameter : public UMaterialExpression
{
public:
	TArray<struct FString> ParamNames;
	struct LinearColor DefaultValue;
	uint32_t ParameterIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionEyeAdaptation : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput Default;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFloor : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFmod : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFontSample : public UMaterialExpression
{
public:
	class UClass* Font;
	int FontTexturePage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
{
public:
	struct FName ParameterName;
	struct Guid ExpressionGUID;
	struct FName Group;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFrac : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFresnel : public UMaterialExpression
{
public:
	struct ExpressionInput ExponentIn;
	float Exponent;
	struct ExpressionInput BaseReflectFractionIn;
	float BaseReflectFraction;
	struct ExpressionInput Normal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFunctionInput : public UMaterialExpression
{
public:
	struct ExpressionInput Preview;
	struct FName InputName;
	struct FString Description;
	struct Guid ID;
	EFunctionInputType InputType;
	struct Vector4 PreviewValue;
	bool bUsePreviewValueAsDefault;
	int SortPriority;
	bool bCompilingFunctionPreview;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionFunctionOutput : public UMaterialExpression
{
public:
	struct FName OutputName;
	struct FString Description;
	int SortPriority;
	struct ExpressionInput A;
	bool bLastPreviewed;
	struct Guid ID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
{
public:
	struct MaterialAttributesInput MaterialAttributes;
	TArray<struct Guid> AttributeGetTypes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionGIReplace : public UMaterialExpression
{
public:
	struct ExpressionInput Default;
	struct ExpressionInput StaticIndirect;
	struct ExpressionInput DynamicIndirect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionHairAttributes : public UMaterialExpression
{
public:
	bool bUseTangentSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionHairColor : public UMaterialExpression
{
public:
	struct ExpressionInput Melanin;
	struct ExpressionInput Redness;
	struct ExpressionInput DyeColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionIf : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	struct ExpressionInput AGreaterThanB;
	struct ExpressionInput AEqualsB;
	struct ExpressionInput ALessThanB;
	float EqualsThreshold;
	float ConstB;
	float ConstAEqualsB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionInverseLinearInterpolate : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	struct ExpressionInput Value;
	float ConstA;
	float ConstB;
	float ConstValue;
	bool bClampResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLightmapUVs : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLightmassReplace : public UMaterialExpression
{
public:
	struct ExpressionInput Realtime;
	struct ExpressionInput Lightmass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLightVector : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLinearInterpolate : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	struct ExpressionInput Alpha;
	float ConstA;
	float ConstB;
	float ConstAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLogarithm10 : public UMaterialExpression
{
public:
	struct ExpressionInput X;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLogarithm2 : public UMaterialExpression
{
public:
	struct ExpressionInput X;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
{
public:
	struct ExpressionInput BaseColor;
	struct ExpressionInput Metallic;
	struct ExpressionInput Specular;
	struct ExpressionInput Roughness;
	struct ExpressionInput Anisotropy;
	struct ExpressionInput EmissiveColor;
	struct ExpressionInput Opacity;
	struct ExpressionInput OpacityMask;
	struct ExpressionInput Normal;
	struct ExpressionInput Tangent;
	struct ExpressionInput WorldPositionOffset;
	struct ExpressionInput WorldDisplacement;
	struct ExpressionInput TessellationMultiplier;
	struct ExpressionInput SubsurfaceColor;
	struct ExpressionInput ClearCoat;
	struct ExpressionInput ClearCoatRoughness;
	struct ExpressionInput AmbientOcclusion;
	struct ExpressionInput Refraction;
	struct ExpressionInput CustomizedUVs;
	struct ExpressionInput PixelDepthOffset;
	struct ExpressionInput ShadingModel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMapARPassthroughCameraUV : public UMaterialExpression
{
public:
	struct ExpressionInput Coordinates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
{
public:
	struct FName ParameterName;
	struct Guid ExpressionGUID;
	struct MaterialAttributesInput Input;
	struct MaterialLayersFunctions DefaultLayers;
	TArray<class UClass*> LayerCallers;
	int NumActiveLayerCallers;
	TArray<class UClass*> BlendCallers;
	int NumActiveBlendCallers;
	bool bIsLayerGraphBuilt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
{
public:
	class UClass* MaterialFunction;
	struct MaterialParameterInfo FunctionParameterInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
{
public:
	struct ExpressionInput Realtime;
	struct ExpressionInput MaterialProxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMax : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	float ConstA;
	float ConstB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMin : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	float ConstA;
	float ConstB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionMultiply : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	float ConstA;
	float ConstB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRerouteBase : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionNamedRerouteBase : public UMaterialExpressionRerouteBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionNamedRerouteDeclaration : public UMaterialExpressionNamedRerouteBase
{
public:
	struct ExpressionInput Input;
	struct FName Name;
	struct Guid VariableGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionNamedRerouteUsage : public UMaterialExpressionNamedRerouteBase
{
public:
	class UClass* Declaration;
	struct Guid DeclarationGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionNoise : public UMaterialExpression
{
public:
	struct ExpressionInput Position;
	struct ExpressionInput FilterWidth;
	float Scale;
	int Quality;
	ENoiseFunction NoiseFunction;
	bool bTurbulence;
	int Levels;
	float OutputMin;
	float OutputMax;
	float LevelScale;
	bool bTiling;
	uint32_t RepeatSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionNormalize : public UMaterialExpression
{
public:
	struct ExpressionInput VectorInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionObjectBounds : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionObjectOrientation : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionObjectPositionWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionObjectRadius : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionOneMinus : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPanner : public UMaterialExpression
{
public:
	struct ExpressionInput Coordinate;
	struct ExpressionInput Time;
	struct ExpressionInput Speed;
	float SpeedX;
	float SpeedY;
	uint32_t ConstCoordinate;
	bool bFractionalPart;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleColor : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleDirection : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleMacroUV : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticlePositionWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleRadius : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleRandom : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleSize : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleSpeed : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
{
public:
	bool bBlend;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionParticleSubUVProperties : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPerInstanceCustomData : public UMaterialExpression
{
public:
	struct ExpressionInput DefaultValue;
	float ConstDefaultValue;
	uint32_t DataIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPixelDepth : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPixelNormalWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPower : public UMaterialExpression
{
public:
	struct ExpressionInput Base;
	struct ExpressionInput Exponent;
	float ConstExponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPreSkinnedLocalBounds : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput CurrentFrame;
	struct ExpressionInput PreviousFrame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionQualitySwitch : public UMaterialExpression
{
public:
	struct ExpressionInput Default;
	struct ExpressionInput Inputs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRayTracingQualitySwitch : public UMaterialExpression
{
public:
	struct ExpressionInput Normal;
	struct ExpressionInput RayTraced;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionReflectionCapturePassSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput Default;
	struct ExpressionInput Reflection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
{
public:
	struct ExpressionInput CustomWorldNormal;
	bool bNormalizeCustomWorldNormal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionReroute : public UMaterialExpressionRerouteBase
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
{
public:
	struct ExpressionInput NormalizedRotationAxis;
	struct ExpressionInput RotationAngle;
	struct ExpressionInput PivotPoint;
	struct ExpressionInput Position;
	float Period;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRotator : public UMaterialExpression
{
public:
	struct ExpressionInput Coordinate;
	struct ExpressionInput Time;
	float CenterX;
	float CenterY;
	float Speed;
	uint32_t ConstCoordinate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRound : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRuntimeVirtualTextureOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput BaseColor;
	struct ExpressionInput Specular;
	struct ExpressionInput Roughness;
	struct ExpressionInput Normal;
	struct ExpressionInput WorldHeight;
	struct ExpressionInput Opacity;
	struct ExpressionInput Mask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRuntimeVirtualTextureReplace : public UMaterialExpression
{
public:
	struct ExpressionInput Default;
	struct ExpressionInput VirtualTextureOutput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRuntimeVirtualTextureSample : public UMaterialExpression
{
public:
	struct ExpressionInput Coordinates;
	struct ExpressionInput WorldPosition;
	struct ExpressionInput MipValue;
	class UClass* VirtualTexture;
	ERuntimeVirtualTextureMaterialType MaterialType;
	bool bSinglePhysicalSpace;
	bool bAdaptive;
	ERuntimeVirtualTextureMipValueMode MipValueMode;
	ERuntimeVirtualTextureTextureAddressMode TextureAddressMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionRuntimeVirtualTextureSampleParameter : public UMaterialExpressionRuntimeVirtualTextureSample
{
public:
	struct FName ParameterName;
	struct Guid ExpressionGUID;
	struct FName Group;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSamplePhysicsVectorField : public UMaterialExpression
{
public:
	struct ExpressionInput WorldPosition;
	EFieldVectorType FieldTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSamplePhysicsScalarField : public UMaterialExpression
{
public:
	struct ExpressionInput WorldPosition;
	EFieldScalarType FieldTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSamplePhysicsIntegerField : public UMaterialExpression
{
public:
	struct ExpressionInput WorldPosition;
	EFieldIntegerType FieldTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSaturate : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSceneColor : public UMaterialExpression
{
public:
	EMaterialSceneAttributeInputMode InputMode;
	struct ExpressionInput Input;
	struct ExpressionInput OffsetFraction;
	struct Vector2D ConstInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSceneDepth : public UMaterialExpression
{
public:
	EMaterialSceneAttributeInputMode InputMode;
	struct ExpressionInput Input;
	struct ExpressionInput Coordinates;
	struct Vector2D ConstInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSceneDepthWithoutWater : public UMaterialExpression
{
public:
	EMaterialSceneAttributeInputMode InputMode;
	struct ExpressionInput Input;
	struct Vector2D ConstInput;
	float FallbackDepth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSceneTexelSize : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSceneTexture : public UMaterialExpression
{
public:
	struct ExpressionInput Coordinates;
	ESceneTextureId SceneTextureId;
	bool bFiltered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionScreenPosition : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
{
public:
	TArray<struct ExpressionInput> Inputs;
	TArray<struct Guid> AttributeSetTypes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionShaderStageSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput PixelShader;
	struct ExpressionInput VertexShader;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionShadingModel : public UMaterialExpression
{
public:
	EMaterialShadingModel ShadingModel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput Default;
	struct ExpressionInput Inputs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionShadowReplace : public UMaterialExpression
{
public:
	struct ExpressionInput Default;
	struct ExpressionInput Shadow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSign : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSine : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	float Period;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSingleLayerWaterMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput ScatteringCoefficients;
	struct ExpressionInput AbsorptionCoefficients;
	struct ExpressionInput PhaseG;
	struct ExpressionInput ColorScaleBehindWater;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkinningVertexOffsets : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkyAtmosphereLightDirection : public UMaterialExpression
{
public:
	int LightIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkyAtmosphereLightIlluminance : public UMaterialExpression
{
public:
	int LightIndex;
	struct ExpressionInput WorldPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkyAtmosphereLightDiskLuminance : public UMaterialExpression
{
public:
	int LightIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkyAtmosphereAerialPerspective : public UMaterialExpression
{
public:
	struct ExpressionInput WorldPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSkyAtmosphereViewLuminance : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSmoothStep : public UMaterialExpression
{
public:
	struct ExpressionInput Min;
	struct ExpressionInput Max;
	struct ExpressionInput Value;
	float ConstMin;
	float ConstMax;
	float ConstValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSobol : public UMaterialExpression
{
public:
	struct ExpressionInput Cell;
	struct ExpressionInput Index;
	struct ExpressionInput Seed;
	uint32_t ConstIndex;
	struct Vector2D ConstSeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSpeedTree : public UMaterialExpression
{
public:
	struct ExpressionInput GeometryInput;
	struct ExpressionInput WindInput;
	struct ExpressionInput LODInput;
	struct ExpressionInput ExtraBendWS;
	ESpeedTreeGeometryType GeometryType;
	ESpeedTreeWindType WindType;
	ESpeedTreeLODType LODType;
	float BillboardThreshold;
	bool bAccurateWindVelocities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSphereMask : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	struct ExpressionInput Radius;
	struct ExpressionInput Hardness;
	float AttenuationRadius;
	float HardnessPercent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
{
public:
	struct ExpressionInput Density;
	float ConstantDensity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSquareRoot : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionStaticBool : public UMaterialExpression
{
public:
	bool Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
{
public:
	bool DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
{
public:
	bool DefaultR;
	bool DefaultG;
	bool DefaultB;
	bool DefaultA;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionStaticSwitch : public UMaterialExpression
{
public:
	bool DefaultValue;
	struct ExpressionInput A;
	struct ExpressionInput B;
	struct ExpressionInput Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionStep : public UMaterialExpression
{
public:
	struct ExpressionInput Y;
	struct ExpressionInput X;
	float ConstY;
	float ConstX;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSubtract : public UMaterialExpression
{
public:
	struct ExpressionInput A;
	struct ExpressionInput B;
	float ConstA;
	float ConstB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTangent : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	float Period;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTemporalSobol : public UMaterialExpression
{
public:
	struct ExpressionInput Index;
	struct ExpressionInput Seed;
	uint32_t ConstIndex;
	struct Vector2D ConstSeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureCoordinate : public UMaterialExpression
{
public:
	int CoordinateIndex;
	float UTiling;
	float VTiling;
	bool UnMirrorU;
	bool UnMirrorV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureProperty : public UMaterialExpression
{
public:
	struct ExpressionInput TextureObject;
	EMaterialExposedTextureProperty Property;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSampleParameter2DArray : public UMaterialExpressionTextureSampleParameter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
{
public:
	bool bBlend;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionThinTranslucentMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput TransmittanceColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTime : public UMaterialExpression
{
public:
	bool bIgnorePause;
	bool bOverride_Period;
	float Period;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTransform : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	EMaterialVectorCoordTransformSource TransformSourceType;
	EMaterialVectorCoordTransform TransformType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTransformPosition : public UMaterialExpression
{
public:
	struct ExpressionInput Input;
	EMaterialPositionTransformSource TransformSourceType;
	EMaterialPositionTransformSource TransformType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTruncate : public UMaterialExpression
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionTwoSidedSign : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVectorNoise : public UMaterialExpression
{
public:
	struct ExpressionInput Position;
	EVectorNoiseFunction NoiseFunction;
	int Quality;
	bool bTiling;
	uint32_t TileSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVertexColor : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput Input;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVertexNormalWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVertexTangentWS : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionViewProperty : public UMaterialExpression
{
public:
	EMaterialExposedViewProperty Property;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionViewSize : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVirtualTextureFeatureSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput No;
	struct ExpressionInput Yes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVolumetricAdvancedMaterialInput : public UMaterialExpression
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionVolumetricAdvancedMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct ExpressionInput PhaseG;
	struct ExpressionInput PhaseG2;
	struct ExpressionInput PhaseBlend;
	struct ExpressionInput MultiScatteringContribution;
	struct ExpressionInput MultiScatteringOcclusion;
	struct ExpressionInput MultiScatteringEccentricity;
	struct ExpressionInput ConservativeDensity;
	float ConstPhaseG;
	float ConstPhaseG2;
	float ConstPhaseBlend;
	bool PerSamplePhaseEvaluation;
	uint32_t MultiScatteringApproximationOctaveCount;
	float ConstMultiScatteringContribution;
	float ConstMultiScatteringOcclusion;
	float ConstMultiScatteringEccentricity;
	bool bGroundContribution;
	bool bGrayScaleMaterial;
	bool bRayMarchVolumeShadow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionWorldPosition : public UMaterialExpression
{
public:
	EWorldPositionIncludedOffsets WorldPositionShaderOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunctionInterface : public UObject
{
public:
	struct Guid StateId;
	EMaterialFunctionUsage MaterialFunctionUsage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunction : public UMaterialFunctionInterface
{
public:
	struct FString Description;
	bool bExposeToLibrary;
	bool bPrefixParameterNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunctionInstance : public UMaterialFunctionInterface
{
public:
	class UClass* Parent;
	class UClass* Base;
	TArray<struct ScalarParameterValue> ScalarParameterValues;
	TArray<struct VectorParameterValue> VectorParameterValues;
	TArray<struct TextureParameterValue> TextureParameterValues;
	TArray<struct FontParameterValue> FontParameterValues;
	TArray<struct StaticSwitchParameter> StaticSwitchParameterValues;
	TArray<struct StaticComponentMaskParameter> StaticComponentMaskParameterValues;
	TArray<struct RuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunctionMaterialLayer : public UMaterialFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AMaterialInstanceActor : public AActor
{
public:
	TArray<class UClass*> TargetActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialInstanceDynamic : public UMaterialInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialParameterCollection : public UObject
{
public:
	struct Guid StateId;
	TArray<struct CollectionScalarParameter> ScalarParameters;
	TArray<struct CollectionVectorParameter> VectorParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialParameterCollectionInstance : public UObject
{
public:
	class UClass* Collection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AMatineeActor : public AActor
{
public:
	class UClass* MatineeData;
	struct FName MatineeControllerName;
	float PlayRate;
	bool bPlayOnLevelLoad;
	bool bForceStartPos;
	float ForceStartPosition;
	bool bLooping;
	bool bRewindOnPlay;
	bool bNoResetOnRewind;
	bool bRewindIfAlreadyPlaying;
	bool bDisableRadioFilter;
	bool bClientSideOnly;
	bool bSkipUpdateIfNotVisible;
	bool bIsSkippable;
	int PreferredSplitScreenNum;
	bool bDisableMovementInput;
	bool bDisableLookAtInput;
	bool bHidePlayer;
	bool bHideHUD;
	TArray<struct InterpGroupActorInfo> GroupActorInfos;
	bool bShouldShowGore;
	TArray<class UClass*> GroupInst;
	TArray<struct CameraCutInfo> CameraCuts;
	bool bIsPlaying;
	bool bReversePlayback;
	bool bPaused;
	bool bPendingStop;
	float InterpPosition;
	byte ReplicationForceIsPlaying;
	struct FScriptMulticastDelegate OnPlay;
	struct FScriptMulticastDelegate OnStop;
	struct FScriptMulticastDelegate OnPause;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AMatineeActorCameraAnim : public AMatineeActor
{
public:
	class UClass* CameraAnim;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMatineeAnimInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMatineeInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AMeshMergeCullingVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshSimplificationSettings : public UDeveloperSettings
{
public:
	struct FName MeshReductionModuleName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMicroTransactionBase : public UPlatformInterfaceBase
{
public:
	TArray<struct PurchaseInfo> AvailableProducts;
	struct FString LastError;
	struct FString LastErrorSolution;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UModelComponent : public UPrimitiveComponent
{
public:
	class UClass* ModelBodySetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMorphTarget : public UObject
{
public:
	class UClass* BaseSkelMesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavAgentInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavCollisionBase : public UObject
{
public:
	bool bIsDynamicObstacle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavEdgeProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationDataChunk : public UObject
{
public:
	struct FName NavigationDataName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationDataInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNullNavSysConfig : public UNavigationSystemConfig
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavPathObserverInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavRelevantInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimulatedClientNetConnection : public UNetConnection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetPushModelHelpers : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkPredictionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkSettings : public UDeveloperSettings
{
public:
	bool bVerifyPeer;
	bool bEnableMultiplayerWorldOriginRebasing;
	int MaxRepArraySize;
	int MaxRepArrayMemory;
	TArray<struct NetworkEmulationProfileDescription> NetworkEmulationProfiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNodeMappingContainer : public UObject
{
public:
	Unknown SourceItems;
	Unknown TargetItems;
	Unknown SourceToTarget;
	struct TSoftClassPtr<UObject> SourceAsset;
	struct TSoftClassPtr<UObject> TargetAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNodeMappingProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANote : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectLibrary : public UObject
{
public:
	class UClass* ObjectBaseClass;
	bool bHasBlueprintClasses;
	TArray<class UClass*> Objects;
	TArray<Unknown> WeakObjects;
	bool bUseWeakReferences;
	bool bIsFullyLoaded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectReferencer : public UObject
{
public:
	TArray<class UClass*> ReferencedObjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectTraceWorldSubsystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPackageMapClient : public UPackageMap
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class APainCausingVolume : public APhysicsVolume
{
public:
	bool bPainCausing;
	float DamagePerSec;
	class UClass* DamageType;
	float PainInterval;
	bool bEntryPain;
	bool BACKUP_bPainCausing;
	class UClass* DamageInstigator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleEmitter : public UObject
{
public:
	struct FName EmitterName;
	int SubUVDataOffset;
	EEmitterRenderMode EmitterRenderMode;
	EParticleSignificanceLevel SignificanceLevel;
	bool bUseLegacySpawningBehavior;
	bool ConvertedModules;
	bool bIsSoloing;
	bool bCookedOut;
	bool bDisabledLODsKeepEmitterAlive;
	bool bDisableWhenInsignficant;
	TArray<class UClass*> LODLevels;
	int PeakActiveParticles;
	int InitialAllocationCount;
	float QualityLevelSpawnRateScale;
	uint32_t DetailModeBitmask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AParticleEventManager : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleLODLevel : public UObject
{
public:
	int Level;
	bool bEnabled;
	class UClass* RequiredModule;
	TArray<class UClass*> Modules;
	class UClass* TypeDataModule;
	class UClass* SpawnModule;
	class UClass* EventGenerator;
	TArray<class UClass*> SpawningModules;
	TArray<class UClass*> SpawnModules;
	TArray<class UClass*> UpdateModules;
	TArray<class UClass*> OrbitModules;
	TArray<class UClass*> EventReceiverModules;
	bool ConvertedModules;
	int PeakActiveParticles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAccelerationBase : public UParticleModule
{
public:
	bool bAlwaysInWorldSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
{
public:
	struct RawDistributionVector Acceleration;
	bool bApplyOwnerScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
{
public:
	struct Vector Acceleration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
{
public:
	class UClass* DragCoefficient;
	struct RawDistributionFloat DragCoefficientRaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
{
public:
	class UClass* DragScale;
	struct RawDistributionFloat DragScaleRaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
{
public:
	struct RawDistributionVector AccelOverLife;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAttractorBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
{
public:
	struct Vector EndPoint0;
	struct Vector EndPoint1;
	struct RawDistributionFloat Range;
	struct RawDistributionFloat Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
{
public:
	struct FName EmitterName;
	struct RawDistributionFloat Range;
	bool bStrengthByDistance;
	struct RawDistributionFloat Strength;
	bool bAffectBaseVelocity;
	EAttractorParticleSelectionMethod SelectionMethod;
	bool bRenewSource;
	bool bInheritSourceVel;
	int LastSelIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
{
public:
	struct RawDistributionVector Position;
	struct RawDistributionFloat Range;
	struct RawDistributionFloat Strength;
	bool StrengthByDistance;
	bool bAffectBaseVelocity;
	bool bOverrideVelocity;
	bool bUseWorldSpacePosition;
	bool Positive_X;
	bool Positive_Y;
	bool Positive_Z;
	bool Negative_X;
	bool Negative_Y;
	bool Negative_Z;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
{
public:
	struct Vector Position;
	float Radius;
	class UClass* Strength;
	struct RawDistributionFloat StrengthRaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleBeamBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleBeamModifier : public UParticleModuleBeamBase
{
public:
	EBeamModifierType ModifierType;
	struct BeamModifierOptions PositionOptions;
	struct RawDistributionVector Position;
	struct BeamModifierOptions TangentOptions;
	struct RawDistributionVector Tangent;
	bool bAbsoluteTangent;
	struct BeamModifierOptions StrengthOptions;
	struct RawDistributionFloat Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleBeamNoise : public UParticleModuleBeamBase
{
public:
	bool bLowFreq_Enabled;
	int Frequency;
	int Frequency_LowRange;
	struct RawDistributionVector NoiseRange;
	struct RawDistributionFloat NoiseRangeScale;
	bool bNRScaleEmitterTime;
	struct RawDistributionVector NoiseSpeed;
	bool bSmooth;
	float NoiseLockRadius;
	bool bNoiseLock;
	bool bOscillate;
	float NoiseLockTime;
	float NoiseTension;
	bool bUseNoiseTangents;
	struct RawDistributionFloat NoiseTangentStrength;
	int NoiseTessellation;
	bool bTargetNoise;
	float FrequencyDistance;
	bool bApplyNoiseScale;
	struct RawDistributionFloat NoiseScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleBeamSource : public UParticleModuleBeamBase
{
public:
	EBeam2SourceTargetMethod SourceMethod;
	struct FName SourceName;
	bool bSourceAbsolute;
	struct RawDistributionVector Source;
	bool bLockSource;
	EBeam2SourceTargetTangentMethod SourceTangentMethod;
	struct RawDistributionVector SourceTangent;
	bool bLockSourceTangent;
	struct RawDistributionFloat SourceStrength;
	bool bLockSourceStength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleBeamTarget : public UParticleModuleBeamBase
{
public:
	EBeam2SourceTargetMethod TargetMethod;
	struct FName TargetName;
	struct RawDistributionVector Target;
	bool bTargetAbsolute;
	bool bLockTarget;
	EBeam2SourceTargetTangentMethod TargetTangentMethod;
	struct RawDistributionVector TargetTangent;
	bool bLockTargetTangent;
	struct RawDistributionFloat TargetStrength;
	bool bLockTargetStength;
	float LockRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleCameraBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleCameraOffset : public UParticleModuleCameraBase
{
public:
	struct RawDistributionFloat CameraOffset;
	bool bSpawnTimeOnly;
	EParticleCameraOffsetUpdateMethod UpdateMethod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleCollisionBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleCollision : public UParticleModuleCollisionBase
{
public:
	struct RawDistributionVector DampingFactor;
	struct RawDistributionVector DampingFactorRotation;
	struct RawDistributionFloat MaxCollisions;
	EParticleCollisionComplete CollisionCompletionOption;
	TArray<EObjectTypeQuery> CollisionTypes;
	bool bApplyPhysics;
	bool bIgnoreTriggerVolumes;
	struct RawDistributionFloat ParticleMass;
	float DirScalar;
	bool bPawnsDoNotDecrementCount;
	bool bOnlyVerticalNormalsDecrementCount;
	float VerticalFudgeFactor;
	struct RawDistributionFloat DelayAmount;
	bool bDropDetail;
	bool bCollideOnlyIfVisible;
	bool bIgnoreSourceActor;
	float MaxCollisionDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
{
public:
	struct RawDistributionFloat Resilience;
	struct RawDistributionFloat ResilienceScaleOverLife;
	float Friction;
	float RandomSpread;
	float RandomDistribution;
	float RadiusScale;
	float RadiusBias;
	EParticleCollisionResponse Response;
	EParticleCollisionMode CollisionMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleColorBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleColor : public UParticleModuleColorBase
{
public:
	struct RawDistributionVector StartColor;
	struct RawDistributionFloat StartAlpha;
	bool bClampAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleColor_Seeded : public UParticleModuleColor
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleColorOverLife : public UParticleModuleColorBase
{
public:
	struct RawDistributionVector ColorOverLife;
	struct RawDistributionFloat AlphaOverLife;
	bool bClampAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
{
public:
	struct RawDistributionVector ColorScaleOverLife;
	struct RawDistributionFloat AlphaScaleOverLife;
	bool bEmitterTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleEventBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleEventGenerator : public UParticleModuleEventBase
{
public:
	TArray<struct ParticleEvent_GenerateInfo> Events;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
{
public:
	EParticleEventType EventGeneratorType;
	struct FName EventName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
{
public:
	bool bStopSpawning;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
{
public:
	struct RawDistributionFloat SpawnCount;
	bool bUseParticleTime;
	bool bUsePSysLocation;
	bool bInheritVelocity;
	struct RawDistributionVector InheritVelocityScale;
	TArray<class UClass*> PhysicalMaterials;
	bool bBanPhysicalMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleEventSendToGame : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleKillBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleKillBox : public UParticleModuleKillBase
{
public:
	struct RawDistributionVector LowerLeftCorner;
	struct RawDistributionVector UpperRightCorner;
	bool bAbsolute;
	bool bKillInside;
	bool bAxisAlignedAndFixedSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleKillHeight : public UParticleModuleKillBase
{
public:
	struct RawDistributionFloat Height;
	bool bAbsolute;
	bool bFloor;
	bool bApplyPSysScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLifetimeBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLifetime : public UParticleModuleLifetimeBase
{
public:
	struct RawDistributionFloat LifeTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLightBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLight : public UParticleModuleLightBase
{
public:
	bool bUseInverseSquaredFalloff;
	bool bAffectsTranslucency;
	bool bPreviewLightRadius;
	float SpawnFraction;
	struct RawDistributionVector ColorScaleOverLife;
	struct RawDistributionFloat BrightnessOverLife;
	struct RawDistributionFloat RadiusScale;
	struct RawDistributionFloat LightExponent;
	struct LightingChannels LightingChannels;
	float VolumetricScatteringIntensity;
	bool bHighQualityLights;
	bool bShadowCastingLights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLight_Seeded : public UParticleModuleLight
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocation : public UParticleModuleLocationBase
{
public:
	struct RawDistributionVector StartLocation;
	float DistributeOverNPoints;
	float DistributeThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocation_Seeded : public UParticleModuleLocation
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
{
public:
	ELocationBoneSocketSource SourceType;
	struct Vector UniversalOffset;
	TArray<struct LocationBoneSocketInfo> SourceLocations;
	ELocationBoneSocketSelectionMethod SelectionMethod;
	bool bUpdatePositionEachFrame;
	bool bOrientMeshEmitters;
	bool bInheritBoneVelocity;
	float InheritVelocityScale;
	struct FName SkelMeshActorParamName;
	int NumPreSelectedIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationDirect : public UParticleModuleLocationBase
{
public:
	struct RawDistributionVector Location;
	struct RawDistributionVector LocationOffset;
	struct RawDistributionVector ScaleFactor;
	struct RawDistributionVector Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
{
public:
	struct FName EmitterName;
	ELocationEmitterSelectionMethod SelectionMethod;
	bool InheritSourceVelocity;
	float InheritSourceVelocityScale;
	bool bInheritSourceRotation;
	float InheritSourceRotationScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
{
public:
	struct FName EmitterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
{
public:
	bool Positive_X;
	bool Positive_Y;
	bool Positive_Z;
	bool Negative_X;
	bool Negative_Y;
	bool Negative_Z;
	bool SurfaceOnly;
	bool Velocity;
	struct RawDistributionFloat VelocityScale;
	struct RawDistributionVector StartLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
{
public:
	bool RadialVelocity;
	struct RawDistributionFloat StartRadius;
	struct RawDistributionFloat StartHeight;
	ECylinderHeightAxis HeightAxis;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
{
public:
	struct RawDistributionFloat StartRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
{
public:
	struct RawDistributionVector StartOffset;
	struct RawDistributionFloat Height;
	struct RawDistributionFloat Angle;
	struct RawDistributionFloat Thickness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
{
public:
	ELocationSkelVertSurfaceSource SourceType;
	struct Vector UniversalOffset;
	bool bUpdatePositionEachFrame;
	bool bOrientMeshEmitters;
	bool bInheritBoneVelocity;
	float InheritVelocityScale;
	struct FName SkelMeshActorParamName;
	TArray<struct FName> ValidAssociatedBones;
	bool bEnforceNormalCheck;
	struct Vector NormalToCompare;
	float NormalCheckToleranceDegrees;
	float NormalCheckTolerance;
	TArray<int> ValidMaterialIndices;
	bool bInheritVertexColor;
	bool bInheritUV;
	uint32_t InheritUVChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMaterialBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
{
public:
	TArray<class UClass*> MeshMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotationBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshRotation : public UParticleModuleRotationBase
{
public:
	struct RawDistributionVector StartRotation;
	bool bInheritParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotationRateBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct RawDistributionVector StartRotationRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct RawDistributionVector LifeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
{
public:
	struct RawDistributionVector RotRate;
	bool bScaleRotRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleOrbitBase : public UParticleModule
{
public:
	bool bUseEmitterTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleOrbit : public UParticleModuleOrbitBase
{
public:
	EOrbitChainMode ChainMode;
	struct RawDistributionVector OffsetAmount;
	struct OrbitOptions OffsetOptions;
	struct RawDistributionVector RotationAmount;
	struct OrbitOptions RotationOptions;
	struct RawDistributionVector RotationRateAmount;
	struct OrbitOptions RotationRateOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleOrientationBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
{
public:
	EParticleAxisLock LockAxisFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleParameterBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
{
public:
	TArray<struct EmitterDynamicParameter> DynamicParams;
	int UpdateFlags;
	bool bUsesVelocity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModulePivotOffset : public UParticleModuleLocationBase
{
public:
	struct Vector2D PivotOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRequired : public UParticleModule
{
public:
	class UClass* Material;
	float MinFacingCameraBlendDistance;
	float MaxFacingCameraBlendDistance;
	struct Vector EmitterOrigin;
	struct Rotator EmitterRotation;
	EParticleScreenAlignment ScreenAlignment;
	bool bUseLocalSpace;
	bool bKillOnDeactivate;
	bool bKillOnCompleted;
	EParticleSortMode SortMode;
	bool bUseLegacyEmitterTime;
	bool bRemoveHMDRoll;
	bool bEmitterDurationUseRange;
	float EmitterDuration;
	struct RawDistributionFloat SpawnRate;
	TArray<struct ParticleBurst> BurstList;
	float EmitterDelay;
	float EmitterDelayLow;
	bool bDelayFirstLoopOnly;
	EParticleSubUVInterpMethod InterpolationMethod;
	bool bScaleUV;
	bool bEmitterDelayUseRange;
	EParticleBurstMethod ParticleBurstMethod;
	bool bOverrideSystemMacroUV;
	bool bUseMaxDrawCount;
	EOpacitySourceMode OpacitySourceMode;
	EEmitterNormalsMode EmitterNormalsMode;
	bool bOrbitModuleAffectsVelocityAlignment;
	int SubImages_Horizontal;
	int SubImages_Vertical;
	float RandomImageTime;
	int RandomImageChanges;
	struct Vector MacroUVPosition;
	float MacroUVRadius;
	EParticleUVFlipMode UVFlippingMode;
	ESubUVBoundingVertexCount BoundingMode;
	bool bDurationRecalcEachLoop;
	struct Vector NormalsSphereCenter;
	float AlphaThreshold;
	int EmitterLoops;
	class UClass* CutoutTexture;
	int MaxDrawCount;
	float EmitterDurationLow;
	struct Vector NormalsCylinderDirection;
	TArray<struct FName> NamedMaterialOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotation : public UParticleModuleRotationBase
{
public:
	struct RawDistributionFloat StartRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotation_Seeded : public UParticleModuleRotation
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
{
public:
	struct RawDistributionFloat RotationOverLife;
	bool Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct RawDistributionFloat StartRotationRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct RawDistributionFloat LifeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSizeBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSize : public UParticleModuleSizeBase
{
public:
	struct RawDistributionVector StartSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSize_Seeded : public UParticleModuleSize
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
{
public:
	struct RawDistributionVector LifeMultiplier;
	bool MultiplyX;
	bool MultiplyY;
	bool MultiplyZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSizeScale : public UParticleModuleSizeBase
{
public:
	struct RawDistributionVector SizeScale;
	bool EnableX;
	bool EnableY;
	bool EnableZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
{
public:
	struct Vector2D SpeedScale;
	struct Vector2D MaxScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSourceMovement : public UParticleModuleLocationBase
{
public:
	struct RawDistributionVector SourceMovementScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSpawnBase : public UParticleModule
{
public:
	bool bProcessSpawnRate;
	bool bProcessBurstList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSpawn : public UParticleModuleSpawnBase
{
public:
	struct RawDistributionFloat Rate;
	struct RawDistributionFloat RateScale;
	EParticleBurstMethod ParticleBurstMethod;
	TArray<struct ParticleBurst> BurstList;
	struct RawDistributionFloat BurstScale;
	bool bApplyGlobalSpawnRateScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
{
public:
	float UnitScalar;
	float MovementTolerance;
	struct RawDistributionFloat SpawnPerUnit;
	float MaxFrameDistance;
	bool bIgnoreSpawnRateWhenMoving;
	bool bIgnoreMovementAlongX;
	bool bIgnoreMovementAlongY;
	bool bIgnoreMovementAlongZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSubUVBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSubUV : public UParticleModuleSubUVBase
{
public:
	class UClass* Animation;
	struct RawDistributionFloat SubImageIndex;
	bool bUseRealTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleSubUVMovie : public UParticleModuleSubUV
{
public:
	bool bUseEmitterTime;
	struct RawDistributionFloat FrameRate;
	int StartingFrame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTrailBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTrailSource : public UParticleModuleTrailBase
{
public:
	ETrail2SourceMethod SourceMethod;
	struct FName SourceName;
	struct RawDistributionFloat SourceStrength;
	bool bLockSourceStength;
	int SourceOffsetCount;
	TArray<struct Vector> SourceOffsetDefaults;
	EParticleSourceSelectionMethod SelectionMethod;
	bool bInheritRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTypeDataBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
{
public:
	bool bDeadTrailsOnDeactivate;
	bool bEnablePreviousTangentRecalculation;
	bool bTangentRecalculationEveryFrame;
	float TilingDistance;
	float DistanceTessellationStepSize;
	float TangentTessellationStepSize;
	float WidthTessellationStepSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
{
public:
	EBeam2Method BeamMethod;
	int TextureTile;
	float TextureTileDistance;
	int Sheets;
	int MaxBeamCount;
	float Speed;
	int InterpolationPoints;
	bool bAlwaysOn;
	int UpVectorStepSize;
	struct FName BranchParentName;
	struct RawDistributionFloat Distance;
	EBeamTaperMethod TaperMethod;
	struct RawDistributionFloat TaperFactor;
	struct RawDistributionFloat TaperScale;
	bool RenderGeometry;
	bool RenderDirectLine;
	bool RenderLines;
	bool RenderTessellation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
{
public:
	struct GPUSpriteEmitterInfo EmitterInfo;
	struct GPUSpriteResourceData ResourceData;
	float CameraMotionBlurAmount;
	bool bClearExistingParticlesOnInit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
{
public:
	class UClass* Mesh;
	float LODSizeScale;
	bool bUseStaticMeshLODs;
	bool CastShadows;
	bool DoCollisions;
	EMeshScreenAlignment MeshAlignment;
	bool bOverrideMaterial;
	bool bOverrideDefaultMotionBlurSettings;
	bool bEnableMotionBlur;
	struct RawDistributionVector RollPitchYawRange;
	EParticleAxisLock AxisLockOption;
	bool bCameraFacing;
	EMeshCameraFacingUpAxis CameraFacingUpAxisOption;
	EMeshCameraFacingOptions CameraFacingOption;
	bool bApplyParticleRotationAsSpin;
	bool bFaceCameraDirectionRatherThanPosition;
	bool bCollisionsConsiderPartilceSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
{
public:
	int MaxTessellationBetweenParticles;
	int SheetsPerTrail;
	int MaxTrailCount;
	int MaxParticleInTrailCount;
	bool bDeadTrailsOnDeactivate;
	bool bDeadTrailsOnSourceLoss;
	bool bClipSourceSegement;
	bool bEnablePreviousTangentRecalculation;
	bool bTangentRecalculationEveryFrame;
	bool bSpawnInitialParticle;
	ETrailsRenderAxisOption RenderAxis;
	float TangentSpawningScalar;
	bool bRenderGeometry;
	bool bRenderSpawnPoints;
	bool bRenderTangents;
	bool bRenderTessellation;
	float TilingDistance;
	float DistanceTessellationStepSize;
	bool bEnableTangentDiffInterpScale;
	float TangentTessellationScalar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldBase : public UParticleModule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
{
public:
	bool bOverrideGlobalVectorFieldTightness;
	float GlobalVectorFieldScale;
	float GlobalVectorFieldTightness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
{
public:
	class UClass* VectorField;
	struct Vector RelativeTranslation;
	struct Rotator RelativeRotation;
	struct Vector RelativeScale3D;
	float Intensity;
	float Tightness;
	bool bIgnoreComponentTransform;
	bool bTileX;
	bool bTileY;
	bool bTileZ;
	bool bUseFixDT;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
{
public:
	struct Vector MinInitialRotation;
	struct Vector MaxInitialRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
{
public:
	struct Vector RotationRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
{
public:
	class UClass* VectorFieldScale;
	struct RawDistributionFloat VectorFieldScaleRaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
{
public:
	class UClass* VectorFieldScaleOverLife;
	struct RawDistributionFloat VectorFieldScaleOverLifeRaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVelocityBase : public UParticleModule
{
public:
	bool bInWorldSpace;
	bool bApplyOwnerScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVelocity : public UParticleModuleVelocityBase
{
public:
	struct RawDistributionVector StartVelocity;
	struct RawDistributionFloat StartVelocityRadial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
{
public:
	struct ParticleRandomSeedInfo RandomSeedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
{
public:
	struct RawDistributionFloat Angle;
	struct RawDistributionFloat Velocity;
	struct Vector Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
{
public:
	struct RawDistributionVector Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
{
public:
	struct RawDistributionVector VelOverLife;
	bool Absolute;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleSpriteEmitter : public UParticleEmitter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleSystemComponent : public UFXSystemComponent
{
public:
	class UClass* Template;
	TArray<class UClass*> EmitterMaterials;
	TArray<class UClass*> SkelMeshComponents;
	bool bResetOnDetach;
	bool bUpdateOnDedicatedServer;
	bool bAllowRecycling;
	bool bAutoManageAttachment;
	bool bAutoAttachWeldSimulatedBodies;
	bool bWarmingUp;
	bool bOverrideLODMethod;
	bool bSkipUpdateDynamicDataDuringTick;
	EParticleSystemLODMethod LODMethod;
	EParticleSignificanceLevel RequiredSignificance;
	TArray<struct ParticleSysParam> InstanceParameters;
	struct FScriptMulticastDelegate OnParticleSpawn;
	struct FScriptMulticastDelegate OnParticleBurst;
	struct FScriptMulticastDelegate OnParticleDeath;
	struct FScriptMulticastDelegate OnParticleCollide;
	bool bOldPositionValid;
	struct Vector OldPosition;
	struct Vector PartSysVelocity;
	float WarmupTime;
	float WarmupTickRate;
	float SecondsBeforeInactive;
	float MaxTimeBeforeForceUpdateTransform;
	TArray<class UClass*> ReplayClips;
	float CustomTimeDilation;
	Unknown AutoAttachParent;
	struct FName AutoAttachSocketName;
	EAttachmentRule AutoAttachLocationRule;
	EAttachmentRule AutoAttachRotationRule;
	EAttachmentRule AutoAttachScaleRule;
	struct FScriptMulticastDelegate OnSystemFinished;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UParticleSystemReplay : public UObject
{
public:
	int ClipIDNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPathFollowingAgentInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnNoiseEmitterComponent : public UActorComponent
{
public:
	bool bAIPerceptionSystemCompatibilityMode;
	struct Vector LastRemoteNoisePosition;
	float NoiseLifetime;
	float LastRemoteNoiseVolume;
	float LastRemoteNoiseTime;
	float LastLocalNoiseVolume;
	float LastLocalNoiseTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicalAnimationComponent : public UActorComponent
{
public:
	float StrengthMultiplyer;
	class UClass* SkeletalMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicalMaterialMask : public UObject
{
public:
	int UVChannelIndex;
	ETextureAddress AddressX;
	ETextureAddress AddressY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsAsset : public UObject
{
public:
	TArray<int> BoundsBodies;
	TArray<class UClass*> SkeletalBodySetups;
	TArray<class UClass*> ConstraintSetup;
	struct SolverIterations SolverIterations;
	EPhysicsAssetSolverType SolverType;
	bool bNotForDedicatedServer;
	class UClass* ThumbnailInfo;
	TArray<class UClass*> BodySetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkeletalBodySetup : public BodySetup
{
public:
	bool bSkipScaleFromAnimation;
	TArray<struct PhysicalAnimationProfile> PhysicalAnimationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsCollisionHandler : public UObject
{
public:
	float ImpactThreshold;
	float ImpactReFireDelay;
	class UClass* DefaultImpactSound;
	float LastImpactSoundTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARigidBodyBase : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class APhysicsConstraintActor : public ARigidBodyBase
{
public:
	class UClass* ConstraintComp;
	class UClass* ConstraintActor1;
	class UClass* ConstraintActor2;
	bool bDisableCollision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsConstraintComponent : public USceneComponent
{
public:
	class UClass* ConstraintActor1;
	struct ConstrainComponentPropName ComponentName1;
	class UClass* ConstraintActor2;
	struct ConstrainComponentPropName ComponentName2;
	class UClass* ConstraintSetup;
	struct FScriptMulticastDelegate OnConstraintBroken;
	struct ConstraintInstance ConstraintInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsConstraintTemplate : public UObject
{
public:
	struct ConstraintInstance DefaultInstance;
	TArray<struct PhysicsConstraintProfileHandle> ProfileHandles;
	struct ConstraintProfileProperties DefaultProfile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsFieldComponent : public USceneComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsHandleComponent : public UActorComponent
{
public:
	class UClass* GrabbedComponent;
	bool bSoftAngularConstraint;
	bool bSoftLinearConstraint;
	bool bInterpolateTarget;
	float LinearDamping;
	float LinearStiffness;
	float AngularDamping;
	float AngularStiffness;
	float InterpolationSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PhysicsSettings : public PhysicsSettingsCore
{
public:
	struct RigidBodyErrorCorrection PhysicErrorCorrection;
	ESettingsLockedAxis LockedAxis;
	ESettingsDOF DefaultDegreesOfFreedom;
	bool bSuppressFaceRemapTable;
	bool bSupportUVFromHitResults;
	bool bDisableActiveActors;
	bool bDisableKinematicStaticPairs;
	bool bDisableKinematicKinematicPairs;
	bool bDisableCCD;
	bool bEnableEnhancedDeterminism;
	float AnimPhysicsMinDeltaTime;
	bool bSimulateAnimPhysicsAfterReset;
	float MaxPhysicsDeltaTime;
	bool bSubstepping;
	bool bSubsteppingAsync;
	float MaxSubstepDeltaTime;
	int MaxSubsteps;
	float SyncSceneSmoothingFactor;
	float InitialAverageFrameRate;
	int PhysXTreeRebuildRate;
	TArray<struct PhysicalSurfaceName> PhysicalSurfaces;
	struct BroadphaseSettings DefaultBroadphaseSettings;
	float MinDeltaVelocityForHitEvents;
	struct ChaosPhysicsSettings ChaosSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsSpringComponent : public USceneComponent
{
public:
	float SpringStiffness;
	float SpringDamping;
	float SpringLengthAtRest;
	float SpringRadius;
	ECollisionChannel SpringChannel;
	bool bIgnoreSelf;
	float SpringCompression;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APhysicsThruster : public ARigidBodyBase
{
public:
	class UClass* ThrusterComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsThrusterComponent : public USceneComponent
{
public:
	float ThrustStrength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASceneCapture : public AActor
{
public:
	class UClass* MeshComp;
	class UClass* SceneComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlanarReflection : public ASceneCapture
{
public:
	class UClass* PlanarReflectionComponent;
	bool bShowPreviewPlane;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlanarReflectionComponent : public USceneCaptureComponent
{
public:
	class UClass* PreviewBox;
	float NormalDistortionStrength;
	float PrefilterRoughness;
	float PrefilterRoughnessDistance;
	int ScreenPercentage;
	float ExtraFOV;
	float DistanceFromPlaneFadeStart;
	float DistanceFromPlaneFadeEnd;
	float DistanceFromPlaneFadeoutStart;
	float DistanceFromPlaneFadeoutEnd;
	float AngleFromPlaneFadeStart;
	float AngleFromPlaneFadeEnd;
	bool bShowPreviewPlane;
	bool bRenderSceneTwoSided;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlaneReflectionCapture : public AReflectionCapture
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	float InfluenceRadiusScale;
	class UClass* PreviewInfluenceRadius;
	class UClass* PreviewCaptureBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlatformEventsComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate PlatformChangedToLaptopModeDelegate;
	struct FScriptMulticastDelegate PlatformChangedToTabletModeDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlatformInterfaceWebResponse : public UObject
{
public:
	struct FString OriginalURL;
	int ResponseCode;
	int Tag;
	struct FString StringResponse;
	TArray<byte> BinaryResponse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayerStartPIE : public APlayerStart
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPluginCommandlet : public UCommandlet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class APointLight : public ALight
{
public:
	class UClass* PointLightComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPolys : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPoseableMeshComponent : public USkinnedMeshComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPoseAsset : public UAnimationAsset
{
public:
	struct PoseDataContainer PoseContainer;
	bool bAdditivePose;
	int BasePoseIndex;
	struct FName RetargetSource;
	TArray<struct Transform> RetargetSourceAssetReferencePose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPoseWatch : public UObject
{
public:
	class UClass* Node;
	struct Color PoseWatchColour;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPostProcessComponent : public USceneComponent
{
public:
	struct PostProcessSettings Settings;
	float Priority;
	float BlendRadius;
	float BlendWeight;
	bool bEnabled;
	bool bUnbound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APostProcessVolume : public AVolume
{
public:
	struct PostProcessSettings Settings;
	float Priority;
	float BlendRadius;
	float BlendWeight;
	bool bEnabled;
	bool bUnbound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APrecomputedVisibilityOverrideVolume : public AVolume
{
public:
	TArray<class UClass*> OverrideVisibleActors;
	TArray<class UClass*> OverrideInvisibleActors;
	TArray<struct FName> OverrideInvisibleLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APrecomputedVisibilityVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPreviewCollectionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPreviewMeshCollection : public UDataAsset
{
public:
	class UClass* Skeleton;
	TArray<struct PreviewMeshCollectionEntry> SkeletalMeshes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPrimaryAssetLabel : public UPrimaryDataAsset
{
public:
	struct PrimaryAssetRules Rules;
	bool bLabelAssetsInMyDirectory;
	bool bIsRuntimeLabel;
	TArray<struct TSoftClassPtr<UObject>> ExplicitAssets;
	TArray<struct TSoftClassPtr<UObject>> ExplicitBlueprints;
	struct CollectionReference AssetCollection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
{
public:
	struct FName ProxyLODMeshReductionModuleName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARadialForceActor : public ARigidBodyBase
{
public:
	class UClass* ForceComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URadialForceComponent : public USceneComponent
{
public:
	float Radius;
	ERadialImpulseFalloff Falloff;
	float ImpulseStrength;
	bool bImpulseVelChange;
	bool bIgnoreOwningActor;
	float ForceStrength;
	float DestructibleDamage;
	TArray<EObjectTypeQuery> ObjectTypesToAffect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARectLight : public ALight
{
public:
	class UClass* RectLightComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URectLightComponent : public ULocalLightComponent
{
public:
	float SourceWidth;
	float SourceHeight;
	float BarnDoorAngle;
	float BarnDoorLength;
	class UClass* SourceTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URendererSettings : public UDeveloperSettings
{
public:
	bool bMobileDisableVertexFog;
	int MaxMobileCascades;
	EMobileMSAASampleCount MobileMSAASampleCount;
	bool bMobileAllowDitheredLODTransition;
	bool bMobileAllowSoftwareOcclusionCulling;
	bool bMobileVirtualTextures;
	bool bDiscardUnusedQualityLevels;
	bool bOcclusionCulling;
	float MinScreenRadiusForLights;
	float MinScreenRadiusForEarlyZPass;
	float MinScreenRadiusForCSMdepth;
	bool bPrecomputedVisibilityWarning;
	bool bTextureStreaming;
	bool bUseDXT5NormalMaps;
	bool bVirtualTextures;
	bool bVirtualTexturedLightmaps;
	uint32_t VirtualTextureTileSize;
	uint32_t VirtualTextureTileBorderSize;
	uint32_t VirtualTextureFeedbackFactor;
	bool bVirtualTextureEnableCompressZlib;
	bool bVirtualTextureEnableCompressCrunch;
	bool bClearCoatEnableSecondNormal;
	int ReflectionCaptureResolution;
	bool bReflectionCaptureCompression;
	bool ReflectionEnvironmentLightmapMixBasedOnRoughness;
	bool bForwardShading;
	bool bVertexFoggingForOpaque;
	bool bAllowStaticLighting;
	bool bUseNormalMapsForStaticLighting;
	bool bGenerateMeshDistanceFields;
	bool bEightBitMeshDistanceFields;
	bool bGenerateLandscapeGIData;
	bool bCompressMeshDistanceFields;
	float TessellationAdaptivePixelsPerTriangle;
	bool bSeparateTranslucency;
	ETranslucentSortPolicy TranslucentSortPolicy;
	struct Vector TranslucentSortAxis;
	ECustomDepthStencil CustomDepthStencil;
	bool bCustomDepthTaaJitter;
	EAlphaChannelMode bEnableAlphaChannelInPostProcessing;
	bool bDefaultFeatureBloom;
	bool bDefaultFeatureAmbientOcclusion;
	bool bDefaultFeatureAmbientOcclusionStaticFraction;
	bool bDefaultFeatureAutoExposure;
	EAutoExposureMethodUI DefaultFeatureAutoExposure;
	float DefaultFeatureAutoExposureBias;
	bool bExtendDefaultLuminanceRangeInAutoExposureSettings;
	bool bUsePreExposure;
	bool bEnablePreExposureOnlyInTheEditor;
	bool bDefaultFeatureMotionBlur;
	bool bDefaultFeatureLensFlare;
	bool bTemporalUpsampling;
	bool bSSGI;
	EAntiAliasingMethod DefaultFeatureAntiAliasing;
	ELightUnits DefaultLightUnits;
	EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat;
	bool bRenderUnbuiltPreviewShadowsInGame;
	bool bStencilForLODDither;
	EEarlyZPass EarlyZPass;
	bool bEarlyZPassOnlyMaterialMasking;
	bool bDBuffer;
	EClearSceneOptions ClearSceneMethod;
	bool bBasePassOutputsVelocity;
	bool bVertexDeformationOutputsVelocity;
	bool bSelectiveBasePassOutputs;
	bool bDefaultParticleCutouts;
	int GPUSimulationTextureSizeX;
	int GPUSimulationTextureSizeY;
	bool bGlobalClipPlane;
	EGBufferFormat GBufferFormat;
	bool bUseGPUMorphTargets;
	bool bNvidiaAftermathEnabled;
	bool bMultiView;
	bool bMobilePostProcessing;
	bool bMobileMultiView;
	bool bMobileUseHWsRGBEncoding;
	bool bRoundRobinOcclusion;
	bool bODSCapture;
	bool bMeshStreaming;
	float WireframeCullThreshold;
	bool bEnableRayTracing;
	bool bEnableRayTracingTextureLOD;
	bool bSupportStationarySkylight;
	bool bSupportLowQualityLightmaps;
	bool bSupportPointLightWholeSceneShadows;
	bool bSupportAtmosphericFog;
	bool bSupportSkyAtmosphere;
	bool bSupportSkyAtmosphereAffectsHeightFog;
	bool bSupportSkinCacheShaders;
	ESkinCacheDefaultBehavior DefaultSkinCacheBehavior;
	float SkinCacheSceneMemoryLimitInMB;
	bool bMobileEnableStaticAndCSMShadowReceivers;
	bool bMobileEnableMovableLightCSMShaderCulling;
	bool bMobileAllowDistanceFieldShadows;
	bool bMobileAllowMovableDirectionalLights;
	uint32_t MobileNumDynamicPointLights;
	bool bMobileDynamicPointLightsUseStaticBranch;
	bool bMobileAllowMovableSpotlights;
	bool bMobileAllowMovableSpotlightShadows;
	bool bSupport16BitBoneIndex;
	bool bGPUSkinLimit2BoneInfluences;
	bool bSupportDepthOnlyIndexBuffers;
	bool bSupportReversedIndexBuffers;
	bool bLPV;
	bool bMobileAmbientOcclusion;
	bool bUseUnlimitedBoneInfluences;
	int UnlimitedBonInfluencesThreshold;
	EMobilePlanarReflectionMode MobilePlanarReflectionMode;
	bool bMobileSupportsGen4TAA;
	struct PerPlatformBool bStreamSkeletalMeshLODs;
	struct PerPlatformBool bDiscardSkeletalMeshOptionalLODs;
	struct SoftObjectPath VisualizeCalibrationColorMaterialPath;
	struct SoftObjectPath VisualizeCalibrationCustomMaterialPath;
	struct SoftObjectPath VisualizeCalibrationGrayscaleMaterialPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URendererOverrideSettings : public UDeveloperSettings
{
public:
	bool bSupportAllShaderPermutations;
	bool bForceRecomputeTangents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplayNetConnection : public UNetConnection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplaySubsystem : public UGameInstanceSubsystem
{
public:
	bool bLoadDefaultMapOnStop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReporterBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReporterGraph : public UReporterBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReverbEffect : public UObject
{
public:
	bool bBypassEarlyReflections;
	float ReflectionsDelay;
	float GainHF;
	float ReflectionsGain;
	bool bBypassLateReflections;
	float LateDelay;
	float DecayTime;
	float Density;
	float Diffusion;
	float AirAbsorptionGainHF;
	float DecayHFRatio;
	float LateGain;
	float Gain;
	float RoomRolloffFactor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URig : public UObject
{
public:
	TArray<struct TransformBase> TransformBases;
	TArray<struct Node> Nodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URotatingMovementComponent : public UMovementComponent
{
public:
	struct Rotator RotationRate;
	struct Vector PivotTranslation;
	bool bRotationInLocalSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URPCDoSDetectionConfig : public UObject
{
public:
	bool bRPCDoSDetection;
	bool bRPCDoSAnalytics;
	int HitchTimeQuotaMS;
	int HitchSuspendDetectionTimeMS;
	TArray<struct FString> DetectionSeverity;
	int InitialConnectToleranceMS;
	TArray<struct FName> RPCBlockWhitelist;
	TArray<struct RPCAnalyticsThreshold> RPCAnalyticsThresholds;
	double RPCAnalyticsOverrideChance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URuntimeVirtualTexture : public UObject
{
public:
	int TileCount;
	int TileSize;
	int TileBorderSize;
	ERuntimeVirtualTextureMaterialType MaterialType;
	bool bCompressTextures;
	bool bClearTextures;
	bool bSinglePhysicalSpace;
	bool bPrivateSpace;
	bool bAdaptive;
	bool bContinuousUpdate;
	int RemoveLowMips;
	ETextureGroup LODGroup;
	int Size;
	class UClass* StreamingTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URuntimeVirtualTextureComponent : public USceneComponent
{
public:
	struct TSoftClassPtr<UObject> BoundsAlignActor;
	bool bSetBoundsButton;
	bool bSnapBoundsToLandscape;
	class UClass* VirtualTexture;
	bool bEnableScalability;
	uint32_t ScalabilityGroup;
	bool bHidePrimitives;
	class UClass* StreamingTexture;
	int StreamLowMips;
	bool bBuildStreamingMipsButton;
	bool bEnableCompressCrunch;
	bool bUseStreamingLowMipsInEditor;
	bool bBuildDebugStreamingMips;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARuntimeVirtualTextureVolume : public AActor
{
public:
	class UClass* VirtualTextureComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URVOAvoidanceInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScene : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASceneCapture2D : public ASceneCapture
{
public:
	class UClass* CaptureComponent2D;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USceneCaptureComponentCube : public USceneCaptureComponent
{
public:
	class UClass* TextureTarget;
	bool bCaptureRotation;
	class UClass* TextureTargetLeft;
	class UClass* TextureTargetRight;
	class UClass* TextureTargetODS;
	float IPD;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASceneCaptureCube : public ASceneCapture
{
public:
	class UClass* CaptureComponentCube;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USCS_Node : public UObject
{
public:
	class UClass* ComponentClass;
	class UClass* ComponentTemplate;
	struct BlueprintCookedComponentInstancingData CookedComponentInstancingData;
	struct FName AttachToName;
	struct FName ParentComponentOrVariableName;
	struct FName ParentComponentOwnerClassName;
	bool bIsParentComponentNative;
	TArray<class UClass*> ChildNodes;
	TArray<struct BPVariableMetaDataEntry> MetaDataArray;
	struct Guid VariableGuid;
	struct FName InternalVariableName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USelection : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AServerStatReplicator : public AInfo
{
public:
	bool bUpdateStatNet;
	bool bOverwriteClientStats;
	uint32_t Channels;
	uint32_t InRate;
	uint32_t OutRate;
	uint32_t MaxPacketOverhead;
	uint32_t InRateClientMax;
	uint32_t InRateClientMin;
	uint32_t InRateClientAvg;
	uint32_t InPacketsClientMax;
	uint32_t InPacketsClientMin;
	uint32_t InPacketsClientAvg;
	uint32_t OutRateClientMax;
	uint32_t OutRateClientMin;
	uint32_t OutRateClientAvg;
	uint32_t OutPacketsClientMax;
	uint32_t OutPacketsClientMin;
	uint32_t OutPacketsClientAvg;
	uint32_t NetNumClients;
	uint32_t InPackets;
	uint32_t OutPackets;
	uint32_t InBunches;
	uint32_t OutBunches;
	uint32_t OutLoss;
	uint32_t InLoss;
	uint32_t VoiceBytesSent;
	uint32_t VoiceBytesRecv;
	uint32_t VoicePacketsSent;
	uint32_t VoicePacketsRecv;
	uint32_t PercentInVoice;
	uint32_t PercentOutVoice;
	uint32_t NumActorChannels;
	uint32_t NumConsideredActors;
	uint32_t PrioritizedActors;
	uint32_t NumRelevantActors;
	uint32_t NumRelevantDeletedActors;
	uint32_t NumReplicatedActorAttempts;
	uint32_t NumReplicatedActors;
	uint32_t NumActors;
	uint32_t NumNetActors;
	uint32_t NumDormantActors;
	uint32_t NumInitiallyDormantActors;
	uint32_t NumNetGUIDsAckd;
	uint32_t NumNetGUIDsPending;
	uint32_t NumNetGUIDsUnAckd;
	uint32_t ObjPathBytes;
	uint32_t NetGUIDOutRate;
	uint32_t NetGUIDInRate;
	uint32_t NetSaturated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UShadowMapTexture2D : public UTexture2D
{
public:
	EShadowMapFlags ShadowmapFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimpleConstructionScript : public UObject
{
public:
	TArray<class UClass*> RootNodes;
	TArray<class UClass*> AllNodes;
	class UClass* DefaultSceneRootNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMesh : public UStreamableRenderAsset
{
public:
	class UClass* Skeleton;
	struct BoxSphereBounds ImportedBounds;
	struct BoxSphereBounds ExtendedBounds;
	struct Vector PositiveBoundsExtension;
	struct Vector NegativeBoundsExtension;
	TArray<struct SkeletalMaterial> Materials;
	TArray<struct BoneMirrorInfo> SkelMirrorTable;
	TArray<struct SkeletalMeshLODInfo> LODInfo;
	struct PerPlatformInt MinLOD;
	struct PerPlatformBool DisableBelowMinLodStripping;
	EAxis SkelMirrorAxis;
	EAxis SkelMirrorFlipAxis;
	bool bUseFullPrecisionUVs;
	bool bUseHighPrecisionTangentBasis;
	bool bHasBeenSimplified;
	bool bHasVertexColors;
	bool bEnablePerPolyCollision;
	class UClass* BodySetup;
	class UClass* PhysicsAsset;
	class UClass* ShadowPhysicsAsset;
	TArray<class UClass*> NodeMappingData;
	TArray<class UClass*> MorphTargets;
	class UClass* PostProcessAnimBlueprint;
	TArray<class UClass*> MeshClothingAssets;
	struct SkeletalMeshSamplingInfo SamplingInfo;
	TArray<class UClass*> AssetUserData;
	TArray<class UClass*> Sockets;
	TArray<struct SkinWeightProfileInfo> SkinWeightProfiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMeshEditorData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMeshLODSettings : public UDataAsset
{
public:
	struct PerPlatformInt MinLOD;
	struct PerPlatformBool DisableBelowMinLodStripping;
	bool bOverrideLODStreamingSettings;
	struct PerPlatformBool bSupportLODStreaming;
	struct PerPlatformInt MaxNumStreamedLODs;
	struct PerPlatformInt MaxNumOptionalLODs;
	TArray<struct SkeletalMeshLODGroupSettings> LODGroups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMeshSimplificationSettings : public UDeveloperSettings
{
public:
	struct FName SkeletalMeshReductionModuleName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMeshSocket : public UObject
{
public:
	struct FName SocketName;
	struct FName BoneName;
	struct Vector RelativeLocation;
	struct Rotator RelativeRotation;
	struct Vector RelativeScale;
	bool bForceAlwaysAnimated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkyAtmosphereComponent : public USceneComponent
{
public:
	ESkyAtmosphereTransformMode TransformMode;
	float BottomRadius;
	struct Color GroundAlbedo;
	float AtmosphereHeight;
	float MultiScatteringFactor;
	float TraceSampleCountScale;
	float RayleighScatteringScale;
	struct LinearColor RayleighScattering;
	float RayleighExponentialDistribution;
	float MieScatteringScale;
	struct LinearColor MieScattering;
	float MieAbsorptionScale;
	struct LinearColor MieAbsorption;
	float MieAnisotropy;
	float MieExponentialDistribution;
	float OtherAbsorptionScale;
	struct LinearColor OtherAbsorption;
	struct TentDistribution OtherTentDistribution;
	struct LinearColor SkyLuminanceFactor;
	float AerialPespectiveViewDistanceScale;
	float HeightFogContribution;
	float TransmittanceMinLightElevationAngle;
	float AerialPerspectiveStartDepth;
	struct Guid bStaticLightingBuiltGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyAtmosphere : public AInfo
{
public:
	class UClass* SkyAtmosphereComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkyLightComponent : public ULightComponentBase
{
public:
	bool bRealTimeCapture;
	ESkyLightSourceType SourceType;
	class UClass* Cubemap;
	float SourceCubemapAngle;
	int CubemapResolution;
	float SkyDistanceThreshold;
	bool bCaptureEmissiveOnly;
	bool bLowerHemisphereIsBlack;
	struct LinearColor LowerHemisphereColor;
	float OcclusionMaxDistance;
	float Contrast;
	float OcclusionExponent;
	float MinOcclusion;
	struct Color OcclusionTint;
	bool bCloudAmbientOcclusion;
	float CloudAmbientOcclusionStrength;
	float CloudAmbientOcclusionExtent;
	float CloudAmbientOcclusionMapResolutionScale;
	float CloudAmbientOcclusionApertureScale;
	EOcclusionCombineMode OcclusionCombineMode;
	class UClass* BlendDestinationCubemap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateBrushAsset : public UObject
{
public:
	struct SlateBrush Brush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateTextureAtlasInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USmokeTestCommandlet : public UCommandlet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundAttenuation : public UObject
{
public:
	struct SoundAttenuationSettings Attenuation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundClass : public UObject
{
public:
	struct SoundClassProperties Properties;
	TArray<class UClass*> ChildClasses;
	TArray<struct PassiveSoundMixModifier> PassiveSoundMixModifiers;
	class UClass* ParentClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundConcurrency : public UObject
{
public:
	struct SoundConcurrencySettings Concurrency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundEffectSourcePresetChain : public UObject
{
public:
	TArray<struct SourceEffectChainEntry> Chain;
	bool bPlayEffectChainTails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundGroups : public UObject
{
public:
	TArray<struct SoundGroup> SoundGroupProfiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundMix : public UObject
{
public:
	bool bApplyEQ;
	float EQPriority;
	struct AudioEQEffect EQSettings;
	TArray<struct SoundClassAdjuster> SoundClassEffects;
	float InitialDelay;
	float FadeInTime;
	float Duration;
	float FadeOutTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeAssetReferencer : public USoundNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeAttenuation : public USoundNode
{
public:
	class UClass* AttenuationSettings;
	struct SoundAttenuationSettings AttenuationOverrides;
	bool bOverrideAttenuation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeBranch : public USoundNode
{
public:
	struct FName BoolParameterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeConcatenator : public USoundNode
{
public:
	TArray<float> InputVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeDelay : public USoundNode
{
public:
	float DelayMin;
	float DelayMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeDialoguePlayer : public USoundNode
{
public:
	struct DialogueWaveParameter DialogueWaveParameter;
	bool bLooping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeDistanceCrossFade : public USoundNode
{
public:
	TArray<struct DistanceDatum> CrossFadeInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeDoppler : public USoundNode
{
public:
	float DopplerIntensity;
	bool bUseSmoothing;
	float SmoothingInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeEnveloper : public USoundNode
{
public:
	float LoopStart;
	float LoopEnd;
	float DurationAfterLoop;
	int LoopCount;
	bool bLoopIndefinitely;
	bool bLoop;
	class UClass* VolumeInterpCurve;
	class UClass* PitchInterpCurve;
	struct RuntimeFloatCurve VolumeCurve;
	struct RuntimeFloatCurve PitchCurve;
	float PitchMin;
	float PitchMax;
	float VolumeMin;
	float VolumeMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeGroupControl : public USoundNode
{
public:
	TArray<int> GroupSizes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeLooping : public USoundNode
{
public:
	int LoopCount;
	bool bLoopIndefinitely;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeMature : public USoundNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeMixer : public USoundNode
{
public:
	TArray<float> InputVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeModulator : public USoundNode
{
public:
	float PitchMin;
	float PitchMax;
	float VolumeMin;
	float VolumeMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeModulatorContinuous : public USoundNode
{
public:
	struct ModulatorContinuousParams PitchModulationParams;
	struct ModulatorContinuousParams VolumeModulationParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeOscillator : public USoundNode
{
public:
	bool bModulateVolume;
	bool bModulatePitch;
	float AmplitudeMin;
	float AmplitudeMax;
	float FrequencyMin;
	float FrequencyMax;
	float OffsetMin;
	float OffsetMax;
	float CenterMin;
	float CenterMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
{
public:
	struct FName ParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeQualityLevel : public USoundNode
{
public:
	int CookedQualityLevelIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeRandom : public USoundNode
{
public:
	TArray<float> Weights;
	TArray<bool> HasBeenUsed;
	int NumRandomUsed;
	int PreselectAtLevelLoad;
	bool bShouldExcludeFromBranchCulling;
	bool bSoundCueExcludedFromBranchCulling;
	bool bRandomizeWithoutReplacement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeSoundClass : public USoundNode
{
public:
	class UClass* SoundClassOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeSwitch : public USoundNode
{
public:
	struct FName IntParameterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeWaveParam : public USoundNode
{
public:
	struct FName WaveParameterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundNodeWavePlayer : public USoundNodeAssetReferencer
{
public:
	struct TSoftClassPtr<UObject> SoundWaveAssetPtr;
	class UClass* SoundWave;
	bool bLooping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundSourceBus : public USoundWave
{
public:
	ESourceBusChannels SourceBusChannels;
	float SourceBusDuration;
	class UClass* AudioBus;
	bool bAutoDeactivateWhenSilent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundSubmixBase : public UObject
{
public:
	TArray<class UClass*> ChildSubmixes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundSubmixWithParentBase : public USoundSubmixBase
{
public:
	class UClass* ParentSubmix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundSubmix : public USoundSubmixWithParentBase
{
public:
	bool bMuteWhenBackgrounded;
	TArray<class UClass*> SubmixEffectChain;
	class UClass* AmbisonicsPluginSettings;
	int EnvelopeFollowerAttackTime;
	int EnvelopeFollowerReleaseTime;
	EGainParamMode GainMode;
	float OutputVolume;
	float WetLevel;
	float DryLevel;
	struct FScriptMulticastDelegate OnSubmixRecordedFileDone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundfieldSubmix : public USoundSubmixWithParentBase
{
public:
	struct FName SoundfieldEncodingFormat;
	class UClass* EncodingSettings;
	TArray<class UClass*> SoundfieldEffectChain;
	class UClass* EncodingSettingsClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEndpointSubmix : public USoundSubmixBase
{
public:
	struct FName EndpointType;
	class UClass* EndpointSettingsClass;
	class UClass* EndpointSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundfieldEndpointSubmix : public USoundSubmixBase
{
public:
	struct FName SoundfieldEndpointType;
	class UClass* EndpointSettingsClass;
	class UClass* EndpointSettings;
	class UClass* EncodingSettingsClass;
	class UClass* EncodingSettings;
	TArray<class UClass*> SoundfieldEffectChain;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASphereReflectionCapture : public AReflectionCapture
{
public:
	class UClass* DrawCaptureRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	float InfluenceRadius;
	float CaptureDistanceScale;
	class UClass* PreviewInfluenceRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASplineMeshActor : public AActor
{
public:
	class UClass* SplineMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USplineMeshComponent : public UStaticMeshComponent
{
public:
	struct SplineMeshParams SplineParams;
	struct Vector SplineUpDir;
	float SplineBoundaryMin;
	struct Guid CachedMeshBodySetupGuid;
	class UClass* BodySetup;
	float SplineBoundaryMax;
	bool bAllowSplineEditingPerInstance;
	bool bSmoothInterpRollScale;
	bool bMeshDirty;
	ESplineMeshAxis ForwardAxis;
	float VirtualTextureMainPassMaxDrawDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpringArmComponent : public USceneComponent
{
public:
	float TargetArmLength;
	struct Vector SocketOffset;
	struct Vector TargetOffset;
	float ProbeSize;
	ECollisionChannel ProbeChannel;
	bool bDoCollisionTest;
	bool bUsePawnControlRotation;
	bool bInheritPitch;
	bool bInheritYaw;
	bool bInheritRoll;
	bool bEnableCameraLag;
	bool bEnableCameraRotationLag;
	bool bUseCameraLagSubstepping;
	bool bDrawDebugLagMarkers;
	float CameraLagSpeed;
	float CameraRotationLagSpeed;
	float CameraLagMaxTimeStep;
	float CameraLagMaxDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStaticMesh : public UStreamableRenderAsset
{
public:
	struct PerQualityLevelInt MinQualityLevelLOD;
	struct PerPlatformInt MinLOD;
	float LpvBiasMultiplier;
	TArray<struct StaticMaterial> StaticMaterials;
	float LightmapUVDensity;
	int LightMapResolution;
	int LightMapCoordinateIndex;
	float DistanceFieldSelfShadowBias;
	class UClass* BodySetup;
	int LODForCollision;
	bool bGenerateMeshDistanceField;
	bool bStripComplexCollisionForConsole;
	bool bHasNavigationData;
	bool bSupportUniformlyDistributedSampling;
	bool bSupportPhysicalMaterialMasks;
	bool bIsBuiltAtRuntime;
	bool bAllowCPUAccess;
	bool bSupportGpuUniformlyDistributedSampling;
	TArray<class UClass*> Sockets;
	struct Vector PositiveBoundsExtension;
	struct Vector NegativeBoundsExtension;
	struct BoxSphereBounds ExtendedBounds;
	int ElementToIgnoreForTexFactor;
	TArray<class UClass*> AssetUserData;
	class UClass* EditableMesh;
	class UClass* NavCollision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStaticMeshSocket : public UObject
{
public:
	struct FName SocketName;
	struct Vector RelativeLocation;
	struct Rotator RelativeRotation;
	struct Vector RelativeScale;
	struct FString Tag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerShape : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerShapeQuad : public UStereoLayerShape
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerShapeCylinder : public UStereoLayerShape
{
public:
	float Radius;
	float OverlayArc;
	int Height;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerShapeCubemap : public UStereoLayerShape
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerShapeEquirect : public UStereoLayerShape
{
public:
	struct Box2D LeftUVRect;
	struct Box2D RightUVRect;
	struct Vector2D LeftScale;
	struct Vector2D RightScale;
	struct Vector2D LeftBias;
	struct Vector2D RightBias;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerComponent : public USceneComponent
{
public:
	bool bLiveTexture;
	bool bSupportsDepth;
	bool bNoAlphaChannel;
	class UClass* Texture;
	class UClass* LeftTexture;
	bool bQuadPreserveTextureRatio;
	struct Vector2D QuadSize;
	struct Box2D UVRect;
	float CylinderRadius;
	float CylinderOverlayArc;
	int CylinderHeight;
	struct EquirectProps EquirectProps;
	EStereoLayerType StereoLayerType;
	EStereoLayerShape StereoLayerShape;
	class UClass* Shape;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStringTable : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubsurfaceProfile : public UObject
{
public:
	struct SubsurfaceProfileStruct Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubUVAnimation : public UObject
{
public:
	class UClass* SubUVTexture;
	int SubImages_Horizontal;
	int SubImages_Vertical;
	ESubUVBoundingVertexCount BoundingMode;
	EOpacitySourceMode OpacitySourceMode;
	float AlphaThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USystemTimeTimecodeProvider : public UTimecodeProvider
{
public:
	struct FrameRate FrameRate;
	bool bGenerateFullFrame;
	bool bUseHighPerformanceClock;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATargetPoint : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextPropertyTestObject : public UObject
{
public:
	struct FText DefaultedText;
	struct FText UndefaultedText;
	struct FText TransientText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATextRenderActor : public AActor
{
public:
	class UClass* TextRender;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextRenderComponent : public UPrimitiveComponent
{
public:
	struct FText Text;
	class UClass* TextMaterial;
	class UClass* Font;
	EHorizTextAligment HorizontalAlignment;
	EVerticalTextAligment VerticalAlignment;
	struct Color TextRenderColor;
	float XScale;
	float YScale;
	float WorldSize;
	float InvDefaultSize;
	float HorizSpacingAdjust;
	float VertSpacingAdjust;
	bool bAlwaysRenderAsText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTexture2DArray : public UTexture
{
public:
	ETextureAddress AddressX;
	ETextureAddress AddressY;
	ETextureAddress AddressZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTexture2DDynamic : public UTexture
{
public:
	EPixelFormat Format;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureLightProfile : public UTexture2D
{
public:
	float Brightness;
	float TextureMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureMipDataProviderFactory : public UAssetUserData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureRenderTarget2DArray : public UTextureRenderTarget
{
public:
	int SizeX;
	int SizeY;
	int Slices;
	struct LinearColor ClearColor;
	EPixelFormat OverrideFormat;
	bool bHDR;
	bool bForceLinearGamma;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureRenderTargetCube : public UTextureRenderTarget
{
public:
	int SizeX;
	struct LinearColor ClearColor;
	EPixelFormat OverrideFormat;
	bool bHDR;
	bool bForceLinearGamma;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextureRenderTargetVolume : public UTextureRenderTarget
{
public:
	int SizeX;
	int SizeY;
	int SizeZ;
	struct LinearColor ClearColor;
	EPixelFormat OverrideFormat;
	bool bHDR;
	bool bForceLinearGamma;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UThumbnailInfo : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimelineComponent : public UActorComponent
{
public:
	struct Timeline TheTimeline;
	bool bIgnoreTimeDilation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimelineTemplate : public UObject
{
public:
	float TimelineLength;
	ETimelineLengthMode LengthMode;
	bool bAutoPlay;
	bool bLoop;
	bool bReplicated;
	bool bIgnoreTimeDilation;
	TArray<struct TTEventTrack> EventTracks;
	TArray<struct TTFloatTrack> FloatTracks;
	TArray<struct TTVectorTrack> VectorTracks;
	TArray<struct TTLinearColorTrack> LinearColorTracks;
	TArray<struct BPVariableMetaDataEntry> MetaDataArray;
	struct Guid TimelineGuid;
	ETickingGroup TimelineTickGroup;
	struct FName VariableName;
	struct FName DirectionPropertyName;
	struct FName UpdateFunctionName;
	struct FName FinishedFunctionName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTireType : public UDataAsset
{
public:
	float FrictionScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTouchInterface : public UObject
{
public:
	TArray<struct TouchInputControl> Controls;
	float ActiveOpacity;
	float InactiveOpacity;
	float TimeUntilDeactive;
	float TimeUntilReset;
	float ActivationDelay;
	bool bPreventRecenter;
	float StartupDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATriggerBase : public AActor
{
public:
	class UClass* CollisionComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATriggerBox : public ATriggerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATriggerCapsule : public ATriggerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATriggerSphere : public ATriggerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATriggerVolume : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTwitterIntegrationBase : public UPlatformInterfaceBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserDefinedEnum : public UEnum
{
public:
	Unknown DisplayNameMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserDefinedStruct : public UScriptStruct
{
public:
	EUserDefinedStructureStatus Status;
	struct Guid Guid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserInterfaceSettings : public UDeveloperSettings
{
public:
	ERenderFocusRule RenderFocusRule;
	Unknown HardwareCursors;
	Unknown SoftwareCursors;
	struct SoftClassPath DefaultCursor;
	struct SoftClassPath TextEditBeamCursor;
	struct SoftClassPath CrosshairsCursor;
	struct SoftClassPath HandCursor;
	struct SoftClassPath GrabHandCursor;
	struct SoftClassPath GrabHandClosedCursor;
	struct SoftClassPath SlashedCircleCursor;
	float ApplicationScale;
	EUIScalingRule UIScaleRule;
	struct SoftClassPath CustomScalingRuleClass;
	struct RuntimeFloatCurve UIScaleCurve;
	bool bAllowHighDPIInGameMode;
	struct IntPoint DesignScreenSize;
	bool bLoadWidgetsOnDedicatedServer;
	TArray<class UClass*> CursorClasses;
	class UClass* CustomScalingRuleClassInstance;
	class UClass* CustomScalingRule;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVectorField : public UObject
{
public:
	struct Box Bounds;
	float Intensity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVectorFieldAnimated : public UVectorField
{
public:
	class UClass* Texture;
	EVectorFieldConstructionOp ConstructionOp;
	int VolumeSizeX;
	int VolumeSizeY;
	int VolumeSizeZ;
	int SubImagesX;
	int SubImagesY;
	int FrameCount;
	float FramesPerSecond;
	bool bLoop;
	class UClass* NoiseField;
	float NoiseScale;
	float NoiseMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVectorFieldComponent : public UPrimitiveComponent
{
public:
	class UClass* VectorField;
	float Intensity;
	float Tightness;
	bool bPreviewVectorField;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVectorFieldStatic : public UVectorField
{
public:
	int SizeX;
	int SizeY;
	int SizeZ;
	bool bAllowCPUAccess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AVectorFieldVolume : public AActor
{
public:
	class UClass* VectorFieldComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UViewportStatsSubsystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVirtualTexture : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULightMapVirtualTexture : public UVirtualTexture
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class URuntimeVirtualTextureStreamingProxy : public UTexture2D
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVirtualTexture2D : public UTexture2D
{
public:
	struct VirtualTextureBuildSettings Settings;
	bool bContinuousUpdate;
	bool bSinglePhysicalSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVirtualTextureBuilder : public UObject
{
public:
	class UClass* Texture;
	uint64_t BuildHash;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVirtualTexturePoolConfig : public UObject
{
public:
	int DefaultSizeInMegabyte;
	TArray<struct VirtualTextureSpacePoolConfig> Pools;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVisualLoggerAutomationTests : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVisualLoggerDebugSnapshotInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVoiceChannel : public UChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVOIPTalker : public UActorComponent
{
public:
	struct VoiceSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVOIPStatics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVolumeTexture : public UTexture
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVolumetricCloudComponent : public USceneComponent
{
public:
	float LayerBottomAltitude;
	float LayerHeight;
	float TracingStartMaxDistance;
	float TracingMaxDistance;
	float PlanetRadius;
	struct Color GroundAlbedo;
	class UClass* Material;
	bool bUsePerSampleAtmosphericLightTransmittance;
	float SkyLightCloudBottomOcclusion;
	float ViewSampleCountScale;
	float ReflectionSampleCountScale;
	float ShadowViewSampleCountScale;
	float ShadowReflectionSampleCountScale;
	float ShadowTracingDistance;
	float StopTracingTransmittanceThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AVolumetricCloud : public AInfo
{
public:
	class UClass* VolumetricCloudComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AVolumetricLightmapDensityVolume : public AVolume
{
public:
	struct Int32Interval AllowedMipLevelRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWindDirectionalSource : public AInfo
{
public:
	class UClass* Component;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWindDirectionalSourceComponent : public USceneComponent
{
public:
	float Strength;
	float Speed;
	float MinGustAmount;
	float MaxGustAmount;
	float Radius;
	bool bPointWind;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorldComposition : public UObject
{
public:
	TArray<class UClass*> TilesStreaming;
	double TilesStreamingTimeThreshold;
	bool bLoadAllTilesDuringCinematic;
	bool bRebaseOriginIn3DSpace;
	float RebaseOriginDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHierarchicalLODSetup : public UObject
{
public:
	TArray<struct HierarchicalSimplification> HierarchicalLODSetup;
	struct TSoftClassPtr<UObject> OverrideBaseMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UActorToEntityAdapterComponent : public UActorComponent
{
public:
	TArray<class UClass*> SerializedComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorCollisionComponent : public EntityEnableableComponent
{
public:
	struct FName ShadowVar_CollisionProfileName;
	struct TSoftClassPtr<UObject> PrimitiveComponentCache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorComponent : public EntityComponent
{
public:
	class UClass* ActorComponent;
	bool bCreatedActorComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorCustomReplicationComponent : public EntityComponent
{
public:
	EEntityActorReplicationOverrideType ReplicationOverride;
	EEntityActorReplicationRelevancyBucketType ReplicationRelevancyBucketType;
	float CustomReplicationRelevancyRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorLocalInputComponent : public EntityComponent
{
public:
	EAutoReceiveInput AutoReceiveControllerInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorPlayerComponent : public EntityDataBackedComponent
{
public:
	struct TSoftClassPtr<UObject> PlayerControllerCache;
	struct TSoftClassPtr<UObject> PlayerStateCache;
	struct UniqueNetIdRepl PlayerID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorPositionComponent : public EntityPositionComponent
{
public:
	struct Vector ShadowVar_Location;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorRotationComponent : public EntityRotationComponent
{
public:
	struct Rotator ShadowVar_Rotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorScaleComponent : public EntityScaleComponent
{
public:
	struct Vector ShadowVar_Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorSkeletalMeshRenderComponent : public EntityComponent
{
public:
	bool bAddedMeshRenderComponent;
	class UClass* ShadowVar_SkeletalMesh;
	ECollisionEnabled ShadowVar_EnableCollision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorStaticMeshRenderComponent : public EntityActorComponent
{
public:
	Unknown StaticMeshComponentCache;
	TArray<class UClass*> ShadowVar_MeshMaterials;
	ECollisionEnabled ShadowVar_EnableCollision;
	float ShadowVar_MaxDrawDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityActorSubsystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityActorTextDisplayComponent : public EntityComponent
{
public:
	struct FText DisplayText;
	bool bAddedTextRenderComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityDynamicActivationComponent : public EntityEnableableComponent
{
public:
	float TransitionTargetTime;
	bool bTargetState;
	TArray<class UClass*> LinkedComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityToActorAdapterComponent : public EntityComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASimObject : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityCoreSystemRelativePositionComponentData : public ComponentData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityScaleComponentData : public ComponentData
{
public:
	struct Vector WorldScale3D;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityRotationComponentData : public ComponentData
{
public:
	struct Rotator WorldRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityPositionComponentData : public ComponentData
{
public:
	struct Vector WorldPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EntityTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityEnableableComponent : public UEntityComponent
{
public:
	bool IsEnabled;
	bool LastIsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityDataBackedComponent : public UEntityComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityPositionComponent : public UEntityDataBackedComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityRotationComponent : public UEntityDataBackedComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityScaleComponent : public UEntityDataBackedComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntity : public UObject
{
public:
	class UClass* Level;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityCoreSubsystem : public UWorldSubsystem
{
public:
	Unknown ComponentMap;
	TArray<class UClass*> ComponentArray;
	Unknown Entities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityCoreDataBackedRelativePositionComponent : public UEntityDataBackedComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityTickableComponent : public UEntityEnableableComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEntityScriptComponent : public UEntityTickableComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSTileTypeMapping : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> TileClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSLayoutTypeMapping : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> LayoutType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSImage : public CommonLazyImage
{
public:
	struct FScriptMulticastDelegate OnImageLoadingComplete;
	bool bMatchImageSize;
	struct SlateBrush LoadingFailFallback;
	class UClass* ExternalMedia;
	bool bDownloadingExternalMedia;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSLayoutBase : public UserWidget
{
public:
	TArray<struct SlotDescription> CarouselSlotDescriptions;
	class UClass* CarouselClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEpicCMSManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSScreenBase : public CommonActivatablePanelLegacy
{
public:
	struct FString TileSetFieldName;
	struct TSoftClassPtr<UObject> TileTypeToTileClassDataTable;
	struct TSoftClassPtr<UObject> LayoutErrorClass;
	struct TSoftClassPtr<UObject> LayoutTypeToLayoutClassDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSSimpleMessage : public CommonUserWidget
{
public:
	class UClass* TitleText;
	class UClass* BodyText;
	class UClass* PrimaryImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSTileBase : public CommonButtonLegacy
{
public:
	class UClass* DefaultTitleTextStyle;
	class UClass* FeaturedTitleTextStyle;
	struct FText Title;
	struct FString Link;
	bool bDownloadingExternalMedia;
	bool bRefreshingMcpCatalog;
	class UClass* ExternalMedia;
	class UClass* LazyImage_Icon;
	class UClass* TitleTextBlock;
	class UClass* SubtitleTextBlock;
	class UClass* EyebrowTextBlock;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EpicCMSTileCarousel : public UserWidget
{
public:
	struct SlateSound PreviousButtonSound;
	struct SlateSound NextButtonSound;
	class UClass* Carousel;
	class UClass* NextPageButton;
	class UClass* PreviousPageButton;
	bool bShouldShowNavigationOnlyOnHover;
	bool bInputActionsForPaging;
	bool bIsShowingNavigation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayStatMetadataTableRow : public TableRowBase
{
public:
	struct FString BackendName;
	struct FText DisplayName;
	TArray<EEpicLeaderboardTimeWindow> Windows;
	EEpicLeaderboardUpdateFunction Metric;
	EEpicLeaderboardDataType DataType;
	bool bPublish;
	int WeeklyRefreshInterval;
	bool bExportToBackEnd;
	bool bShowInFrontEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayStatTag : public GameplayTag
{
public:
	struct GameplayTag Tag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintGameplayStatsLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagTableManager : public UDataAsset
{
public:
	TArray<struct ManagedGameplayTagDataTableItem> Tables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFrameworkComponent_EventMode : public GameFrameworkComponent
{
public:
	struct TSoftClassPtr<UObject> ActivatorAsset;
	TArray<struct UIExtension> UIExtensions;
	Unknown TaggedUIExtensions;
	TArray<struct EventModeFocusActor> FocusActors;
	class UClass* InputComponent;
	TArray<struct EventModeWidgetCachedData> CachedWidgetData;
	struct TSoftClassPtr<UObject> CurrentlyFocusedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeapon_EventMode : public FortWeapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FocusButton : public BacchusActionButton
{
public:
	class UClass* StartFocusingSprite;
	class UClass* StopFocusingSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventModeEmotesWidget : public FortHUDElementWidget
{
public:
	struct TSoftClassPtr<UObject> Emote1;
	struct TSoftClassPtr<UObject> Emote2;
	struct TSoftClassPtr<UObject> Emote3;
	TArray<struct TSoftClassPtr<UObject>> RandomEmotes;
	class UClass* Text_Emote1;
	class UClass* Text_Emote2;
	class UClass* Text_Emote3;
	class UClass* Text_EmoteRandom;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileActionButtonBehavior_Focus : public FortMobileActionButtonBehavior
{
public:
	class UClass* StopFocusingSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEyeTrackerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UF5PlayerFactorySettings : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FacialLiveLinkRemapAsset : public LiveLinkRetargetAsset
{
public:
	bool bExtractBoneTransform;
	bool bExtractCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFieldSystemActor : public AActor
{
public:
	class UClass* FieldSystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldSystem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldSystemComponent : public UPrimitiveComponent
{
public:
	class UClass* FieldSystem;
	bool bIsWorldField;
	bool bIsChaosField;
	TArray<struct TSoftClassPtr<UObject>> SupportedSolvers;
	struct FieldObjectCommands ConstructionCommands;
	struct FieldObjectCommands BufferCommands;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldSystemMetaData : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldSystemMetaDataIteration : public UFieldSystemMetaData
{
public:
	int Iterations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldSystemMetaDataProcessingResolution : public UFieldSystemMetaData
{
public:
	EFieldResolutionType ResolutionType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldSystemMetaDataFilter : public UFieldSystemMetaData
{
public:
	EFieldFilterType FilterType;
	EFieldObjectType ObjectType;
	EFieldPositionType PositionType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldNodeBase : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldNodeInt : public UFieldNodeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldNodeFloat : public UFieldNodeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFieldNodeVector : public UFieldNodeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUniformInteger : public UFieldNodeInt
{
public:
	int Magnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URadialIntMask : public UFieldNodeInt
{
public:
	float Radius;
	struct Vector Position;
	int InteriorValue;
	int ExteriorValue;
	ESetMaskConditionType SetMaskCondition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUniformScalar : public UFieldNodeFloat
{
public:
	float Magnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaveScalar : public UFieldNodeFloat
{
public:
	float Magnitude;
	struct Vector Position;
	float WaveLength;
	float Period;
	EWaveFunctionType Function;
	EFieldFalloffType Falloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URadialFalloff : public UFieldNodeFloat
{
public:
	float Magnitude;
	float MinRange;
	float MaxRange;
	float Default;
	float Radius;
	struct Vector Position;
	EFieldFalloffType Falloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaneFalloff : public UFieldNodeFloat
{
public:
	float Magnitude;
	float MinRange;
	float MaxRange;
	float Default;
	float Distance;
	struct Vector Position;
	struct Vector Normal;
	EFieldFalloffType Falloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoxFalloff : public UFieldNodeFloat
{
public:
	float Magnitude;
	float MinRange;
	float MaxRange;
	float Default;
	struct Transform Transform;
	EFieldFalloffType Falloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNoiseField : public UFieldNodeFloat
{
public:
	float MinRange;
	float MaxRange;
	struct Transform Transform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUniformVector : public UFieldNodeVector
{
public:
	float Magnitude;
	struct Vector Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URadialVector : public UFieldNodeVector
{
public:
	float Magnitude;
	struct Vector Position;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URandomVector : public UFieldNodeVector
{
public:
	float Magnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOperatorField : public UFieldNodeBase
{
public:
	float Magnitude;
	class UClass* RightField;
	class UClass* LeftField;
	EFieldOperationType Operation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UToIntegerField : public UFieldNodeInt
{
public:
	class UClass* FloatField;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UToFloatField : public UFieldNodeFloat
{
public:
	class UClass* IntField;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCullingField : public UFieldNodeBase
{
public:
	class UClass* Culling;
	class UClass* Field;
	EFieldCullingOperationType Operation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReturnResultsTerminal : public UFieldNodeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFNStudioDownloadDirector : public ADynamicHUDDirectorBase
{
public:
	class UClass* AddItemDefinition;
	class UClass* SimDownloadItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralFoliageComponent : public UActorComponent
{
public:
	class UClass* FoliageSpawner;
	float TileOverlap;
	class UClass* SpawningVolume;
	struct Guid ProceduralGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFoliageInstancedStaticMeshComponent : public UHierarchicalInstancedStaticMeshComponent
{
public:
	struct FScriptMulticastDelegate OnInstanceTakePointDamage;
	struct FScriptMulticastDelegate OnInstanceTakeRadialDamage;
	struct Guid GenerationGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFoliageStatistics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFoliageType : public UObject
{
public:
	struct Guid UpdateGuid;
	float Density;
	float DensityAdjustmentFactor;
	float Radius;
	bool bSingleInstanceModeOverrideRadius;
	float SingleInstanceModeRadius;
	EFoliageScaling Scaling;
	struct FloatInterval ScaleX;
	struct FloatInterval ScaleY;
	struct FloatInterval ScaleZ;
	struct FoliageVertexColorChannelMask VertexColorMaskByChannel;
	EFoliageVertexColorMask VertexColorMask;
	float VertexColorMaskThreshold;
	bool VertexColorMaskInvert;
	struct FloatInterval ZOffset;
	bool AlignToNormal;
	float AlignMaxAngle;
	bool RandomYaw;
	float RandomPitchAngle;
	struct FloatInterval GroundSlopeAngle;
	struct FloatInterval Height;
	TArray<struct FName> LandscapeLayers;
	float MinimumLayerWeight;
	TArray<struct FName> ExclusionLandscapeLayers;
	float MinimumExclusionLayerWeight;
	struct FName LandscapeLayer;
	bool CollisionWithWorld;
	struct Vector CollisionScale;
	struct BoxSphereBounds MeshBounds;
	struct Vector LowBoundOriginRadius;
	EComponentMobility Mobility;
	struct Int32Interval CullDistance;
	bool bEnableStaticLighting;
	bool CastShadow;
	bool bAffectDynamicIndirectLighting;
	bool bAffectDistanceFieldLighting;
	bool bCastDynamicShadow;
	bool bCastStaticShadow;
	bool bCastShadowAsTwoSided;
	bool bReceivesDecals;
	bool bOverrideLightMapRes;
	int OverriddenLightMapRes;
	ELightmapType LightmapType;
	bool bUseAsOccluder;
	struct BodyInstance BodyInstance;
	EHasCustomNavigableGeometry CustomNavigableGeometry;
	struct LightingChannels LightingChannels;
	bool bRenderCustomDepth;
	ERendererStencilMask CustomDepthStencilWriteMask;
	int CustomDepthStencilValue;
	int TranslucencySortPriority;
	float CollisionRadius;
	float ShadeRadius;
	int NumSteps;
	float InitialSeedDensity;
	float AverageSpreadDistance;
	float SpreadVariance;
	int SeedsPerStep;
	int DistributionSeed;
	float MaxInitialSeedOffset;
	bool bCanGrowInShade;
	bool bSpawnsInShade;
	float MaxInitialAge;
	float MaxAge;
	float OverlapPriority;
	struct FloatInterval ProceduralScale;
	struct RuntimeFloatCurve ScaleCurve;
	int ChangeCount;
	bool ReapplyDensity;
	bool ReapplyRadius;
	bool ReapplyAlignToNormal;
	bool ReapplyRandomYaw;
	bool ReapplyScaling;
	bool ReapplyScaleX;
	bool ReapplyScaleY;
	bool ReapplyScaleZ;
	bool ReapplyRandomPitchAngle;
	bool ReapplyGroundSlope;
	bool ReapplyHeight;
	bool ReapplyLandscapeLayers;
	bool ReapplyZOffset;
	bool ReapplyCollisionWithWorld;
	bool ReapplyVertexColorMask;
	bool bEnableDensityScaling;
	bool bEnableDiscardOnLoad;
	TArray<class UClass*> RuntimeVirtualTextures;
	int VirtualTextureCullMips;
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFoliageType_Actor : public UFoliageType
{
public:
	class UClass* ActorClass;
	bool bShouldAttachToBaseComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFoliageType_InstancedStaticMesh : public UFoliageType
{
public:
	class UClass* Mesh;
	TArray<class UClass*> OverrideMaterials;
	class UClass* ComponentClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInstancedFoliageActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInteractiveFoliageActor : public AStaticMeshActor
{
public:
	class UClass* CapsuleComponent;
	struct Vector TouchingActorEntryPosition;
	struct Vector FoliageVelocity;
	struct Vector FoliageForce;
	struct Vector FoliagePosition;
	float FoliageDamageImpulseScale;
	float FoliageTouchImpulseScale;
	float FoliageStiffness;
	float FoliageStiffnessQuadratic;
	float FoliageDamping;
	float MaxDamageImpulse;
	float MaxTouchImpulse;
	float MaxForce;
	float Mass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveFoliageComponent : public UStaticMeshComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AProceduralFoliageBlockingVolume : public AVolume
{
public:
	class UClass* ProceduralFoliageVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralFoliageSpawner : public UObject
{
public:
	int RandomSeed;
	float TileSize;
	int NumUniqueTiles;
	float MinimumQuadTreeSize;
	TArray<struct FoliageTypeObject> FoliageTypes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralFoliageTile : public UObject
{
public:
	class UClass* FoliageSpawner;
	TArray<struct ProceduralFoliageInstance> InstancesArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AProceduralFoliageVolume : public AVolume
{
public:
	class UClass* ProceduralComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationMarkerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversationParticipantComponent : public ConversationParticipantComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextCondition : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextCondition_ParticipantHasCID : public UFortConversationContextCondition
{
public:
	struct GameplayTag ParticipantID;
	TArray<struct SoftObjectPath> AllowedCIDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextCondition_ParticipantHasMetaTag : public UFortConversationContextCondition
{
public:
	struct GameplayTag ParticipantID;
	struct GameplayTag MetaTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextCondition_ParticipantHasOwnedTag : public UFortConversationContextCondition
{
public:
	struct GameplayTag ParticipantID;
	struct GameplayTag OwnedTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextCondition_ParticipantControllerMeetsRequirement : public UFortConversationContextCondition
{
public:
	struct GameplayTag ParticipantID;
	class UClass* Requirement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextConditionHelpers : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerConversationComponent : public FortConversationParticipantComponent
{
public:
	TArray<class UClass*> ConversationParticipantsInRange;
	struct TSoftClassPtr<UObject> DialogWidgetSoftClass;
	struct TSoftClassPtr<UObject> DialogMarkerSoftClass;
	struct TSoftClassPtr<UObject> MobileDialogWidgetSoftClass;
	class UClass* DialogWidgetClass;
	class UClass* DialogMarkerClass;
	float GreetSphereRadius;
	float IconVisibilityRadius;
	float AbortConversationRange;
	struct UserWidgetPool DialogWidgetPool;
	Unknown ComponentToIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemTransactionBrief : public CommonUserWidget
{
public:
	class UClass* TransactionStrip_Main;
	class UClass* DisplayItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortApplyAbilityBrief : public FortItemTransactionBrief
{
public:
	struct FText PurchaseServiceText;
	class UClass* Text_Display;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBasicBrief : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuyBrief : public FortItemTransactionBrief
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversationMarker : public FortActorIndicatorWidget
{
public:
	float InitialZOffset;
	float ManualMarkerZOffset;
	float MessageBubbleDuration;
	float LastTextBubbleDuration;
	class UClass* Switcher_States;
	class UClass* Overlay_PreviewState;
	class UClass* ConversationMessage_Main;
	class UClass* Text_ParticipantName;
	class UClass* Keybind_Nameplate;
	class UClass* NPCIcon;
	class UClass* CustomDialogMarkerIndicatorIcon;
	class UClass* DefaultDialogMarkerIndicatorIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversationMessageWidget : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversationOption : public FortRadialPickerEntry
{
public:
	class UClass* OnOptionConfirmedSound;
	class UClass* OnOptionHoveredSound;
	class UClass* Switcher_DisplayAsset;
	struct TSoftClassPtr<UObject> DefaultSoftTaskIcon;
	struct TSoftClassPtr<UObject> DefaultConfirmChoiceSound;
	struct TSoftClassPtr<UObject> DefaultHoverChoiceSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversationOptionsPanel : public PanelWidget
{
public:
	int MaxRows;
	int MiddleColumnWidth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversationScreen : public CommonActivatableWidget
{
public:
	class UClass* ConversationInputComp;
	int CurrentlySelectedIndex;
	struct FName RadialSelectionMaterialParameterName;
	TArray<struct GameplayTag> TagPriorities;
	struct FName InteractActionNameKBM;
	struct FName ADSInputAction;
	struct FName InteractActionNameGamepad;
	struct DataTableRowHandle ConfirmBinding;
	struct DataTableRowHandle MakeSelectionBinding;
	struct DataTableRowHandle ADSMouseBinding;
	struct DataTableRowHandle CancelActionBinding;
	struct DataTableRowHandle RightTriggerBinding;
	float MobileRadialMenuSizeOverride;
	struct Margin MobileRadialMenuPaddingOverride;
	struct Margin MobileDetailsPaddingOverride;
	class UClass* RadialMenu_DialogOptions;
	class UClass* Image_RadialHighlight;
	class UClass* Keybind_Confirm;
	class UClass* QuestBrief_Main;
	class UClass* BuyBrief_Main;
	class UClass* UpgradeBrief_Main;
	class UClass* HireBrief_Main;
	class UClass* DuelBrief_Main;
	class UClass* IntelBrief_Main;
	class UClass* ShowFutureStormCircleBrief_Main;
	class UClass* RiftToGoBrief_Main;
	class UClass* PropDisguiseBrief_Main;
	class UClass* ChatBrief_Main;
	class UClass* BasicBrief_Main;
	class UClass* DataDrivenServiceBrief_Main;
	class UClass* Switcher_Details;
	class UClass* SizeBox_RadialMenu;
	class UClass* Overlay_Details;
	class UClass* Overlay_WheelContainer;
	class UClass* Image_Background;
	class UClass* Image_LoadingSpinner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDataDrivenServiceBrief : public CommonUserWidget
{
public:
	class UClass* Text_TitleBar;
	class UClass* RichText_Description;
	class UClass* Text_StockRemaining;
	class UClass* TransactionStrip_Main;
	Unknown ServiceConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDuelBrief : public FortItemTransactionBrief
{
public:
	struct FText TextTemplate;
	class UClass* Text_Objective;
	class UClass* TileView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHireBrief : public FortItemTransactionBrief
{
public:
	struct FText TextTemplate;
	class UClass* Text_Objective;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIntelBrief : public FortItemTransactionBrief
{
public:
	struct FText TextTemplate;
	class UClass* Text_Objective;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestBrief : public CommonUserWidget
{
public:
	struct FText ThisMatchOnlyQuestText;
	class UClass* Text_Objective;
	class UClass* Text_MoneyReward;
	class UClass* Text_XpReward;
	class UClass* Text_ExpirationTime;
	class UClass* LazyImage_QuestProviderImage;
	class UClass* Overlay_QuestProvider;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowFutureStormCircleBrief : public FortItemTransactionBrief
{
public:
	struct FText PurchaseServiceText;
	class UClass* Text_Display;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransactionStrip : public UserWidget
{
public:
	class UClass* Text_CostDescription;
	class UClass* ResourceCurrency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUpgradeBrief : public FortItemTransactionBrief
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MobileConversationScreen : public FortConversationScreen
{
public:
	class UClass* MobileButtonConfirm;
	class UClass* MobileButtonTouchInformation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortniteUserInterfaceSettings : public UDeveloperSettings
{
public:
	struct RuntimeFloatCurve WidthScaleCurve;
	struct RuntimeFloatCurve HeightScaleCurve;
	struct RuntimeFloatCurve WidthScaleCurve_iOS_InGame;
	struct RuntimeFloatCurve HeightScaleCurve_iOS_InGame;
	struct RuntimeFloatCurve WidthScaleCurve_iOS_FrontEnd;
	struct RuntimeFloatCurve HeightScaleCurve_iOS_FrontEnd;
	struct RuntimeFloatCurve WidthScaleCurve_Android_InGame;
	struct RuntimeFloatCurve HeightScaleCurve_Android_InGame;
	struct RuntimeFloatCurve WidthScaleCurve_Android_FrontEnd;
	struct RuntimeFloatCurve HeightScaleCurve_Android_FrontEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DelayedQuickBarAction : public FastArraySerializerItem
{
public:
	uint32_t ActionId;
	EFortDelayedQuickBarAction Action;
	struct Guid ItemGuid;
	struct PrimaryAssetId ItemDefinitionAssetId;
	EFortQuickBars QuickBarType;
	int QuickBarSlot;
	bool bForceExecution;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DelayedQuickBarActionContainer : public FastArraySerializer
{
public:
	TArray<struct DelayedQuickBarAction> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class McpVariantChannelInfo : public CosmeticVariantInfo
{
public:
	struct GameplayTagContainer OwnedVariantTags;
	class UClass* ItemVariantIsUsedFor;
	struct FString CustomData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemEntry : public FastArraySerializerItem
{
public:
	int Count;
	int PreviousCount;
	class UClass* ItemDefinition;
	int16_t OrderIndex;
	float Durability;
	int Level;
	int LoadedAmmo;
	int PhantomReserveAmmo;
	TArray<struct FString> AlterationDefinitions;
	TArray<struct FortSavedWeaponModSlot> SavedWeaponModSlots;
	struct FString ItemSource;
	struct Guid ItemGuid;
	struct Guid TrackerGuid;
	int ControlOverride;
	bool inventory_overflow_date;
	bool bWasGifted;
	bool bIsReplicatedCopy;
	bool bIsDirty;
	bool bUpdateStatsOnCollection;
	struct FortGiftingInfo GiftingInfo;
	TArray<struct FortItemEntryStateValue> StateValues;
	Unknown ParentInventory;
	struct GameplayAbilitySpecHandle GameplayAbilitySpecHandle;
	TArray<class UClass*> AlterationInstances;
	TArray<struct FortWeaponModSlot> WeaponModSlots;
	struct TSoftClassPtr<UObject> WrapOverride;
	TArray<float> GenericAttributeValues;
	int PickupVariantIndex;
	int ItemVariantDataMappingIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ProximityBasedGEDeliveryInfoHard : public ProximityBasedGEDeliveryInfoBase
{
public:
	TArray<struct GameplayEffectApplicationInfoHard> EffectsToApply;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MarkedActorDisplayInfo : public TableRowBase
{
public:
	struct FText DisplayName;
	struct TSoftClassPtr<UObject> Icon;
	class UClass* CustomIndicatorClass;
	struct TSoftClassPtr<UObject> CustomDetailsClass;
	struct LinearColor PrimaryColor;
	class UClass* Sound;
	EFortMarkedActorScreenClamping ScreenClamping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueAudioInfo_Looping : public FortGameplayCueAudioInfo
{
public:
	float LoopingSoundFadeOutDuration;
	float LoopingSoundVolumeLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimInput_PlayerAnimAsset : public FortAnimInput_StandingPawnAnimAsset
{
public:
	bool bPlayUpperBodySlotOnFullBodyInAir;
	bool bDisableFullBodyAimOffsetDuringMelee;
	bool bShouldApplyAimOffsetFullBody;
	float FullBodyAimOffsetAlpha;
	float UpperBodyAimOffsetAlpha;
	bool bOverrideDisableArmsHeadAdditive;
	float DisableArmsHeadAdditiveOverride;
	struct FortAnimPlayrateRange SprintPlayrateClampRange;
	struct FortAnimPlayrateRange SprintTargetingPlayrateClampRange;
	struct FortAnimPlayrateRange CrouchSprintPlayrateClampRange;
	struct FortAnimPlayrateRange CrouchSprintTargetingPlayrateClampRange;
	class UClass* TargetingAimOffset;
	class UClass* NonTargetingAimOffset;
	class UClass* RelaxedPose;
	class UClass* RelaxedPoseLevel2;
	class UClass* RelaxedAimOffset;
	class UClass* JogAdditiveBlendSpace;
	class UClass* JogAdditiveBlendSpaceRelaxed;
	class UClass* JogAdditiveBlendSpaceRelaxedLevel2;
	class UClass* JogAdditiveBlendSpaceMeleeGuarding;
	class UClass* JogAdditive_N;
	class UClass* JogAdditive_E;
	class UClass* JogAdditive_S;
	class UClass* JogAdditive_W;
	class UClass* JogAdditiveRelaxed_N;
	class UClass* JogAdditiveRelaxed_E;
	class UClass* JogAdditiveRelaxed_S;
	class UClass* JogAdditiveRelaxed_W;
	class UClass* JogAdditiveRelaxedLevel2_N;
	class UClass* JogAdditiveRelaxedLevel2_E;
	class UClass* JogAdditiveRelaxedLevel2_S;
	class UClass* JogAdditiveRelaxedLevel2_W;
	class UClass* SprintAnimation;
	class UClass* SprintTargetingAnimation;
	class UClass* CrouchTargetingPose;
	class UClass* CrouchNonTargetingPose;
	class UClass* CrouchRelaxedPose;
	class UClass* CrouchCoreTargetingBlendSpace;
	class UClass* CrouchCoreNonTargetingBlendSpace;
	class UClass* CrouchWalkAdditiveBlendSpace;
	class UClass* CrouchJogAdditiveBlendSpace;
	class UClass* CrouchJogAdditiveBlendSpaceRelaxed;
	class UClass* CrouchWalkAdditive_N;
	class UClass* CrouchWalkAdditive_E;
	class UClass* CrouchWalkAdditive_S;
	class UClass* CrouchWalkAdditive_W;
	class UClass* CrouchJogAdditive_N;
	class UClass* CrouchJogAdditive_E;
	class UClass* CrouchJogAdditive_S;
	class UClass* CrouchJogAdditive_W;
	class UClass* CrouchJogAdditiveRelaxed_N;
	class UClass* CrouchJogAdditiveRelaxed_E;
	class UClass* CrouchJogAdditiveRelaxed_S;
	class UClass* CrouchJogAdditiveRelaxed_W;
	class UClass* CrouchSprintAnimation;
	class UClass* CrouchSprintTargetingAnimation;
	class UClass* SwimRelaxedPose;
	class UClass* SwimTargetingPose;
	class UClass* SwimNonTargetingPose;
	class UClass* SwimJogAdditiveBlendSpace;
	class UClass* SwimJogAdditiveBlendSpaceRelaxed;
	class UClass* SwimSprintAnimation;
	class UClass* SwimTargetingAimOffset;
	class UClass* SwimIdleNoise;
	class UClass* IdleNoise_AR_DownSights;
	class UClass* SwimJumpSurfaceEndAdditve;
	class UClass* SwimJumpSurfaceLoopAdditve;
	class UClass* SwimJumpFallLoopAdditve;
	class UClass* SwimJumpStartLoopAdditve;
	class UClass* SwimJumpStartAdditve;
	class UClass* FlyModeLoopAdditive;
	class UClass* FlyModeStartAdditive;
	class UClass* ZipLineStartAdditve;
	class UClass* JetPackJumpAdditve;
	class UClass* JetPackStartAdditve;
	class UClass* FallAdditive;
	class UClass* JumpLoopAdditive;
	class UClass* JumpUpAdditive;
	class UClass* WeaponChargeLoop;
	class UClass* SwimUpperBodyAdditivePoseOffset;
	class UClass* WeaponInspectAnimation;
	bool bOverridePitchAndYawOffsets;
	struct FortAnimInput_AdjustedAimOffset AnimSetOffsets;
	TArray<struct FName> BonesToHide;
	bool bOverrideHandIKRetargetingWeight;
	float HandIKRetargetingWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIHotSpotUseInfo : public AIHotSpotSlotInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStatManagerTag : public GameplayTag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class IgnoredPlayerPawnDataEntry : public FastArraySerializerItem
{
public:
	class UClass* IgnoredPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class IgnoredPlayerPawnArray : public FastArraySerializer
{
public:
	class UClass* OwningHoldingArea;
	TArray<struct IgnoredPlayerPawnDataEntry> IgnorePawnEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWorldMarkerData : public FastArraySerializerItem
{
public:
	struct MarkerID MarkerID;
	class UClass* Owner;
	EFortWorldMarkerType MarkerType;
	struct Vector BasePosition;
	struct Vector BasePositionOffset;
	struct Vector WorldNormal;
	class UClass* ItemDefinition;
	int ItemCount;
	class UClass* MarkedActor;
	struct TSoftClassPtr<UObject> MarkedActorClass;
	bool bIncludeSquad;
	bool bHasCustomDisplayInfo;
	bool bUseHoveredMarkerDetail;
	struct MarkedActorDisplayInfo CustomDisplayInfo;
	class UClass* MarkerInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWorldMarkerContainer : public FastArraySerializer
{
public:
	TArray<struct FortWorldMarkerData> Markers;
	class UClass* OwningComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Recipe : public TableRowBase
{
public:
	TArray<struct FortItemQuantityPair> RecipeResults;
	bool bIsConsumed;
	TArray<struct FortItemQuantityPair> RecipeCosts;
	struct GameplayTagContainer RequiredCatalysts;
	int Score;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ContentMessageItemEntry : public FastArraySerializerItem
{
public:
	struct FString ContentMessage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ContentMessageArray : public FastArraySerializer
{
public:
	TArray<struct ContentMessageItemEntry> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CustomAccessoryHatReactiveMorphs : public CustomAccessoryMorphs
{
public:
	TArray<struct FName> CapMorphTargets;
	TArray<struct FName> HelmetMorphTargets;
	TArray<struct FName> MaskMorphTargets;
	TArray<struct FName> HatMorphTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilityRepSharedAnim : public GameplayAbilityRepSharedAnim_Base
{
public:
	class UClass* AnimMontage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAttributeData : public GameplayAttributeData
{
public:
	float Minimum;
	float Maximum;
	bool bIsCurrentClamped;
	bool bIsBaseClamped;
	bool bShouldClampBase;
	float UnclampedBaseValue;
	float UnclampedCurrentValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIGoal : public FortAIGoalInfo
{
public:
	TArray<class UClass*> GoalComponentsAssignedToGoal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpawnPointsPercentageCurveSequenceInstanceInfo : public FortCurveSequenceInstanceInfo
{
public:
	class UClass* SpawnPointsPercentageCurveSequence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIntensityCurveSequenceInstanceInfo : public FortCurveSequenceInstanceInfo
{
public:
	class UClass* IntensityCurveSequence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIBaseLootDropRow : public TableRowBase
{
public:
	int Priority;
	float ItemDropChance;
	struct FName WorldItemLootTierGroup;
	struct FName WorldItemInstancedLootTierGroup;
	struct FName AccountItemLootTierGroup;
	struct GameplayTagContainer AITagsContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAILootDropModifierRow : public TableRowBase
{
public:
	int Priority;
	float ItemDropChanceMultiplier;
	struct FName WorldItemLootTierGroup;
	struct GameplayTagContainer AITagsContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AutoAcquireSlot : public AIHotSpotSlotInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAILODSetting_AIEvaluator : public FortAthenaAILODSetting
{
public:
	struct ScalableFloat IntervalMultiplier;
	struct ScalableFloat RandomDeviationMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAILODSetting_CharacterMovement : public FortAthenaAILODSetting
{
public:
	struct ScalableFloat Interval;
	struct ScalableFloat RandomDeviation;
	struct ScalableFloat MinimumDynamicInterval;
	struct ScalableFloat MaximumDotDifferenceBetweenInputVectors;
	struct ScalableFloat bDisableAvoidance;
	struct ScalableFloat bBotsEnableNavWalkingMode;
	struct ScalableFloat bBotsEnablePhysNavWalkingPathFollowingMode;
	struct ScalableFloat bSweepWhileNavWalking;
	struct ScalableFloat bGenerateOverlapInNavWalking;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAILODSetting_FortWeaponRanged : public FortAthenaAILODSetting
{
public:
	struct ScalableFloat Interval;
	struct ScalableFloat RandomDeviation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AdHocSquad_InviteData : public FastArraySerializerItem
{
public:
	class UClass* InvitingPlayerState;
	EAdHocSquads_InviteStatus InviteStatus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AdHocSquad_InviteDataArray : public FastArraySerializer
{
public:
	TArray<struct AdHocSquad_InviteData> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AshtonStoneSpawnData : public FortPieSliceSpawnData
{
public:
	struct ScalableFloat SpawnDelay;
	struct ScalableFloat SpawnSafeZoneIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BagelScoreMultiplierSpawnData : public FortPieSliceSpawnData
{
public:
	struct ScalableFloat ScoreMultiplier;
	struct ScalableFloat SpawnCount;
	struct ScalableFloat MinSpawnTime;
	struct ScalableFloat MaxSpawnTime;
	class UClass* ObjectClass;
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	bool bShouldDrawCompassIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BagelPlayerDataEntry : public FastArraySerializerItem
{
public:
	class UClass* PlayerState;
	int Scores;
	int TotalScore;
	byte StreakScoreLevel;
	byte StreakMultiplierCurrentKillCount;
	float LastAIKillTime;
	TArray<float> AIKillTimes;
	struct TimerHandle ResetStreakScoreMultiplierTimerHandle;
	int TotalAIKillCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BagelPlayerDataArray : public FastArraySerializer
{
public:
	TArray<struct BagelPlayerDataEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LimitedLifeDataEntry : public FastArraySerializerItem
{
public:
	class UClass* BackingActor;
	byte TeamId;
	int Lives;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LimitedLifeDataArray : public FastArraySerializer
{
public:
	TArray<struct LimitedLifeDataEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MMRSpawningBotsRuntimeInfo : public MMRSpawningBaseRuntimeInfo
{
public:
	TArray<class UClass*> ELOSpawningInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltCombatStormShieldDataEntry : public FastArraySerializerItem
{
public:
	bool bStormShieldActive;
	TArray<byte> Teams;
	TArray<int> ParentStormShields;
	class UClass* StormShieldActor;
	struct Vector StormShieldPOILocation;
	struct GameplayTag POITag;
	int8_t RoundIndex;
	TArray<int> TeamScores;
	byte LeadingTeam;
	byte TieBreakerTeam;
	bool bAwardedFirstEliminationOfRound;
	byte FirstLandTeam;
	TArray<float> TotalDamageDealt;
	TArray<float> TotalDamageTaken;
	class UClass* POICamera;
	struct Vector2D Team0RespawnPoint;
	struct Vector2D Team1RespawnPoint;
	float NextSupplyDropSpawnTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltCombatStormShieldArray : public FastArraySerializer
{
public:
	TArray<struct CobaltCombatStormShieldDataEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRespawnLogicData_Teams : public FortRespawnLogicData
{
public:
	struct ScalableFloat TryPlaceByTeammates;
	struct ScalableFloat AlsoPlaceBehindTeammates;
	struct ScalableFloat MaxDistanceFromTeammates;
	struct ScalableFloat MinDistanceFromTeammates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ControlPointSpawnData : public FortPieSliceSpawnData
{
public:
	struct ScalableFloat SpawnDelayTime;
	struct ScalableFloat SafeZonePhaseWhenToSpawn;
	struct ScalableFloat SafeZonePhaseWhereToSpawn;
	struct ScalableFloat EnableDelayTime;
	struct ScalableFloat EnableInSafeZonePhase;
	struct ScalableFloat DisableDelayTime;
	struct ScalableFloat DisableInSafeZonePhase;
	struct ScalableFloat PointsEarnedPerSecond;
	struct ScalableFloat BonusPointsEarnedPerSecond;
	struct ScalableFloat bIgnoreForOrderMessaging;
	int IconMaterialIndex;
	bool bAlwaysInPlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HeistExitCraftSpawnData : public FortPieSliceSpawnData
{
public:
	struct ScalableFloat SpawnDelayTime;
	struct ScalableFloat SafeZonePhaseWhenToSpawn;
	struct ScalableFloat SafeZonePhaseWhereToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HeistBlingDropSpawnData : public FortPieSliceSpawnData
{
public:
	struct ScalableFloat SafeZonePhaseWhereToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashScoreMultiplierSpawnData : public FortPieSliceSpawnData
{
public:
	struct ScalableFloat ScoreMultiplier;
	struct ScalableFloat SpawnCount;
	struct ScalableFloat MinSpawnTime;
	struct ScalableFloat MaxSpawnTime;
	class UClass* ObjectClass;
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	bool bShouldDrawCompassIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashPlayerDataEntry : public FastArraySerializerItem
{
public:
	class UClass* PlayerState;
	int Scores;
	int TotalScore;
	byte StreakScoreLevel;
	byte StreakMultiplierCurrentKillCount;
	float LastAIKillTime;
	TArray<float> AIKillTimes;
	struct TimerHandle ResetStreakScoreMultiplierTimerHandle;
	int TotalAIKillCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashPlayerDataArray : public FastArraySerializer
{
public:
	TArray<struct MashPlayerDataEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PowPlayerDataEntry : public FastArraySerializerItem
{
public:
	class UClass* PlayerState;
	float CurrentMaxShield;
	float CurrentShield;
	class UClass* POWMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PowPlayerDataArray : public FastArraySerializer
{
public:
	class UClass* OwningMutator;
	TArray<struct PowPlayerDataEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TagTeamInfoEntry : public FastArraySerializerItem
{
public:
	byte TeamNum;
	int PlayerCount;
	int PreviousPlayerCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TagTeamInfoArray : public FastArraySerializer
{
public:
	TArray<struct TagTeamInfoEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxPlayerDataEntry : public FastArraySerializerItem
{
public:
	class UClass* PlayerState;
	bool bPermanentlyWaxed;
	bool bPlayerWasLeader;
	int TokenBasedPlacement;
	int CurrentTokens;
	int PreviousTokens;
	int CurrentTeamTokens;
	int PreviousTeamTokens;
	int CurrentKills;
	int PreviousKills;
	int CurrentLives;
	struct Vector PreviousVictimLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxPlayerDataArray : public FastArraySerializer
{
public:
	class UClass* OwningMutator;
	TArray<struct WaxPlayerDataEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientObservedStat : public FastArraySerializerItem
{
public:
	struct FName StatName;
	int StatValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientObservedStatArray : public FastArraySerializer
{
public:
	class UClass* MyStatManager;
	TArray<struct FortClientObservedStat> ObservedStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientAnnouncementData_Basic : public FortClientAnnouncementData
{
public:
	struct SlateBrush Icon;
	struct FText TitleText;
	struct FText DetailText;
	struct FText GamepadDetailText;
	int Priority;
	float DisplayTime;
	class UClass* OnStartSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientAnnouncementData_Conversation : public FortClientAnnouncementData
{
public:
	class UClass* Conversation;
	EFortAnnouncementDisplayPreference ConversationDisplayPreference;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientAnnouncementData_Keybinding : public FortClientAnnouncementData_Basic
{
public:
	TArray<struct ActionTextPair> GamapadActionTextList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientAnnouncementData_Tutorial : public FortClientAnnouncementData_Basic
{
public:
	float AutoContinueDelay;
	struct FText NameText;
	struct FText SystemText;
	bool bButtonEnabled;
	bool bLightboxEnabled;
	bool bLightboxDisableInputOnly;
	struct Margin Padding;
	EVerticalAlignment VAlign;
	EHorizontalAlignment HAlign;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientAnnouncementData_ZoneModifiers : public FortClientAnnouncementData
{
public:
	TArray<class UClass*> Modifiers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientEventName : public FortEventName
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileCustomHUDProfile : public FortMobileHUDProfileBase
{
public:
	struct FortMobileSchemaModificationContainer Modifications;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBaseWeaponStats : public TableRowBase
{
public:
	int BaseLevel;
	struct FName NamedWeightRow;
	float DmgPB;
	float DmgMid;
	float DmgLong;
	float DmgMaxRange;
	float EnvDmgPB;
	float EnvDmgMid;
	float EnvDmgLong;
	float EnvDmgMaxRange;
	float ImpactDmgPB;
	float ImpactDmgMid;
	float ImpactDmgLong;
	float ImpactDmgMaxRange;
	bool bForceControl;
	float RngPB;
	float RngMid;
	float RngLong;
	float RngMax;
	class UClass* DmgScaleTable;
	struct FName DmgScaleTableRow;
	float DmgScale;
	class UClass* EnvDmgScaleTable;
	struct FName EnvDmgScaleTableRow;
	float EnvDmgScale;
	class UClass* ImpactDmgScaleTable;
	struct FName ImpactDmgScaleTableRow;
	float ImpactDmgScale;
	struct FName SurfaceRatioRowName;
	float DamageZone_Light;
	float DamageZone_Normal;
	float DamageZone_Critical;
	float DamageZone_Vulnerability;
	float KnockbackMagnitude;
	float MidRangeKnockbackMagnitude;
	float LongRangeKnockbackMagnitude;
	float KnockbackZAngle;
	float ShortRangeHitImpulseMagnitude;
	float MidRangeHitImpulseMagnitude;
	float LongRangeHitImpulseMagnitude;
	float HitImpulseZBias;
	float StunTime;
	float StunScale;
	class UClass* Durability;
	struct FName DurabilityRowName;
	float DurabilityScale;
	float DurabilityPerUse;
	float FullChargeDurabilityPerUse;
	float DiceCritChance;
	float DiceCritDamageMultiplier;
	float ReloadTime;
	float ReloadScale;
	EFortWeaponReloadType ReloadType;
	bool bAllowReloadInterrupt;
	bool bReloadInterruptIsImmediate;
	int NumIndividualBulletsToReload;
	int ClipSize;
	float ClipScale;
	int InitialClips;
	int CartridgePerFire;
	int AmmoCostPerFire;
	int MaxAmmoCostPerFire;
	float MinChargeTime;
	float MaxChargeTime;
	float ChargeDownTime;
	bool bAutoDischarge;
	float MaxChargeTimeUntilDischarge;
	float MinChargeDamageMultiplier;
	float MaxChargeDamageMultiplier;
	class UClass* ChargeDamageMultiplierCurve;
	float EquipAnimRate;
	float QuickBarSlotCooldownDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInGameLeaderboardPlacementData : public FortChangeMonitoringStruct
{
public:
	struct FString DisplayName;
	int Score;
	int ScoreToWin;
	byte TeamNum;
	TArray<class UClass*> TeamMembers;
	int Placement;
	int SortIndex;
	bool bRepresentsLocalPlayer;
	float PctToWin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class IndicatedActorInfoEntry : public FastArraySerializerItem
{
public:
	class UClass* Actor;
	float StartTime;
	float EndTime;
	struct IndicatedActorData Data;
	bool bReplaceExistingWhenAdded;
	bool bRefreshExistingWhenAdded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class IndicatedActorInfoArray : public FastArraySerializer
{
public:
	TArray<struct IndicatedActorInfoEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StenciledActorInfoEntry : public FastArraySerializerItem
{
public:
	class UClass* Actor;
	class UClass* MarkedBy;
	float StartTime;
	float EndTime;
	struct StenciledActorData Data;
	bool bReplaceExistingWhenAdded;
	bool bRefreshExistingWhenAdded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StenciledActorInfoArray : public FastArraySerializer
{
public:
	TArray<struct StenciledActorInfoEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PoiDiscoverabilityDataEntry : public FastArraySerializerItem
{
public:
	struct GameplayTag POITag;
	bool bDiscovered;
	bool bWasInitiallyDiscovered;
	byte VisitCounter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PoiDiscoverabilityDataArray : public FastArraySerializer
{
public:
	TArray<struct PoiDiscoverabilityDataEntry> Entries;
	class UClass* Owner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerMiniMapComponentVisibility : public FastArraySerializerItem
{
public:
	class UClass* MiniMapComponent;
	EMiniMapComponentDiscoverableVisibility Visibility;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerMiniMapComponentVisibilitiesArray : public FastArraySerializer
{
public:
	TArray<struct FortControllerMiniMapComponentVisibility> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RadiusTrackingDisplayInfo : public FastArraySerializerItem
{
public:
	class UClass* TrackedActor;
	struct Vector2D TrackedCenter;
	float TrackedRadius;
	struct LinearColor CircleColor;
	class UClass* CircleMaterial;
	class UClass* MiniMapMID;
	class UClass* FullMapMID;
	class UClass* RadiusTrackerComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RadiusTrackingDisplayInfoArray : public FastArraySerializer
{
public:
	TArray<struct RadiusTrackingDisplayInfo> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MaterialVectorVariant : public MaterialParamName
{
public:
	struct LinearColor Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MaterialTextureVariant : public MaterialParamName
{
public:
	struct TSoftClassPtr<UObject> Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MaterialFloatVariant : public MaterialParamName
{
public:
	float Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VectorParamVariant : public MaterialParamName
{
public:
	struct Vector Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PartVariantDef : public BaseVariantDef
{
public:
	TArray<struct TSoftClassPtr<UObject>> VariantParts;
	TArray<struct MaterialVariants> VariantMaterials;
	TArray<struct MaterialParamterDef> VariantMaterialParams;
	TArray<struct VariantParticleSystemInitializerData> InitalParticelSystemData;
	TArray<struct ParticleVariant> VariantParticles;
	TArray<struct ParticleParamterVariant> VariantParticleParams;
	TArray<struct ManagedParticleSwapVariant> VariantSwapInParticles;
	TArray<struct ManagedParticleParamVariant> VariantAlteredParticleParams;
	TArray<struct SoundVariant> VariantSounds;
	TArray<struct FoleySoundVariant> VariantFoley;
	TArray<struct SocketTransformVariant> SocketTransforms;
	TArray<struct ScriptedActionVariant> VariantActions;
	TArray<struct MeshVariant> VariantMeshes;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DynamicVariantDef : public BaseVariantDef
{
public:
	TArray<class UClass*> DynamicVariants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteMontageVariantDef : public BaseVariantDef
{
public:
	TArray<struct EmoteMontageSwap> MontageSwaps;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayTagVariantDef : public BaseVariantDef
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemTextureVariantDef : public BaseVariantDef
{
public:
	struct ItemTextureVariant InnerDef;
	struct CosmeticMetaTagContainer MetaTags;
	struct GameplayTagContainer FilterOutItemsWithTags;
	bool bWantsSprays;
	bool bWantsEmoji;
	bool bAllowClear;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TagDrivenVariantDef : public PartVariantDef
{
public:
	struct GameplayTagContainer RequiredMetaTags;
	struct GameplayTagContainer ExcludedMetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MaterialVariantDef : public BaseVariantDef
{
public:
	TArray<struct MaterialVariants> VariantMaterials;
	TArray<struct MaterialParamterDef> VariantMaterialParams;
	TArray<struct SoundVariant> VariantSounds;
	TArray<struct FoleySoundVariant> VariantFoley;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshVariantDef : public BaseVariantDef
{
public:
	TArray<struct MeshVariant> VariantMeshes;
	TArray<struct MaterialVariants> VariantMaterials;
	TArray<struct MaterialParamterDef> VariantMaterialParams;
	TArray<struct VariantParticleSystemInitializerData> InitialParticleSystemData;
	TArray<struct ParticleVariant> VariantParticles;
	TArray<struct ParticleParamterVariant> VariantParticleParams;
	TArray<struct SocketTransformVariant> SocketTransforms;
	TArray<struct SoundVariant> VariantSounds;
	TArray<struct FoleySoundVariant> VariantFoley;
	TArray<struct ScriptedActionVariant> VariantActions;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ParticlVariantDef : public BaseVariantDef
{
public:
	TArray<struct MaterialVariants> VariantMaterials;
	TArray<struct MaterialParamterDef> VariantMaterialParams;
	TArray<struct VariantParticleSystemInitializerData> InitalParticelSystemData;
	TArray<struct ParticleVariant> VariantParticles;
	TArray<struct ParticleParamterVariant> VariantParticleParams;
	TArray<struct ManagedParticleParamVariant> VariantAlteredParticleParams;
	TArray<struct SoundVariant> VariantSounds;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ManagedParticleVariantDef : public BaseVariantDef
{
public:
	TArray<struct MaterialVariants> VariantMaterials;
	TArray<struct MaterialParamterDef> VariantMaterialParams;
	TArray<struct ManagedParticleSwapVariant> VariantSwapInParticles;
	TArray<struct ManagedParticleParamVariant> VariantAlteredParticleParams;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LoadoutVariantDef : public PartVariantDef
{
public:
	struct TSoftClassPtr<UObject> LoadoutItem;
	ELoadoutVariantInsertType LocationToInsert;
	bool bItemExpectedInLoadout;
	bool bRequireItemToBeCurrent;
	bool bIgnoreRequireItemToBeCurrentInFrontEnd;
	TArray<struct EmoteMontageVariantDef> VariantEmoteMontages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RichColorVariantDef : public BaseVariantDef
{
public:
	struct CosmeticMetaTagContainer MetaTags;
	struct RichColorVariant RichColorVar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ScriptedActionVariantDef : public BaseVariantDef
{
public:
	TArray<struct ScriptedActionVariant> VariantActions;
	struct CosmeticMetaTagContainer MetaTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ApplyWrapVariantDef : public BaseVariantDef
{
public:
	struct ApplyWrapVariant InnerDef;
	struct CosmeticMetaTagContainer MetaTags;
	struct GameplayTagContainer FilterOutItemsWithTags;
	bool bAllowClear;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryAttributeBase : public FortInventory_SaveEntryBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryFloat : public FortInventory_SaveEntryAttributeBase
{
public:
	float Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryUint8 : public FortInventory_SaveEntryAttributeBase
{
public:
	byte Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryItems : public FortInventory_SaveEntryAttributeBase
{
public:
	TArray<struct FortItemEntry> FortItemEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryCheckpoints : public FortInventory_SaveEntryAttributeBase
{
public:
	TArray<struct FortInventory_CheckpointEntry> CheckpointsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryTransform : public FortInventory_SaveEntryAttributeBase
{
public:
	struct Vector LocationValue;
	struct Quat RotationValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_MinigameStats : public FortInventory_SaveEntryAttributeBase
{
public:
	TArray<struct FortInventory_PlayerStatEntry> PlayerStatsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieCableSignalManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieInteractStateSuggestionData : public FortCurieStateSuggestionData
{
public:
	bool bAlwaysSuggest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieFirePropagationManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieFXManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCuriePackedGrassData : public FastArraySerializerItem
{
public:
	uint32_t Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCuriePackedGrassDataArray : public FastArraySerializer
{
public:
	TArray<struct FortCuriePackedGrassData> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieSpatialManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieSpatialGrid : public FortSpatialGrid
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieBuildingGrid : public FortCurieSpatialGrid
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieElementSpatialGrid : public FortCurieSpatialGrid
{
public:
	Unknown NavRelevantObjectMap;
	TArray<class UClass*> NavRelevantPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieGrassGrid : public FortCurieSpatialGrid
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveTieredCollectionLayout : public FastArraySerializerItem
{
public:
	class UClass* Layout;
	int MaxTierUnlocked;
	bool bLocked;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveTieredCollectionLayoutArray : public FastArraySerializer
{
public:
	TArray<struct ActiveTieredCollectionLayout> LayoutArray;
	bool bTiersForced;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DeployableBaseInstance : public FastArraySerializerItem
{
public:
	class UClass* DeployableBase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DeployableBaseArray : public FastArraySerializer
{
public:
	TArray<struct DeployableBaseInstance> DeployableBases;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTaggedDeployableBasePlotExpansionUnlock : public FortTaggedUnlockBase
{
public:
	struct IntVector CellExpansionVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTaggedDeployableBaseLootUnlock : public FortTaggedUnlockBase
{
public:
	struct FName LootTierGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFeedbackActionBankDefined : public FortFeedbackAction
{
public:
	float MinReplayTime;
	float MinReplayTimeForSpeaker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSplineMeshScaleAnimationInfo : public FortFXAnimationInfoBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSplineMeshSnapAnimationInfo : public FortFXAnimationInfoBase
{
public:
	class UClass* TargetSpline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFloatAnimationInfo : public FortFXAnimationInfoBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFloatParamAnimationInfo : public FortFloatAnimationInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLinearColorAnimationInfo : public FortFXAnimationInfoBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLinearColorParamAnimationInfo : public FortLinearColorAnimationInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLinearColorCurveAnimationInfo : public FortFXAnimationInfoBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLinearColorCurveParamAnimationInfo : public FortLinearColorCurveAnimationInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveGameplayModifier : public FastArraySerializerItem
{
public:
	class UClass* ModifierDef;
	struct ActiveGameplayModifierHandle ModifierHandle;
	TArray<class UClass*> Mutators;
	int Expiration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveGameplayModifierArray : public FastArraySerializer
{
public:
	TArray<struct ActiveGameplayModifier> Items;
	TArray<struct ActiveGameplayModifier> DeferredGameplayModifiers;
	int ModifierHandleGenerator;
	bool bSupportRuntimeModifierShutdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameMemberInfo : public FastArraySerializerItem
{
public:
	byte SquadId;
	byte TeamIndex;
	struct UniqueNetIdRepl MemberUniqueId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameMemberInfoArray : public FastArraySerializer
{
public:
	TArray<struct GameMemberInfo> Members;
	class UClass* OwningGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PropertyOverride : public FastArraySerializerItem
{
public:
	struct FString PropertyScope;
	struct FString PropertyName;
	struct FString PropertyData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistPropertyArray : public FastArraySerializer
{
public:
	TArray<struct PropertyOverride> PropertyOverrides;
	int PlaylistReplicationKey;
	class UClass* BasePlaylist;
	class UClass* OverridePlaylist;
	Unknown PropertyOverrideScopes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayMutatorObjectData : public FastArraySerializerItem
{
public:
	class UClass* TheObject;
	int ObjectId;
	int ObjectValue1;
	int ObjectValue2;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayMutatorObjectDataArray : public FastArraySerializer
{
public:
	TArray<struct GameplayMutatorObjectData> ObjectDataList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpawnMachineRepData : public FastArraySerializerItem
{
public:
	struct Vector Location;
	ESpawnMachineState SpawnMachineState;
	float SpawnMachineCooldownStartTime;
	float SpawnMachineCooldownEndTime;
	int SpawnMachineRepDataHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpawnMachineRepDataArray : public FastArraySerializer
{
public:
	TArray<struct SpawnMachineRepData> SpawnMachineRepDataArray;
	class UClass* OwningGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RecentPlayerEncounterSerialized : public RecentPlayerEncounter
{
public:
	struct UniqueNetIdRepl LocalUserId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemList : public FastArraySerializer
{
public:
	TArray<struct FortItemEntry> ReplicatedEntries;
	TArray<class UClass*> ItemInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameDifficultyInfo : public TableRowBase
{
public:
	bool bIsOnboarding;
	float Difficulty;
	float DifficultyMatchmakingMinOverride;
	float DifficultyMatchmakingMaxOverride;
	int LootLevel;
	ERatingsEnforcementType RatingsEnforcement;
	int RequiredRating;
	int MaximumRating;
	int PvPRating;
	int RecommendedRating;
	float ScoreBonus;
	struct FString LootTierGroup;
	struct FString BonusLootTierGroup;
	struct FString DifficultyIncreaseLootTierGroup;
	int NumDifficultyIncreases;
	struct FText ThreatDisplayName;
	struct FName ColorParamName;
	int DefaultPlayerLives;
	struct FName PlayerStatClampRowName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyRepData : public PartyRepData
{
public:
	struct FString PrimaryGameSessionId;
	EFortPartyState PartyState;
	bool LobbyConnectionStarted;
	EMatchmakingCompleteResult MatchmakingResult;
	EMatchmakingState MatchmakingState;
	bool SessionIsCriticalMission;
	int ZoneTileIndex;
	struct FString ZoneInstanceId;
	struct FString TheaterId;
	TArray<bool> TileStates;
	struct FortPartyMatchmakingInfo PartyMatchmakingInfo;
	TArray<struct FortCreativeDiscoverySurfaceRevision> CreativeDiscoverySurfaceRevisions;
	struct FString CustomMatchKey;
	struct PlaylistData PlaylistData;
	struct FString ActivityName;
	bool AllowJoinInProgress;
	struct DateTime LFGTime;
	bool AthenaSquadFill;
	bool PartyIsJoinedInProgress;
	struct FString GameSessionKey;
	TArray<struct FortPartySquadAssignment> RawSquadAssignments;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyMemberRepData : public PartyMemberRepData
{
public:
	EFortPartyMemberLocation Location;
	struct PartyMemberCampaignHero CampaignHero;
	struct PartyMemberCampaignInfo CampaignInfo;
	struct PartyMemberFrontendEmote FrontendEmote;
	byte NumAthenaPlayersLeft;
	bool SpectateAPartyMemberAvailable;
	struct DateTime UtcTimeStartedMatchAthena;
	struct PartyMemberLobbyState LobbyState;
	struct PartyMemberAssistedChallengeInfo AssistedChallengeInfo;
	class UClass* FeatDefinition;
	struct PartyMemberSquadAssignmentRequest MemberSquadAssignmentRequest;
	EPartyMemberVoiceChatStatus VoiceChatStatus;
	EPartyMemberSidekickStatus SidekickStatus;
	struct PartyMemberFrontEndMapMarker FrontEndMapMarker;
	struct PartyMemberCosmeticLoadout AthenaCosmeticLoadout;
	struct PartyMemberVariantCache AthenaCosmeticLoadoutVariants;
	TArray<struct FString> ArbitraryCustomDataStore;
	struct PartyMemberAthenaBannerInfo AthenaBannerInfo;
	struct PartyMemberBattlePassInfo BattlePassInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMangBotInfo : public FastArraySerializerItem
{
public:
	class UClass* BotController;
	class UClass* BotPawn;
	EAlertLevel CurrentBotAlertLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMangBotInfoArray : public FastArraySerializer
{
public:
	TArray<struct FortMangBotInfo> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshNetworkEventStateData : public FastArraySerializerItem
{
public:
	struct FName EventName;
	struct DateTime EventStartTime;
	struct FString EventParameters;
	struct GameplayTagContainer EventFilters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshNetworkEventStateDataArray : public FastArraySerializer
{
public:
	class UClass* OwningLoader;
	TArray<struct MeshNetworkEventStateData> StateData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigamePlayer : public FastArraySerializerItem
{
public:
	struct UniqueNetIdRepl UniquePlayerId;
	bool bHasValidResetData;
	byte ClassSlotIndex;
	float LastClassSwitchTime;
	byte TeamBeforeMinigameStarted;
	struct Vector LocationBeforeMinigameStarted;
	struct Rotator RotationBeforeMinigameStarted;
	bool bIsLocationBeforeGameStartedBlocked;
	bool bWasSkydivingBeforeMinigameStarted;
	bool bWasFlyingBeforeMinigameStarted;
	bool bIsTeleportingOrRespawningForGameplay;
	bool bIsLocalPlayer;
	bool bPreparingForRespawn;
	class UClass* ClaimedPlayerStart;
	bool bIsWaitingForPersistence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigamePlayers : public FastArraySerializer
{
public:
	TArray<struct MinigamePlayer> Players;
	class UClass* Owner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMinigamePlayerStats : public FortMinigameGroupStats
{
public:
	struct UniqueNetIdRepl Player;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMinigamePlayerBucketStats : public FortMinigameGroupStats
{
public:
	int BucketIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TrackedObjective : public FastArraySerializerItem
{
public:
	int TrackedIndex;
	byte TeamIndex;
	byte OldTeamIndex;
	int IndicatorPresetIndex;
	float ProgressPercentage;
	byte TrackedState;
	byte TrackedStateOwnerTeam;
	byte OldTrackedState;
	byte ObjectiveType;
	bool bIsInteractionAllowed;
	bool bOldIsInteractionAllowed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TrackedObjectiveArray : public FastArraySerializer
{
public:
	TArray<struct TrackedObjective> Objectives;
	int NextTrackedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameScoreEntry : public FastArraySerializerItem
{
public:
	struct UniqueNetIdRepl UniqueId;
	struct FString PlayerName;
	float Score;
	struct DateTime TimeRecorded;
	bool bHasScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameScoreArray : public FastArraySerializer
{
public:
	TArray<struct MinigameScoreEntry> Scores;
	TArray<struct MinigameScoreEntry> HighScores;
	class UClass* Owner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionEventName : public FortEventName
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBadgeCount : public FastArraySerializerItem
{
public:
	class UClass* Badge;
	int Count;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBadgeCountArray : public FastArraySerializer
{
public:
	TArray<struct FortBadgeCount> Badges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EarnedBadgeEntry : public FastArraySerializerItem
{
public:
	class UClass* Badge;
	TArray<struct EarnedBadgePlayerData> PlayerData;
	EFortRewardType RewardType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EarnedBadgeEntryArray : public FastArraySerializer
{
public:
	TArray<struct EarnedBadgeEntry> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDPreset : public FortMobileHUDProfileBase
{
public:
	struct FortMobileHUDLayoutProfileSave HUDLayoutPreset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NPCSaleInventoryRow : public TableRowBase
{
public:
	struct GameplayTag NPC;
	struct FName LootTier;
	int LootLevel;
	struct GameplayTagContainer LootTags;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NPCConversationGiftRow : public TableRowBase
{
public:
	struct GameplayTag NPC;
	struct GameplayTag GiftTag;
	struct FString AnalyticsEventName;
	float Weight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NPCGiftItemInventoryRow : public TableRowBase
{
public:
	struct GameplayTag NPC;
	struct FName LootTier;
	int LootLevel;
	int OverrideNumDrops;
	struct GameplayTagContainer LootTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDistanceCurve : public FortCachedFloatCurve
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HarvestingOptimizerBuildingData : public OutpostBuildingData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class StorageVaultBuildingData : public OutpostBuildingData
{
public:
	TArray<int> ItemCapacityPerLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OutpostUpgradeAndPrestigeBuildingData : public OutpostBuildingData
{
public:
	int MaxPrestigeLevel;
	class UClass* DefaultOutpostBuildingUpgradeData;
	TArray<struct OutpostUpgradesPerTheaterData> PerTheaterOutpostBuildingUpgradeData;
	struct OutpostPrestigeEffects DefaultPrestigeData;
	TArray<struct OutpostPrestigeEffectsPerTheater> PrestigePerTheaterData;
	struct OutpostPOSTBoost DefaultPOSTData;
	TArray<struct OutpostPOSTPerTheaterData> POSTPerTheaterData;
	class UClass* POSTBuildingGameplayEffectClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickupInstigator : public FastArraySerializerItem
{
public:
	int TrackedIndex;
	struct PickupInstigatorData InstigatorData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickupInstigatorArray : public FastArraySerializer
{
public:
	TArray<struct PickupInstigator> Items;
	int NextTrackedIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class XPEventEntry : public FastArraySerializerItem
{
public:
	struct FText SimulatedXpEvent;
	class UClass* QuestDef;
	struct PrimaryAssetId Accolade;
	float Time;
	int EventXpValue;
	int TotalXpEarnedInMatch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class XPEventArray : public FastArraySerializer
{
public:
	TArray<struct XPEventEntry> Entries;
	class UClass* ParentComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorZoneItem : public FastArraySerializerItem
{
public:
	class UClass* PlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorZoneArray : public FastArraySerializer
{
public:
	TArray<struct FortSpectatorZoneItem> SpectatorArray;
	class UClass* OwningState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistOptionColorValue : public PlaylistOptionValue
{
public:
	struct LinearColor Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistOptionCollisionProfileValue : public PlaylistOptionValue
{
public:
	struct CollisionProfileName Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistOptionIntValue : public PlaylistOptionValue
{
public:
	int Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistOptionFloatValue : public PlaylistOptionValue
{
public:
	struct ScalableFloat Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ProfileGoGeneratedScenario : public ProfileGoScenario
{
public:
	struct FString Command;
	struct FString Parameters;
	struct FString Location;
	struct FString Arguments;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PropertyOverrideRepl : public FastArraySerializerItem
{
public:
	struct PropertyOverrideId PropertyId;
	struct FString PropertyScopedName;
	struct FString PropertyData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PropertyOverrideDataRepl : public FastArraySerializer
{
public:
	struct FScriptMulticastDelegate ReplNotifier;
	TArray<struct PropertyOverrideRepl> PropertyOverridesRepl;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCategoryTableRow : public TableRowBase
{
public:
	struct FText Name;
	int SortPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RepGraphActorTemplateSettings : public RepGraphActorSettingsBase
{
public:
	struct FName TemplateName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RepGraphActorClassSettings : public RepGraphActorSettingsBase
{
public:
	struct FName ActorClassName;
	struct FName MapToTemplate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestDrivenMission : public FortGlobalMission
{
public:
	class UClass* RequiredQuest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpecialActorRepData : public FastArraySerializerItem
{
public:
	struct FName SpecialActorID;
	struct GameplayTag CategoryTag;
	class UClass* SpecialActor;
	class UClass* PlayerState;
	float ReplicationInterval;
	float ReplicationIntervalDeviation;
	float NextReplicationTime;
	float LastActorNotRelevantTime;
	bool bActorIsRelevant;
	bool bWasActorRelevantLastUpdate;
	struct Vector CurrentLocation;
	float CurrentYaw;
	struct SlateBrush MainIconBrush;
	struct Vector2D MinimapScale;
	struct SlateBrush CompassIconBrush;
	struct Vector2D CompassScale;
	bool bDrawCompassIcon;
	float CurrentHealth;
	float MaxHealth;
	float CurrentShield;
	float MaxShield;
	struct FText DisplayName;
	float RenderDistance;
	struct GameplayTagContainer RenderTags;
	float AddedToClientTime;
	TArray<struct SpecialActorSingleStatData> TrackedStats;
	float LastLocationReplicationTime;
	float PrevLocationReplicatedTime;
	struct Vector_NetQuantize100 LastRepLocation;
	struct Vector_NetQuantize100 PrevRepLocation;
	struct Vector LerpStartLocation;
	float LastYawReplicationTime;
	float PrevYawReplicatedTime;
	float LastRepYaw;
	float PrevRepYaw;
	float LerpStartYaw;
	bool bReplicateHealth;
	bool bReplicateShield;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpecialActorRepDataArray : public FastArraySerializer
{
public:
	TArray<struct SpecialActorRepData> SpecialActorList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCatmullRomSpline : public FortSplineBase
{
public:
	TArray<struct Vector> ControlPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReppedPoint : public FastArraySerializerItem
{
public:
	int LastServerIndex;
	float BurnTime;
	struct Vector_NetQuantize ReppedPoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReppedPointList : public FastArraySerializer
{
public:
	TArray<struct FortReppedPoint> FortReppedPoints;
	class UClass* FortSplineGroundPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PrivateTeamDataItem : public FastArraySerializerItem
{
public:
	float Value;
	struct UniqueNetIdRepl PlayerID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PrivateTeamDataArray : public FastArraySerializer
{
public:
	TArray<struct PrivateTeamDataItem> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TeamSpottedActorInfo : public FastArraySerializerItem
{
public:
	class UClass* Spotter;
	class UClass* SpottedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TeamSpottedActorInfoArray : public FastArraySerializer
{
public:
	TArray<struct TeamSpottedActorInfo> SpottedActorInfo;
	class UClass* OwningTeam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LatentRepPlayerData : public FastArraySerializerItem
{
public:
	class UClass* PlayerState;
	float LastPawnNotRelevantTime;
	bool bPawnIsRelevant;
	bool bWasPawnRelevantLastUpdate;
	struct Vector CurrentLocation;
	float CurrentYaw;
	float LastLocationReplicationTime;
	float PrevLocationReplicatedTime;
	struct Vector_NetQuantize100 LastRepLocation;
	struct Vector_NetQuantize100 PrevRepLocation;
	struct Vector LerpStartLocation;
	float LastYawReplicationTime;
	float PrevYawReplicatedTime;
	float LastRepYaw;
	float PrevRepYaw;
	float LerpStartYaw;
	EFortPawnState PawnStateMask;
	EFortPawnState CurrPawnStateMask;
	uint16_t CurieStateBitfield;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LatentRepTeamDataArray : public FastArraySerializer
{
public:
	TArray<struct LatentRepPlayerData> PlayerData;
	int CurrPlayerUpdateIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ThreatLocationInfo : public FastArraySerializerItem
{
public:
	struct Vector CloudLocation;
	struct Box ThreatVolume;
	class UClass* ThreatVisualsManager;
	Unknown CloudActor;
	bool bThreatActivated;
	EFortThreatDeactivationType DeactivationType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ThreatLocationArray : public FastArraySerializer
{
public:
	TArray<struct ThreatLocationInfo> Locations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StormWind : public FastArraySerializerItem
{
public:
	struct Vector Location;
	struct Vector Direction;
	float Radius;
	float Magnitude;
	class UClass* ThreatVisualsManager;
	TArray<class UClass*> Encounters;
	struct FortWindImpulseHandle WindHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StormWindArray : public FastArraySerializer
{
public:
	TArray<struct StormWind> StormWinds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TieredNamedCollectionProgressionData : public TieredCollectionProgressionDataBase
{
public:
	TArray<struct FName> CollectionNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DifficultyCollectionProgressionData : public TieredCollectionProgressionDataBase
{
public:
	TArray<struct DifficultyRowProgression> DifficultyCollections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RewardBadgesCollectionProgressionData : public TieredCollectionProgressionDataBase
{
public:
	TArray<struct RewardBadgesProgression> BadgeCollections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CollectionLootSetData : public TieredCollectionProgressionDataBase
{
public:
	TArray<struct FName> LootSetNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RepTrackMovement : public TrackMovement
{
public:
	float Timestamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIFeedbackBlueprintOnly : public FortUIFeedback
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLootQuotaData : public TableRowBase
{
public:
	struct FName QuotaCategory;
	ELootQuotaLevel QuotaLevel;
	int Min;
	int Max;
	float Quota;
	int MinWorldLevel;
	int MaxWorldLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VisibilityInfo : public FastArraySerializerItem
{
public:
	class UClass* Actor;
	class UClass* VisibilityComponent;
	uint16_t TeamVisibilityFlag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VisibiltyInfoArray : public FastArraySerializer
{
public:
	TArray<struct VisibilityInfo> VisibilityInfoArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VolumePlayerStateInfo : public FastArraySerializerItem
{
public:
	struct UniqueNetIdRepl UniquePlayerId;
	class UClass* Volume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVolumeActiveUsers : public FastArraySerializer
{
public:
	TArray<struct VolumePlayerStateInfo> Items;
	class UClass* Manager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WeaponPickupAmmoMultiplierOverrideData : public HelperGameplayTagToAmmoCountMultiplier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SourceToAmmoMultiplierOverrideData : public HelperGameplayTagToAmmoCountMultiplier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWindImpulseCylinder : public FortWindImpulseCylinderRadial
{
public:
	struct Vector WindDirection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortZoneInstanceDetails : public FortZoneInstanceInfo
{
public:
	struct TSoftClassPtr<UObject> MissionGenerator;
	struct DataTableRowHandle ZoneDifficultyInfo;
	struct McpLootResult MissionRewards;
	TArray<struct McpLootResult> DifficultyIncreaseMissionRewards;
	struct McpLootResult MissionAlertRewards;
	struct McpLootResult ZoneModifiers;
	struct FString MissionAlertCategoryName;
	int TileIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MatchHeartbeatManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPrivateAccountInfo : public FortPublicAccountInfo
{
public:
	int MtxBalance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDMessageData : public AthenaGameMessageData
{
public:
	EHUDMessagePlacement Placement;
	class UClass* PlayerState;
	int MessageTargets;
	ETextTransformPolicy TextTransformPolicy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TransmogSacrifice : public TableRowBase
{
public:
	int TransmogSacrificePoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotData : public TableRowBase
{
public:
	struct FName SlotXpWeightName;
	struct FName SlotSourceId;
	struct FName SlotSourceId2;
	TArray<struct TSoftClassPtr<UObject>> AllowedItems;
	TArray<struct GameplayTag> AllowedWorkerPersonalities;
	struct DataTableRowHandle PurchaseCosts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseSquad : public TableRowBase
{
public:
	struct FText DisplayName;
	struct FText ShortDisplayName;
	EFortHomebaseSquadType SquadType;
	struct GameplayTag ManagerSynergyTag;
	TArray<struct HomebaseSquadSlot> CrewSlots;
	struct GameplayTagContainer RequiredTheaterTags;
	int MaxNumDefendersAllowedInLevel;
	int MaxNumDefendersAllowedInGroupLevel;
	bool bConsiderNumPlayersForMaxNumDefenders;
	bool bAlwaysRemoveOldestDefenderWhenReplacing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDynamicRestedXpProgression : public TableRowBase
{
public:
	float PctOfGoldenPath;
	float CalculatedDynamicRestMult;
	float RestXPPoolExchangeRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDynamicRestedXpGoldenPath : public TableRowBase
{
public:
	int Day;
	int XP;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaExtendedXPCurveEntry : public TableRowBase
{
public:
	int XpPerLevel;
	int UntilLevel;
	struct TSoftClassPtr<UObject> RewardItemAssetPerLevel;
	int RewardItemCountPerLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSeasonalXPCurveEntry : public TableRowBase
{
public:
	int Level;
	int XpToNextLevel;
	int XpTotal;
	struct TSoftClassPtr<UObject> RewardItemAsset;
	int RewardItemCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattlePassOfferPriceRow : public TableRowBase
{
public:
	int Cost;
	struct PrimaryAssetId CurrencyItemTemplate;
	struct SoftObjectPath CurrencyItem_IconPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildingSMActorClassData : public BuildingActorClassData
{
public:
	TArray<struct TierMeshSets> AlternateMeshes;
	struct Vector2D RandomScaleRange;
	struct FName DestructionLootTierGroup;
	struct TSoftClassPtr<UObject> WindSpeedCurveSoftPtr;
	struct TSoftClassPtr<UObject> WindPannerSpeedCurveSoftPtr;
	struct TSoftClassPtr<UObject> WindAudioSoftPtr;
	float ShieldBuffMaterialParamValue1;
	float ShieldBuffMaterialParamValue2;
	float AnimatingDistanceFieldSelfShadowBias;
	float AnimatingSubObjects;
	float PlayerGridSnapSize;
	byte NumFrameSubObjects;
	bool bForceReplicateSubObjects;
	bool bNoPhysicsCollision;
	bool bNoCameraCollision;
	bool bNoPawnCollision;
	bool bNoAIPawnCollision;
	bool bBlocksCeilingPlacement;
	bool bBlocksAttachmentPlacement;
	bool bUsePhysicalSurfaceForFootstep;
	bool bRandomYawOnPlacement;
	bool bRandomScaleOnPlacement;
	bool bClearMIDWhenReturningToUndamagedState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildingAutoNavClassData : public BuildingSMActorClassData
{
public:
	bool bAutoAssignNavProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemCollectorOverrideItemRow : public TableRowBase
{
public:
	struct PrimaryAssetId ItemPrimaryAssetId;
	int Quantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemCollectorRow : public TableRowBase
{
public:
	class UClass* OverrideItemsTable;
	EFortRarity OverrideRarity;
	int OverrideGoal;
	int bOverrideLootRules;
	int bUseOverrideRarity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildingPropClassData : public BuildingAutoNavClassData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MusicTrackData : public TableRowBase
{
public:
	bool Enabled;
	struct TSoftClassPtr<UObject> MusicTrackPath;
	struct FText TrackName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildingTrapClassData : public BuildingSMActorClassData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilityRepSharedAnim_Index : public GameplayAbilityRepSharedAnim_Base
{
public:
	int MontageIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRootMotionSource_FallingBoost : public RootMotionSource
{
public:
	struct Vector StartLocation;
	struct Vector StartVelocity;
	struct Vector LastDesiredVelocity;
	float VerticalImpulse;
	float GravityScalar;
	float MaxAcceleration;
	float LateralFriction;
	float MaxLateralSpeed;
	bool bHasAppliedVerticalImpulse;
	struct Vector LatestRepMovementLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RootMotionSource_FollowCharacterRotation : public RootMotionSource_ConstantForce
{
public:
	float ConstantStrength;
	bool bWasWalkingLastFrame;
	bool bWasFallingLastFrame;
	float WalkingAccumulatedTime;
	float FallingAccumulatedTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbilityTargetData_SingleTargetHit : public GameplayAbilityTargetData_SingleTargetHit
{
public:
	int CartridgeID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ProximityBasedGEDeliveryInfo : public ProximityBasedGEDeliveryInfoBase
{
public:
	TArray<struct GameplayEffectApplicationInfo> EffectsToApply;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayEffectContext : public GameplayEffectContext
{
public:
	bool bIsFatalHit;
	bool bIsCriticalHit;
	bool bIsDiceCritical;
	bool bIsFullBodyHit;
	float KnockbackMagnitude;
	float KnockbackZAngle;
	float StunTime;
	float TotalChargeTime;
	float ChargeMagnitude;
	float EffectDirectionX;
	float EffectDirectionY;
	struct GameplayTagContainer TooltipTags;
	int CartridgeID;
	struct Guid ItemGuid;
	Unknown DamageSourceObject;
	float SourceLevel;
	float UnmodifiedDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIntensityCurve : public TableRowBase
{
public:
	class UClass* IntensityCurveTable;
	struct FName IntensityCurveTableRow;
	float LowPlayerPerformancePeakIntensityThreshold;
	float NormalPlayerPerformancePeakIntensityThreshold;
	float HighPlayerPerformancePeakIntensityThreshold;
	float MaxRampTime;
	float FadeEndIntensityThreshold;
	float StartIntensityOffsetFloor;
	float EndIntensityOffsetFloor;
	float StartIntensityOffsetCeiling;
	float EndIntensityOffsetCeiling;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpawnPointsPercentageCurve : public TableRowBase
{
public:
	class UClass* SpawnPointsPercentageCurveTable;
	struct FName SpawnPointsPercentageCurveTableRow;
	float MaxRampTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPawnStats : public TableRowBase
{
public:
	float MaximumHealth;
	float SpeedWalk;
	float SpeedRun;
	float SpeedSprint;
	float SpeedFly;
	float SpeedCrouchedRun;
	float SpeedCrouchedSprint;
	float SpeedBackwardsMultiplier;
	float SpeedDBNO;
	float AccelerationStrafeMultiplierSprint;
	float MinAnalogWalkSpeed;
	float GroundFriction;
	float BrakingDecelerationWalking;
	float BrakingDecelerationFalling;
	float BrakingDecelerationFlying;
	float BrakingFrictionFactor;
	float MaxAcceleration;
	float MaxAccelerationFlying;
	float JumpZVelocity;
	class UClass* FallingDamageTable;
	struct FName FallingDamageTableRow;
	class UClass* VehicleEjectDamageTable;
	float HealthRegenRate;
	float HealthRegenDelay;
	float HealthRegenThreshold;
	float MaxShield;
	float ShieldRegenRate;
	float ShieldRegenDelay;
	float ShieldRegenThreshold;
	float MaxControlResistance;
	float ControlResistanceRegenRate;
	float ControlResistanceRegenDelay;
	float ControlResistanceRegenThreshold;
	float KnockbackMultiplier;
	float KnockbackThreshold;
	float PawnDamagedTeamNotificationDistance;
	bool bAllowChainStun;
	EFortControlRecoveryBehavior ControlRecoveryBehavior;
	struct GameplayTag CurieMaterialIdentifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIPawnStats : public FortPawnStats
{
public:
	int ScoreValue;
	float DormantSightRadius;
	float DormantHearingThreshold;
	float DormantLOSHearingThreshold;
	float DormantPeripheralVisionAngle;
	float AlertSightRadius;
	float AlertHearingThreshold;
	float AlertLOSHearingThreshold;
	float AlertPeripheralVisionAngle;
	float AutoSuccessRangeFromLastSeenLocation;
	class UClass* HealthScalingTable;
	struct FName HealthScalingTableRow;
	class UClass* ControlResistanceScalingTable;
	struct FName ControlResistanceScalingTableRow;
	class UClass* DifficultyRatingTable;
	struct FName DifficultyRatingTableRow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantSpawnPoints : public TableRowBase
{
public:
	int BudgetPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationSlotsLoadout : public TableRowBase
{
public:
	TArray<struct AlterationSlot> AlterationSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationSlotRarity : public TableRowBase
{
public:
	Unknown RarityWeights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationSlotDefinition : public TableRowBase
{
public:
	struct FName InitTierGroup;
	TArray<struct FortItemQuantityPair> BaseRespecCosts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationGroup : public TableRowBase
{
public:
	Unknown RarityMapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationNamedExclusions : public TableRowBase
{
public:
	TArray<struct FString> ExclusionNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationIntrinsicMapping : public TableRowBase
{
public:
	struct FString NewAlteration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlterationMapping : public TableRowBase
{
public:
	struct FString NewAlteration;
	struct FString AdditionalAlteration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_AnimSetDrivenRandom : public AnimNode_RandomPlayer
{
public:
	struct GameplayTag RandomSlotName;
	class UClass* AnimSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_Flap : public AnimNode_SkeletalControlBase
{
public:
	TArray<struct SourceDriver> SourceDrives;
	struct BoneReference TargetBone;
	EComponentType TargetComponent;
	ESourceSelectionMode SelectionMode;
	bool bUseClamp;
	float TargetClampMin;
	float TargetClampMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_OrientationWarping : public AnimNode_SkeletalControlBase
{
public:
	float LocomotionAngle;
	struct OrientationWarpingSettings Settings;
	TArray<struct OrientationWarpingSpineBoneData> SpineBoneDataArray;
	float CachedDeltaTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_SlopeWarping : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference PelvisBone;
	struct BoneReference IKFootRootBone;
	TArray<struct SlopeWarpingFootDefinition> FeetDefinitions;
	TArray<struct SlopeWarpingFootData> FeetData;
	struct VectorRK4SpringInterpolator PelvisOffsetInterpolator;
	struct Vector GravityDir;
	struct Vector CustomFloorOffset;
	float CachedDeltaTime;
	struct Vector TargetFloorNormalWorldSpace;
	struct VectorRK4SpringInterpolator FloorNormalInterpolator;
	struct Vector TargetFloorOffsetLocalSpace;
	struct VectorRK4SpringInterpolator FloorOffsetInterpolator;
	float MaxStepHeight;
	bool bKeepMeshInsideOfCapsule;
	bool bPullPelvisDown;
	bool bUseCustomFloorOffset;
	bool bWasOnGround;
	bool bShowDebug;
	bool bFloorSmoothingInitialized;
	struct Vector ActorLocation;
	struct Vector GravityDirCompSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_QuadrupedSlopeWarping : public FortAnimNode_SlopeWarping
{
public:
	struct BoneReference SkeletonRootBone;
	struct BoneReference ArmsRootBone;
	struct BoneReference ArmsIKFootRootBone;
	TArray<struct SlopeWarpingFootDefinition> ArmsFeetDefinitions;
	int NumSpineBones;
	struct VectorRK4SpringInterpolator ArmsRootBoneOffsetInterpolator;
	TArray<struct SlopeWarpingFootData> ArmsFeetData;
	float MaxMovementDistBeforeNewTrace;
	bool bUseMovementComponentFloorInfoInsteadOfTraces;
	bool bOnlyAffectSkeletonRootBone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_ScaleCharacterBones : public AnimNode_Base
{
public:
	struct PoseLink PreScalePose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_ScaleHuskBones : public AnimNode_Base
{
public:
	struct PoseLink PreScalePose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_SpeedWarping : public AnimNode_SkeletalControlBase
{
public:
	struct BoneReference IKFootRootBone;
	TArray<struct SpeedWarpingFootDefinition> FeetDefinitions;
	TArray<struct SpeedWarpingFootData> FeetData;
	struct BoneReference PelvisBone;
	ESpeedWarpingAxisMode SpeedWarpingAxisMode;
	ESpeedWarpingAxisMode FloorNormalAxisMode;
	ESpeedWarpingAxisMode GravityDirAxisMode;
	float SpeedScaling;
	struct InputScaleBiasClamp SpeedScalingScaleBiasClamp;
	struct Vector ManualSpeedWarpingDir;
	struct Vector ManualFloorNormalInput;
	struct Vector ManualGravityDirInput;
	float PelvisPostAdjustmentAlpha;
	int PelvisAdjustmentMaxIter;
	struct VectorRK4SpringInterpolator PelvisAdjustmentInterp;
	bool bAdjustThighBonesRotation;
	bool bClampIKUsingFKLeg;
	bool bOrientSpeedWarpingAxisBasedOnFloorNormal;
	float CachedDeltaTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNode_WeightedLookAt : public AnimNode_LookAt
{
public:
	TArray<struct WeightedLookAtBoneWeightDefinition> BoneWeightsToApply;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MMRSpawningBracketBaseDataTableRow : public TableRowBase
{
public:
	int MMRBracketLow;
	int MMRBracketHigh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MMRSpawningBracketNPCDataTableRow : public MMRSpawningBracketBaseDataTableRow
{
public:
	float Skill;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaAIBotNameDataTableRow : public TableRowBase
{
public:
	struct FString Name;
	struct FString UniqueId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaAILootInfoDataTableRow : public TableRowBase
{
public:
	TArray<struct AILootInfoRowEntry> LootDroppingBehaviors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BiplaneAsyncOutPersistent : public FortVehicleOutPersistent
{
public:
	bool bIsEngineOn;
	bool bIsFlying;
	bool bAutoStartEngineInAir;
	bool bEngineStartIsBeingHeld;
	struct AileronRoll AileronRoll;
	struct FortRechargingActionTimer BoostAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BiplaneAsyncInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortAirVehicleConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GoatOutPersistent : public FortVehicleOutPersistent
{
public:
	struct Vector LeanPositionFR;
	struct Vector LeanPositionTargetFR;
	struct Vector LeanPositionBR;
	struct Vector LeanPositionTargetBR;
	struct Vector LeanPositionBL;
	struct Vector LeanPositionTargetBL;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GoaFInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortGoatVehicleConfigs;
	EPowerSlideState PowerSlideState;
	float AccumulatedPowerSlideBoostDiscrete;
	float TopSpeedCurrentMultiplier;
	float PushForceCurrentMultiplier;
	float AngularSpeedEnterPowerSlide;
	struct Vector LeanSocketPositionFR;
	float LeanImpulseScaleFR;
	struct Vector LeanSocketPositionBR;
	float LeanImpulseScaleBR;
	struct Vector LeanSocketPositionBL;
	float LeanImpulseScaleBL;
	float BounceForceFR;
	struct Vector BounceOffsetFR;
	float BounceForceBR;
	struct Vector BounceOffsetBR;
	float BounceForceBL;
	struct Vector BounceOffsetBL;

	// NOTE: Functions are not included into usmaps sadly :(
};

class JackalOutPersistent : public FortVehicleOutPersistent
{
public:
	bool bShouldCorrectYaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class JackalOutContinuous : public FortVehicleOutContinuous
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class JackalInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortJackalVehicleConfigs;
	bool bBoosting;
	float PendingJumpCharge;
	float FrontLateralFrictionRuntimeMultiplier;
	float TopSpeedCurrentMultiplier;
	float PushForceCurrentMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOverrideDataTableRow : public TableRowBase
{
public:
	struct FString Name;
	float Weight;
	TArray<struct OverrideTablePair> OverrideTableList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MMRSpawningBracketBotDataTableRow : public MMRSpawningBracketBaseDataTableRow
{
public:
	TArray<struct MMRPhaseSpawningDataTableInfo> PhaseSpawningItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SKPushVehicleInternalPersistent : public FortVehicleInternalPersistent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SKPushVehicleOutPersistent : public FortVehicleOutPersistent
{
public:
	float TotalBrakingDelta;
	float StandingInPlaceSteerAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SKPushVehicleInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* SKPushVehicleConfigs;
	bool bIsDriverTargetting;
	bool bPedalForceCooldown;
	bool bConstrainedRotation;
	bool bIsCoastingOrDismounting;
	ECoastState CurrentPhysicsCoastState;
	ECoastState CurrentAnimCoastState;
	float BrakeAboveTopSpeedDelta;
	struct Vector PushForceRelativeLocation;
	float ForwardForceTractionScale;
	float TopSpeedCurrentMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBadgeScoringData : public TableRowBase
{
public:
	int ScoreAwarded;
	int MissionPoints;
	EStatCategory ScoreCategory;
	int ScoreThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BiplaneDerived : public FortVehicleDerived
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BiplaneSimAux : public VehicleSimAux
{
public:
	bool bIsEngineOn;
	bool bIsFlying;
	bool bAutoStartEngineInAir;
	bool bEngineStartIsBeingHeld;
	float PitchAlphaNoPilot;
	float TurnAlphaNoPilot;
	float RollAlphaNoPilot;
	float AileronRollAlphaStart;
	bool bHadPassengers;
	float NoPassengerStallTimerStart;
	float StuckTimerStart;
	bool bRollRight;
	bool bRollLeft;
	float AileronRollDoubleClickTimerStart;
	struct AileronRoll AileronRoll;
	struct FortRechargingActionTimer BoostAction;
	float VehicleFuelPercent;
	bool bIsStallingFromAltitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotBuildingContainerBlacklistDataTableRow : public TableRowBase
{
public:
	class UClass* BlacklistedActorClass;
	bool bIsBlacklisted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotCosmeticItemSetDataTableRow : public TableRowBase
{
public:
	struct PrimaryAssetId CharacterAssetId;
	struct PrimaryAssetId GliderAssetId;
	struct PrimaryAssetId SkyDiveContrailAssetId;
	struct PrimaryAssetId BackpackAssetId;
	struct PrimaryAssetId PickaxeAssetId;
	float Weight;
	struct GameplayTag SetTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLimitedAvailabilityBotCosmeticItemSetDataTableRow : public FortBotCosmeticItemSetDataTableRow
{
public:
	struct DateTime StartDate;
	struct DateTime EndDate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotCosmeticItemDataTableRow : public TableRowBase
{
public:
	struct PrimaryAssetId PrimaryAssetId;
	float Weight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLimitedAvailabilityBotCosmeticItemDataTableRow : public FortBotCosmeticItemDataTableRow
{
public:
	struct DateTime StartDate;
	struct DateTime EndDate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotCosmeticLibraryWeightRegionOverrideDataTableRow : public TableRowBase
{
public:
	struct FString RegionId;
	struct ScalableFloat RegionWeights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotItemDataTableRow : public TableRowBase
{
public:
	struct GameplayTag Tag;
	bool bIsSupported;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCalendarEventInventoryTransformData : public TableRowBase
{
public:
	struct FName CalendarChannelName;
	struct FName CalendarEventName;
	TArray<struct FName> AllowedProfileTypes;
	struct GameplayTagContainer PrerequisiteHomebaseProperties;
	struct TSoftClassPtr<UObject> PrerequisiteQuest;
	struct DataTableRowHandle PrerequisiteObjective;
	TArray<struct TSoftClassPtr<UObject>> PrerequisiteIncompleteOrUngrantedQuests;
	TArray<struct TSoftClassPtr<UObject>> PrerequisiteUnownedItems;
	TArray<struct TSoftClassPtr<UObject>> QuestsOnlyActiveDuringEvent;
	TArray<struct FortItemQuantityPair> ItemsToGrant;
	TArray<struct FortHiddenRewardQuantityPair> ItemsToGrantByTemplate;
	TArray<struct RecipeDataTableRowHandleQuantityData> ConversionRecipesToRunOnEventStart;
	TArray<struct RecipeDataTableRowHandleQuantityData> ConversionRecipesToRunAfterEvent;
	TArray<struct FortItemQuantityPair> ItemsToRemoveAfterEvent;
	TArray<struct FortHiddenRewardQuantityPair> ItemsToRemoveAfterEventByTemplate;
	struct TSoftClassPtr<UObject> EventCurrency;
	float EventCurrencyConversionFactor;
	Unknown MetaData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurrencyData : public TableRowBase
{
public:
	struct FString TemplateName;
	int MaxStackSize;
	int MaxNumStacks;
	struct FString ProfileType;
	struct FString Platform;
	bool bPrivate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProceduralCatalogCostPriceFactor : public TableRowBase
{
public:
	float PriceFactor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GlyphRewardInfo : public TableRowBase
{
public:
	class UClass* BundleDef;
	class UClass* QuestDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookDirectPurchaseData : public TableRowBase
{
public:
	TArray<struct FortItemQuantityPair> PurchaseCosts;
	struct GameplayTagContainer PurchaseCatalysts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPageCategoryTableRow : public TableRowBase
{
public:
	struct FText Name;
	int SortPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPageData : public TableRowBase
{
public:
	struct FText Name;
	struct FName CategoryId;
	int SortPriority;
	struct FName ProfileId;
	TArray<struct FName> SectionRowNames;
	struct FortRewardInfo Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSectionData : public TableRowBase
{
public:
	struct FText Name;
	TArray<struct FName> SlotRowNames;
	struct FortRewardInfo Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotSourceData : public TableRowBase
{
public:
	struct FText Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotXPWeightData : public TableRowBase
{
public:
	float ConstantWeight;
	float RarityWeight;
	float PremiumTierWeight;
	float ItemLevelWeight;
	float ItemRatingWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookXPData : public TableRowBase
{
public:
	int XpToNextLevel;
	int TotalXpToGetToThisLevel;
	struct FortRewardInfo Rewards;
	bool bIsMajorReward;
	bool bAutoOpenRewardCardPacks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurfaceDamageRatioStats : public TableRowBase
{
public:
	struct FName Default;
	struct FName Wood;
	struct FName Stone;
	struct FName Metal;
	struct FName HumanEntity;
	struct FName AIEntity;
	struct FName Explosive;
	struct FName WeakSpot;
	struct FName Objective;
	struct FName WeakSpot_Wood;
	struct FName WeakSpot_Stone;
	struct FName WeakSpot_Metal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurfaceDamageRatioByAffiliationStats : public TableRowBase
{
public:
	float Friendly;
	float Neutral;
	float Hostile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConstructorBaseClassData : public BuildingPropClassData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkydiveFeedbackData : public FortChangeMonitoringStruct
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversionControlKeyCosts : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> RequiredItem;
	struct FortConversionTierData Common;
	struct FortConversionTierData Uncommon;
	struct FortConversionTierData Rare;
	struct FortConversionTierData Epic;
	struct FortConversionTierData Legendary;
	struct FortConversionTierData Mythic;
	struct FortConversionTierData Transcendent;
	struct FortConversionTierData Unattainable;
	struct GameplayTagContainer RequiredCatalysts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CosmeticFilterTagDataRow : public TableRowBase
{
public:
	TArray<struct FText> SearchQueries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CosmeticMarkupTagDataRow : public TableRowBase
{
public:
	struct GameplayTag Tag;
	struct FText DisplayName;
	struct FText HelpText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CosmeticSetDataRow : public TableRowBase
{
public:
	struct GameplayTag Tag;
	struct FText DisplayName;
	struct FText Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocketVariantDef : public BaseVariantDef
{
public:
	TArray<struct SocketTransformVariant> SocketTransforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativeToolClasses : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ClassPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativeToolObjectInteractionRow : public TableRowBase
{
public:
	class UClass* AllowedClasses;
	class UClass* ForbiddenClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeTagCategory : public TableRowBase
{
public:
	struct FText Name;
	struct TSoftClassPtr<UObject> Icon;
	float SortPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeTag : public TableRowBase
{
public:
	struct FText Name;
	struct FName Category;
	struct TSoftClassPtr<UObject> Icon;
	float SortPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieManagerComponentEntry : public TableRowBase
{
public:
	bool bIsActive;
	ECurieManagerComponentPriority Priority;
	class UClass* ManagerType;
	class UClass* Config;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieEntityStateDefinition : public CurieEntityStateDefinitionBase
{
public:
	struct GameplayTag GameplayCue;
	EFortCurieNativeFXType NativeVFXType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieElementDefinition : public CurieElementDefinitionBase
{
public:
	float MaxIntensity;
	float IntensityDecayRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieMaterialDefinition : public CurieMaterialDefinitionBase
{
public:
	bool bCanBeElectrocuted;
	bool bConductsElectricity;
	bool bFireConsumesFuel;
	bool bUsesFirePropManager;
	bool bTrackGridFireStatus;
	bool bShouldIgniteLandscapeGrass;
	bool bHandlesOverlapsDirectly;
	float DefaultWaterContent;
	float MinWaterContent;
	float MaxWaterContent;
	float WaterContentStabilizationRate;
	float DefaultFuelContent;
	float MinFuelContent;
	float MaxFuelContent;
	float FuelContentStabilizationRate;
	float FirePropagationCost;
	int ElectricityPropagationLimitIncrease;
	TArray<struct FortCurieMaterialElementIntensityDecayMultiplier> ElementDecayMultipliers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DevFortPartyMemberRepData : public FortPartyMemberRepData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionGenerationElementCostAndAvailabilityRow : public TableRowBase
{
public:
	class UClass* AvailabilityCurveTable;
	struct FName AvailabilityCurveTableRow;
	float MinCost;
	float MaxCost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCriteriaRequirementData : public TableRowBase
{
public:
	struct GameplayTag RequiredTag;
	bool bGlobalMod;
	float ModValue;
	bool bRequireRarity;
	EFortRarity RequiredRarity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TagQueryTableRow : public TableRowBase
{
public:
	struct GameplayTagQuery TagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayerClampInfo : public TableRowBase
{
public:
	TArray<struct AttributeClamp> AttributeClamps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PossessPropClasses : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ClassPath;
	float PreviewScale;
	struct Rotator PossessedRotation;
	struct Vector PossessedScale;
	struct FText CategoryLabelText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpyTechWeaponUpgradeRow : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> UpgradedItemToGrant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GrantItemMultiData : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ItemToGrant;
	struct ScalableFloat NumberOfItemsToGrant;
	bool bRemoveExistingBeforeGrant;
	bool bRequiresPreviousInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameRewardOverridesInfo : public TableRowBase
{
public:
	struct FString MissionName;
	struct FString OverrideRewardsTag;
	int LootLevel;
	struct FString LootTierGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ExpeditionSlot : public TableRowBase
{
public:
	struct GameplayTag SlotTag;
	struct FString LootTierGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseNodeGameplayEffectDataTableRow : public TableRowBase
{
public:
	struct GameplayAttribute Attribute;
	EGameplayModOp Operation;
	float Magnitude;
	struct GameplayTagContainer ApplicationRequiredTagsContainer;
	struct GameplayTagContainer RequiredSourceTagsContainer;
	struct GameplayTagContainer RequiredTargetTagsContainer;
	struct GameplayTagContainer GrantedTagsContainer;
	struct GameplayTagContainer IgnoreSourceTagsContainer;
	struct GameplayTagContainer AssetTagsContainer;
	int AssociatedGEIdx;
	int AssociatedModifierIdx;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseBannerColorData : public TableRowBase
{
public:
	struct FName ColorKeyName;
	struct FName CategoryRowName;
	int SubCategoryGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseBannerIconData : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> SmallImage;
	struct TSoftClassPtr<UObject> LargeImage;
	struct FName CategoryRowName;
	struct FText DisplayName;
	struct FText DisplayDescription;
	bool bFullUsageRights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseBannerCategoryData : public TableRowBase
{
public:
	struct FText CategoryDisplayName;
	int SortPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventory_SaveEntryInt32 : public FortInventory_SaveEntryAttributeBase
{
public:
	int Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftGiver : public FortGiftingInfo
{
public:
	int NumItemsGiven;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemToQuestData : public TableRowBase
{
public:
	struct FString ItemTemplateID;
	struct FString QuestTemplateId;
	EFortQuestState QuestGrantState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLootLevelData : public TableRowBase
{
public:
	struct FName Category;
	int LootLevel;
	int MinItemLevel;
	int MaxItemLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLootPackageData : public TableRowBase
{
public:
	struct FName LootPackageID;
	float Weight;
	struct FName NamedWeightMult;
	TArray<struct FName> PotentialNamedWeights;
	int Count;
	int LootPackageCategory;
	struct GameplayTagContainer GameplayTags;
	struct FName RequiredTag;
	struct FString LootPackageCall;
	struct TSoftClassPtr<UObject> ItemDefinition;
	struct FString PersistentLevel;
	int MinWorldLevel;
	int MaxWorldLevel;
	bool bAllowBonusDrops;
	struct FString Annotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLootTierData : public TableRowBase
{
public:
	struct FName TierGroup;
	float Weight;
	ELootQuotaLevel QuotaLevel;
	int LootTier;
	int MinWorldLevel;
	int MaxWorldLevel;
	struct FString StreakBreakerCurrency;
	int StreakBreakerPointsMin;
	int StreakBreakerPointsMax;
	int StreakBreakerPointsSpend;
	struct FName LootPackage;
	struct FName LootPreviewPackage;
	float NumLootPackageDrops;
	TArray<int> LootPackageCategoryWeightArray;
	TArray<int> LootPackageCategoryMinArray;
	TArray<int> LootPackageCategoryMaxArray;
	struct GameplayTagContainer GameplayTags;
	struct GameplayTagContainer RequiredGameplayTags;
	bool bAllowBonusLootDrops;
	struct FString Annotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MaterialCacheSettings : public TableRowBase
{
public:
	int bDisable;
	struct PerPlatformInt PlatformMaxCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeatballInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortMeatballVehicleConfigs;
	float TopSpeedCurrentMultiplier;
	float PushForceCurrentMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshRegionLockData_String : public MeshRegionLockData_Base
{
public:
	struct FString Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshRegionLockData_DateTime : public MeshRegionLockData_Base
{
public:
	struct DateTime Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshRegionLockData_Int64 : public MeshRegionLockData_Base
{
public:
	int64_t Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshRegionLockData_Int : public MeshRegionLockData_Base
{
public:
	int Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshRegionLockData_Float : public MeshRegionLockData_Base
{
public:
	float Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshRegionLockData_Bool : public MeshRegionLockData_Base
{
public:
	bool Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMigrationDataTableRow : public TableRowBase
{
public:
	struct FString OldItemTemplate;
	struct FString NewItemTemplate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameTeamScoreData : public MinigameScoreData
{
public:
	byte Team;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameSoloScoreData : public MinigameScoreData
{
public:
	class UClass* PlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameHighScoreEntryRow : public TableRowBase
{
public:
	struct FString PlayerName;
	float Score;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameHighScoreRow : public TableRowBase
{
public:
	class UClass* HighScoresTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameScoreboardPlayerRow : public MingiameScoreboardRow
{
public:
	class UClass* PlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameScoreboardBucketRow : public MingiameScoreboardRow
{
public:
	int Standing;
	int BucketIndex;
	TArray<struct MinigameScoreboardPlayerRow> PlayerRows;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMinigameTeamStats : public FortMinigameGroupStats
{
public:
	byte Team;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionAlertData : public TableRowBase
{
public:
	struct FName CategoryRowName;
	struct FName SpreadRowName;
	struct FString RequiredEventFlag;
	bool bOnlyUsedForSpreading;
	int MinimumTileDifficulty;
	int MaximumTileDifficulty;
	TArray<struct FString> RestrictedMissionGens;
	struct FString LootTierGroup;
	struct FString ModifierTierGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionAlertSpreadData : public TableRowBase
{
public:
	float ChanceToSpread;
	int TotalChancesToSpread;
	int MaxNumTilesToSpreadTo;
	int SpreadInterval;
	struct FName MissionAlertRowName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionAlertCategoryData : public TableRowBase
{
public:
	struct FName CategoryRowName;
	int Priority;
	bool MissionAlertRepeatable;
	struct FString Timer;
	struct GameplayTagContainer CategoryTagsContainer;
	struct GameplayTagContainer VisualizationTagsContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OctopusOutPersistent : public FortVehicleOutPersistent
{
public:
	struct Quat ShellRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OctopusOutContinuous : public FortVehicleOutContinuous
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class OctopusInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortOctopusVehicleConfigs;
	TArray<struct SphericalDriveContact> CachedContactPoints;
	float BoostForce;
	float MaxVerticalBoostForce;
	float BoostSpeedKmh;
	struct Vector TowhookAimDir;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OutpostItemUpgradeData : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ItemDefinition;
	int ItemLevel;
	struct FString RequiredItems;
	struct FString RequiredAccountItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotPassiveHealerActivityDataTableRow : public TableRowBase
{
public:
	struct PrimaryAssetId EmotePrimaryAssetId;
	struct FText InteractText;
	TArray<struct FText> GreetingTexts;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerDuringPhysicsTickFunction : public ActorTickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPipTest : public TableRowBase
{
public:
	class UClass* MediaPlayer;
	class UClass* StreamMediaSource;
	class UClass* WidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerPawnStats : public FortPawnStats
{
public:
	float MaxJumpTime;
	float MaxStamina;
	float StaminaRegenRate;
	float StaminaRegenDelay;
	float SprintingStaminaExpenditureRate;
	struct FName PersonalVehicleFallingDamageTableRow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnalyticsAnswerFreeFormText : public FortPlayerSurveyAnalyticsAnswerBase
{
public:
	struct FString AnswerText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnalyticsAnswerMultipleSelection : public FortPlayerSurveyAnalyticsAnswerBase
{
public:
	TArray<struct FortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer> AnswerList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnalyticsAnswerMultipleChoice : public FortPlayerSurveyAnalyticsAnswerBase
{
public:
	int AnswerIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnswerFreeFormText : public FortPlayerSurveyAnswerBase
{
public:
	struct FString AnswerText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnswerMultipleChoice : public FortPlayerSurveyAnswerBase
{
public:
	int AnswerIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnswerMultipleSelection : public FortPlayerSurveyAnswerBase
{
public:
	TArray<struct FortPlayerSurveyAnswerMultipleSelectionSingleAnswer> AnswerList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NamedWeightTableRow : public TableRowBase
{
public:
	struct QueryName QueryName;
	float Weight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistOptionStringValue : public PlaylistOptionValue
{
public:
	struct FString Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestAchievementTableRow : public TableRowBase
{
public:
	EFortQuestState QuestState;
	int XboxAchievementID;
	int PS4TrophyID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTagToCategoryDataRow : public TableRowBase
{
public:
	struct FText DisplayName;
	struct FText AllChallengesText;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTagToIconDataRow : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTagToLocationDataRow : public TableRowBase
{
public:
	struct Vector WorldLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestRewardTableRow : public TableRowBase
{
public:
	struct FString QuestTemplateId;
	struct FName TemplateId;
	int Quantity;
	bool Hidden;
	bool Feature;
	bool Selectable;
	bool Exportable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestRewardTableCacheData : public FortQuestRewardTableRow
{
public:
	struct TSoftClassPtr<UObject> ItemPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SharedQuestRow : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> Quest;
	float DefaultWeight;
	TArray<struct FString> PlaylistNames;
	TArray<float> PlaylistWeights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapPageCosmetics : public TableRowBase
{
public:
	bool bUseNodeArrowColorOverride;
	struct SlateColor NodeArrowColorOverride;
	TArray<struct FortQuestMapCosmetic> CosmeticList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapPage : public TableRowBase
{
public:
	struct FText PageTitle;
	int PageIndex;
	int ChapterPageCount;
	struct FString QuestEventFlag;
	EFrontEndCamera CameraMode;
	class UClass* QuestNodeLayout;
	TArray<struct FortQuestMapNode> QuestList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestObjectiveStatTableRow : public TableRowBase
{
public:
	EFortQuestObjectiveStatEvent Type;
	struct GameplayTagContainer TargetTagContainer;
	struct GameplayTagContainer SourceTagContainer;
	struct GameplayTagContainer ContextTagContainer;
	struct FString Condition;
	struct FString TemplateId;
	TArray<struct FString> AlternateTemplateIds;
	bool bIsCached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestObjectiveStatXPTableRow : public TableRowBase
{
public:
	EFortQuestObjectiveStatEvent Type;
	struct GameplayTagContainer TargetTags;
	struct GameplayTagContainer SourceTags;
	struct GameplayTagContainer ContextTags;
	struct GameplayTagContainer ExcludeContextTags;
	struct FString Condition;
	int CountThreshhold;
	int MaxCount;
	struct PrimaryAssetId AccoladePrimaryAssetId;
	bool bOnceOnly;
	EFortXPPropagationRule XPPropagationRule;
	bool bIsCached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestPoolTableRow : public TableRowBase
{
public:
	struct FString PrerequisiteCompletedQuests;
	struct FString PrerequisiteNotCompletedQuests;
	struct FString PrerequisiteEventChannel;
	struct FString PrerequisiteEventName;
	int RefreshIntervalHours;
	struct FString RefreshEvent;
	struct FString LootTierGroup;
	int LootTier;
	int RerollLimit;
	bool bGlobalPull;
	bool bRollOnActivation;
	bool bDeleteActiveOnRefresh;
	int MaxActive;
	int DaysToKeepClaimed;
	int DaysToKeepCompleted;
	int MaxUnclaimed;
	struct FString LockoutName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayServerHighlights : public BaseReplayEventInfo
{
public:
	TArray<struct MinimalHighlightShot> Shots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayDataSinglePlayerMove : public BaseReplayEventInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayEliminationEventInfo : public BaseReplayEventInfo
{
public:
	struct Transform EventLocation;
	struct Transform InstigatorLocation;
	struct UniqueNetIdRepl Victim;
	struct UniqueNetIdRepl Instigator;
	EDeathCause DeathCause;
	bool bDBNO;
	EFortReplayEventType EventType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayActorsPosition : public BaseReplayEventInfo
{
public:
	TArray<struct ReplayDataActorPosition> Chests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayTimecodeEventInfo : public BaseReplayEventInfo
{
public:
	int64_t UTCTimecode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayZoneEventInfo : public BaseReplayEventInfo
{
public:
	struct Vector ZoneCenter;
	float ZoneRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayTeamFlightEventInfo : public BaseReplayEventInfo
{
public:
	struct Vector StartLocation;
	struct Rotator StartRotation;
	struct Vector EndLocation;
	byte IndexNum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplayDataPlayerMoves : public BaseReplayEventInfo
{
public:
	Unknown PlayerPersistentIdToMoveSamples;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRespawnDataRow : public TableRowBase
{
public:
	struct LinearColor FadeColor;
	float FadeOutTime;
	float FadeInTime;
	float WaitTime;
	float SafetyTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClientEventsState : public FortRotationalContentEventsState
{
public:
	int SeasonNumber;
	struct FString SeasonTemplateId;
	float MatchXpBonusPoints;
	struct DateTime SeasonBegin;
	struct DateTime SeasonEnd;
	struct DateTime SeasonDisplayedEnd;
	struct DateTime WeeklyStoreEnd;
	struct DateTime DailyStoreEnd;
	struct DateTime StwDailyStoreEnd;
	struct DateTime StwEventStoreEnd;
	struct DateTime StwWeeklyStoreEnd;
	Unknown SectionStoreEnds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSphericalVehicleOutPersistent : public FortVehicleOutPersistent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSphericalVehicleOutContinuous : public FortVehicleOutContinuous
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSphericalVehicleInPersistent : public FortVehicleInPersistent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurvivorNameData : public TableRowBase
{
public:
	struct FText Name;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCompetitiveIdentityInfo : public TableRowBase
{
public:
	struct FString RegionId;
	struct FText DisplayName;
	struct TSoftClassPtr<UObject> FlagAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownScoringRuleInfo : public TableRowBase
{
public:
	struct FName DisplayInfoId;
	int PointValue;
	int ScoreRequirement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrackClassData : public BuildingPropClassData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrapStats : public FortBaseWeaponStats
{
public:
	float ArmTime;
	float FireDelay;
	float DamageDelay;
	int PlacementScore;
	int ActivationScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRealEstatePlotItemTableRow : public TableRowBase
{
public:
	struct PrimaryAssetId RealEstatePlotItemId;
	bool bIncluded;
	float SortPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeItemListData : public TableRowBase
{
public:
	ECreativeItemCategory Category;
	struct PrimaryAssetId ItemPrimaryAssetId;
	int Count;
	float SortPriority;
	bool bIncluded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNamedWeightRow : public TableRowBase
{
public:
	Unknown NamedWeightMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLoginReward : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ItemDefinition;
	int ItemCount;
	struct FText Description;
	bool bIsMajorReward;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CostOnlyRecipe : public TableRowBase
{
public:
	TArray<struct FortItemQuantityPair> RecipeCosts;
	struct GameplayTagContainer RequiredCatalysts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VehicleTrickSequenceBasics : public TableRowBase
{
public:
	float TrickStartTime;
	float TrickStartDistance;
	float TrickStartHeight;
	float TrickPointsPerAirSecond;
	float TrickPointsPerAirDistance;
	float TrickPointsPerAirHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVolumeManagerBlackListObjects : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ObjectPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVolumeManagerBlackListClasses : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ClassPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponDurabilityByRarityStats : public TableRowBase
{
public:
	int Common;
	int Uncommon;
	int Rare;
	int Epic;
	int Legendary;
	int Mythic;
	int Transcendent;
	int Unattainable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeleeWeaponStats : public FortBaseWeaponStats
{
public:
	float RangeVSEnemies;
	float ConeYawAngle;
	float ConePitchAngle;
	float SwingPlaySpeed;
	float SwingTime;
	float BuildingConeAngle;
	float BuildingConeAnglePitch;
	float RangeVSBuildings2D;
	float RangeVSBuildingsZ;
	float RangeVSWeakSpots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRangedWeaponStats : public FortBaseWeaponStats
{
public:
	float Spread;
	float SpreadDownsights;
	float StandingStillSpreadMultiplier;
	float AthenaCrouchingSpreadMultiplier;
	float AthenaJumpingFallingSpreadMultiplier;
	float AthenaSprintingSpreadMultiplier;
	float MinSpeedForSpreadMultiplier;
	float MaxSpeedForSpreadMultiplier;
	float SpreadDownsightsAdditionalCooldownTime;
	float HeatX1;
	float HeatY1;
	float HeatX2;
	float HeatY2;
	float HeatX3;
	float HeatY3;
	float HeatXScale;
	float HeatYScale;
	float CoolX1;
	float CoolY1;
	float CoolX2;
	float CoolY2;
	float CoolX3;
	float CoolY3;
	float CoolXScale;
	float CoolYScale;
	float PerfectAimCooldown;
	int BulletsPerCartridge;
	float FiringRate;
	float ROFScale;
	float BurstFiringRate;
	float FiringRateDownsightsMultiplier;
	float AutofireRange;
	float AutofireAcquisitionDelay;
	float AutofireDBNOAcquisitionDelay;
	float AutofireAcquisitionRechargeTime;
	float AutofireReleaseTime;
	float AutofireCooldown;
	float RecoilVert;
	float RecoilVertScale;
	float RecoilVertScaleGamepad;
	float VertRecoilDownChance;
	float RecoilHoriz;
	float RecoilHorizScale;
	float RecoilHorizScaleGamepad;
	float RecoilInterpSpeed;
	float RecoilRecoveryInterpSpeed;
	float RecoilRecoveryDelay;
	float RecoilRecoveryFraction;
	float RecoilDownsightsMultiplier;
	float AthenaRecoilMagnitudeMin;
	float AthenaRecoilMagnitudeMax;
	float AthenaRecoilMagnitudeScale;
	float AthenaRecoilAngleMin;
	float AthenaRecoilAngleMax;
	float AthenaRecoilRollMagnitudeMin;
	float AthenaRecoilRollMagnitudeMax;
	float AthenaRecoilInterpSpeed;
	float AthenaRecoilRecoveryInterpSpeed;
	float AthenaRecoilDownsightsMultiplier;
	float AthenaRecoilHipFireMultiplier;
	float AthenaAimAssistRange;
	float ADSTransitionInTime;
	float ADSTransitionOutTime;
	int MaxSpareAmmo;
	int BulletsPerTracer;
	float AIDelayBeforeFiringMin;
	float AIDelayBeforeFiringMax;
	float AIFireDurationMin;
	float AIFireDurationMax;
	float AIMinSpreadDuration;
	float AIMaxSpreadDuration;
	float AIDurationSpreadMultiplier;
	float AIAdditionalSpreadForTargetMovingLaterally;
	float AIAthenaHearFiringNoiseRange;
	float EQSDensity;
	float MinApproachRange;
	float MinActualRange;
	float MinPreferredRange;
	float MinPreferredRangeEQS;
	float MaxPreferredRangeEQS;
	float MaxPreferredRange;
	float MaxActualRange;
	float MaxApproachRange;
	float RangeToAutomaticallyAddEnemyPawnGoals;
	float SweepRadius;
	float AutoReloadDelayOverride;
	float OverheatingMaxValue;
	float OverheatHeatingValue;
	float FullChargeOverheatHeatingValue;
	float OverheatingCoolingValue;
	float HeatingCooldownDelay;
	float OverheatedCooldownDelay;
	bool bCoolOverheatWhileCharging;
	float FortHomingTurnSpeedMin;
	float FortHomingTurnSpeedMax;
	float FortHomingTimeUntilMaxTurnSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayerAttributeClampRow : public TableRowBase
{
public:
	struct GameplayAttribute Attribute;
	EPlayerAttributeClampType ClampType;
	float ClampValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WeaponUpgradeItemRow : public TableRowBase
{
public:
	class UClass* CurrentWeaponDef;
	class UClass* UpgradedWeaponDef;
	EFortWeaponUpgradeCosts WoodCost;
	EFortWeaponUpgradeCosts MetalCost;
	EFortWeaponUpgradeCosts BrickCost;
	EFortWeaponUpgradeDirection Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLevelUpData : public TableRowBase
{
public:
	int Level;
	int XpToNextLevel;
	int XpTotal;
	int CurrencyReward;
	struct FString ChaseRewardTemplateId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemPromotionCosts : public TableRowBase
{
public:
	TArray<struct FortItemQuantityPair> PromotionCosts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TieredWaveCollectionLootSet : public TableRowBase
{
public:
	TArray<struct TieredWaveCollectionLootSetData> LootSetData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TieredModifierSet : public TableRowBase
{
public:
	TArray<struct TieredModifierSetData> ModifierData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TieredWaveSet : public TableRowBase
{
public:
	TArray<struct TieredWaveSetData> WaveData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TieredWaveSetCollection : public TableRowBase
{
public:
	TArray<struct TieredWaveSetCollectionData> CollectionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ScoreMultiplierRow : public TableRowBase
{
public:
	float CombatMultiplier;
	float BuildingMultiplier;
	float UtilityMultiplier;
	float BadgeMultiplier;
	int MonsterKills;
	int MonsterDamagePoints;
	int PlayerKills;
	int WoodGathered;
	int StoneGathered;
	int MetalGathered;
	int Deaths;
	int BluGloActivity;
	int BuildingsBuilt;
	int BuildingsBuilt_Wood;
	int BuildingsBuilt_Stone;
	int BuildingsBuilt_Metal;
	int BuildingsUpgraded_Wood2;
	int BuildingsUpgraded_Wood3;
	int BuildingsUpgraded_Stone2;
	int BuildingsUpgraded_Stone3;
	int BuildingsUpgraded_Metal2;
	int BuildingsUpgraded_Metal3;
	int BuildingsDestroyed;
	int Repair_Wood;
	int Repair_Stone;
	int Repair_Metal;
	int FlagsCaptured;
	int FlagsReturned;
	int ContainersLooted;
	int CraftingPoints;
	int TrapPlacementPoints;
	int TrapActivationPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostMaxPhoenixLevelRewardData : public TableRowBase
{
public:
	bool bIsMajorReward;
	TArray<struct FortRewardQuantityPair> VisibleReward;
	struct FString EventTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPhoenixLevelRewardData : public TableRowBase
{
public:
	int TotalRequiredXP;
	bool bIsMajorReward;
	TArray<struct FortRewardQuantityPair> VisibleReward;
	TArray<struct FortRewardQuantityPair> HiddenRewards;
	struct FString EventTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostMaxAccountLevelRewardData : public TableRowBase
{
public:
	TArray<struct FortRewardQuantityPair> Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseRatingDifficultyMappingData : public TableRowBase
{
public:
	int Difficulty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIronCityDifficultyData : public TableRowBase
{
public:
	int DifficultyLevel;
	int LootLevel;
	struct FName SuggestedStatClamp;
	struct FString MissionRewards;
	struct GameplayTag RewardBadgeTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponAlterationRarityMappingData : public TableRowBase
{
public:
	struct FString SlotRarityValues;
	struct FString LowSlotRarityValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLevelUpDataV2 : public TableRowBase
{
public:
	int XP;
	int DifficultyLevel;
	float XPDisplayMultiplier;
	TArray<struct FortRewardQuantityPair> Rewards;
	int RestXPCap;
	int RestXPRechargeRate;
	int BoostXPPerConsumable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortKeepAmmoStash : public TableRowBase
{
public:
	int Max1;
	int Cooldown1;
	int Max2;
	int Cooldown2;
	int Max3;
	int Cooldown3;
	int Max4;
	int Cooldown4;
	int PickupTier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortKeepItemGroup : public TableRowBase
{
public:
	int Items;
	int MaxTier;
	int BaseLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortKeepResourceGroup : public TableRowBase
{
public:
	struct FName Container;
	int ItemCount;
	struct FString ResourceName;
	struct TSoftClassPtr<UObject> FullPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NPCDynamicServiceRow : public TableRowBase
{
public:
	struct GameplayTag NPC;
	float Chance;
	struct GameplayTag ServiceTag;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NPCQuestRow : public TableRowBase
{
public:
	struct GameplayTag NPC;
	struct TSoftClassPtr<UObject> Quest;
	float Weight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrackedObjectCostOverrideListData : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> ObjectPtr;
	struct TSoftClassPtr<UObject> ClassPtr;
	TArray<struct VersionedCostOverride> Overrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrackedObjectListData : public TableRowBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActorTrackerActorExitContext : public ActorTrackerBaseContext
{
public:
	class UClass* ExitingActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActorTrackerActorEnteredContext : public ActorTrackerBaseContext
{
public:
	class UClass* EnteredActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActorTrackerInitialScanContext : public ActorTrackerBaseContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class StatNamesToTrack : public TableRowBase
{
public:
	struct FName StatName;
	EStatRecordingPeriod Period;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PawnSample : public BaseSample
{
public:
	struct Rotator Rotation;
	float Health;
	float Shield;
	bool bIsJumpingOrFalling;
	bool bIsInVehicle;
	bool bIsParachuteOpen;
	bool bIsDBNO;
	bool bIsDead;
	bool bIsSwimming;
	int16_t POITag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DeathEvent : public BaseSample
{
public:
	struct UniqueNetIdRepl Instigator;
	struct UniqueNetIdRepl Victim;
	bool bIsDBNO;
	bool bWasDBNOOnDeath;
	EDeathCause DeathCause;
	float DeathDistance;
	struct PawnSample PawnSampleBeforeDeath;
	struct GameplayTagContainer DeathTags;
	struct GameplayTagContainer VictimTags;
	struct GameplayTagContainer KillerTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameLogPawnSample : public GameLogPlayerSampleBase
{
public:
	struct PawnSample TheSample;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildEvent : public BaseSample
{
public:
	bool bIsEdit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameLogBuildSample : public GameLogPlayerSampleBase
{
public:
	struct BuildEvent TheSample;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StormSample : public BaseSample
{
public:
	float Radius;
	bool bIsValid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayerMetaInfo : public BaseSample
{
public:
	int MatchPlacement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameLogPlayerMetaSample : public GameLogPlayerSampleBase
{
public:
	struct PlayerMetaInfo TheSample;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayerDancePartySample : public BaseSample
{
public:
	struct UnicornDancePartyInfo DancePartyInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameLogDancePartySample : public GameLogPlayerSampleBase
{
public:
	struct PlayerDancePartySample TheSample;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility : public GameplayAbility
{
public:
	EFortGameplayAbilityActivation ActivationType;
	struct FortGameplayEffectContainer EffectContainers;
	TArray<struct FortGameplayEffectContainer> GameplayEffectContainers;
	Unknown DynamicGameplayEffectContainers;
	struct GameplayTagContainer OwnerPreviewImageOverrideTags;
	class UClass* ProjectileClass;
	struct DataTableRowHandle DamageStatHandle;
	TArray<struct FortAbilityCost> AbilityCosts;
	bool bShowWidgetForCosts;
	bool bApplyingCostsEnabled;
	struct ScalableFloat ExplicitCooldownDuration;
	struct GameplayTagContainer ExplicitCooldownTags;
	struct GameplayTagContainer ExplicitCooldownAssetTags;
	bool bStartWithCooldown;
	bool bPersistOnDeath;
	bool bDisableMoveCombining;
	bool bIgnoreClientActivationAttempts;
	bool bStopsAIBehaviorLogic;
	bool bStopsAIMovement;
	bool bStopsRVOAvoidance;
	bool bForceNormalAILOD;
	EFortAILODLevel MinimumRequiredAILODLevel;
	bool bRelevantForAIDespawning;
	bool bUseTetheredPawnAsInstigator;
	bool bAcceptTargetActorVehicleForCanHitTests;
	bool bUseAIFireLocationAndRotation;
	EFortAIWeaponUsage AIWeaponUsage;
	struct GameplayTag WeaponTestApplicationTag;
	bool bVerifyFireOffsetIsNotObstructedByWorldGeometry;
	bool bCanHitBallisticTestsOnlyTestIndesructiblesWhileFalling;
	struct Vector FireOffset;
	float ActivationNoiseRange;
	float ImpactNoiseRange;
	float ActivationNoiseLoudness;
	float ImpactNoiseLoudness;
	struct GameplayTagContainer ProhibitedTargetTags;
	bool bLeadPawnTargets;
	float DesiredThrowAngle;
	float MaxYawAngleToFire;
	bool bClampMaxYawAngleToFire;
	bool bUseTargetActorLocation;
	float InitialAccuracyMax;
	float InitialAccuracyMin;
	float TargetAccuracyMax;
	float TargetAccuracyMin;
	float MinAccuracyDistance;
	float MaxAccuracyDistance;
	float AccuracyDistanceMultiplier;
	int NumUsesToReachTargetAccuracy;
	int UseCount;
	bool bIsMobileToggle;
	TArray<struct FortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;
	struct FortGameplayAbilityMontageInfo MontageInfo;
	class UClass* AbilityWeapon;
	struct FText DisplayName;
	struct FText Description;
	class UClass* SmallPreviewImageOverride;
	float ChargeStartTime;
	EFortAbilityChargeState ChargeState;
	class UClass* Tooltip;
	class UClass* StatList;
	struct AbilityTrackedActorSettings ActorTrackingSettings;
	class UClass* CurrentAbilityCameraModeClass;
	struct GameplayTagContainer AnalyticsTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBaseAnimInstance : public UAnimInstance
{
public:
	TArray<class UClass*> AnimInputEventList;
	Unknown BoneSets;
	TArray<struct AnimTagProperty> AnimPropertyGameplayTagBindings;
	struct FScriptMulticastDelegate OnGameplayTagNotifyBegin;
	struct FScriptMulticastDelegate OnGameplayTagNotifyEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBaseLayerAnimInstance : public UFortBaseAnimInstance
{
public:
	Unknown MainAnimInstanceWeakPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance : public UFortBaseLayerAnimInstance
{
public:
	float Speed2D;
	float FallPlayRate;
	float DBNOTurnPlayRate;
	float ADSToNonADSBlendTime;
	float NonADSToADSBlendTime;
	float SlopeSlidingPitch;
	float SlopeSlidingRoll;
	EFortCustomGender Gender;
	bool bIsMoving2D;
	bool bIsAboveMinimumLocomotionSpeed;
	bool bIsTargeting;
	bool bIsRelaxedLevel1;
	bool bIsRelaxedLevel2;
	bool bIsCrouching;
	bool bIsJumpBoosting;
	bool bSwimmingJumpInitiatedFromWater;
	bool bIsRelaxedLevel1AndNotJumpBoosting;
	bool bIsRelaxedLevel1AndNotJumpingFromWater;
	bool bIsInVehicle;
	bool bIsDBNO;
	bool bIsPlayingMeleeAnim;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponComponent : public GameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerController : public PlayspacePlayerController
{
public:
	struct FScriptMulticastDelegate OnPlayerPawnPossessed;
	struct FScriptMulticastDelegate OnPickupCreated;
	struct FScriptMulticastDelegate OnInputFiltered;
	bool bAllowPcbBenefits;
	struct FScriptMulticastDelegate OnFortPawnChangedEvent;
	struct FScriptMulticastDelegate OnControllerComponentAttachedEvent;
	bool bInPossession;
	class UClass* AircraftInputComponent;
	class UClass* MiniMapInputComponent;
	class UClass* SkydiveMusicAudioComp;
	bool bFailedToRespawn;
	bool bIsDisconnecting;
	bool bIsBeingKicked;
	bool bHasInitiallySpawned;
	bool bAssignedStartSpawn;
	bool bReadyToStartMatch;
	bool bClientPawnIsLoaded;
	struct Vector SpawnLoc;
	int NumPreviousSpawns;
	bool bCanSpectateBot;
	struct FScriptMulticastDelegate OnBlueprintReadyCheckCompleted;
	class UClass* SimpleLoadingScreenSoundMix;
	struct FString RegisteredPartnerId;
	struct GameplayTag RegisteredPartnerTag;
	TArray<class UClass*> ManagedAIs;
	class UClass* MyFortPawn;
	class UClass* MyFortPawnBeforeTakeoverOfScriptedPawn;
	class UClass* ScriptedPawnControllerBeforeTakeover;
	bool bHasClientFinishedLoading;
	bool bHasServerFinishedLoading;
	float TimeStartedWaiting;
	float TimeFinishedNavigationBuild;
	class UClass* MaterialParameterCollection;
	bool bLoadingScreenDropped;
	struct Vector PendingSpectatorLocation;
	Unknown ActorUnderReticle;
	Unknown AutoFireReticleTarget;
	struct TimerHandle AutofireTimerHandle;
	Unknown WeakspotUnderReticle;
	TArray<struct BuildingWeakSpotData> ActiveWeakSpots;
	float LastActiveTime;
	bool bRevertPlayerListenerChange;
	class UClass* VehicleInputComponent;
	bool bHoldingPrimaryFireFromTouch;
	bool bSupportNextPieceAssist;
	bool bAutoBuildForTrapPlacement;
	bool bAutoBuildForFloorTrapPlacement;
	bool bAutoBuildForWallTrapPlacement;
	bool bAutoBuildForCeilingTrapPlacement;
	bool bNoControllerLighting;
	float ReturnToMainMenuTimeoutDelay;
	struct FScriptMulticastDelegate OnQuestObjectiveStateChanged;
	class UClass* LastDamager;
	class UClass* LastFallInstigator;
	float LastDamagerCreditThresholdDropElim;
	float LastDamagerCreditThresholdSelfElim;
	float LastDamagerCreditThresholdStormElim;
	bool bGiveLastDamagerElimCreditOnDrop;
	bool bGiveLastDamagerElimCreditOnSelfDamage;
	bool bGiveLastDamagerElimCreditOnStormDamage;
	struct FScriptMulticastDelegate OnMcpProfilesInitializedEvent;
	struct FScriptMulticastDelegate OnEnterVehicleDriver;
	struct FScriptMulticastDelegate OnEnterVehiclePassenger;
	struct FScriptMulticastDelegate OnExitVehicle;
	struct FScriptMulticastDelegate OnFullyExitVehicle;
	struct FScriptMulticastDelegate OnVehicleAbilitiesRemoved;
	struct FScriptMulticastDelegate OnTetherChanged;
	bool bHoldingObject;
	class UClass* DBNOCarryInputComponent;
	class UClass* HeldObjectsInputComponent;
	bool bWantsToSprint;
	bool bHoldingSprint;
	bool bSprintToggleable;
	bool bSprintByDefault;
	bool bSprintCancelsReload;
	bool bSprintWasCancelledByReload;
	bool bAutoRunOn;
	bool bUseHoldToSwapPickup;
	bool bTargetingToggleable;
	bool bTargetingToggleableWithTouch;
	bool bMovementDisabledDueToCancellableAction;
	bool bIsPlayerActivelyMoving;
	bool bPlaceHeldObjectPressed;
	int InMovementCancellableAction;
	bool bAllowHoldForAmmoCrafting;
	bool bIsClientTimingOut;
	float ClientTimeoutBlockInputTime;
	uint64_t LastMoveInputFrame;
	float LastPressGamepadSprintTime;
	bool bAutoRunWasHoldingForward;
	bool bAtNameBaseScreen;
	struct FScriptMulticastDelegate OnSetFirstPersonCamera;
	class UClass* CinematicCameraClassOverride;
	bool bOnPressExecuteJetpack;
	bool bShowHitMarkersForFriendlyFire;
	bool bServerSideHitMarkers;
	struct FScriptMulticastDelegate OnUiChoiceCompleted;
	struct FScriptMulticastDelegate OnRegainedFocus;
	struct FScriptMulticastDelegate OnOpenVoteDialog;
	bool bGamepadAbilityPending;
	bool bForceAllowCursorMode;
	bool bForceAllowCameraMode;
	bool bSuppressEventNotifications;
	float LastSpotTime;
	TArray<Unknown> CurrentMarks;
	Unknown LoopingUIFeedbackComponents;
	class UClass* PreviewAbility;
	struct AIDirectorDebugInfo IntensityGraphInfo;
	struct AIDirectorDebugInfo PIDValuesGraphInfo;
	struct AIDirectorDebugInfo PIDContributionsGraphInfo;
	class UClass* AIDirectorDataManager;
	class UClass* MusicManager;
	struct FScriptMulticastDelegate OnBuildPreviewMarkerVisibilityChanged;
	struct FScriptMulticastDelegate OnWeakSpotReset;
	bool bUsePredictedBuildingActors;
	bool bRegisterPredictedBuildingActorsWithGrid;
	bool bPredictedBuildingWallsHaveNoCollision;
	float PredictedActorLifespan;
	TArray<class UClass*> PredictedBuildingSMActors;
	class UClass* BuildPreviewModeInputComponent;
	class UClass* BuildPreviewMarker;
	class UClass* BuildPreviewMarkerExtraPiece;
	bool bAllowBuildingPreviewAutoRotation;
	bool bRequireTraceToExistingBuildingToSetContext;
	bool bAllowTraceToExistingBuildingToSetContextToRedirectToBlockingBuilding;
	bool bRequireTraceToExistingBuildingToSetContextExcludeCurrentContext;
	class UClass* TargetedBuilding;
	class UClass* TargetedVehicle;
	class UClass* ContextualConversionClass;
	struct TSoftClassPtr<UObject> StartUpgradeSound;
	TArray<class UClass*> HighlightedPrimaryBuildings;
	TArray<class UClass*> HighlightedInteractionBuildings;
	Unknown HighlightedPrimaryBuilding;
	struct TSoftClassPtr<UObject> BuildPreviewMarkerParentMaterial;
	TArray<class UClass*> BuildPreviewMarkerMIDs;
	byte BuildPreviewRotationIterations;
	bool bBuildPreviewMirrored;
	EFortBuildPreviewMarkerOptionalAdjustment BuildPreviewMarkerOptionalAdjustment;
	bool bBuildFree;
	bool bUseSmartBuild;
	bool bCraftFree;
	EFortCostInfoTypes CurrentCostInfoType;
	class UClass* CurrentBuildableClass;
	class UClass* PreviousBuildableClass;
	EFortResourceLevel CurrentResourceLevel;
	EFortResourceType CurrentResourceType;
	struct LastBuildableState LastBuildableStateData;
	TArray<struct FortDamageNumberInfo> QueuedDamageNumbers;
	class UClass* DamageNumbersActor;
	class UClass* EditModeInputComponent;
	class UClass* EditBuildingActor;
	float EditModeDistance;
	struct Vector LastBuildPreviewGridSnapLoc;
	struct Rotator LastBuildPreviewGridSnapRot;
	struct Vector LastBuildPreviewGridSnapCentroid;
	class UClass* PickerInputComponent;
	class UClass* TrapPickerDecoHelper;
	TArray<struct HitResult> TouchEditResults;
	bool bBuildingPlacementTraceSkipInitialPenetrationOfBuildingSMActor;
	bool bBuildingPlacementTraceSkipInitialPenetrationOfStaticMesh;
	class UClass* ClientQuickBars;
	TArray<struct RecentlyRemovedQuickbarInfo> RecentlyRemovedQuickbarInfo;
	struct DelayedQuickBarActionContainer DelayedQuickBarActions;
	Unknown ClientProcessedQuickBarActions;
	bool bShouldForceDeleteDroppedItems;
	struct QueuedItemsToDropViaPickup QueuedItemsToDrop;
	bool bAutoEquipBetterItems;
	class UClass* WorldInventory;
	class UClass* OutpostInventory;
	class UClass* ViewTargetInventory;
	bool bHasInitializedWorldInventory;
	bool bHasInitializedHeroInventory;
	bool bAccountInventoryWasUpdated;
	bool bForceWorldInventoryUpdate;
	bool bIsSavingGadgetLoadout;
	class UClass* BotPilot;
	class UClass* BotManager;
	class UClass* ClientBotManagerClass;
	struct FortAthenaLoadout CosmeticLoadoutPC;
	class UClass* LocalPawnCustomizationAssetLoader;
	bool bDropWeaponsDuringAllMissionStates;
	struct FortRewardReport LatestRewardReport;
	class UClass* MyPlayerInfo;
	TArray<struct FortUpdatedObjectiveStat> UpdatedObjectiveStats;
	bool bHasUnsavedPrimaryMissionProgress;
	class UClass* StatManager;
	class UClass* HeartbeatManager;
	class UClass* StatEventManager;
	struct FortPersistentGameplayStatContainer CachedPersistentGameplayStats;
	class UClass* LastEmotePlayed;
	Unknown EmoteUsageCounts;
	TArray<struct Vector> AnalyticsBuildingWallTooLowLocations;
	Unknown NearbyEmotingPawns;
	Unknown NearbyEmotingPawnCount;
	class UClass* McpProfileGroup;
	class UClass* CommonPublicMcpProfile;
	class UClass* CommonCoreMcpProfile;
	class UClass* MainMcpProfile;
	class UClass* AthenaProfile;
	class UClass* MetadataProfile;
	class UClass* CreativeModeProfile;
	EFortPCTutorialCompletedState TutorialCompletedState;
	bool bShouldReceiveCriticalMatchBonus;
	struct FScriptMulticastDelegate OnPlayerChangedBuildMode;
	struct FScriptMulticastDelegate OnAutoRunEnabled;
	class UClass* VoiceInputSourceEffectPresetChain;
	struct Vector LocationUnderReticle;
	bool bEnableVoiceChatPTT;
	bool bVoiceChatPTTTransmit;
	bool bInfiniteAmmo;
	bool bInfiniteMagazine;
	bool bNoCoolDown;
	bool bInfiniteDurability;
	bool bUsePickers;
	bool bPickerOpen;
	bool bPickerEnabled;
	bool bCheatGhost;
	bool bCheatFly;
	bool bEnableShotLogging;
	bool bIsNearActiveEncounters;
	int OverriddenBackpackSize;
	class UClass* CurrentReplaySpotLight;
	uint32_t AimHelpMode;
	EFortJumpStaminaCost JumpStaminaCost;
	struct FName CameraPrototypeName;
	bool bHideHudEnglishText;
	bool bAutoChangeMaterial;
	bool bServerAutoChangeMaterial;
	bool bPeripheralLightingEnabled;
	bool bRudderControlEnabled;
	float RudderDeadZone;
	float RudderMaxThrottle;
	TArray<class UClass*> ActiveSprayInstances;
	TArray<class UClass*> ActiveToyInstances;
	Unknown ToySummonCounts;
	bool bSyncPeripheralLightingWithEmoteMusic;
	bool bPushEmoteAudioDataToCosmeticMaterials;
	float LastEmoteMusicFFT100hz;
	float LastEmoteMusicFFT2000hz;
	float EmoteMusicBeatThreshold;
	float EmoteMusicEnvelopeBeatCount;
	bool bZeroingCameraRoll;
	bool bTryPickupSwap;
	bool bClientSideEditPrediction;
	float ClientSideEditPredictionTimeout;
	class UClass* PendingEnterEditModeActor;
	int RandomCharacterIndex;
	float AntiAddictionPlayTimeMultiplier;
	bool bSupportQuickEdit;
	bool bQuickEditEnabled;
	bool bUsesWidgetForFPSDisplay;
	bool bShowFPS;
	struct FScriptMulticastDelegate OnShowFPSChange;
	bool bShowTemperature;
	struct FScriptMulticastDelegate OnShowTemperatureChange;
	struct LockOnInfo LockOnInfo;
	bool bLockPrimaryInputMethodToMouse;
	class UClass* IndicatorManager;
	bool bFinalXPUpdateFailed;
	class UClass* TestUserWidget;
	EFortPawnStasisMode PreviousStasisMode;
	class UClass* BattleMapSpectatorClass;
	bool bReleaseBuildingContextOnPlace;
	float TurboPlaceFirstInterval;
	float TurboPlaceInterval;
	bool bCreativeTurboDelete;
	float TurboDeleteFirstInterval;
	float TurboDeleteInterval;
	bool bTurboBuild;
	float TurboBuildFirstInterval;
	float TurboBuildRequestFailedInterval;
	float TurboBuildInterval;
	class UClass* FortControllerComponent_Telemetry;
	class UClass* InventoryNetworkManagementComponent;
	class UClass* InteractionComponent;
	class UClass* CollectionsComponent;
	class UClass* PendingExecuteInventoryItemDefinition;
	class UClass* QuickHealItemPickerClass;
	TArray<struct FString> MeshParentIds;
	struct FScriptMulticastDelegate OnToggleFullscreenMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager : public UCheatManager
{
public:
	bool bDebugInteractTrace;
	bool bDebugPickupSpline;
	bool bEnableScoreboard;
	bool bDebugBounceCurve;
	bool bDebugBeautyMode;
	bool bDisplayWindDebugging;
	bool bDebugStructuralSupportSystem;
	bool bInfiniteStamina;
	bool bShowGameDifficultyHUD;
	bool bShowIntensityHUD;
	bool bShowMaxAIHUD;
	bool bShowItemIDsOnCards;
	bool bEnableContextMenus;
	bool bUnlimitedHealth;
	bool bCanExitWorld;
	bool bUnlimitedAIHealth;
	bool bFreezeAILOD;
	bool bForceAILOD;
	int AbilitySystemCycleCounter;
	EFortAILODLevel ForcedAILODValue;
	struct TSoftClassPtr<UObject> TransparentTextureData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChildCheatManager : public UCheatManagerExtension
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingActor : public AActor
{
public:
	struct Guid MyGuid;
	float SavedHealthPct;
	int16_t OwnerPersistentID;
	bool bUseMinLifeSpan;
	struct TSoftClassPtr<UObject> AreaClass;
	class UClass* NavigationLinksClass;
	TArray<class UClass*> InitialOverlappingVehicles;
	int CurrentBuildingLevel;
	int MaximumBuildingLevel;
	class UClass* BuildingAttributeSetClass;
	class UClass* BuildingAttributeSet;
	class UClass* DamageAttributeSet;
	class UClass* ReplicatedBuildingAttributeSet;
	float MaxHealthInitializationValue;
	struct FortAttributeInitializationKey AttributeInitKeys;
	EAttributeInitLevelSource AttributeInitLevelSource;
	EBuildingActorComponentCreationPolicy AbilitySystemComponentCreationPolicy;
	EPhysicalSurface PrimarySurfaceType;
	EFortBaseWeaponDamage WeaponResponseType;
	class UClass* AbilitySystemComponent;
	class UClass* ReplicatedAbilitySystemComponent;
	TArray<struct GameplayCueParameters> PendingDamageImpactCues;
	float HealthBarIndicatorWidth;
	float HealthBarIndicatorVerticalOffset;
	struct FName HealthBarIndicatorSocketName;
	class UClass* HealthBarIndicator;
	int HealthBarIndicatorDifficultyRating;
	byte ForceMetadataRelevant;
	byte LastMetadataRelevant;
	EDynamicBuildingPlacementType DynamicBuildingPlacementType;
	ENavigationObstacleOverride NavigationObstacleOverride;
	struct GameplayTagQuery IncomingDamageFilterQuery;
	bool bIsInvulnerable;
	bool bPreviewBuildingActor;
	bool bPlayedDying;
	bool bHasRegisteredActorStateAtLeastOnce;
	bool bDirtyForLevelRecordSave;
	bool bSavedMetaPropertiesProcessed;
	bool bUpgradeUsesSameClass;
	bool bDisplayLevelInInfoWidget;
	bool bAllowUpgradeRegardlessOfPlayerBuildLevel;
	bool bDisplayDamageNumbersInAthena;
	bool bUseFortHealthBarIndicator;
	bool bSurpressHealthBar;
	bool bCreateVerboseHealthLogs;
	bool bIsIndestructibleForTargetSelection;
	bool bPropagateDrawDistanceOnAdditionalComponent;
	bool bCreatePhysicsObjectComponent;
	bool bDestroyed;
	bool bPersistToWorld;
	bool bRefreshFullSaveDataBeforeZoneSave;
	bool bBeingDragged;
	bool bRotateInPlaceGame;
	bool bBeingOneHitDisassembled;
	bool bBoundsAreInvalidForMelee;
	bool bIsNavigationModifier;
	bool bBlockNavigationLinks;
	bool bCanExportNavigationCollisions;
	bool bCanExportNavigationObstacle;
	bool bMirrorNavLinksX;
	bool bMirrorNavLinksY;
	bool bIgnoreMoveGoalCollisionRadius;
	bool bForceDisableRootNavigationRelevance;
	bool bForceAutomationPass;
	bool bForceAutomationPass_NavmeshOnTop;
	bool bForceAutomationPass_SmashableFlat;
	bool bCanBeSavedInCreativeVolume;
	bool bIsNavigationRelevant;
	bool bIsNavigationIndestructible;
	bool bBlockNavLinksInCell;
	bool bUseHotSpotAsMoveGoalReplacement;
	bool bHasCustomAttackLocation;
	bool bWorldReadyCalled;
	bool bBeingRotatedOrScaled;
	bool bBeingTranslated;
	bool bRotateInPlaceEditor;
	bool bEditorPlaced;
	bool bPlayerPlaced;
	bool bShouldTick;
	bool bUsesDayPhaseChange;
	bool bIsDynamic;
	bool bIsDynamicOnDedicatedServer;
	bool bIsDedicatedServer;
	bool bUseTickManager;
	bool bIsMovable;
	bool bRegisteredForDayPhaseChange;
	bool bForceDamagePing;
	bool bDestroyFoliageWhenPlaced;
	bool bObstructTrapTargeting;
	bool bInstantDeath;
	bool bDoNotBlockBuildings;
	bool bForceBlockBuildings;
	bool bDestroyOnPlayerBuildingPlacement;
	bool bUseCentroidForBlockBuildingsCheck;
	bool bPredictedBuildingActor;
	bool bIgnoreCollisionWithCriticalActors;
	bool bIsPlayerBuildable;
	bool bFireBuiltAndDestroyedEvents;
	bool bStructurallySupportOverlappingActors;
	bool bAllowInteract;
	bool bShowFirstInteractPrompt;
	bool bShowSecondInteractPrompt;
	bool bAllowHostileBlueprintInteraction;
	bool bEndAbilitiesOnDeath;
	bool bAlwaysUseNetCullDistanceSquaredForRelevancy;
	bool bHighlightDirty;
	bool bCollisionBlockedByPawns;
	bool bAllowTeamDamage;
	bool bIgnoreAffiliationInteractHighlight;
	bool bSuppressInteractionWidget;
	EFortBuildingType BuildingType;
	EFortTeam Team;
	byte TeamIndex;
	struct GameplayTagContainer ConstTags;
	struct GameplayTagContainer StaticGameplayTags;
	struct FText InteractionText;
	struct GameplayTag CanInteractPerformNativeActionTag;
	struct FScriptMulticastDelegate OnDied;
	struct FScriptMulticastDelegate OnDamaged;
	class UClass* AssociatedMissionParam;
	class UClass* OriginatingPlacementActor;
	float BRMinDrawDistance;
	float BRMaxDrawDistance;
	float StWMinDrawDistance;
	float StWMaxDrawDistance;
	struct FScriptMulticastDelegate OnInteract;
	struct CurveTableRowHandle InteractionSpeed;
	bool bShouldClearMarkerOnInteract;
	int DataVersion;
	float LastTakeHitTimeTimeout;
	class UClass* PlayHitSound;
	float CullDistance;
	float SnapGridSize;
	float VertSnapGridSize;
	struct Vector SnapOffset;
	struct Vector CentroidOffset;
	struct Vector BaseLocToPivotOffset;
	struct FString CustomState;
	TArray<class UClass*> ComponentTypesWhitelistedForReplication;
	TArray<class UClass*> OverridePrimitivesToExcludeFoliage;
	class UClass* HotSpotConfig;
	struct FScriptMulticastDelegate OnBuildingHealthChanged;
	struct FScriptMulticastDelegate OnActorHealthChanged;
	struct Guid SavedActorGuid;
	float BaselineScale;
	float AccumulatedDeltaSinceLastVisualsTick;
	class UClass* ProjectileMovementComponent;
	float LifespanAfterDeath;
	struct GameplayTag PhysicsObjectPresetTag;
	struct GameplayTag PhysicsObjectPhysicalDataTag;
	struct GameplayTag PhysicsObjectBuoyancyDataTag;
	struct GameplayTag PhysicsObjectImpactDamageDataTag;
	class UClass* PhysicsObjectComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActor : public ABuildingActor
{
public:
	class UClass* AbilitySet;
	class UClass* InherentAbilitySets;
	struct DataTableRowHandle DamageStatHandle;
	bool bAllowRidingOnActor;
	struct FScriptMulticastDelegate OnProximityPulseDelegate;
	struct FScriptMulticastDelegate OnProximityPrePulseDelegate;
	struct FScriptMulticastDelegate OnProximityEffectsAppliedDelegate;
	struct FScriptMulticastDelegate OnDeliverableAbilityInfoAppliedToTouchingActor;
	struct FScriptMulticastDelegate OnDeliverableAbilityInfoChangedForExitingTouchActor;
	bool bIgnoreInstigatorCollision;
	bool bAddOwnerVelocity;
	int AbilitySourceLevel;
	struct BuildingGameplayActorAbilityDeliveryInfo DeliverableAbilityInfo;
	bool bApplyDefaultEnabledAbilityBucketsOnInit;
	bool bUseSimpleActorTouchSetupForAbilityBuckets;
	bool bCanBeMarked;
	bool bBlockMarking;
	struct MarkedActorDisplayInfo MarkerDisplay;
	struct Vector MarkerPositionOffset;
	bool bShowInteractKeybind;
	class UClass* RegisteredTouchComponent;
	struct GameplayTagContainer AnalyticsTags;
	float PostProcessOverlapBlendWeight;
	class UClass* CustomInteractionWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial : public UObject
{
public:
	class UClass* MarkerActor;
	struct FText MarkerText;
	class UClass* MarkerHighlightComponent;
	class UClass* TutorialDefinition;
	class UClass* OwnerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent : public ControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent : public GameStateComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPickupInteractOverrideComponent : public GameFrameworkComponent
{
public:
	int Priority;
	class UClass* ContextOverrideWidget;
	class UClass* SecondContextOverrideWidget;
	bool bContextOverrideWidgetApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPhysicsPawn : public APawn
{
public:
	struct VehicleSafeTeleportInfo SafeTeleportInfo;
	float GravityMultiplier;
	bool bUseNetPrediction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaVehicle : public AFortPhysicsPawn
{
public:
	struct PredictionReplicationProxy_AP NetPredictionProxy_AP;
	struct PredictionReplicationProxy_SP NetPredictionProxy_SP;
	struct TSoftClassPtr<UObject> SoftOverrideItemWrap;
	class UClass* OverrideItemWrap;
	Unknown PlayersBasedOnVehicle;
	struct FScriptMulticastDelegate OnSleepStateChangedDelegate;
	struct CachedWaterData WaterBodyDataCache;
	class UClass* BoundsXYSplineComponent;
	bool bDisableUpdateForcedDebugInput;
	bool bDisableUpdateAutoRun;
	bool bDisableUpdateHonk;
	bool bDisableUpdateIgnoredBuildingActors;
	bool bDisableUpdateIngoredPawnsForDamage;
	bool bDisableUpdateSafeTeleport;
	bool bUseForceHeading;
	bool IndicatorEnabled;
	bool bDestroyOnLastExit;
	bool bShowDamageNumbers;
	bool bShowDamageNumbersAtImpactLocation;
	bool bPlayDamageAudio;
	bool bShowVehicleHealthBarOnPlayerHUD;
	bool bDestroyBuildingSMActorOnForceExit;
	bool bIgnoreAllFallingDamage;
	bool bIgnoreNextFallingDamage;
	bool bIsBraking;
	bool bPlayedDying;
	bool bPendingDeath;
	bool bForceDeath;
	bool bHasDriver;
	bool bHasPassengers;
	bool bCanSleepWhileNotTouchingAnything;
	bool bIsTouchingAnything;
	bool bIsInWater;
	bool bIsInWaterBody;
	bool bIsOverlappingWaterBody;
	bool bIsFullyInWaterBody;
	bool bCanDriveOnIncline;
	bool bCanCoastOnIncline;
	bool bWheelsOnGround;
	bool bAnyWheelsOnGround;
	bool bIsTouchingDrivableGround;
	bool bIsTouchingGroundWithoutWheels;
	bool bAllowInteractBetweenFortVolumes;
	bool bCanPassengerPawnsTakeDamage;
	bool bOnFire;
	bool bLeakingFuel;
	bool bEnableCurieMaterial;
	bool bEnforceTeamRestriction;
	bool bEnforceTeamRestrictionForMiniGame;
	byte TeamId;
	struct FScriptMulticastDelegate OnPawnEnteredVehicleAtSeat;
	struct FScriptMulticastDelegate OnPawnEnteredVehicleSeat;
	struct FScriptMulticastDelegate OnPawnExitedVehicleSeat;
	struct FScriptMulticastDelegate OnPawnExitedVehicleFromSeat;
	bool bWaitingForSleep;
	bool bAttemptAsyncOrientationCorrection;
	bool bIsAsyncCorrectingOrientation;
	bool bAlwaysCreateNavComponent;
	bool bAllowInteractBetweenFortVolumes_Runtime;
	bool bTricksEnabled;
	float FireDamageTickTimer;
	float CurrentFOV;
	struct GameplayTagContainer FireEnvDamageTags;
	class UClass* DriverReticleBrush;
	float IndicatorAudibleDistance;
	class UClass* IndicatorIcon;
	struct LinearColor IndicatorTint;
	float WaterEffectsVehicleMaxSpeedKmh;
	class UClass* WaterEffectsAsset;
	class UClass* WaterEffectsComponent;
	struct GameplayTagContainer GameplayTags;
	TArray<struct IgnoredPawn> PawnsToIgnoreForDamge;
	TArray<class UClass*> PawnsToIgnoreForCollision;
	TArray<class UClass*> IgnoredPawnsPendingTeleport;
	float LastPropImpactImpulseTime;
	TArray<struct PredictedDestroyedBuilding> PredictedDestroyedBuildings;
	TArray<class UClass*> WallsVehicleCanDestroy;
	TArray<class UClass*> WallsVehicleCannotDestroyWhenBoosting;
	TArray<class UClass*> BuildingPropClassesVehicleCanDestroy;
	TArray<class UClass*> BuildingPropClassesVehicleCannotDestroyWhenBoosting;
	TArray<Unknown> SeatInputProviders;
	struct FortAthenaVehicleInputState EmptyDriverInputState;
	struct Vector AverageSpringNormal;
	float TopSpeedCurrentMultiplier;
	float PushForceCurrentMultiplier;
	float SteeringAngle;
	float FrontLateralFrictionRuntimeMultiplier;
	float RearLateralFrictionRuntimeMultiplier;
	struct Vector LocalRearFrictionPt;
	struct Vector LocalFrontFrictionPt;
	float FrontMassRatio;
	float RearMassRatio;
	float TotalBrakingDelta;
	EPhysicalSurface PrimarySurfaceType;
	EFortBaseWeaponDamage WeaponResponseType;
	byte VTDMode;
	EPhysicalSurface SurfaceTypeVehicleOn;
	int ForcedMaterialVariantIndex;
	struct FortRechargingActionTimer FuelCharge;
	struct FScriptMulticastDelegate OnRechargeableFuelAboveThreshold;
	struct FScriptMulticastDelegate OnRechargeableFuelBelowThreshold;
	struct FScriptMulticastDelegate OnOutOfRechargeableFuel;
	struct FScriptMulticastDelegate OnNotOutOfRechargeableFuel;
	class UClass* FortPhysicsVehicleConfigs;
	struct FScriptMulticastDelegate OnMountedWeaponFiredEvent;
	float SeatSwitchCooldown;
	struct GameplayTagContainer VehicleTags;
	TArray<struct VehicleSpringInfo> Springs;
	struct SpringGroundTriangle GroundTriangle;
	TArray<struct SMVehicleGear> Gears;
	TArray<struct SMVehicleGear> SprintGears;
	TArray<struct SMVehicleGear> ReverseGears;
	float ForwardDrivingAntiGravityScaler;
	float CameraSpaceForwardDistanceOffset;
	float CameraAssistStrength;
	float CameraAssistRampUp;
	bool bAllowAutoCamera;
	float TimeToAutoCamera;
	float MinSpeedForAutoCamera;
	float CameraAssistBaseHeight;
	float CameraAssistUpHillScaler;
	float CameraAssistSteerScaler;
	float CameraAssistForwardScale;
	float AngleDegreesThresholdFromCurrentCameraToTarget;
	float CameraFOVOffset;
	class UClass* TetheredCamera;
	class UClass* PlayerCollisionGameplayEffect;
	class UClass* OverlapComponent;
	class UClass* WaterOverlapComponent;
	float WaterLevel;
	float VehicleMinHorSpeedToDamage;
	float VehicleMaxHorSpeedToDamage;
	float VehicleMinHorSpeedDamage;
	float VehicleMaxHorSpeedDamage;
	float ImpulseResponseMultiplier;
	float ImpulseResponseZBias;
	float TargetingZOffset;
	float BrakeAboveTopSpeedDelta;
	float TimeToIdleBrake;
	float DragCoefficient;
	float PrimaryCameraPitchConstraint;
	float PrimaryCameraYawConstraint;
	float CachedSpeed;
	struct FName MainBodyCollision;
	struct Vector TestInitialLinearVelocity;
	struct Vector TestInitialAngularVelocity;
	struct HitResult LookAheadHit;
	class UClass* TrickSet;
	struct FName PushForceSocket;
	struct FName FrontWheelsSocket;
	struct FName RearWheelSockets;
	class UClass* WaterBodyOverlapComponent;
	class UClass* DefaultHitNotifyAudioBank;
	struct FScriptMulticastDelegate OnHandleOutOfHealthDelegate;
	struct FScriptMulticastDelegate OnHealthChanged;
	struct FScriptMulticastDelegate OnDamageablePartHealthChanged;
	struct FName BulletCollisionComponentTag;
	class UClass* GEDamagePassengersOnDeath;
	struct FScriptMulticastDelegate OnVehicleSquadChanged;
	float LifespanAfterDeath;
	float LastDamagedTime;
	TArray<struct SeatTransitionMontage> SeatTransitions;
	struct VehicleRuntimeModifiers RuntimeModifiedProperties;
	TArray<class UClass*> LocallyIgnoredBuildingActors;
	struct Vector PreviousBuildingQueryPosition;
	class UClass* EmoteAudioSourcePresetChain;
	class UClass* EmoteAudioAttenuation;
	struct MarkedActorDisplayInfo MarkerDisplay;
	struct FScriptMulticastDelegate OnSurfaceTypeVehicleIsOnChangedDelegate;
	class UClass* StartupAbilitySet;
	class UClass* VehicleSeatComponent;
	class UClass* VehicleInteractionOverrideComponent;
	class UClass* SkyTubePhysicsComponent;
	class UClass* PontoonsComponent;
	class UClass* TrackableAIObjectComponent;
	TArray<struct AthenaCarPlayerSlot> PlayerSlots;
	TArray<struct AthenaCarPlayerSlot> PlayerSlotsBackup;
	TArray<struct AthenaCarPlayerSlotUnreplicated> PlayerSlotsUnreplicated;
	class UClass* VehicleMovementSet;
	struct ReplicatedAthenaVehicleAttributes VehicleAttributes;
	class UClass* ImminentCollisionComponent;
	TArray<class UClass*> IgnoredBuildingActors;
	TArray<struct VehicleDamageablePart> DamageableParts;
	TArray<struct VehicleToggleablePart> ToggledParts;
	struct VehicleTargetOrientation CorrectTargetOrientation;
	class UClass* CameraModeClass;
	class UClass* DrivingAnimClass;
	class UClass* DriverAnimLayerOverlayClass;
	class UClass* PassengerAnimLayerOverlayClass;
	class UClass* AnimSet;
	struct FortAttributeInitializationKey AttributeInitKey;
	class UClass* AbilitySystemComponent;
	class UClass* HealthSet;
	class UClass* ImpulseResponseSet;
	class UClass* DamageSet;
	class UClass* HealthBarIndicator;
	struct VehicleCosmeticInfo VehicleCosmeticInfo;
	class UClass* NavModifierComponent;
	bool bShouldSleepAtSpawn;
	class UClass* ImpactInstigator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSKVehicle : public AFortAthenaVehicle
{
public:
	class UClass* SkeletalMesh;
	float WheelOffsetFR;
	float WheelOffsetFL;
	float WheelOffsetLimitF;
	float WheelOffsetBR;
	float WheelOffsetBL;
	float WheelOffsetLimitB;
	float WheelOffsetLerpPerSecondUp;
	float WheelOffsetLerpPerSecondDown;
	float AxleOffsetZ;
	float AxleOffsetZ_B;
	float AxleCenterF;
	float AxleCenterB;
	float AxleRollF;
	float AxleRollB;
	float WheelRotationFR;
	float WheelRotationFL;
	float WheelRotationBR;
	float WheelRotationBL;
	float WheelRotationVelocityFR;
	float WheelRotationVelocityFL;
	float WheelRotationVelocityBR;
	float WheelRotationVelocityBL;
	float WheelSpinFR;
	float WheelSpinFL;
	float WheelSpinBR;
	float WheelSpinBL;
	float WheelSpinVelocityFR;
	float WheelSpinVelocityFL;
	float WheelSpinVelocityBR;
	float WheelSpinVelocityBL;
	float WheelSpinDampingPerSecond;
	bool bShouldDealDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortOctopusVehicle : public AFortAthenaSKVehicle
{
public:
	class UClass* CacheDriverCameraShake;
	float BounceContactRepulsionForce;
	float BoostForce;
	float MaxVerticalBoostForce;
	float BoostSpeedKmh;
	struct SphericalDriveParams BaseSphericalDriveParams;
	struct TowhookParams BaseTowhookParams;
	float TowhookSpringDeformationRateOnGround;
	bool bAutoRetractGrapple;
	bool bCanHoldGrapple;
	float TowhookInterpSpeed;
	float TowhookInterpMaxPercentPerSecond;
	float TowhookMaxInvalidateTargetAngleDeg;
	float TowhookMaxInvalidateTargetDot;
	struct FName InternalBlockerCollisionName;
	struct FortRechargingActionTimer BoostBounceAction;
	class UClass* FortOctopusVehicleConfigsClass;
	ECollisionChannel ProjectileTraceChannel;
	float ProjectileSpeedKmh;
	struct FScriptMulticastDelegate OnTowhookShot;
	struct FScriptMulticastDelegate OnTowhookAttached;
	struct FScriptMulticastDelegate OnTowhookDetached;
	struct FScriptMulticastDelegate OnTowhookMissed;
	struct FScriptMulticastDelegate OnTowhookHolstered;
	struct FScriptMulticastDelegate OnTowhookYanked;
	struct FScriptMulticastDelegate OnExtendToggled;
	struct NetTowhookAttachState ReplicatedAttachState;
	class UClass* FortOctopusConfigsClass;
	class UClass* FortOctopusVehicleConfigs;
	struct Quat ShellRotation;
	struct Vector CachedCameraDir;
	struct FortTowhookModel TowhookModel;
	struct Vector TowhookAimDir;
	struct Vector_NetQuantizeNormal NetTowhookAimDir;
	TArray<struct SphericalDriveContact> CachedContactPoints;
	class UClass* CacheCoilIdleTopR;
	class UClass* CacheCoilIdleTopL;
	class UClass* CacheCoilIdleBottomR;
	class UClass* CacheCoilIdleBottomL;
	class UClass* CacheBoostFX;
	class UClass* CacheDustFX;
	class UClass* CacheAudioMovement;
	class UClass* CacheAudioWind;
	class UClass* CacheAudioTowCable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotify_Actor : public GameplayCueNotify_Actor
{
public:
	struct FortGameplayCueSpawnCondition DefaultCondition;
	struct FortGameplayCueAttachInfo DefaultAttachment;
	struct GameplayTagContainer HUDElementTag;
	class UClass* ExecutionTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotify_Loop : public FortGameplayCueNotify_Actor
{
public:
	struct FortBurstEffectData ApplicationBurst;
	struct FortGameplayCueSpawnResult ApplicationResult;
	struct FortGameplayCueAttachInfo DefaultLoopingAttachment;
	TArray<struct FortGameplayCueParticleInfo> LoopingParticles;
	TArray<struct FortGameplayCueAudioInfo_Looping> LoopingSounds;
	struct FortGameplayCueForceFeedbackInfo LoopingForceFeedbackEffect;
	struct FortGameplayCueCameraLensEffectInfo LoopingCameraLensEffect;
	struct FortGameplayCueCameraShakeInfo LoopingCameraShake;
	struct FortGameplayCueSpawnResult LoopingResult;
	struct FortBurstEffectData RecurringBurst;
	struct FortGameplayCueSpawnResult RecurringResult;
	struct FortBurstEffectData RemovalBurst;
	struct FortGameplayCueSpawnResult RemovalResult;
	bool bTickEnabled;
	float TickInterval;
	ETickingGroup TickGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInstance : public UFortBaseAnimInstance
{
public:
	bool bUpdateAllPawnProperties;
	float VelocityLerpAlpha;
	struct Vector PawnVelocity;
	float MinSpeed2DThreshold;
	float PawnSpeed2D;
	float PawnVelocityZ;
	float PawnMovementDirectionAzimuth;
	float PawnMovementDirectionElevation;
	struct Rotator PawnRotationRate;
	struct Rotator PawnDeltaRotation;
	struct Rotator PawnLastRotation;
	struct Vector PawnLastLocation;
	bool bIsJumping;
	bool bIsFalling;
	bool bShouldPredictLanding;
	bool bLandingPredicted;
	float PredictedFallTimeLeft;
	float FallLookAheadSubStepping;
	int FallLookAheadMaxIterations;
	bool bDebugLandPrediction;
	bool bRecordJumpPositions;
	bool bIsRecordingJump;
	int RecordJumpFrameCount;
	struct Vector RecordJumpInitialJumpLocation;
	float AimPitch;
	float AimYaw;
	float TimeForRecentlyFired;
	float TimeToReachRelaxedLevel1;
	float TimeToReachRelaxedLevel2;
	float MinTimeAfterFiredBeforeWallRelaxed;
	bool bRecentlyFired;
	bool bIsRelaxedLevel1;
	bool bIsRelaxedLevel2;
	bool bIsWeaponLoweredNearWall;
	bool bExitedRelaxedThisUpdate;
	bool bLowerWeaponNearWallDuringTargeting;
	float RelaxedLevelTimeCounter;
	float SavedWeaponLastFireTime;
	EAnimRelaxedState RequestedRelaxedState;
	bool bClothEnabled;
	bool bAnimDynamicsEnabled;
	bool bRigidBodyEnabled;
	bool bEnableAdditiveLayer;
	bool bIsInGoop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIAnimInstance : public UFortAnimInstance
{
public:
	float Speed;
	float UpwardVelocity;
	float MovementDirection;
	float LowerBodyCurrentWeight;
	float LowerBodyBlendTime;
	int RunVariation;
	int WalkVariation;
	EFortMovementStyle MovementStyle;
	bool BlockGetUp;
	bool bIsStunned;
	bool bIsKnockedback;
	bool bIsStaggered;
	bool bIsSleeping;
	bool bIsDBNO;
	bool bIsDead;
	bool bIsSprinting;
	bool bIsCowering;
	bool bHasWeapon;
	bool bAdditiveHitReactLoop;
	bool bUseAltSleepAnim;
	bool bShouldUseMovementLocomotion;
	bool bCanLookAtAimTarget;
	bool bIsTargeting;
	bool bTransitionToIdle;
	EFortWeaponCoreAnimation WeaponCoreAnimation;
	bool bStartTurn;
	float TurnAngle;
	float TurnRate;
	float ForwardHeading;
	float MovementHeading;
	float HeadingDelta;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode : public UObject
{
public:
	class UClass* PlayerCamera;
	float TransitionTime;
	float TransitionOutTime;
	bool bOverrideTransitionOutTime;
	struct ViewTargetTransitionParams TransitionParams;
	bool bResetInterpolation;
	bool bShouldAllowBlendingWhenActive;
	bool bShouldAllowBlendingWhenInactive;
	bool bShouldPassViewTargetCheckOnTransition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_ThirdPerson : public UFortCameraMode
{
public:
	float FOV;
	float CameraSpaceForwardDistance;
	bool bClampCameraPitch;
	bool bClampCameraYaw;
	float CameraPitchMin;
	float CameraPitchMax;
	float CameraYawMin;
	float CameraYawMax;
	ECameraOrigin CameraOrigin;
	struct FName CameraOriginSocketName;
	struct Vector CameraOriginInterpSpeed;
	struct InterpOffset ViewTargetSpaceViewOffset;
	struct InterpOffset ViewTargetSpaceViewOffset_Crouch;
	struct Vector ViewTargetSpaceViewOffseInterpSpeed;
	struct InterpOffset CameraSpaceViewOffset;
	float ViewTargetAlignmentFlipInterpDuration;
	bool bScaleViewOffsetByViewTargetScale;
	bool bSupportsShoulderSwap;
	struct Vector LastCameraOrigin;
	struct Vector CameraOriginLocalOffset;
	float PenetrationBlendInTime;
	float PenetrationBlendOutTime;
	bool bPreventPenetration;
	bool bDoPredictiveAvoidance;
	float CollisionPushOutDistance;
	float HidePawnPenetrationPercent;
	struct FName LastAttachSocketName;
	struct MinimalViewInfo LastBasePOV;
	struct MinimalViewInfo DeltaBasePOV;
	float BlendAlpha;
	TArray<struct PenetrationAvoidanceFeeler> PenetrationAvoidanceFeelers;
	float SafeLocToAimLineBlockedPct;
	float AimLineToDesiredPosBlockedPct;
	float LastDrawDebugTime;
	struct Vector LastViewTargetSpaceViewOffset;
	struct Vector LastViewTargetAlignmentUp;
	float ViewTargetAlignmentFlipInterpTime;
	struct Vector LastCameraPivot;
	float CachedPitchLimitMin;
	float CachedPitchLimitMax;
	float CachedYawLimitMin;
	float CachedYawLimitMax;
	bool bLastViewTargetValidGroupEmoteLookTarget;
	class UClass* IgnoreActorForCameraPenetration;
	TArray<class UClass*> DebugActorsHitDuringCameraPenetration;
	bool bWasInVehicle;
	class UClass* PreviousIgnoreActorForCameraPenetration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_AthenaVehicle : public UFortCameraMode_ThirdPerson
{
public:
	struct Vector CameraOriginOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleOccupantAnimInstance : public UFortAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct FortAnimInput_SocketBasedIKTarget RightHandIKTarget;
	struct FortAnimInput_SocketBasedIKTarget LeftHandIKTarget;
	struct FortAnimInput_VehicleDriverAnimAsset CurrentDriverAnimSet;
	class UClass* VehicleAnimSet;
	struct Vector ImpactDisplacement;
	struct Vector WorldVelocity;
	struct Vector2D DriveStartPlayRateSpeedRange;
	float Speed;
	float DesiredSpeed;
	float SlopePitchDegreeAngle;
	float SlopeRollDegreeAngle;
	float SteeringAngle;
	float DriveStartPlayRate;
	float AimYawSmoothed;
	float AimYawLastFrame;
	float ReversingSpeedThreshold;
	float BrakingDeltaThreshold;
	float MovingThreshold;
	float MovingForwardThreshold;
	float MovingFastThreshold;
	float SteeringLeftThreshold;
	float SteeringRightThreshold;
	float StartAimYawLerpingDeltaThreshold;
	float StopAimYawLerpingDeltaThreshold;
	float AimYawSmoothSpeed;
	float PawnToVehicleDeltaYawAngleDegrees;
	float AimCardDirDeadZoneAngleDegrees;
	float AimCardDirAngleOffsetDegrees;
	float AimFWDDeltaAngleDegrees;
	float AimBWDDeltaAngleDegrees;
	float AimLFTDeltaAngleDegrees;
	float AimRGTDeltaAngleDegrees;
	int LastCardDirIndex;
	bool bIsFemale;
	bool bIsDriver;
	bool bIsFrontPassenger;
	bool bIsBackLeftPassenger;
	bool bIsBackRightPassenger;
	bool bIsBoosting;
	bool bIsReversing;
	bool bIsBraking;
	bool bIsMoving;
	bool bIsMovingForward;
	bool bIsMovingFast;
	bool bIsSteeringRight;
	bool bIsSteeringLeft;
	bool bIsSmoothingAimYaw;
	bool bAimFWD;
	bool bAimBWD;
	bool bAimLFT;
	bool bAimRGT;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleAnimInstance : public UFortBaseAnimInstance
{
public:
	class UClass* Vehicle;
	struct Vector AxlePositionF;
	struct Vector AxlePositionB;
	struct Rotator AxleRotationF;
	struct Rotator AxleRotationB;
	struct Vector WheelPositionFR;
	struct Vector WheelPositionFL;
	struct Vector WheelPositionBR;
	struct Vector WheelPositionBL;
	struct Rotator WheelSpinFR;
	struct Rotator WheelSpinFL;
	struct Rotator WheelSpinBR;
	struct Rotator WheelSpinBL;
	struct Rotator DriveShaftSpin;
	struct Rotator WheelRotationFR;
	struct Rotator WheelRotationFL;
	struct Rotator WheelRotationBR;
	struct Rotator WheelRotationBL;
	struct Rotator SteeringRotation;
	EFortValetVehicleType VehicleType;
	bool bHasDriver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleConfigs : public UObject
{
public:
	int NumWheelsTouchingGroundForWheelsOnGround;
	float TimeToIdleBrake;
	float ChangeDirBrakeDelta;
	float VehicleSleepCounter;
	float VehicleMinSecondsBetweenUpdates;
	float VehicleMinFOV;
	float VehicleMaxFOV;
	float VehicleMinFOVSpeed;
	float VehicleMaxFOVSpeed;
	float VehicleFOVInterpSpeed;
	float InteractDistanceScalar;
	float MinFallDamageHeight;
	float MaxFallDamageHeight;
	float MinFallDamage;
	float MaxFallDamage;
	float PlayerFallDamageMultiplier;
	float VehicleEjectCooldown;
	float CameraSpaceForwardDistanceOverride;
	float PlayerToSocketSweepRadius;
	float VehicleGravity;
	float PlayerGravityMultiplier;
	float PassengerDamageOnDestruction;
	float MinFallDamageNormalScale;
	float DriverExitLaunchScalar;
	float DriverExitLaunchUpScalar;
	float DriverExitInAirLaunchScalar;
	float DriverExitInAirLaunchUpScalar;
	float PassengerExitLaunchScalar;
	float PassengerExitLaunchUpScalar;
	float PassengerExitInAirLaunchScalar;
	float PassengerExitInAirLaunchUpScalar;
	bool bCanDoTricks;
	bool bShouldDriverHaveReticle;
	bool bSupportsWraps;
	float ExitVehicleCoolDown;
	bool bShouldProtectFromFireDamage;
	bool bInheritScale;
	float HoldToExitTime;
	float ForceExitZOffset;
	bool bBlockBuilding;
	bool bPreferDriverSeatWhenEmpty;
	float FireDamagePerSecond;
	float FireDamageTickRate;
	bool bCanBeOnFire;
	TArray<struct VehicleDamageablePartConfig> DamageableParts;
	TArray<struct FName> ToggleablePartNames;
	struct ScalableFloat UnoccupiedAutoDestroyTime;
	struct ScalableFloat bUsesVehicleFuelSystem;
	class UClass* LeakFuelProjectileTemplate;
	struct ScalableFloat FuelTankCapacity;
	struct ScalableFloat FuelPerSecondIdle;
	struct ScalableFloat FuelPerSecondDriving;
	struct ScalableFloat FuelPerSecondBoosting;
	struct ScalableFloat FuelPerSecondLeaking;
	struct ScalableFloat MinFuelAtSpawn;
	struct ScalableFloat MaxFuelAtSpawn;
	struct ScalableFloat bInfiniteFuel;
	struct ScalableFloat LowFuelRepeatingPingDelay;
	struct ScalableFloat LowFuelPercent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsVehicleConfigs : public UFortVehicleConfigs
{
public:
	float WaterTestFrequency;
	float MinLinearSpeedRunningVarianceSq;
	float MinAngularSpeedRunningVarianceSq;
	float VehicleErrorPerDistanceCentimeters;
	float VehicleErrorPerDistanceCentimetersPerSecond;
	float VehicleErrorPerAngleDegrees;
	float VehicleErrorPerAngleDegreesPerSecond;
	float VehicleErrorPerUpdate;
	float VehicleInvalidErrorPerSecondTolerance;
	float VehicleInvalidErrorMaxSeconds;
	float VehicleInvalidErrorMinSeconds;
	float InPlaceRotationStrength;
	float WheelRadius;
	float IdleBrakeForce;
	float TooFastBrakeForce;
	float BrakeForce;
	float AutoBrakeSpeed;
	float WaterDragCoefficient;
	float WaterDragCoefficient2;
	float LateralFriction;
	float VehicleCameraMaxSteerAlpha;
	float MaxForwardSpeedToSwapReverseControls;
	float MinSpeedSteeringAngle;
	float MaxSpeedSteeringAngle;
	bool bSteerWithFrontWheels;
	bool bInvertSteeringWhenReversing;
	float MaxRestSpeed;
	float ImpactDamageSafeDegrees;
	float MinSpeedToDamage;
	float MaxSpeedToDamage;
	float MinSpeedDamage;
	float MaxSpeedDamage;
	float VehicleOnVehicle_ImpactVelocityMultiplier;
	float MinSpeedDamageNoPlayer;
	float MaxSpeedDamageNoPlayer;
	float MinSpeedAIDamage;
	float MaxSpeedAIDamage;
	float MinSpeedAIDamageNoPlayer;
	float MaxSpeedAIDamageNoPlayer;
	float MinImpactMagnitudeToDealDamageKmH;
	float MaxImpactDamage;
	float ImpactDamagePerImpulse;
	float ImpactReductionPerTransverseVelocity;
	float MaxImpactDamageReduction;
	float PlayerImpactDamageMultiplier;
	TArray<struct FortPhysicsVehicleDamageOverrideConfigs> DamageOverrideList;
	float VehicleFlipCooldown;
	float MinSpringHitNormal;
	float VehicleCameraGraceZone;
	float VehicleLeftAnalogSteeringDeadZone;
	float VehicleCameraLeftAnalogMultiplier;
	float InWaterTopSpeedMutliplier;
	float VehicleInPlaceThreshold;
	float VehicleWeightShiftPitchStrength;
	float VehicleWeightShiftRollStrength;
	float VehicleWeightShiftYawStrength;
	float JumpRateMultiplier;
	float VehicleDebugStrafeMultiplier;
	float GravityVelocitySteerForwardThreshold;
	float GravityVelocitySteerErrorThreshold;
	float GravitySteerMultiplier;
	float InWaterPushMultiplier;
	float MinWheelRotationSpeed;
	float WheelRotationAcceleration;
	float WheelRotationDampingPerSecond;
	float HonkTimeMax;
	float HonkCooldownMax;
	float HonkTimePerHonk;
	float VehicleLookAheadLength;
	float VehicleLookAheadInAirLength;
	float VehicleLookAheadMinSpeed;
	bool bEnableLookahead;
	float VehicleLookAheadMinNormal;
	float VehicleLookAheadStiff;
	float VehicleLookAheadDamp;
	float VehicleLookAheadInAirStiff;
	float VehicleLookAheadInAirDamp;
	float VehicleLookAheadMaxAccel;
	float VehicleLookAheadMaxAccelInAir;
	float VehicleAirControlStiff;
	float VehicleAirControlDamp;
	float VehicleAirYawStrength;
	float VehicleAirPitchStrength;
	float DragCoefficient;
	float DragCoefficient2;
	float MaxDragSpeed;
	float MinLinearSpeedToWake;
	float MinAngularSpeedToWake;
	float MaxDriveInclineAngle;
	float MaxAntigravityInclineAngle;
	float MaxDriveTiltAngle;
	float AxleOffsetZ;
	float SpringStiffMultiplier;
	float SpringDampMultiplier;
	float SpringStiffMultiplierWater;
	float SpringDampMultiplierWater;
	float SpringMaxAccelMultiplier;
	float SpringLengthMultiplier;
	float HasGroundSweepLengthMultiplier;
	float AngularDragCoefficient;
	float PitchAngularDrag;
	float RollAngularDrag;
	float AngularDragCoefficientWater;
	float PitchAngularDragWater;
	float RollAngularDragWater;
	float YawAngularDragWater;
	float VehicleAnalogReverse;
	float VehicleLookAheadMinSpeedInAir;
	float VehicleAutoAirPitchStrength;
	float VehicleAutoAirYawStrength;
	float VehicleAutoAirRollStrength;
	float VehicleMinVelAlongContactNormal;
	float VehicleMaxVelAlongContactNormal;
	float MinSameDirCollision;
	float MinCollisionSpeedToCorrect;
	float MinCollisionBoostNormal;
	float CollisionSpeedBoostAlpha;
	float CancelIgnoreForwardThreshold;
	float AngularDragCoefficientRampedUp;
	float PitchAngularDragRampedUp;
	float VehicleAirYawStrengthRampedUp;
	float VehicleAirPitchStrengthRampedUp;
	float SteerBrakeMultiplier;
	float WheelRadiusF;
	float WheelRadiusB;
	float PitchLeanStrength;
	float MaxForwardVelAccelLean;
	float MaxReverseVelAccelLean;
	float MaxSteerForAccelLean;
	float MinYawSpeedForLean;
	float YawLeanStrength;
	float AccelerationPitchCooldown;
	float YawLeanCooldown;
	float MaxAccelPitch;
	float MaxYawLean;
	float ContactModificationOffset;
	float VehicleFloorFriction;
	float VehicleSideScrapeFriction;
	float VehicleSideScrapeMaxCosAngle;
	float GroundCheckSweepRadius;
	float SMSleepCounter;
	float CorrectOrientationTimeout;
	float NudgeOrientationTimeout;
	float NudgeDistance;
	struct Vector CorrectOrientationCenterOfMassOffset;
	float CorrectOrientationLinearCoefficient;
	float CorrectOrientationAngularCoefficient;
	ECollisionChannel SpringCollisionChannel;
	bool bVehicleCameraSteering;
	bool bVehicleScreenSpaceSteering;
	bool bVehicleCameraLeftAnalogSteering;
	bool bUseKinematicReplicationWhenNotRendered;
	float PawnLaunchVerticalVelocityScale;
	float PawnLaunchForwardVelocityScale;
	float PawnLaunchMinVerticalVelocity;
	float PawnLaunchMinForwardVelocity;
	float PawnLaunchMaxSpeed;
	float PawnLaunchAngleAdjustment;
	float PawnLaunchMinDirection;
	float DestructionTraceAheadMinSpeed;
	float DestructionTraceAheadAmount;
	float DestructionImpulseAmount;
	float PropDestructionImpulseAmount;
	struct Vector DestructionTraceHalfSize;
	bool bCanDestroyProps;
	float HitRequiredMinSpeed;
	float MaxHealthToDestroyProp;
	float MaxHealthToDestroyPropBoosting;
	float MaxHealthToDestroyPropFast;
	float MaxHealthToDestroyPropSpeedThreshold;
	float PropImpactImpulseMagnitude;
	bool bShouldUseLocalIgnoreListForDestroyedBuildings;
	float RadiusForPropOverlapCheck;
	float PropOverlapMinMoveDistSquared;
	bool bForceUseImminentCollision;
	int MaxBudgetForActorTick;
	int MinBudgetForReducedSpring;
	bool bShouldServerRunReducedSprings;
	int MaxReducedSpringsPerTick;
	bool bDontApplyDragInAir;
	bool bDriverCanDamageVehicle;
	float MaxWheelSpinWound;
	bool bUseRechargeableFuel;
	float BuoyancyCoefficient;
	float BuoyancyDamp;
	float BuoyancyDamp2;
	float BuoyancyRampMinVelocity;
	float BuoyancyRampMaxVelocity;
	float BuoyancyRampMax;
	float MaxBuoyantForce;
	float UprightSpringWaterPitchStiff;
	float UprightSpringWaterPitchDamp;
	float UprightSpringWaterRollStiff;
	float UprightSpringWaterRollDamp;
	bool bModifyShocksInWater;
	bool bApplyPushForceAtSocket;
	float WaterVelocityStrength;
	float MaxWaterForce;
	int NumPontoonsForFullyInWater;
	float WaterIdleTimeForRiverPush;
	float WaterIdleTimeForSleep;
	int VelocityPontoonIndex;
	float WaterShorePushFactor;
	float YawAngularDragIdleMultiplier;
	float YawAngularDragWaterEmpty;
	float WaterBodyTraceTimer;
	float WaterBodyOverlapSphereRadius;
	float WaterBodyOverlapSphereCenterZOffset;
	bool bUseBoxBasedWaterOverlapChecks;
	struct Vector WaterBoxSizeForOverlaps;
	struct Vector WaterBoxOffsetForOverlaps;
	float ImminentCollisDestructionAngle;
	float ImminentCollisUpForwardMinProtected;
	float ImminentCollisUpNormalMinProtected;
	float DebasePlayerLaunchSpeed;
	struct ScalableFloat MetalOnHit;
	bool bOverrideErrorCorrection;
	struct RigidBodyErrorCorrection ErrorCorrectionOverride;
	class UClass* BoundsXYSplineClass;
	struct ScalableFloat bEnableDormantOnSleep;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayMutator : public AInfo
{
public:
	bool bMutatorActive;
	uint32_t MutatorEnabledMinigameStates;
	bool bNetworkDormantWhenDeactivated;
	struct GameplayTagContainer GameplayTagContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator : public AFortGameplayMutator
{
public:
	bool bMutatesGameMode;
	bool bMutatesGameState;
	class UClass* CachedGameMode;
	class UClass* CachedGameState;
	Unknown InitializedPlayerControllers;
	EFortMutatorOverridePriority OverridePriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSKMotorVehicle : public AFortAthenaSKVehicle
{
public:
	float AntiGravityScalerWhenEmpty;
	float SpringCompressionRefireTime;
	float MovementAmountParam;
	float CurrentMaxSpringCompression;
	float SparksLeftParam;
	float SparksRightParam;
	float LeftSlowDustParam;
	float RightSlowDustParam;
	float LeftFastDustParam;
	float RightFastDustParam;
	float FastDustParam;
	float CoastingMovementParam;
	float SkiddingAmountParam;
	float InAirParam;
	float ScrapingAmountParam;
	float AudioWindParam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSKMotorVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float WheelRotationRange;
	float VehicleFrontLowLateralFrictionMultiplier;
	float VehicleRearLowLateralFrictionMultiplier;
	float VehicleFrontHighLateralFrictionMultiplier;
	float VehicleRearHighLateralFrictionMultiplier;
	float LowToHighFrictionDuration;
	float UphillIncline;
	float ReverseToForwardFrontFriction;
	float ReverseToForwardRearFriction;
	float ReverseToForwardMaxSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeatureData : public GameFeatureData
{
public:
	TArray<struct UIExtension> UIExtensions;
	struct TSoftClassPtr<UObject> WeaponReticleExtensions;
	struct TSoftClassPtr<UObject> DynamicHUDDirectorClass;
	struct TSoftClassPtr<UObject> UIMapManagerOverrideClass;
	struct TSoftClassPtr<UObject> MobileHUDWidgetRegistry;
	struct TSoftClassPtr<UObject> MobileHUDPresetExtensionContainer;
	TArray<struct FString> GameplayCueNotifyPaths;
	TArray<struct FortGameFeatureDataBaseCurveTableOverrides> PlaylistBaseCurveTableOverrides;
	TArray<struct FortGameFeatureDataBaseDataTableOverrides> PlaylistBaseDataTableOverrides;
	struct FortGameFeatureLootTableData DefaultLootTableData;
	Unknown PlaylistOverrideLootTableData;
	struct TSoftClassPtr<UObject> DefaulAILootOnDeathDataTable;
	struct TSoftClassPtr<UObject> DefaultGameData;
	Unknown PlaylistOverrideGameData;
	struct TSoftClassPtr<UObject> DefaultRangedWeapons;
	Unknown PlaylistOverrideRangedWeapons;
	Unknown PlaylistOverrideAILootOnDeathDataTable;
	class UClass* PlayspaceConfig;
	class UClass* LevelOverlayConfig;
	TArray<struct TSoftClassPtr<UObject>> AdditionalLevels;
	TArray<struct TSoftClassPtr<UObject>> AdditionalLevelsServerOnly;
	struct TSoftClassPtr<UObject> PlayerAbilitySet;
	struct TSoftClassPtr<UObject> FortDeathCauseData;
	TArray<class UClass*> ContextualTutorials;
	struct TSoftClassPtr<UObject> FactionMapping;
	struct TSoftClassPtr<UObject> WeaponUpgradesDataTable;
	TArray<struct PawnGoalSelectionTableEntry> PawnGoalSelectionTable;
	TArray<class UClass*> SharedItemsToFullyLoad;
	TArray<struct FortGameFeatureItemsToFullyLoadData> PlaylistItemsToFullyLoad;
	TArray<class UClass*> ExternalContentDependencies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance : public UFortAnimInstance
{
public:
	float EmoteForcedRootYaw;
	float EmoteHipOffsetAlpha;
	struct Vector CurrentEmoteHipOffset;
	float DeltaTime;
	class UClass* FortPlayerPawn;
	EFortPlayerAnimBodyType AnimBodyType;
	EFortCustomGender Gender;
	float FallAnimDuration;
	float FallPlayRate;
	class UClass* FortPlayerPawnAthena;
	float DefaultSprintingMaxPlayrate;
	struct FortAnimInput_SpeedWarping SpeedWarping;
	float JogStartSpeedWarpingAlpha;
	struct FortAnimInput_SpeedWarping JogStartSpeedWarping;
	struct FortAnimInput_ShoppingCart ShoppingCartInput;
	struct FortAnimInput_GolfCart GolfCartInput;
	struct FortAnimInput_Quad QuadBikeInput;
	struct FortAnimInput_MountedTurret MountedTurretInput;
	struct FortAnimInput_FerretVehicle FerretVehicleInput;
	struct FortAnimInput_Zipline ZiplineInput;
	struct FortAnimInput_Ragdoll RagdollInput;
	struct FortAnimInput_JackalVehicle JackalVehicleInput;
	struct FortAnimInput_OctopusVehicle OctopusVehicleInput;
	struct FortAnimInput_CommonVehicle CommonVehicleInput;
	struct FortAnimInput_CommonWeapon CommonWeaponInput;
	struct FortAnimInput_BowWeapon BowWeaponInput;
	struct FortAnimInput_CreativeMoveTool CreativeMoveToolInput;
	struct FortAnimInput_DBNOCarried DBNOCarriedInput;
	struct FortAnimInput_RandomizeMontageSection RandomizeMontageSectionInput;
	struct FortAnimInput_SlopeInfo SlopeInfoInput;
	struct FortAnimInput_TransitionProperties TransitionPropertiesInput;
	float SlopeWarpingAlpha;
	float RootSlopeRotationAlpha;
	struct Rotator RootSlopeRotationOffset;
	float DBNOTurnPlayRate;
	float DBNOTurnPlayRateAbs;
	struct FortAnimInput_TurnInPlace TurnInPlaceInput;
	struct Rotator TurnPelvisRotationOffset;
	struct Vector TurnPelvisTranslationOffset;
	struct Vector EmoteAnimOffset;
	struct Vector WholeAnimOffset;
	struct FortAnimInput_AdjustedAim AdjustedAimBase;
	struct FortAnimInput_AdjustedAim AdjustedAimAthena;
	struct FortAnimInput_AdjustedAim AdjustedAim;
	struct FortAnimInput_SpringGlider SpringGlider;
	struct FortAnimInput_HandIK HandIKInput;
	float ADSToNonADSBlendTime;
	float NonADSToADSBlendTime;
	float BlendOutOfWallBlockTime;
	float BlendOutOfWallBlockTimeRemaining;
	float HandIKRetargetingWeight;
	float RightHandIKAlpha;
	float LeftHandIKAlpha;
	float LeftHandFKAlpha;
	bool bEnableHandIK;
	bool bIsBodyTypeManuallySet;
	float SnapWeapon_LHandAlpha;
	float SnapWeapon_LHandAlphaSwitch;
	float LegIKAlpha;
	float PelvisAdjustmentCrouchAlpha;
	struct FortAnimInput_PelvisAdjustment PelvisAdjustmentInput;
	struct FortAnimInput_Skydiving Skydiving;
	struct Rotator FreeFall_PelvisModRot;
	float FreeFall_AimPitch;
	float FreeFall_DiveAngleInterpSpeed;
	bool bFreeFall_UseDiveAngleMod;
	bool bIsSlopeSliding;
	float SlopeSlidingPitch;
	float SlopeSlidingRoll;
	float JumpAdditiveLayerAlpha;
	struct CachedAnimRelevancyData SwimDiveLandOnGroundRelevancyData;
	struct CachedAnimStateData JumpAdditiveLayerPassthrough;
	float JumpAdditiveLeanAlpha;
	float DisableRightArmAdditiveCurveAlpha;
	float DisableArmsHeadAdditiveCurveAlpha;
	float DisableIKRootAdditiveCurveAlpha;
	float DisableUpperBodyAdditiveMeshSpaceCurveAlpha;
	struct FortAnimInput_PlayerAnimAsset CurrentAnimSet;
	struct FortAnimInput_PlayerGliderAnimAsset CurrentGliderAnimSet;
	struct FortAnimInput_WeaponAdditiveAnimAsset CurrentWeaponAdditiveAnimSet;
	TArray<struct FName> BonesHiddenByAnimSet;
	float AimPitchAdjustment;
	float AimYawAdjustment;
	float PlayMeleeAttackAO;
	struct Transform LastFramePawnTransform;
	float MaxAimYawAdjustment;
	float MaxPitch;
	float MaxYaw;
	float ReticleAimDistance;
	float AimAdjustmentInterpSpeed;
	float AimTwistCorrectionExponent;
	float AimDriverDownwardPitchCorrectionScale;
	float AimDriverUpwardPitchCorrectionScale;
	float RecentlyFiredAbilityTime;
	struct Vector SlopeWarpingFloorOffset;
	struct Rotator WeaponAimingFreezeInterpScale;
	struct FName WeaponAimingCurveName;
	struct FName WeaponAimingFreezeCurveName;
	class UClass* ConsumableOffsetPose;
	class UClass* MissingCosmeticUpperBodyOverride;
	class UClass* MissingCosmeticLowerBodyOverride;
	class UClass* MissingCosmeticLowerBodyInMotionOverride;
	bool bEnableMissingCosmeticOverride;
	bool bAimWeaponTowardsReticle;
	bool bDebugWeaponAiming;
	bool bCachedPawnTransform;
	bool bHasValidWeaponMuzzleSocket;
	bool bShouldUseCrouchUpperBodySlot;
	bool bShouldUseCrouchInPlaceAdditiveSlot;
	bool bUseCustomFloorOffset;
	bool bPlayConsumableOffsetPose;
	bool bIsOnGround;
	bool bIsTargeting;
	bool bIsTargetingConsumableThrow;
	bool bPlayUpperBodyTargeting;
	bool bPlayingRootMotion;
	bool bIsStunned;
	bool bIsMontagePlaying;
	bool bIsPlayingMeleeAnim;
	bool bIsPlayingUpperBodySlot;
	bool bRecentlyFiredAbility;
	bool bIsGoingCommando;
	bool bDisableUpperBodySlotOnLowerBodyInIdle;
	bool bWasRelaxedLevel1;
	bool bTempIsRelaxedLevel1;
	bool bIsCrouching;
	bool bIsCrouchMoving;
	bool bIsCrouchSprinting;
	bool bIsSurfaceSwimming;
	bool bIsInTetheredMovement;
	bool bIsDiveJumping;
	bool bSwimmingAllowSlowSprint;
	bool bSwimmingIsWaterLanding;
	bool bSwimmingHasReachedJumpApex;
	bool bSwimmingHeadUnderWaterDuringWaterLand;
	bool bSwimmingJumpInitiatedFromWater;
	bool bSwimmingIsJumpAscending;
	bool bStoppedDivingWhileUnderWater;
	bool bSwimmingDoveIntoGround;
	bool bSwimmingPlayDBNOTurnEast;
	bool bIsSprinting;
	bool bIsAccelerating2D;
	bool bIsMoving2D;
	bool bWasMoving2D;
	bool bIsAboveMinimumLocomotionSpeed;
	bool bIsBackpedaling;
	bool bShouldWalkRightFootFwd;
	bool bShouldPlayJogStartTransition;
	bool bShouldPlayJogStopTransition;
	bool bShouldPlayJogPivotTransition;
	bool bStartTransitionActive;
	bool bStopTransitionActive;
	bool bPivotTransitionActive;
	bool bShouldPlayPostPivotTransition;
	bool bShouldEarlyOutStartState;
	bool bShouldEarlyOutStopState;
	bool bShouldEarlyOutPivotState;
	bool bIsDBNO;
	bool bIsInterrogating;
	bool bIsBeingInterrogated;
	bool bIsUsingJetpack;
	bool bIsFreeFloating;
	bool bIsGoopSwimming;
	bool bGoopExitJetPack;
	bool bGoopJumpExecuted;
	bool bIsUsingRemoteControlPawn;
	bool bIsInVehicle;
	bool bIsValetDriver;
	bool bIsValetPassenger;
	bool bIsOstrichDriver;
	bool bIsOstrichGunner;
	bool bIsInShoppingCart;
	bool bIsShoppingCartFrontPassenger;
	bool bIsShoppingCartSidePassenger;
	bool bIsInCannon;
	bool bIsDBNOCarrying;
	bool bIsDBNOCarried;
	bool bIsFemale;
	bool bHasFacialAnimationData;
	bool bStopJogDoOnceTriggered;
	bool bStartJogDoOnceTriggered;
	bool bPivotTransitionDoOnceTriggered;
	bool bPostPivotTransitionDoOnceTriggered;
	bool bIsFallingSlow;
	bool bIsFloatingHigher;
	bool bIsFloatingHigherInAir;
	bool bIsBalloonInAir;
	bool bHasBalloons;
	bool bIsGhost;
	bool bHasIcyFeet;
	bool bIsMovingAndInMotionEmote;
	bool bIsPlayingEmote;
	bool bIsGrappleRopeActive;
	EFortBuildingState BuildingState;
	float FullBodyInAirFallTimeThreshold;
	float LocalYawNormalizationDeadzone;
	float FullBodyInAirLowerBodyWeight;
	float TargetingWeight;
	float MeleeTwistCurveValue;
	float JumpUpperBodyBlendWeight;
	float RightArmMaskWeight;
	float LeftArmMaskWeight;
	float UpperBodyNoAdditivesMaskWeight;
	float FullBodyAimOffsetAlpha;
	float LocomotionAdditiveAlpha;
	float LocalAccelYawAngle;
	float LocalAccelYawAngleLastTick;
	float LocalAccelDeltaYawAngle;
	float MaxSpeed;
	float VelocityZ;
	float Speed2D;
	float LocalVelocityYawAngle;
	float LocalVelocityYawAngleMinusJogBlendSpaceRotation;
	float LocalVelocityYawAngleMinusMeleeTwist;
	float LocalAccelVelocityYawDelta;
	float SpeedAdjustedPlayrate;
	float LeanAdditiveAlpha;
	float LeanAngle;
	float SprintYawAngle;
	float LocomotionTransitionAdditiveAlpha;
	float StartStateWeight;
	float StartStateRotationMultiplier;
	float StartAnimDeltaAngleNorth;
	float StartAnimDeltaAngleEast;
	float StartAnimDeltaAngleSouth;
	float StartAnimDeltaAngleWest;
	float StopStateRotationMultiplier;
	float StopStateWeight;
	float StopAnimDeltaAngle;
	float JogPrePivotTimer;
	float PivotStateWeight;
	float PrePivotAnimDeltaAngle;
	float PostPivotAnimDeltaAngle;
	float TransitionPlayRate;
	float YawDeltaCurrentTick;
	float YawDeltaLastTick;
	float YawDeltaSmoothed;
	float AbsYawDeltaSmoothed;
	float PawnToVehicleDeltaYawAngleDegrees;
	float LastPawnToVehicleDeltaYawAngleDegrees;
	float SavedWeaponAbilityLastFireTime;
	float SwimDiveJumpLayerAlpha;
	float FullBodyAdditiveLayerAlpha;
	float SwimmingImmersionDepth;
	float SwimmingYawDeltaRatePerSecond;
	float SwimmingSpeedRelativeToFlow;
	float SwimmingYawDeltaRatePerSecondSmooth;
	float SwimmingYawDeltaRatePerSecondSmoothClamped;
	float SwimmingSprintYawDeltaRatePerSecondSmooth;
	float SwimmingDivePitch;
	float SwimmingDivePitchDeltaRatePerSec;
	float SwimmingVelocityAngle;
	float SwimmingLocalAccelerationYawAngleSmooth;
	float SwimmingResetStoppedDivingWhileUnderWaterTime;
	float SwimmingResetDoveIntoGroundTime;
	float SwimmingDiveJumpingBlendOutTime;
	struct Vector WorldAcceleration;
	struct Vector LocalAcceleration;
	struct Vector WorldVelocity;
	struct Vector LocalVelocity;
	struct Vector ActorSpaceVelocityDirPreTurn;
	struct Vector SwimmingRelativeVelocityToWater;
	struct Vector SwimmingWaterSurfaceNormal;
	struct Rotator ActorRotationLastTick;
	EFortWeaponCoreAnimation WeaponCoreAnim;
	EFortWeaponCoreAnimation WeaponCoreAnimForEmptyHands;
	class UClass* DefaultWeaponAnimSet;
	class UClass* WeaponAnimSet;
	class UClass* WeaponOverrideAnimSet;
	class UClass* WeaponAdditiveAnimSet;
	class UClass* WeaponAnimSetForEmptyHands;
	Unknown CurrentGliderAnimSetDataAsset;
	EFortCardinalDirection PreviousFrameLocomotionCardinalDirection;
	EFortCardinalDirection LocomotionCardinalDirection;
	EFortCardinalDirection StartTransitionInitialDirection;
	EFortCardinalDirection StopCardinalDirection;
	EFortCardinalDirection PrePivotCardinalDirection;
	EFortCardinalDirection PostPivotCardinalDirection;
	float LocomotionDeltaAngle_N;
	float LocomotionDeltaAngle_S;
	float LocomotionDeltaAngle_E;
	float LocomotionDeltaAngle_W;
	float TargetingSpeed;
	float JumpUpperBodyBlendSpeed;
	float TargetingWeightInLocomotion;
	float MinimumLocomotionSpeed;
	float BackpedalSpeedThresholdAngle;
	float SpeedAdjustedPlayratePivotSpeed;
	float AuthoredCrouchSprintSpeed;
	float AuthoredCrouchWalkSpeed;
	float AuthoredCrouchJogSpeed;
	float AuthoredSprintSpeed;
	float AuthoredWalkSpeed;
	float AuthoredJogBwdSpeed;
	float AuthoredJogFwdSpeed;
	float AuthoredJogStrafeSpeed;
	float LeanFadeInSpeed;
	float LeanFadeOutSpeed;
	float LeanAngleMultiplier;
	float LeanAngleBackpedalMultiplier;
	float SprintYawAngleInterpSpeed;
	float SprintYawAngleFadeOutSpeed;
	float LocomotionDeadZoneAngle;
	float StartStateRotationFadeInSpeed;
	float StopStateRotationFadeOutSpeed;
	float JogPivotTimeToPivot;
	float PostPivotAnimInterpSpeed;
	float MaxAllowedPivotRotation;
	struct FName MeleeTwistCurveValueName;
	struct FName MeleeAnimCurveValueName;
	struct FName AdditiveLayerCurveValueName;
	struct FName MaskRightArmCurveValueName;
	struct FName StartAnimCurveValueName;
	struct FName StopAnimCurveValueName;
	struct FName PivotAnimCurveValueName;
	bool bShouldDisableJogTransitions;
	bool bIsShieldUp;
	bool bIsJumpBoosting;
	bool bShouldProcessFullAnimUpdate;
	bool bIsWaterJump;
	bool bIsWaterSprintBoostPending;
	bool bIsWaterSprintBoosting;
	bool bIsRelaxedLevel1AndNotJumpBoosting;
	bool bPlayWeaponInspect;
	bool bInterruptWeaponInspect;
	bool bInterruptWeaponInspectNoBlend;
	bool bPlayRelaxedEntry;
	bool bInterruptRelaxedEntryNoBlend;
	bool bIsGrapplerActive;
	bool bSwimmingSprintSlowEnoughTimePassed;
	bool bSwimmingIsJumpOrLanding;
	bool bSwimmingIsWaterPaddlingToSurface;
	bool bIsRelaxedLevel1AndNotJumpingFromWater;
	bool bIsRelaxedLevel2AndNotJumpingFromWater;
	bool bIsMeleeGuarding;
	bool bIsMeleeDeflecting;
	bool bUsingUncleBrolly;
	bool bIsPlayingForwardMotionAnim;
	bool bIsPatrolling;
	bool bUsingDoubleJumpAbility;
	struct FName HeadTrackingReticleSocketName;
	EAxis HeadTrackingReticleSocketLookAtAxis;
	float HeadTrackingReticleInterpSpeed;
	struct Rotator HeadTrackingReticleAdjustment;
	float HeadTrackingReticlePitchAlpha;
	float HeadTrackingReticleAimDistance;
	float HeadTrackingReticleAimDistanceDownsights;
	struct GameplayTagAnimations GameplayTagAnimations;
	struct Vector StandardIdlePelvisOffset;
	struct Vector LargeFemaleIdlePelvisOffset;
	struct Vector IdlePelvisOffset;
	float IdlePelvisOffsetAlpha;
	int PawnLOD;
	float WeaponInspectDelayTimeRemaining;
	float MinDelayBetweenWeaponInspects;
	float ParaGliderTurnAlpha;
	float ParaGliderAddAlpha;
	float DisabledFullBodySprintTimeRemaining;
	bool bIsFullBodySprintTransitionDisabled;
	bool bParaGlide_OpenGlider;
	bool bIsCharacterCustomizationLoaded;
	bool bParaGlideSurferHipsAreLow;
	bool bWantsGliderAnimAssetUpdate;
	bool bTransition_FullBody_Sprinting;
	bool bTransition_Swimming_FullBody_Sprinting;
	bool bTransition_NewFallAditive_NewFallLandAdditive;
	bool bTransition_NewFallAditive_NewFallLandAdditive_Brolly;
	bool bTransition_Sprinting_FullBody;
	bool bTransition_FullBody_SwimSprinting;
	bool bTransition_FullBody_Stunned;
	bool bTransition_FullBody_DBNOMove;
	bool bTransition_FullBody_DBNOTurn;
	bool bTransition_Fullbody_LaunchpadTakeOff;
	bool bEarlyOut_Lowerbody_Turns;
	bool bTransition_LowerBody_Shuffle;
	bool bTransition_LowerBody_Movement;
	bool bTransition_LocomotionAdditive_CrouchTurning;
	bool bLocomotion_Idles_to_Turns;
	bool bFullBodyAdditives_NewFallAdditive_to_BalloonLoop;
	bool bTransition_IdleAdditive_to_SwimJumpStart;
	bool bTransition_SwimJumpStart_to_NewJumpAdditive;
	bool bTransition_DiveJumpLoop_to_DiveJumpFall;
	bool bTransition_SwimDiveLandOnGround_to_SplitBody;
	bool bTransition_Sprinting_to_Conduit;
	bool bTransition_DBNOSwimIdle_to_DBNOSwimTurn;
	bool bTransition_SwimJumpSurfaceLoop_to_SwimJumpSurfaceEnd;
	bool bTransition_SwimJumpSurfaceLoop_to_IdleAdditive;
	bool bTransition_NewFallLandAdditive_to_SwimJumpFallLoop;
	bool bTransition_NewJumpLoopAdditive_to_NewFallAdditive;
	bool bIsUmbrellaFailing;
	bool bEnableEmptyHands;
	bool bHideWeaponForEmptyHands;
	bool bSupressJogStartAdditiveForLiveEvent;
	struct Vector Ragdoll_InitialImpact_ThrowVelocity;
	ESlotEnvironmentExposure VehicleSlotEnvironmentExposure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_OctopusDriver : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector SeatLocation;
	struct Rotator HandRotationOffset;
	struct Rotator FootRotationOffset;
	struct Rotator SeatRotationPose;
	struct Vector HandAttachmentLocLeft;
	struct Rotator HandAttachmentRotLeft;
	struct Vector HandAttachmentLocRight;
	struct Rotator HandAttachmentRotRight;
	struct Vector FootAttachmentLocLeft;
	struct Rotator FootAttachmentRotLeft;
	struct Vector FootAttachmentLocRight;
	struct Rotator FootAttachmentRotRight;
	EFortCardinalDirection PivotDir;
	float LowerVelocityTime;
	float LowerVelocityDuration;
	float FwdBwd;
	float LeftRight;
	float SeatSteerYaw;
	float SeatSteerPitch;
	float SeatSteerStrength;
	bool bIsLowerVelocity;
	bool bWasLowerVelocity;
	bool bShouldPlayGrappleFire;
	bool bShouldApplyLeanAdditive;
	bool bShouldPlayPivotTransition;
	bool bHasDriver;
	bool bIsBoosting;
	bool bWantsEastWestPivot;
	bool bWantsNorthSouthPivot;
	bool bIsInAir;
	bool bIsTowhookHolstered;
	bool bIsTowhookExtending;
	bool bIsTowhookAttached;
	bool bEnterMovingInPlace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeapon : public AActor
{
public:
	struct FScriptMulticastDelegate OnWeaponRateOfFireChanged;
	struct FScriptMulticastDelegate OnPressTrigger;
	struct FScriptMulticastDelegate OnReleaseTrigger;
	bool bIsEquippingWeapon;
	bool bIsReloadingWeapon;
	bool bIsChargingWeapon;
	bool bDisableEquipAnimation;
	bool bIsAimingConsumable;
	struct FScriptMulticastDelegate OnLocalAmmoChanged;
	struct FScriptMulticastDelegate OnLocalReloadStarted;
	struct FScriptMulticastDelegate OnLocalReloadCancelled;
	struct FScriptMulticastDelegate OnLocalTargetingChanged;
	struct FScriptMulticastDelegate OnSecondaryAbilityToggled;
	struct FScriptMulticastDelegate OnWeaponFireAudioVisuals;
	struct FScriptMulticastDelegate OnReticleColorChanged;
	bool bUseAttributeCaching;
	class UClass* WeaponData;
	class UClass* CosmeticOverrideWeaponData;
	bool bImpactFXAttachedToHitActor;
	TArray<struct FortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;
	class UClass* HitNotifyAudioBank;
	bool bRemoveAbilitiesWhenRemovedFromInventory;
	EFortWeaponAbilityRemovalPolicy GrantedAbilityRemovalPolicy;
	byte EquippedWeaponDestroyWrapperRepCounter;
	float PersistentFXStartTime;
	float MinimumTimeForPersistentFX;
	struct TSoftClassPtr<UObject> OverrideItemWrapSoftPtr;
	EFortWeaponReduceMeshWorkSetting WeaponReduceMeshWorkSetting;
	bool bShouldDrawNativeReticle;
	class UClass* ReticleImage;
	class UClass* AutoFireReticleImage;
	struct Color ReticleDefaultColor;
	struct Color ReticleEnemyColor;
	struct Color ReticleBuildingColor;
	struct Color ReticleNoTargetColor;
	class UClass* HitNotifyReticleImage;
	class UClass* HitNotifyLocationReticleImage;
	float HitNotifyDisplayDuration;
	class UClass* ReticleCenterImage;
	class UClass* ReticleCenterPerfectAimImage;
	class UClass* ReticleInvalidTargetImage;
	class UClass* MuzzleBlockedReticleImage;
	class UClass* ReticleAltCenterImage;
	class UClass* ReticleOuterImage;
	class UClass* ReticleAltOuterImage;
	float ReticleDefaultPrimaryStrikeAngle;
	float ReticleDefaultSecondaryStrikeAngle;
	bool bSupportsAutofireAtReticleTarget;
	class UClass* CameraBase3PClass;
	class UClass* CameraTargeting3PClass;
	class UClass* CameraBase1PClass;
	class UClass* CameraTargeting1PClass;
	class UClass* DestroyedSound;
	class UClass* OutOfAmmoSound;
	class UClass* ReloadSounds;
	class UClass* PrimaryFireSound1P;
	class UClass* PrimaryFireSound;
	class UClass* PrimaryFireStopSound1P;
	class UClass* PrimaryFireStopSound;
	class UClass* SecondaryFireSound;
	class UClass* SecondaryFireStopSound;
	class UClass* ChargeFireSound1P;
	class UClass* ChargeFireSound;
	class UClass* TargetingStartSound;
	class UClass* TargetingEndSound;
	float PrimaryFireSoundFadeOutTime;
	class UClass* ImpactPhysicalSurfaceSounds;
	class UClass* ImpactPhysicalSurfaceEffects;
	TArray<class UClass*> ImpactNiagaraPhysicalSurfaceEffectAssets;
	class UClass* ImpactCameraShake;
	class UClass* PrimaryForceFeedbackEffect;
	class UClass* SecondaryForceFeedbackEffect;
	class UClass* PrimaryImpactForceFeedbackEffect;
	class UClass* SecondaryImpactForceFeedbackEffect;
	TArray<class UClass*> ImpactNiagaraPhysicalSurfaceEffectInstances;
	class UClass* DataStoreManager;
	class UClass* FireAudioChannels;
	class UClass* ReloadAudioChannels;
	class UClass* TargetingAudioChannels;
	int CurrentGunFireIndex;
	class UClass* WeaponMesh;
	TArray<class UClass*> AllWeaponMeshes;
	TArray<class UClass*> DefaultWeaponMaterials;
	Unknown OriginalMaterialMap;
	int FireAudioChannelWantsToPlay;
	int WrapSectionMask;
	bool bUsingSecondaryFireAudio;
	bool bHasCachedAdditionalMeshes;
	struct Color CurrentReticleColor;
	struct Vector CurrentDamageStartLocation;
	struct Vector CurrentAdjustedAimDirection;
	struct FortEffectDistanceQuality FireFXSignificance;
	float LastFireTime;
	float LastFireTimeVerified;
	bool bIsPlayingFireFX;
	bool bFireFXTriggered;
	float TimerIntervalAdjustment;
	float InputQueueTimePercent;
	bool bAllowTargeting;
	bool bIsTargeting;
	float LastTargetingTransitionTime;
	struct Vector TargetSourceOffset;
	struct Vector TargetSourceOffsetWhileCrouched;
	struct Vector TargetSourceOffsetWhileTargeting;
	bool bTraceThroughPawns;
	bool bTraceThroughWorld;
	int TraceThroughPawnsLimit;
	int TraceThroughBuildingsLimit;
	int TraceThroughLandscapeLimit;
	bool bUseProjectileTrace;
	bool bUseVariableFocalDistanceTargeting;
	bool bUseWeaponTraceForReticle;
	float ProjectilePitchOffset;
	float LastReloadTime;
	float LastSuccessfulReloadTime;
	float CurrentReloadDuration;
	struct Guid ItemEntryGuid;
	struct Guid TrackerGuid;
	int WeaponLevel;
	int AmmoCount;
	int PhantomReserveAmmo;
	int BurstFireCounter;
	float ChargeTime;
	float AccumulatedChargeTime;
	struct GameplayTag StartChargeGameplayCue;
	struct GameplayTag MaxChargeGameplayCue;
	struct GameplayTag OutOfAmmoTextOverrideFailTag;
	struct GameplayTag NoSpareAmmoToReloadTextOverrideFailTag;
	int CurrentShotLogIndex;
	TArray<uint32_t> ShotLogFlags;
	bool bInitializedWeaponItem;
	bool bPendingDestroyDueToDurabilityOrStackCount;
	bool bCompletedAppliedAlterationsLoad;
	bool bCompletedWeaponLoad;
	bool bIsCosmeticLimited;
	bool bReplicatedAppliedAlterationsWithNoInstigator;
	bool bShouldFullyApplyVariantsOnEquip;
	bool bSecondaryFireAlwaysCancelSwimSprint;
	int16_t ChargeStatusPack;
	Unknown AttachedTrajectoryIndicator;
	class UClass* ActiveAbility;
	struct GameplayAbilitySpecHandle PrimaryAbilitySpecHandle;
	struct GameplayAbilitySpecHandle SecondaryAbilitySpecHandle;
	struct GameplayAbilitySpecHandle ReloadAbilitySpecHandle;
	struct GameplayAbilitySpecHandle ImpactAbilitySpecHandle;
	struct GameplayAbilitySpecHandle ReticleTraceOverrideSpecHandle;
	TArray<struct GameplayAbilitySpecHandle> EquippedAbilityHandles;
	TArray<struct FortAbilitySetHandle> EquippedAbilitySetHandles;
	TArray<class UClass*> AppliedAlterations;
	TArray<struct FortWeaponModSlot> WeaponModSlots;
	TArray<struct FortEquippedWeaponModSlot> EquippedWeaponModSlots;
	struct CosmeticVariantCache PreviousWeaponVariants;
	class UClass* AppliedItemWrap;
	class UClass* CachedFXManager;
	class UClass* CachedSignificanceManager;
	struct FName MuzzleSocketName;
	struct FName MuzzleFalloffSocketName;
	struct FName WeaponHandSocketNameOverride;
	struct FName LeftHandWeaponHandSocketNameOverride;
	bool bForceOverrideGenerateOverlapEvents;
	float MaxWeaponSwitchNetworkWaitTime;
	float LastFireAbilityTime;
	class UClass* EquipAnimation;
	class UClass* ReloadAnimation;
	TArray<class UClass*> CustomReloadAnimationPerAmmoToFill;
	class UClass* PrimaryAbilityAnimation;
	class UClass* SecondaryAbilityAnimation;
	class UClass* WeaponEquipMontage;
	class UClass* WeaponReloadMontage;
	TArray<class UClass*> CustomWeaponReloadMontagePerAmmoToFill;
	class UClass* WeaponPrimaryAbilityMontage;
	class UClass* WeaponSecondaryAbilityMontage;
	class UClass* PoseOffsetAnimSequence;
	class UClass* PoseOffsetAnimSequenceFemaleOverride;
	EFortWeaponCoreAnimation WeaponCoreAnimation;
	class UClass* WeaponPawnAnimSet;
	class UClass* WeaponPawnAnimLayerOverlayClass;
	class UClass* WeaponAdditiveAnimSet;
	class UClass* WeaponPawnAnimsetOverride;
	class UClass* UnableToPerformActionMontageOverride;
	struct TSoftClassPtr<UObject> ActiveFireMode;
	struct TSoftClassPtr<UObject> FireModeData_HipFire;
	struct TSoftClassPtr<UObject> FireModeData_AimDownSight;
	class UClass* ItemWrapModifier;
	class UClass* LockOnTargetCandidate;
	bool bIgnoreTryToFireSlotCooldownRestriction;
	bool bFireConsumableAnalyticEvent;
	struct FScriptMulticastDelegate OnWeaponHudKeyActionUpdated;
	TArray<struct WeaponHudData> HudKeyActionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingSMActor : public ABuildingActor
{
public:
	class UClass* TextureData;
	class UClass* StaticMesh;
	TArray<struct TierMeshSets> AlternateMeshes;
	bool bForceReplicateSubObjects;
	bool bNoPhysicsCollision;
	bool bNoCameraCollision;
	bool bNoPawnCollision;
	bool bNoAIPawnCollision;
	bool bBlocksCeilingPlacement;
	bool bBlocksAttachmentPlacement;
	bool bUsePhysicalSurfaceForFootstep;
	bool bRandomYawOnPlacement;
	bool bRandomScaleOnPlacement;
	bool bClearMIDWhenReturningToUndamagedState;
	byte NumFrameSubObjects;
	EFortResourceType ResourceType;
	struct Vector2D RandomScaleRange;
	struct FName DestructionLootTierGroup;
	struct TSoftClassPtr<UObject> WindSpeedCurve;
	struct TSoftClassPtr<UObject> WindPannerSpeedCurve;
	struct TSoftClassPtr<UObject> WindAudio;
	float ShieldBuffMaterialParamValue1;
	float ShieldBuffMaterialParamValue2;
	float AnimatingDistanceFieldSelfShadowBias;
	float AnimatingSubObjects;
	float PlayerGridSnapSize;
	int AltMeshIdx;
	bool bAllowBuildingCheat;
	bool bMirrored;
	bool bNoCollision;
	bool bSupportsRepairing;
	bool bHiddenDueToTrapPlacement;
	bool bAttachmentPlacementBlockedFront;
	bool bAttachmentPlacementBlockedBack;
	bool bIsForPreviewing;
	bool bUnderConstruction;
	bool bUnderRepair;
	bool bIsInitiallyBuilding;
	bool bCameraOnlyCollision;
	bool bNoWeaponCollision;
	bool bNoRangedWeaponCollision;
	bool bNoProjectileCollision;
	bool bDoNotBlockInteract;
	bool bNeedsMIDsForCreative;
	bool bAllowResourceDrop;
	bool bHideOnDeath;
	bool bPlayDestructionEffects;
	bool bSkipConstructionSounds;
	bool bSupportedDirectly;
	bool bForciblyStructurallySupported;
	bool bRegisterWithStructuralGrid;
	bool bCurrentlyBeingEdited;
	bool bAllowWeakSpots;
	bool bUseComplexForWeakSpots;
	bool bCanSpawnAtLowerQuotaLevels;
	bool bNeedsWindMaterialParameters;
	bool bPlayBounce;
	bool bPropagateBounce;
	bool bPropagatesBounceEffects;
	bool bNeedsDamageOverlay;
	bool bDeriveCurieIdentifierFromResourceType;
	bool bAllowCustomMaterial;
	bool bUseSingleMeshCullDistance;
	ESavedSupportStatus SavedDirectlySupportedStatus;
	ELootQuotaLevel MaximumQuotaLevelBound;
	EBuildingAnim BuildingAnimation;
	byte CurAnimSubObjectNum;
	byte CurAnimSubObjectTargetNum;
	uint16_t ActorIndexInFoundation;
	struct FortBounceData BounceData;
	float DestroyedTime;
	float InfluenceMapWeight;
	class UClass* BASEEffectMeshComponent;
	TArray<struct BuildingNavObstacle> NavObstacles;
	struct Vector BuildingPlacementDistance;
	struct Vector_NetQuantize100 ReplicatedDrawScale3D;
	struct EditorOnlyBuildingInstanceMaterialParameters EditorOnlyInstanceMaterialParameters;
	class UClass* StaticMeshComponent;
	class UClass* WeakPointComponent;
	class UClass* BaseMaterial;
	struct FScriptMulticastDelegate OnConstructionComplete;
	struct BuildingActorMinimalReplicationProxy MinimalReplicationProxy;
	struct ChosenQuotaInfo DestructionLootTierChosenQuotaInfo;
	struct FName DestructionLootTierKey;
	struct CurveTableRowHandle BuildingResourceAmountOverride;
	int MaxResourcesToSpawn;
	TArray<struct TSoftClassPtr<UObject>> IntenseWindMaterials;
	class UClass* BreakEffect;
	struct TSoftClassPtr<UObject> DeathParticles;
	struct TSoftClassPtr<UObject> DeathNiagaraSystemAsset;
	class UClass* DeathParticlesInst;
	struct FName DeathParticleSocketName;
	class UClass* DeathSound;
	class UClass* ConstructedEffect;
	TArray<struct RandomDayphaseFX> RandomDayphaseFXList;
	class UClass* ConstructionAudioComponent;
	class UClass* CachedDestructionInstigator;
	class UClass* DamageOverlayComponent;
	float DamageAmountStart;
	float LastDamageAmount;
	struct Vector LastDamageHitImpulseDir;
	TArray<class UClass*> CachedAnimatingStaticMeshes;
	struct FScriptMulticastDelegate OnRepairBuildingStarted;
	struct FScriptMulticastDelegate OnRepairBuildingFinished;
	class UClass* EditModePatternData;
	int UndermineGroup;
	int LogicalBuildingIdx;
	TArray<struct AnimatingMaterialPair> AnimatingMaterialMappings;
	TArray<struct AnimatingMaterialPair> DamagedButNotAnimatingMaterialMappings;
	class UClass* EditModeSupportClass;
	class UClass* EditModeSupport;
	float HealthToAutoBuild;
	float AccumulatedAutoBuildTime;
	EBuildingReplacementType BuildingReplacementType;
	EBuildingReplacementType ReplacementDestructionReason;
	EBuildingAnim CurBuildingAnimType;
	EFortDamageVisualsState DamageVisualsState;
	float CurBuildProgress;
	float OutwardMotionMagnitude;
	float CurBuildingAnimStartTime;
	TArray<class UClass*> BlueprintMICs;
	TArray<class UClass*> BlueprintMIDs;
	class UClass* BlueprintMeshComp;
	class UClass* EditingPlayer;
	struct Vector BuildingAttachmentPointOffset;
	float BuildingAttachmentRadius;
	EBuildingAttachmentSlot BuildingAttachmentSlot;
	EBuildingAttachmentType BuildingAttachmentType;
	EPlacementType BuildingPlacementType;
	EStructuralSupportCheck LastStructuralCheck;
	class UClass* ParentActorToAttachTo;
	TArray<class UClass*> AttachedBuildingActors;
	TArray<class UClass*> BuildingActorsAttachedTo;
	struct FScriptMulticastDelegate OnTrapPlacementChanged;
	struct FScriptMulticastDelegate OnReplacementDestruction;
	class UClass* AttachmentPlacementBlockingActors;
	Unknown Foundation;
	class UClass* DamagerOwner;
	class UClass* RelevantBASE;
	class UClass* LastRelevantBASE;
	struct ProxyGameplayCueDamage ProxyGameplayCueDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingAutoNav : public ABuildingSMActor
{
public:
	bool bAutoAssignNavProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTimeOfDayLights : public ABuildingAutoNav
{
public:
	bool bUseTimeOfDayControlledLights;
	TArray<class UClass*> TimeOfDayControlledLights;
	TArray<struct Vector> TimeOfDayControlledLightsPositions;
	TArray<float> TimeOfDayControlledLightsInitalIntensities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingContainer : public ABuildingTimeOfDayLights
{
public:
	class UClass* SearchingSoundCueLoop;
	class UClass* LootRepeatSoundCue;
	class UClass* OnDamageSoundCue;
	class UClass* OnDeathSoundCue;
	class UClass* SearchedMesh;
	TArray<class UClass*> SearchedMaterialOverrides;
	TArray<struct LootTierGroupTagOverride> LootTierGroupTagOverrideData;
	struct FName SearchLootTierGroup;
	TArray<struct RandomUpgradeData> PotentialRandomUpgrades;
	struct ChosenQuotaInfo SearchLootTierChosenQuotaInfo;
	struct FName ContainerLootTierKey;
	int ReplicatedLootTier;
	int ChosenRandomUpgrade;
	bool bSpawnedActor;
	bool bBlockMarking;
	bool bCanBeMarked;
	struct MarkedActorDisplayInfo MarkerDisplay;
	struct Vector MarkerPositionOffset;
	struct Vector2D NumItemsToDropRange;
	float SearchBounceRadiusOverride;
	class UClass* LootTestingData;
	float LootNoiseRange;
	struct Vector LootSpawnLocation;
	struct Vector LootFinalLocation;
	struct Vector InstancedLoot_TossDirection;
	float InstancedLoot_TossSpeed;
	float InstancedLoot_TossConeHalfAngle;
	struct Vector LootSpawnLocation_Athena;
	struct Rotator LootTossDirection_Athena;
	float LootTossSpeed_Athena;
	float LootTossConeHalfAngle_Athena;
	EFortRarity HighestRarity;
	bool bUseLootProperties_Athena;
	bool bAlwaysShowContainer;
	bool bAlwaysMaintainLoot;
	bool bDestroyContainerOnSearch;
	bool bForceHidePickupMinimapIndicator;
	bool bForceSpawnLootOnDestruction;
	bool bForceTossLootOnSpawn;
	bool bAlreadySearched;
	bool bDoNotDropLootOnDestruction;
	bool bBuriedTreasure;
	bool bHasRaisedTreasure;
	bool bStartAlreadySearched_Athena;
	bool bRegenerateLoot;
	bool bUseLocationForDrop;
	float LootedWeaponsDurabilityModifier;
	struct FortSearchBounceData SearchBounceData;
	struct CurveTableRowHandle SearchSpeed;
	struct FText SearchText;
	class UClass* AudioIndicator_Component;
	class UClass* CurrentInteractBounceCurve;
	class UClass* CurrentInteractBounceNormalCurve;
	float SavedReservedRandomValueResult;
	float TimeUntilLootRegenerates;
	class UClass* SoundIndicatorIconOverride;
	struct LinearColor SoundIndicatorTintOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayspace : public Playspace
{
public:
	bool bSubscribeToMeshNetwork;
	EFortPlayspaceUserAcceptanceType UserAcceptanceType;
	struct FortPlayspaceMatchmakingSettings MatchmakingSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIComponent_Telemetry : public UActorComponent
{
public:
	class UClass* PossessedPawn;
	class UClass* CachedAIController;
	class UClass* DeathInstigator;
	TArray<class UClass*> GrabbedPickups;
	TArray<class UClass*> DroppedPickups;
	class UClass* AnalyticRuntimeParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GameModeBase : public AFortAthenaMutator
{
public:
	bool bAutomaticallyFinishInitialization;
	struct AthenaGameMessageData GameMsg_AircraftPhaseIntroMessage;
	struct FortMutatorAudioStinger Stinger_MatchStart;
	struct FortMutatorAudioStinger Stinger_MatchEnd;
	struct FortMutatorAudioStinger Stinger_MatchEndWin;
	struct FortMutatorAudioStinger Stinger_MatchEndLose;
	class UClass* StingerAudioComponent;
	class UClass* StingerEventForwarder;
	TArray<class UClass*> FortSquadStartActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventResponderComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnMeshNetEvent;
	TArray<struct GameplayTag> MeshEventTags;
	struct GameplayTagContainer FilteredEventTypes;
	bool bServerRespondToEvents;
	bool bClientRespondToEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Coupled : public UChildCheatManager
{
public:
	class UClass* TargetedObject;
	class UClass* OwningController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPawnComponent : public PawnComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInGameMapManager : public AActor
{
public:
	struct FScriptMulticastDelegate OnAllowShowMainMapChanged;
	TArray<struct TeamMapInfo> MapData;
	bool bClearAllFog;
	struct FName StaticCaptureCameraName;
	int MapLayerSize;
	struct Margin MapMargin;
	class UClass* SceneCaptureClass;
	class UClass* SceneCaptureBlurryClass;
	class UClass* MapMaterial;
	class UClass* MapMaterialMID;
	float MapOpacityWhenWalking;
	float OffsetZ;
	int IconVisibilityFogThreshold;
	float DelayBetweenDispersions;
	float ExploredRadius;
	float ExploredFalloffRadius;
	float SeenRadius;
	float SeenFalloffRadius;
	int VisibilityMaxGradient;
	int UnexploredOpacity;
	struct CurveTableRowHandle CloudBrightnessCurve;
	struct CurveTableRowHandle DesaturationFactorCurve;
	float MaxPercentageMapExplored;
	float MapExplorationThresholdPercentage;
	float LastMapExplorationThresholdPercentageReached;
	struct FScriptMulticastDelegate OnMapFullyExplored;
	struct FScriptMulticastDelegate OnMapExplorationThresholdReached;
	EMapCaptureMethod MapCaptureMethod;
	class UClass* SceneCapture;
	class UClass* SceneCaptureBlurry;
	class UClass* FogMask;
	bool bUseExplorationBasedFogOfWar;
	bool bShareMapWithTeam;
	bool bResetMapDataOnTeamSwitch;
	class UClass* HeatmapMask;
	bool bCanUpdateHeatmapMask;
	float MapWorldScale;
	struct LinearColor DefaultMapLocationFontColor;
	struct SlateFontInfo DefaultMapLocationFont;
	uint32_t MobileMapLocationFontSizeOverride;
	struct SlateFontInfo MapLocationFont;
	Unknown MinimapLocationRenderData_Player1;
	Unknown MinimapLocationRenderData_Player2;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInGameMapManagerAthena : public AFortInGameMapManager
{
public:
	bool bDrawMapLocationsIfFogged;
	bool bDrawSpecialActorIconsIfFogged;
	bool bDrawSquadPinsIfFogged;
	bool bDrawMapIndicatorsIfFogged;
	bool bDrawEliminationsIfFogged;
	class UClass* MapMaskMaterial;
	class UClass* MapMaskMaterialMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSquadStart : public AActor
{
public:
	TArray<class UClass*> PlayerStarts;
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortActorSpawner : public AActor
{
public:
	struct TSoftClassPtr<UObject> ActorClassToSpawn;
	EFortActorSpawnerAuthority SpawnerAuthority;
	bool bSpawnOnBeginPlay;
	bool bDestroyAfterSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDefinition : public McpItemDefinitionBase
{
public:
	struct FScriptMulticastDelegate OnItemCountChanged;
	EFortRarity Rarity;
	EFortItemType ItemType;
	EFortItemType PrimaryAssetIdItemTypeOverride;
	EFortInventoryFilter FilterOverride;
	EFortItemTier Tier;
	EFortItemTier MaxTier;
	EFortTemplateAccess Access;
	bool bIsAccountItem;
	bool bNeverPersisted;
	bool bAllowMultipleStacks;
	bool bAutoBalanceStacks;
	bool bForceAutoPickup;
	bool bInventorySizeLimited;
	struct FText ItemTypeNameOverride;
	struct FText DisplayName;
	struct FText ShortDescription;
	struct FText Description;
	struct FText DisplayNamePrefix;
	struct FText SearchTags;
	struct GameplayTagContainer GameplayTags;
	struct GameplayTagContainer AutomationTags;
	struct GameplayTagContainer SecondaryCategoryOverrideTags;
	struct GameplayTagContainer TertiaryCategoryOverrideTags;
	struct ScalableFloat MaxStackSize;
	struct ScalableFloat PurchaseItemLimit;
	float FrontendPreviewScale;
	struct TSoftClassPtr<UObject> TooltipClass;
	struct TSoftClassPtr<UObject> StatList;
	struct CurveTableRowHandle RatingLookup;
	struct TSoftClassPtr<UObject> WidePreviewImage;
	struct TSoftClassPtr<UObject> SmallPreviewImage;
	struct TSoftClassPtr<UObject> LargePreviewImage;
	struct SoftObjectPath DisplayAssetPath;
	struct DataTableRowHandle PopupDetailsTag;
	class UClass* Series;
	struct Vector FrontendPreviewPivotOffset;
	struct Rotator FrontendPreviewInitialRotation;
	struct TSoftClassPtr<UObject> FrontendPreviewMeshOverride;
	struct TSoftClassPtr<UObject> FrontendPreviewSkeletalMeshOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPersistableItemDefinition : public FortItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountItemDefinition : public FortPersistableItemDefinition
{
public:
	struct CurveTableRowHandle LevelToXpHandle;
	struct CurveTableRowHandle LevelToSacrificeXpHandle;
	struct DataTableRowHandle SacrificeRecipe;
	struct DataTableRowHandle TransmogSacrificeRow;
	TArray<struct DataTableRowHandle> ConversionRecipes;
	struct DataTableRowHandle UpgradeRarityRecipeHandle;
	int MinLevel;
	int MaxLevel;
	struct FString GrantToProfileType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioShapeComponent : public UActorComponent
{
public:
	float UpdateFrequencyInaudible;
	float UpdateFrequencyAudible;
	float MaxDistanceOffset;
	float SmoothingDistance;
	Unknown AudioComponents;
	TArray<Unknown> LocalControllers;
	struct TimerHandle AudioShapeInitTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIEvaluator : public UObject
{
public:
	struct FName ExecutionStatusName;
	Unknown CachedLODSettingsInterface;
	class UClass* KeyAccessValidator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator : public UFortAthenaAIEvaluator
{
public:
	class UClass* OverrideNavigationFilterClass;
	class UClass* CachedOwnerComp;
	class UClass* CachedBotController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Movement : public UFortAthenaAIBotEvaluator
{
public:
	struct FName MovementStateKeyName;
	struct FName MovementDestinationKeyName;
	struct FName LastPartialPathTimeKeyName;
	struct FName LastPartialPathCountKeyName;
	struct FName LastBlockedPathCountKeyName;
	struct FName UnstuckInWaterExecutionStatusName;
	struct FName UnstuckLastBlockedByActorKeyName;
	struct FName UnstuckExecutionStatusKeyName;
	struct FName TeleportExecutionStatusKeyName;
	struct FName UndermineExecutionStatusKeyName;
	struct FName UndermineTargetKeyName;
	struct FName UndermineLocationImpactName;
	struct FName UnstuckSteerExecutionStatusKeyName;
	struct FName UnstuckSteerDirectionKeyName;
	class UClass* UnstuckSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Attack : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName WeaponKeyName;
	class UClass* Weapon;
	struct FName DestinationKeyName;
	struct FName MoveToDestinationKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_SkillsetBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotSkillset : public UFortAthenaAISpawnerDataComponent_SkillsetBase
{
public:
	class UClass* AimingSkillSet;
	class UClass* AttackingSkillSet;
	class UClass* BuildingSkillSet;
	class UClass* DBNOSkillSet;
	class UClass* EmoteSkillSet;
	class UClass* EvasiveManeuversSkillSet;
	class UClass* HarvestSkillSet;
	class UClass* HealingSkillSet;
	class UClass* InventorySkillSet;
	class UClass* LootingSkillSet;
	class UClass* MovementSkillSet;
	class UClass* PerceptionSkillSet;
	class UClass* PlayStyleSkillSet;
	class UClass* PropagateAwarenessSkillSet;
	class UClass* RangeAttackSkillSet;
	class UClass* ReviveSkillSet;
	class UClass* UnstuckSkillSet;
	bool bUseMatchMMRToOverrideSkillLevel;
	struct TSoftClassPtr<UObject> OverrideSkillLevelMMRTable;
	float Skill;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_VehicleBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_Vehicle : public UFortAthenaAISpawnerDataComponent_VehicleBase
{
public:
	class UClass* VehicleToSpawnAndEnter;
	bool bSetInfiniteFuel;
	TArray<class UClass*> VehicleSkillSets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_BotMoveTo : public UBTTask_MoveTo
{
public:
	struct FName MovementResultKeyName;
	bool bAllowRandomWobble;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_Patrolling : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName PatrollingKeyName;
	struct FName PatrollingMovementStateKeyName;
	struct FName PatrollingDestinationKeyName;
	struct FName DynamicBlueprintStatusKeyName;
	struct FName DynamicBlueprintActorKeyName;
	struct FName PatrollingShouldMoveKeyName;
	float DistanceToTestPoint;
	bool bCanDisablePatrolling;
	class UClass* CachedNpcPatrollingComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters : public UObject
{
public:
	int ExtractedLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotDigestedSkillSet : public UFortAthenaAIRuntimeParameters
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotSkillSet : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaAIBotController : public AIController
{
public:
	Unknown AppliedInGameModifierAbilitySetHandles;
	Unknown GadgetTrackedAttributeItemInstanceIds;
	struct FortBotTargetHandler TargetHandler;
	bool bIsAnAthenaGameParticipant;
	bool bNeutralBecomeHostileOnBump;
	EReachLocationValidationMode ReachLocationValidationMode;
	class UClass* BehaviorTree;
	struct FortBotInventoryInfo SlotItems;
	class UClass* CacheInventoryDigestedSkillSet;
	class UClass* PlayerBotPawn;
	class UClass* CachedBotManager;
	class UClass* CachedGameMode;
	class UClass* CachedBotMutator;
	class UClass* CachedAIRuntimeParametersComponent;
	class UClass* CachedLeashRuntimeParameters;
	class UClass* CachedPatrollingComponent;
	TArray<struct BotDelayedStimulus> DelayedStimulus;
	TArray<struct FortBotThreatActorInfo> ObjectsThreatList;
	TArray<struct FortBotThreatActorInfo> TrapsThreatList;
	EAlertLevel CurrentAlertLevel;
	struct AlertLevelInfo DefaultAlertLevelInfo;
	struct FScriptMulticastDelegate OnAlertLevelChangedEventDelegate;
	struct FScriptMulticastDelegate OnStealthMeterChangedEventDelegate;
	struct FScriptMulticastDelegate OnAgentDBNOStatusChangedEventDelegate;
	struct FScriptMulticastDelegate OnAgentDiedEventDelegate;
	struct FScriptMulticastDelegate OnAgentGameOver;
	class UClass* Inventory;
	float Skill;
	bool bAllowUnsupportedItemsInDefaultInventory;
	TArray<class UClass*> BotSkillSetClasses;
	class UClass* StartupInventory;
	struct FortAthenaLoadout CosmeticLoadoutBC;
	TArray<class UClass*> CustomCharacterPartOverridesBC;
	class UClass* NameSettingsBC;
	struct ScalableFloat SpectateOnDeathMinTime;
	struct ScalableFloat SpectateOnDeathMaxTime;
	struct ScalableFloat SightWeatherCapRadius;
	struct ScalableFloat LoseSightWeatherCapRadius;
	struct ScalableFloat EmotesMaxCount;
	class UClass* CachePerceptionDigestedSkillSet;
	class UClass* CacheHarvestDigestedSkillSet;
	class UClass* CacheMovementSkillSet;
	class UClass* CacheLootingSkillSet;
	class UClass* CacheAttackingSkillSet;
	class UClass* CachePlayStyleSkillSet;
	class UClass* CacheUnstuckSkillSet;
	class UClass* CacheRangeAttackSkillSet;
	class UClass* InteractContextInfo;
	class UClass* CacheAimingDigestedSkillSet;
	bool bCanBeDestroyedOnDeath;
	struct Vector LastDeathLocation;
	struct Rotator LastDeathRotation;
	class UClass* CachedWorldItem;
	class UClass* CacheWeaponUsedToCalculateType;
	bool bCachedIsUsingArcedProjectileWeapon;
	float CachedProjectileGravityScale;
	class UClass* CachedWeaponUsedToCalculateProjectileData;
	class UClass* StatManager;
	TArray<struct BuildingWeakSpotData> ActiveWeakSpots;
	class UClass* CacheBotPawnClass;
	class UClass* CurrentLootActor;
	class UClass* MarkerComponent;
	struct FString BotPlayerName;
	struct FString BotIDSuffix;
	struct FString BotPlayerNameWithSkillRating;
	class UClass* PolicyDataSpawner;
	class UClass* FortControllerComponent_Telemetry;
	bool bForceUsingBuildingTool;
	bool bForceHolsterWeapon;
	class UClass* PendingEquipWeapon;
	class UClass* PlayerToSpectateOnDeath;
	struct FScriptMulticastDelegate OnPlayerPawnAISpawnedDelegate;
	class UClass* AISenseConfig_SightOverride;
	class UClass* BotOwner;
	int BotControllerUID;
	class UClass* ReviveTarget;
	class UClass* BotData;
	struct DebugMinimapData DebugMinimapData;
	class UClass* RevivePlayerPawnToken;
	class UClass* LeashActorToFollow;
	struct Vector LeashActorToFollowLocalOffset;
	class UClass* CachedAffiliationManager;
	class UClass* CachedAffiliationComponent;
	bool bIsAffectedByMutatorHealthAndShieldModifiers;
	bool bHasChangedPawnCullDistanceToAggroMode;
	class UClass* RespawnRuntimeParameters;
	class UClass* CurrentBlockingDoor;
	class UClass* FinisherPawn;
	EFortPawnStasisMode PreviousStasisMode;
	bool bPostponeGiveWeaponCheat;
	class UClass* BTAssetToRunOnPawnAISpawned;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPathFollowingComponentBase : public CrowdFollowingComponent
{
public:
	class UClass* AIController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaAIBotPathFollowingComponent : public FortPathFollowingComponentBase
{
public:
	class UClass* BotController;
	class UClass* HitBuilding;
	class UClass* CachedUnstuckSkillSet;
	class UClass* CachedMovementSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIGoalComponent : public GameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAIHotSpot : public AActor
{
public:
	TArray<class UClass*> UserSlots;
	class UClass* SlotGenerator;
	TArray<class UClass*> Slots;
	class UClass* FocusActor;
	class UClass* FilterClass;
	struct Vector CustomNavmeshSearchExtent;
	bool bStartEnabled;
	bool bAllowSlotlessAssignment;
	bool bAllowClaimingMultipleSlots;
	bool bTrackOverlappingSlots;
	bool bProjectSlotsOnNavmesh;
	bool bCustomNavmeshSearchExtent;
	bool bIsEnabled;
	TArray<class UClass*> NoSlotAssignees;
	class UClass* RenderingComponent;
	class UClass* SpriteComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotConfig : public UDataAsset
{
public:
	TArray<struct AIHotSpotSlotConfig> Slots;
	bool bDetectUnreachableSlots;
	class UClass* SlotGenerator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotManagerProxy : public UAIHotSpotManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotSlot : public UObject
{
public:
	struct Transform LocalTransform;
	float Height;
	float Radius;
	float DistanceToFocusActor;
	int UserId;
	bool bStartEnabled;
	bool bHasCachedAgentData;
	bool bHasOverlappingSlots;
	bool bHasDistanceToFocusActor;
	bool bIsBlockingOthers;
	bool bIsEnabled;
	class UClass* Owner;
	int SlotIndex;
	EAIHotSpotSlot SlotState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotSlotGenerator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator
{
public:
	class UClass* SlotClass;
	struct Vector MaxExtent;
	float ExpandBy;
	float OffsetFromEdge;
	float Spacing;
	bool bLimitMaxExtent;
	bool bMustHitFocusActor;
	EBoundingBoxSlotDirectionCalculation SlotDirectionCalculation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAISpawnerTest_DataIntegrity : public AActor
{
public:
	TArray<struct DataIntegrityPair> TestDataList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AITask_ExecuteAbility : public AITask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimInstance_GalileoFerryAxe : public UAnimInstance
{
public:
	float TimeBeforeFolding;
	float VFXDisableTimeOffset;
	bool ShouldFoldBackWeapon;
	bool bDesiredIdleParticleVisibility;
	struct FScriptMulticastDelegate FrontEndIdle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortReplaySpectatorPawnBase : public ASpectatorPawn
{
public:
	class UClass* SpectatorCameraComponent;
	struct SlateBrush MiniMapIconBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AHoverDronePawn : public AFortReplaySpectatorPawnBase
{
public:
	class UClass* HoverMoveComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AARDronePawn : public AHoverDronePawn
{
public:
	class UClass* ARRoot;
	class UClass* WebcamRoot;
	class UClass* WebcamRotRoot;
	class UClass* ScreenRoot;
	class UClass* MotionBase;
	class UClass* MotionController;
	class UClass* POVCaptureComponent;
	class UClass* ScreenCaptureComponent;
	class UClass* ARCapture;
	class UClass* MediaPlayer;
	int MediaPlayerVideoFormatIndex;
	float WorldToMetersMultiplier;
	class UClass* ARPostProcessMaterial;
	class UClass* ARPostProcessMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AArenaCamPawn : public AFortReplaySpectatorPawnBase
{
public:
	TArray<class UClass*> ArenaCams;
	int CurrArenaCamIdx;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UARScreenCaptureComponent : public USceneCaptureComponent2D
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectCostAccountantFactory : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetObjectCostAccountantFactory : public UObjectCostAccountantFactory
{
public:
	struct TSoftClassPtr<UObject> Asset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAssetObjectCostAccountant : public UDataAsset
{
public:
	struct ObjectCostContainer CostContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncAction_WaitForScriptedActions : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate Finished;
	class UClass* ActionManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncOverlapQueue : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncTaskQueue : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncTraceQueue : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIBudgetManager : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIController : public AIController
{
public:
	bool bUsingNavMesh;
	bool bAlwaysNotifyBumpWall;
	bool bInstantRotation;
	bool bTurnTransitionsEnabled;
	bool bAllowHotspotAbilityLooping;
	class UClass* FortPathFollowingComp;
	struct AIHotSpotUseInfo CurrentHotSpot;
	float GoalInfoUpdateRate;
	class UClass* GoalActor;
	float GoalVisibilityPersistanceTime;
	class UClass* MyFortPawn;
	struct FScriptMulticastDelegate OnTeamSetDelegate;
	struct FScriptMulticastDelegate OnControllerComponentAttachedEvent;
	class UClass* AIGoalComponent;
	class UClass* BTAssetToRunOnPawnAISpawned;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAIController : public FortAIController
{
public:
	class UClass* PrimaryMeleeAttackAbilityInstance;
	class UClass* PrimaryRangedAttackAbilityInstance;
	struct Vector NavWalkingSearchExtentScale;
	float CheapFlyingNavPointHorizontalGridRatio;
	float CheapFlyingNavNavPointVerticalGridRatio;
	struct GameplayTagContainer CheapFlyingNavSmashableAbilityTag;
	bool bEnableCheapFlyingNavigation;
	bool bAllowBacktrackPathfinding;
	bool bIsGoalRequiredForBehavior;
	bool bRegisterToAthenaAIDropper;
	class UClass* SecondaryGoalActor;
	class UClass* CachedAffiliationManager;
	class UClass* AthenaPFC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIPerceptionComponent : public AIPerceptionComponent
{
public:
	float LosingSightRadiusBump;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAIPerceptionComponent : public FortAIPerceptionComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBehaviorTreeComponent : public BehaviorTreeComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBehaviorTreeComponent : public FortBehaviorTreeComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIDirector : public AActor
{
public:
	struct CurveTableRowHandle MaxAliveCurve;
	struct CurveTableRowHandle MinAliveCurve;
	struct IntensityData IntensityInfo;
	struct FortAIEncounterPIDController AIDirectorPIDController;
	struct FortAIEncounterPIDControllerSettings PIDControllerSettings;
	struct UtilityData UtilityContributionData;
	float UnreachableLocationPathCost;
	struct FortPlayerPerformanceEstimateSettings PlayerPerformanceEstimateSettings;
	bool bUsePrototypeEnemies;
	bool bForceByPassNavMeshForAISpawning;
	TArray<EFortEncounterDirection> DebugEncounterDirections;
	EDespawnAIType DespawnAIType;
	float DespawnDistance;
	float DespawnInterval;
	struct GameplayTagContainer DebugSpawnAIGroupTags;
	struct GameplayTagContainer DebugEncounterTags;
	float BurstSpawnThreatVisualsEndDelay;
	TArray<struct FortAIEncounterSpawnGroupCapsProfile> EncounterSpawnGroupCapSettings;
	TArray<struct FortAIEncounterSpawnPointsProfile> EncounterSpawnPointsSettings;
	TArray<struct FortAIEncounterPawnDifficultyLevelModifier> EncounterPawnDifficultyLevelModifiers;
	TArray<struct FortAISpawnGroupUpgradeData> SpawnGroupUpgrades;
	float GuaranteedUpgradeGroupUtilityBonus;
	float DiscreteEncounterUtilityDesireMappings;
	EFortAIUtility InitialDynamicUtilities;
	struct EncounterEnvironmentQueryInfo SpawnLocationPlacementQueries;
	struct EncounterEnvironmentQueryInfo SpawnLocationActorSearchQueries;
	class UClass* DataTrackingSettings;
	TArray<struct DataTableRowHandle> BaseLootDropData;
	TArray<struct FortAILootDropModifiers> LootDropModifiers;
	struct GameplayTagQuery LootDropDenialQuery;
	bool bDebugEncounterQueries;
	TArray<class UClass*> PlayerControllersForBVTree;
	TArray<class UClass*> PlayerPawnsForBVTree;
	TArray<class UClass*> AIControllersForBVTree;
	TArray<class UClass*> AIPawnsForBVTree;
	TArray<class UClass*> AIPlayerBotControllersForBVTree;
	TArray<class UClass*> AIPlayerBotPawnsForBVTree;
	TArray<class UClass*> AINonPlayerBotControllersForBVTree;
	TArray<class UClass*> AINonPlayerBotPawnsForBVTree;
	TArray<class UClass*> NonPlayerBotPawns;
	TArray<class UClass*> PlayerBotPawns;
	TArray<class UClass*> PlayerPawns;
	TArray<class UClass*> FortAIPawns;
	bool bUseLODSettings;
	Unknown CachedLODSettingsManager;
	bool bAsyncProcessUpdateAliveAIs;
	bool bAllowProcessPlayerTargeting;
	int MaxNumLODAIProcessPerFrame;
	struct FortEncounterPawnNumberCaps DefaultEncounterPawnCaps;
	class UClass* IntensityGraph;
	class UClass* UtilitiesGraph;
	class UClass* PIDValuesGraph;
	class UClass* PIDContributionsGraph;
	bool bNightActive;
	bool bAIDisabled;
	bool bRegisteredForDayPhaseChange;
	bool bUseSpawnCap;
	int NightCount;
	float NightEncounterFailureBreatherTime;
	float EncounterPawnSpawnInterval;
	class UClass* DefaultNightEncounter;
	class UClass* DummyDebugEncounter;
	class UClass* BaseEncounterClass;
	int MaxActiveAlive;
	int NumActiveAlive;
	int NumPendingCapRelevantAI;
	TArray<struct PendingSpawnInfo> PendingSpawns;
	int MaxAISpawnedPerFrame;
	int MaxAIDespawnedPerFrame;
	int DespawnAllAIMaxAIDespawnedPerFrame;
	TArray<Unknown> PendingDespawns;
	int NumWorldSubdivides;
	float MinAISpawnDistanceFromPlayers;
	struct GameplayTagContainer AmbientThreatPreferredPlacementActorTags;
	struct GameplayTagContainer AmbientThreatRequiredPlacementActorTags;
	TArray<class UClass*> ActiveEncounters;
	TArray<class UClass*> InactiveEncounters;
	TArray<struct FortPendingStoppedEncounterData> PendingStoppedEncounters;
	class UClass* ActiveDefaultEncounter;
	class UClass* ActiveDummyDebugEncounter;
	TArray<class UClass*> EncounterSequences;
	class UClass* EQSRenderingComp;
	int DebugGraphUpdateFrequency;
	float MaxNormalLODDistanceToPlayer;
	float AIRelevantDistanceToPlayer;
	float EncounterRelevantDistanceToPlayer;
	float EncounterRelevantDistanceToDefender;
	TArray<Unknown> PatrolWards;
	int MaxTotalActiveAliveAI;
	int MaxEncounterActiveAliveAI;
	int MaxSPUsed;
	TArray<struct UtilityTypeFloatPair> DebugEncounterTopUtilityPercentages;
	TArray<class UClass*> DebugEncounterSpawnPointsCurves;
	bool bDebugAllowEncounterModifierTags;
	int SimulatedNumberOfPlayersForAIEncounters;
	int MaxNumberOfEncounterGroups;
	TArray<class UClass*> RegisteredAISpawners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaAIDirector : public AFortAIDirector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIDropper : public UObject
{
public:
	TArray<struct DroppingAgentData> InactiveAgents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIPerceptionManager : public UAISubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIPopulationTracker : public UAISubsystem
{
public:
	TArray<class UClass*> AIList;
	TArray<struct FortServerBotInfo> PlayerBots;
	TArray<struct FortServerBotInfo> NonAthenaParticipantBots;
	class UClass* CachedGameMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAISense_Hearing : public UAISense_Hearing
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIService : public UObject
{
public:
	class UClass* CachedGameMode;
	class UClass* CachedGameState;
	class UClass* AIServiceManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIServiceLoot : public UAthenaAIService
{
public:
	struct Vector LootOctreeCenter;
	struct ScalableFloat LootOctreeRadius;
	struct ScalableFloat SupplyDropStatusUpdateRate;
	struct ScalableFloat RemoveInvalidChestFromOctreeProbability;
	struct ScalableFloat MovingLootTrackingEnabled;
	struct ScalableFloat MovingLootUpdateRate;
	struct ScalableFloat MovingLootOctreeUpdateDistanceThreshold;
	TArray<class UClass*> HarvestableActorClassList;
	Unknown MovingLoots;
	TArray<struct CachedSupplyDrop> CachedSupplyDrops;
	class UClass* CachedWorldItem;
	class UClass* BotBuildingContainerBlacklistDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIServiceManager : public UAISubsystem
{
public:
	TArray<class UClass*> AIServices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCacheSafeZoneLocation : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAIServicePlayerBots : public UAthenaAIService
{
public:
	TArray<struct FortServerBotInfo> DeadBots;
	TArray<struct FortServerBotInfo> PlayerBotsRestartLeft;
	class UClass* CachedBotMutator;
	struct DebugMinimapData DebugMinimapData;
	bool bBotHostileToHumanPlayersOnly;
	struct ScalableFloat UseAllBattleBusPOIsSquadRatio;
	class UClass* TagQueryWeightChance;
	struct TSoftClassPtr<UObject> FindLocationsAroundPOIQuery;
	TArray<struct BattleBusPOI> BattleBusTagQueryPOIList;
	TArray<struct BattleBusPOI> SecondaryBattleBusTagQueryPOIList;
	TArray<struct NavigationPOI> OnGroundTagQueryPOIList;
	struct ConstructionBuildingInfo ConstructionBuildingInfo;
	struct ScalableFloat UseCustomSupportedItemList;
	class UClass* BotItemDataTable;
	struct ScalableFloat UseRegionalNameList;
	struct TSoftClassPtr<UObject> BotNameDataAsset;
	struct ScalableFloat ThankBusDriverProbability;
	struct ScalableFloat ThankBusDriverMinTime;
	struct ScalableFloat ThankBusDriverMaxTime;
	struct ScalableFloat MaxNumberOfBotsToSpawnAroundPlayer;
	float MaxAroundBotDistanceToSearchPOIToLand;
	struct GameplayTagContainer SupportedItemTags;
	TArray<struct CachedPOIVolumeLocations> CachedValidPOIVolumeLocations;
	TArray<class UClass*> CachedBuildingFoundations;
	class UClass* LastTeamPlayerStart;
	Unknown CacheSafeZoneLocationsMap;
	float DeadBotCleanupMinDelay;
	Unknown ReservedPlayerNames;
	TArray<int> LocationsInSafeZoneFreeIndices;
	class UClass* CurrentFillingTeam;
	struct ScalableFloat BotsUniqueIDUseValidAccountID;
	int CurrentBotControllerUID;
	TArray<class UClass*> BeaconList;
	class UClass* CachedAIPopulationTracker;
	TArray<struct FortServerBotInfo> PlayerBots;
	TArray<struct FortServerBotInfo> NonAthenaParticipantBots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAISettingsAIDIrectorLOD : public UDataAsset
{
public:
	TArray<struct PlayerLODViewConeConfig> PlayerLODViewConeConfigs;
	struct PlayerLODViewConeHysteresisConfig PlayerLODViewConeHysteresisConfig;
	struct ScalableFloat CouldBeVisibleViewConeAngleDegrees;
	struct ScalableFloat CouldBeVisibleMaxDistance;
	struct ScalableFloat LODSortHysteresisDistance;
	TArray<struct FortAIDirectorPerLODConfig> FortAIDirectorLODConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAISettings : public UDataAsset
{
public:
	bool bAllowAIDirector;
	bool bAllowAIGoalManager;
	bool bForceRVOUse;
	float MaxPlayerSpeedScaleFootstepSounds;
	float MinFootstepHearingRange;
	float MaxFootstepHearingRange;
	float DamagedHearingRange;
	float CrouchHearingModifier;
	float MaxNPCHearingRange;
	float MaxPerceptualStimuliAge;
	float DeAggroRange;
	float ReducedDeAggroRange;
	float DurationReduceAggroLimits;
	class UClass* NavigationSystemConfig;
	struct TSoftClassPtr<UObject> AIDIrectorLOD;
	TArray<class UClass*> AIServices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAISpawner : public UAISubsystem
{
public:
	struct FScriptMulticastDelegate OnPawnSpawnedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAISystem : public AISystem
{
public:
	TArray<class UClass*> TwoPointSolvers;
	class UClass* InfluenceMap;
	class UClass* BotManager;
	TArray<class UClass*> ActiveRiftBlockers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAISystem : public FortAISystem
{
public:
	class UClass* PerceptionManager;
	class UClass* AIDropper;
	class UClass* AISpawner;
	class UClass* AIServiceManager;
	class UClass* AIPopulationTracker;
	TArray<class UClass*> AIControllers;
	TArray<class UClass*> PathFollowingComponents;
	class UClass* PlayerBotManager;
	class UClass* PlayerBotService;
	TArray<class UClass*> RegisteredAISpawners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAvoidanceManager : public UAvoidanceManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItem : public UObject
{
public:
	struct FScriptMulticastDelegate OnItemChanged;
	struct FScriptMulticastDelegate OnItemDestroyed;
	bool bLoadedFromSave;
	bool bTemporaryItemOwningController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPersistableItem : public UFortItem
{
public:
	class UClass* ItemDefinition;
	struct FString InstanceID;
	struct FString TemplateId;
	int Quantity;
	bool bIsLocalOnlyItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAccountItem : public UFortPersistableItem
{
public:
	int Level;
	int XP;
	int item_seen;
	int favorite;
	int max_level_bonus;
	struct FString inventory_overflow_date;
	struct DateTime creation_time;
	bool bIsPendingBeingMarkedAsSeen;
	bool bNeedsResolveMarkedAsSeen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaCosmeticAccountItem : public UFortAccountItem
{
public:
	TArray<struct McpVariantChannelInfo> VariantChannels;
	TArray<struct McpVariantChannelInfo> ActiveVariantOverrides;
	TArray<struct McpVariantReader> Variants;
	class UClass* Hero;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaBackpackItem : public UAthenaCosmeticAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCosmeticItemDefinition : public FortAccountItemDefinition
{
public:
	bool bIsShuffleTile;
	bool bIsOwnedByCampaignHero;
	bool bHasMoreThanOneCharacterPartVariant;
	bool bHideIfNotOwned;
	bool bInitializedConfiguredDynamicInstallBundles;
	bool bDynamicInstallBundlesError;
	bool bDynamicInstallBundlesCancelled;
	bool bDynamicInstallBundlesComplete;
	double DynamicInstallBundlesUpdateStartTime;
	uint32_t DynamicInstallBundleRequestRefCount;
	int DynamicInstallBundleRequestRetryCount;
	EVariantUnlockType VariantUnlockType;
	struct Rotator PreviewPawnRotationOffset;
	TArray<class UClass*> FoleyLibraries;
	struct GameplayTagContainer DisallowedCosmeticTags;
	struct GameplayTagContainer MetaTags;
	TArray<struct GameplayTag> VariantChannelsToNeverSendToMCP;
	Unknown ReactivePreviewDrivers;
	TArray<struct AthenaCosmeticMaterialOverride> MaterialOverrides;
	struct GameplayTagContainer ObservedPlayerStats;
	TArray<class UClass*> BuiltInEmotes;
	TArray<class UClass*> ItemVariants;
	struct GameplayTag VariantChannelToUseForThumbnails;
	TArray<struct FortCosmeticVariantPreview> ItemVariantPreviews;
	class UClass* ItemVariantPreviewGenerator;
	struct FText DirectAquisitionStyleDisclaimerOverride;
	TArray<struct FortCosmeticAdaptiveStatPreview> ItemObservedStatPreviews;
	struct FText UnlockRequirements;
	struct TSoftClassPtr<UObject> UnlockingItemDef;
	struct TSoftClassPtr<UObject> ItemPreviewActorClass;
	struct TSoftClassPtr<UObject> ItemPreviewParticleSystem;
	struct TSoftClassPtr<UObject> ItemPreviewMontage_Male;
	struct TSoftClassPtr<UObject> ItemPreviewMontage_Female;
	struct TSoftClassPtr<UObject> ItemPreviewHero;
	TArray<struct FName> ConfiguredDynamicInstallBundles;
	TArray<struct FName> PendingDynamicInstallBundles;
	struct GameplayTagContainer ExclusiveRequiresOutfitTags;
	struct FText CustomExclusiveCallout;
	struct FText ExclusiveDesciption;
	struct TSoftClassPtr<UObject> ExclusiveIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCharacterPartItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	TArray<class UClass*> CharacterParts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBackpackItemDefinition : public AthenaCharacterPartItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaBarrierFlag : public ABuildingGameplayActor
{
public:
	EBarrierFlagState CurrentState;
	EBarrierFoodTeam FoodTeam;
	struct BarrierFlagDisplayData FoodDisplayData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaBarrierObjective : public ABuildingGameplayActor
{
public:
	struct BarrierObjectiveDisplayData FoodDisplayData;
	EBarrierFoodTeam FoodTeam;
	EBarrierObjectiveDamageState ObjectiveDamageState;
	float HeadRotationYaw;
	bool bAllowDamage;
	struct ScalableFloat DamageFromSword;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattleBusItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> IgnitionSound;
	struct TSoftClassPtr<UObject> LobbyLoopingMusic;
	struct TSoftClassPtr<UObject> LobbyLoopingSound;
	struct TSoftClassPtr<UObject> FlightLoopingMusic;
	struct TSoftClassPtr<UObject> FlightLoopingSound;
	struct TSoftClassPtr<UObject> BusPrefabClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaBigBaseWall : public ABuildingGameplayActor
{
public:
	float WallGravity;
	float TimeUntilWallComesDown;
	bool bResetBool;
	EBarrierState BarrierState;
	struct ScalableFloat ZKillLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaBigBaseWallMovementComp : public UProjectileMovementComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaBismuthSpawner : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaBuildingActorChildComponent : public UChildActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFoundation : public ABuildingSMActor
{
public:
	TArray<class UClass*> BuildingGroups;
	TArray<struct TSoftClassPtr<UObject>> AdditionalWorlds;
	struct Vector BuildingDeconstructorOrigin;
	struct Vector BuildingDeconstructorExtent;
	bool bConditionalFoundation;
	bool bServerStreamedInLevel;
	bool bShowHLODWhenDisabled;
	bool bFlipXAxis;
	bool bFlipYAxis;
	bool bOverrideNavigationGraphCells;
	bool bHasExcludedZone;
	bool bForceDitheringTransition;
	bool bStreamingDataBasedBounds;
	EDynamicFoundationEnabledState FoundationEnabledState;
	EDynamicFoundationType DynamicFoundationType;
	EBuildingFoundationType FoundationType;
	int NavExclusionMinX;
	int NavExclusionMaxX;
	int NavExclusionMinY;
	int NavExclusionMaxY;
	struct Box StreamingBoundingBox;
	struct FName LevelToStream;
	struct GameplayTagQuery BuildingGroupFilter;
	struct GameplayTag MapLocationTag;
	struct SlateBrush LandIcon;
	struct Vector LandIconWorldOffset;
	struct FText MapLocationText;
	struct Vector MapLocationTextOffset;
	struct Vector MapLocationOverride;
	bool bShadowLayer;
	struct BuildingFoundationStreamingData StreamingData;
	TArray<class UClass*> SpawnedLODActors;
	TArray<float> SpawnedLODActorsMinDrawDistances;
	TArray<class UClass*> ChildSpawnedLODActors;
	TArray<class UClass*> HLODActors;
	class UClass* ParentFoundation;
	float ProxyMeshMaxDrawDistanceMultiplier;
	class UClass* LevelStreamInfo;
	struct DynamicBuildingFoundationRepData DynamicFoundationRepData;
	struct Transform DynamicFoundationTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaBuildingFoundationObjective : public ABuildingFoundation
{
public:
	struct SlateBrush MiniMapBrush;
	struct GameplayTag FoundationTag;
	struct ScalableFloat LowHealthPercent;
	TArray<class UClass*> SpawnedBuildingActors;
	float CurrentHealth;
	float MaxHealth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCallingCardItemDefinition : public AthenaCosmeticItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaCapturePoint : public ABuildingGameplayActor
{
public:
	class UClass* HUDIndicatorMID;
	struct SlateBrush IndicatorBrush;
	struct SlateBrush MapIconBrush;
	struct SlateBrush CompassIconBrush;
	int IconMaterialIndexParameter;
	bool bPermanentShutdown;
	float ShutdownTime;
	class UClass* HUDIndicatorRef;
	struct Vector2D CurrHUDIndicatorSize;
	class UClass* CapturePointMID_Neutral;
	class UClass* CapturePointMID_AllyCaptured;
	class UClass* CapturePointMID_AllyCapping;
	class UClass* CapturePointMID_EnemyCaptured;
	class UClass* CapturePointMID_EnemyCapping;
	bool bUseHUDIndicator;
	struct FName HUDStyle;
	struct Vector HUDOffset;
	bool bHUDClampToScreenEdge;
	struct Vector2D MinHUDIndicatorSize;
	struct Vector2D MaxHUDIndicatorSize;
	float DistanceForMinHUDSize;
	class UClass* CapturePointMat_Neutral;
	class UClass* CapturePointMat_AllyCaptured;
	class UClass* CapturePointMat_AllyCapping;
	class UClass* CapturePointMat_EnemyCaptured;
	class UClass* CapturePointMat_EnemyCapping;
	class UClass* StructuralComponent;
	class UClass* CaptureComponent;
	TArray<class UClass*> OverlappedAthenaPawns;
	bool bActivated;
	EContentionRuleType ContentionRules;
	TArray<EFortTeam> TeamsBarredFromCapture;
	bool bSupportsPerPlayerCapturing;
	struct ScalableFloat PercentIncreasePerPlayerCaptor;
	struct ScalableFloat BonusPercentIncreasePerPlayerCaptor;
	TArray<struct ScalableFloat> CaptureSpeedPerPlayerList;
	struct ScalableFloat PercentDecreaseNoCaptor;
	float CachedPercentIncreasePerPlayerCaptor;
	float CachedBonusPercentIncreasePerPlayerCaptor;
	float CachedPercentDecreaseNoCaptor;
	TArray<float> CachedCaptureSpeedPerPlayerList;
	bool bLocked;
	float UnlockInterval;
	ECapturePointUnlockRules UnlockRules;
	int NumCapturingPoint;
	byte TeamCapturingPoint;
	byte TeamControllingPoint;
	class UClass* TeamInfoControllingPoint;
	byte TeamOwningPoint;
	ECapturePointState CaptureState;
	float CapturePercentage;
	float ReplicatedCapturePercentage;
	struct FScriptMulticastDelegate OnCapturePointStateChanged;
	struct FScriptMulticastDelegate OnTeamOwningPointChanges;
	struct FScriptMulticastDelegate OnCaptureLockEvent;
	struct FScriptMulticastDelegate OnCaptureLockBrokenEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestItemDefinition : public FortAccountItemDefinition
{
public:
	EFortQuestType QuestType;
	EFortQuestSubtype QuestSubtype;
	bool bShouldDisplayOverallQuestInformation;
	bool bAthenaUpdateObjectiveOncePerMatch;
	bool bAthenaGrantRarityToken;
	bool bShouldAutoClaim;
	bool bShouldGetFullMatchProgress;
	bool bAthenaMustCompleteInSingleMatch;
	bool bUpdateObjectiveOncePerMatch;
	bool IsStreamingRequired;
	bool bExpandsStormShield;
	bool bHidden;
	struct TSoftClassPtr<UObject> TandemCharacterData;
	struct TSoftClassPtr<UObject> CharacterCompletionAudio;
	float CharacterCompletionAudioDelay;
	bool bSuppressQuestGrantedEvent;
	bool bInitiallySuppressedReplacementQuest;
	bool bIncludedInCategories;
	bool bAutoLaunch;
	bool bDeprecated;
	bool bDisableBackendConditionEvaluation;
	bool bAllowTileMatching;
	bool bAllowPlayNowNavigation;
	bool bAllowMissionAlertMatchesBypassingTileRequirements;
	bool bTutorialQuest;
	bool bHideStageDescription;
	bool bHideIncompleteObjectiveLocations;
	bool bIsShared;
	int ExpirationDuration;
	int ObjectiveCompletionCount;
	int Threshold;
	TArray<struct FortItemQuantityPair> Rewards;
	class UClass* RewardsTable;
	struct FString QuestPool;
	TArray<struct FortHiddenRewardQuantityPair> HiddenRewards;
	TArray<struct FString> FeatureRewards;
	TArray<struct FortMcpQuestRewardInfo> SelectableRewards;
	TArray<struct FortMcpQuestObjectiveInfo> Objectives;
	TArray<struct TSoftClassPtr<UObject>> TransientPrerequisiteQuests;
	bool bGrantTransientQuestToSquad;
	bool bTransientAutoComplete;
	bool bAllowMultipleCompletionsPerMatch;
	struct GameplayTagContainer Prerequisites;
	struct TSoftClassPtr<UObject> PrerequisiteQuest;
	struct DataTableRowHandle PrerequisiteObjective;
	float Weight;
	uint16_t GranterWindowPeriodMinutes;
	uint16_t GranterCooldownPeriodSeconds;
	struct DataTableRowHandle Category;
	struct TSoftClassPtr<UObject> IntroConversation;
	struct TSoftClassPtr<UObject> SelectRewardsConversation;
	struct TSoftClassPtr<UObject> ClaimConversation;
	struct FText RewardHeaderText;
	struct FText RewardDescription;
	struct FText CompletionText;
	struct FText NPCInteractionText;
	TArray<struct FortQuestMissionCreationContext> MissionCreationContexts;
	struct FortMissionConfigDataParams MissionConfigMetadata;
	uint32_t ClaimPriority;
	int SortPriority;
	struct TSoftClassPtr<UObject> QuestAbilitySet;
	bool bHideQuestProgressNotification;
	bool bHideQuestRewardNotification;
	bool bForceExpiryExport;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeBundleQuestDefinition : public FortQuestItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaChallengeIndicatorCache : public UObject
{
public:
	class UClass* OwningPlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaCharacterItem : public UAthenaCosmeticAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCharacterItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	Unknown RequestedDataStores;
	Unknown AuthoredVFXData_ByPart;
	class UClass* HeroDefinition;
	class UClass* DefaultBackpack;
	TArray<class UClass*> RequiredCosmeticItems;
	float PreviewPawnScale;
	EFortCustomGender Gender;
	struct TSoftClassPtr<UObject> FeedbackBank;
	Unknown TaggedPartsOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCharmItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> CharmModifierBlueprint;
	struct TSoftClassPtr<UObject> CharmPrefabClass;
	struct TSoftClassPtr<UObject> SkeletalMesh;
	struct TSoftClassPtr<UObject> AnimClass;
	struct TSoftClassPtr<UObject> WeaponAnimClass;
	TArray<struct CharmSoundAssetEntry> CharmSounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaTraversePoint : public ABuildingGameplayActor
{
public:
	struct Vector2D MiniMapSize;
	struct Vector2D CompassSize;
	struct SlateBrush MiniMapBrush_Active;
	struct SlateBrush CompassBrush_Active;
	bool bShouldTeleportToGround;
	ETraversePointState CurrentState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaLTMTraversePoint : public AAthenaTraversePoint
{
public:
	struct GameplayTagContainer TraversePointGameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaChromeTraversePoint : public AAthenaLTMTraversePoint
{
public:
	class UClass* HoldingArea;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionStormShield : public AActor
{
public:
	class UClass* Root;
	class UClass* ShieldRing;
	TArray<class UClass*> SafeFromStormPlayerEffects;
	TArray<class UClass*> InStormPlayerEffects;
	TArray<class UClass*> SafeFromStormEnemyEffects;
	TArray<class UClass*> InStormEnemyEffects;
	float MapWorldScale;
	float ReplicatedRadius;
	struct StormShieldRadiusGrowthData RadiusGrowthData;
	struct StormShieldMoveData MoveData;
	bool UseGrowthRateDirectly;
	bool bAntiStormShield;
	float RadiusToWorldScaleConversion;
	struct FScriptMulticastDelegate OnStormShieldReachedRadius;
	struct FScriptMulticastDelegate OnStormShieldReachedLocation;
	class UClass* SafeAreaTemplate;
	class UClass* StormShieldQuery;
	float CurrentLocalRadius;
	class UClass* StormMiniMapMaterial;
	class UClass* StormMiniMapMaterialMID;
	struct SlateBrush StormMiniMapMaterialBrush;
	class UClass* StormMainMapMaterial;
	class UClass* StormMainMapMaterialMID;
	struct SlateBrush StormMainMapMaterialBrush;
	TArray<class UClass*> SafeAreas;
	TArray<class UClass*> StormShieldComponents;
	bool bRegisterWithGameState;
	int Level;
	float AutoHideRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaCobaltStormShield : public AFortMissionStormShield
{
public:
	class UClass* ShieldBoundarySound;
	float LowpassAudioListenerRange;
	float LowpassAudioValueOutside;
	float LowpassAudioValueInside;
	float LowpassAudioInterpSpeed;
	class UClass* CachedMutator;
	struct TimerHandle ShrinkTimerHandle;
	struct TimerHandle ClientShrinkTimerHandle;
	float ClientStormShieldShrinkTimerValue;
	class UClass* ShieldBoundaryAudio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMontageItemDefinitionBase : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> Animation;
	struct TSoftClassPtr<UObject> AnimationFemaleOverride;
	TArray<struct FortEmoteMapping> AnimationOverrides;
	int PreviewLoops;
	float PreviewLength;
	bool bIncludeAudioWithAnimDuration;
	float EmoteCooldownSecs;
	bool bMontageContainsFacialAnimation;
	bool bPlayRandomSection;
	TArray<struct SectionNameAndWeight> PlayRandomSectionByName;
	bool bSwitchToHarvestingToolOnUse;
	bool bHolsterWeapon;
	bool bHolsterWeaponIfDualWieldPickaxe;
	TArray<struct MontageItemAccessData> AccessData;
	TArray<struct MontageVisibilityData> VisibilityData;
	struct GameplayTagContainer EmoteWheelExclusiveTags;
	struct TSoftClassPtr<UObject> RequiredEmoteParent;
	struct GameplayTagContainer TagsWhichIndicateEmoteParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaConsumableEmoteItemDefinition : public FortMontageItemDefinitionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaCoupledWidgetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingRift : public ABuildingActor
{
public:
	float DistToTarget;
	bool bSendMissionEvents;
	bool bDelayDeath;
	EFortRiftSpawnSlotSelectionMode SlotSelectionMode;
	float MinSpawnDelay;
	float MaxSpawnDelay;
	float CosmeticStateIdleDelay;
	float IntroToBeginSpawningDelay;
	class UClass* EnvironmentQuery;
	TArray<struct EnvNamedValue> QueryParams;
	float QueryRadius;
	float QueryMinDistance;
	bool bOverrideQueryMinDistance;
	bool bRegisterAsASpecialActor;
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	bool bShouldDrawCompassIcon;
	bool bSpawnUsingRiftRotation;
	float SpawnPointRadius;
	struct FName SpecialActorID;
	TArray<struct Vector> FreeSpawnSlots;
	TArray<struct FortSpawnSlotData> UsedSpawnSlots;
	bool bRiftIsVisible;
	bool bRiftIsActive;
	bool bIsReadyToSpawnAI;
	bool bHasBeenInitialized;
	bool bHasBadRiftSlots;
	bool bRecalculateSpawnPointsPeriodically;
	float SpawnPointEvaluationInterval;
	struct FScriptMulticastDelegate OnBuildingRiftSpawnedAI;
	bool bCreateOverlapSphere;
	struct ScalableFloat OverlapSphereRadius;
	class UClass* OverlapSphereComponent;
	struct FName DestructionLootTierGroup;
	struct Rotator LootDropTossDirection;
	float LootDropConeHalfAngle;
	float LootDropSpeed;
	struct MarkedActorDisplayInfo MarkerDisplay;
	bool bCanBeMarked;
	bool bBlockMarking;
	struct Vector MarkerPositionOffset;
	TArray<struct FortRiftReservation> RiftReservations;
	ERiftCosmeticState CosmeticState;
	class UClass* SpectatorMapIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaCreativeRift : public ABuildingRift
{
public:
	class UClass* DespawnSphereComponent;
	class UClass* ParentTrap;
	struct FortEncounterSettings OverrideEncounterSettings;
	bool bHasLoadedSettings;
	TArray<class UClass*> DespawnPlayerOverlaps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDailyQuestDefinition : public FortQuestItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDanceItemDefinition : public FortMontageItemDefinitionBase
{
public:
	bool bUsesSecondaryFireInput;
	bool bMovingEmote;
	bool bMovingEmoteSkipLandingFX;
	bool bMoveForwardOnly;
	bool bMoveFollowingOnly;
	bool bGroupEmote;
	bool bUseHighPreviewCamera;
	bool bGroupAnimationSync;
	float WalkForwardSpeed;
	float GroupSyncAnimOffset;
	class UClass* GroupEmoteToStartLeader;
	class UClass* GroupEmoteToStartFollower;
	class UClass* GroupEmoteToStartLeaderIfBothOwn;
	class UClass* GroupEmoteToStartFollowerIfBothOwn;
	TArray<struct VariantSwapMontageData> MotageSelectionGroups;
	struct Vector GroupEmotePositionOffset;
	float GroupEmotePositionOffsetTolerance;
	float GroupEmoteFollowDistance;
	bool bLockGroupEmoteLeaderRotation;
	float GroupEmoteLeaderRotationYawOffset;
	float GroupEmoteFollowerRotationYawOffset;
	struct TSoftClassPtr<UObject> FrontEndAnimation;
	struct TSoftClassPtr<UObject> FrontEndAnimationFemaleOverride;
	struct TSoftClassPtr<UObject> CustomDanceAbility;
	struct FText ChatTriggerCommandName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaDeveloperSettings : public UDeveloperSettings
{
public:
	struct TSoftClassPtr<UObject> DefaultMissionGen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEmojiItemDefinition : public AthenaDanceItemDefinition
{
public:
	struct GameplayTag EmojiGameplayCueTag;
	struct TSoftClassPtr<UObject> PreviewAnimation;
	struct TSoftClassPtr<UObject> SpriteSheet;
	struct IntPoint SheetDimensions;
	int FrameIndex;
	int FrameCount;
	class UClass* BaseMaterial;
	struct Vector IconSize;
	struct LinearColor InitialColor;
	struct Vector InitialLocation;
	struct Vector InitialVelocity;
	float LifetimeIntroSeconds;
	float LifetimeMidSeconds;
	float LifetimeOutroSeconds;
	class UClass* GeneratedMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaEventTokenItem : public UFortAccountItem
{
public:
	struct FString game_code;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventTokenItemDefinition : public FortAccountItemDefinition
{
public:
	EEventTokenType TokenType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFillFloor : public ABuildingGameplayActor
{
public:
	struct ScalableFloat ZKillOffset;
	struct ScalableFloat ZMovementToleranceOffset;
	int StepIndex;
	float FloorZ;
	float InitialDelay;
	struct FillFloorPositionData FloorPositionData;
	int NumStepsToUse;
	TArray<float> EventHeights;
	struct ScalableFloat MovementTimerUpdatePeriod;
	float FloorMovementSpeed;
	bool bIsMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaFillFloor : public ABuildingFillFloor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWorldItemDefinition : public FortItemDefinition
{
public:
	struct GameplayTagContainer RequiredEquipTags;
	TArray<struct FortPickupRestrictionLists> PickupRestrictionListEntry;
	EWorldItemDropBehavior DropBehavior;
	bool bIgnoreRespawningForDroppingAsPickup;
	bool bCanAutoEquipByClass;
	bool bPersistInInventoryWhenFinalStackEmpty;
	bool bSupportsQuickbarFocus;
	bool bSupportsQuickbarFocusForGamepadOnly;
	bool bShouldActivateWhenFocused;
	bool bForceFocusWhenAdded;
	bool bForceIntoOverflow;
	bool bForceStayInOverflow;
	bool bDropCurrentItemOnOverflow;
	bool bShouldShowItemToast;
	bool bShowDirectionalArrowWhenFarOff;
	bool bCanBeDropped;
	bool bCanBeReplacedByPickup;
	bool bItemCanBeStolen;
	bool bCanBeDepositedInStorageVault;
	bool bItemHasDurability;
	bool bAllowedToBeLockedInInventory;
	bool bOverridePickupMeshTransform;
	bool bAlwaysCountForCollectionQuest;
	bool bDropOnDeath;
	bool bDropOnLogout;
	bool bDropOnDBNO;
	bool bDoesNotNeedSourceSchematic;
	bool bUsesGoverningTags;
	int DropCount;
	float MiniMapViewableDistance;
	struct SlateBrush MiniMapIconBrush;
	struct FText OwnerPickupText;
	struct DataTableCategoryHandle LootLevelData;
	struct Transform PickupMeshTransform;
	bool bIsPickupASpecialActor;
	struct GameplayTag SpecialActorPickupTag;
	TArray<struct SpecialActorSingleStatData> SpecialActorPickupStatList;
	struct FName PickupSpecialActorUniqueID;
	struct SlateBrush PickupMinimapIconBrush;
	struct Vector2D PickupMinimapIconScale;
	struct SlateBrush PickupCompassIconBrush;
	struct Vector2D PickupCompassIconScale;
	struct ScalableFloat PickupDespawnTime;
	struct ScalableFloat InStormPickupDespawnTime;
	struct ScalableFloat NetworkCullDistanceOverride;
	struct TSoftClassPtr<UObject> PickupStaticMesh;
	struct TSoftClassPtr<UObject> PickupSkeletalMesh;
	struct TSoftClassPtr<UObject> PickupEffectOverride;
	struct TSoftClassPtr<UObject> PickupSound;
	struct TSoftClassPtr<UObject> PickupByNearbyPawnSound;
	struct TSoftClassPtr<UObject> DropSound;
	struct TSoftClassPtr<UObject> DroppedLoopSound;
	struct TSoftClassPtr<UObject> LandedSound;
	struct DataTableRowHandle DisassembleRecipe;
	float DisassembleDurabilityDegradeMinLootPercent;
	float DisassembleDurabilityDegradeMaxLootPercent;
	int PreferredQuickbarSlot;
	int MinLevel;
	int MaxLevel;
	byte NumberOfSlotsToTake;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGadgetItemDefinition : public FortWorldItemDefinition
{
public:
	int GadgetPriority;
	bool bDestroyGadgetWhenTrackedAttributesIsZero;
	bool bHasChargeUp;
	bool bDropAllOnEquip;
	bool bCanChangePreviewImageDuringGame;
	TArray<class UClass*> CharacterParts;
	struct GameplayTagContainer SkinMetaTagsToSkip;
	struct GameplayTag PartSwapTag;
	TArray<struct CharacterPartsExtraSpecial> CharacterPartsExtraSpecial;
	struct TSoftClassPtr<UObject> AnimBPOverride;
	struct TSoftClassPtr<UObject> FootstepBankOverride;
	struct TSoftClassPtr<UObject> AbilitySet;
	struct TSoftClassPtr<UObject> AttributeSet;
	struct FortAttributeInitializationKey AttributeInitKey;
	TArray<struct GameplayAttribute> TrackedAttributes;
	struct TSoftClassPtr<UObject> OnDestroyParticleSystem;
	struct TSoftClassPtr<UObject> OnDestroySound;
	struct FName OnDestroyAttachToSocketName;
	struct TSoftClassPtr<UObject> GameplayAbility;
	struct GameplayTagContainer HUDVisibilityTags;
	struct TSoftClassPtr<UObject> WeaponItemDefinition;
	TArray<struct TSoftClassPtr<UObject>> AdditionalItemsToLoadWhenEquipped;
	bool bValidForLastEquipped;
	struct GameplayAttribute LevelAttribute;
	struct DataTableRowHandle DamageStatHandle;
	struct FString NodeId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGadgetItemDefinition : public FortGadgetItemDefinition
{
public:
	bool bCanBeDroppedWhenEquipmentChangeIsBlocked;
	bool bAllowedFuelGadgetUI;
	bool bShowCooldownUI;
	bool bShowShortDescriptionInPickupDisplay;
	bool bDisplayPlayerNameForInventoryActor;
	bool bDisplayHealthForInventoryActor;
	bool bDisplayShieldForInventoryActor;
	struct GameplayTag SpecialActorInventoryTag;
	struct FName InventorySpecialActorUniqueID;
	struct SlateBrush InventoryMinimapIconBrush;
	struct Vector2D InventoryMinimapIconScale;
	struct SlateBrush InventoryCompassIconBrush;
	struct Vector2D InventoryCompassIconScale;
	struct FText InventoryActorDisplayName;
	TArray<struct SpecialActorSingleStatData> SpecialActorInventoryStatList;
	class UClass* ContextOverrideWidget;
	struct FortCreativeTagsHelper CreativeTagsHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipManager : public UObject
{
public:
	Unknown Tooltips;
	class UClass* DamageRecieverProxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltip : public UObject
{
public:
	struct FText Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemDefinitionTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaGliderItem : public UAthenaCosmeticAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGliderItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	EFortGliderType GliderType;
	struct Vector CameraFramingBoundsCenterOffset;
	bool bActivateTrailsOnRotationalMovement;
	struct TSoftClassPtr<UObject> ParachutePrefabClass;
	struct TSoftClassPtr<UObject> SkeletalMesh;
	struct TSoftClassPtr<UObject> AnimClass;
	struct TSoftClassPtr<UObject> CameraClass;
	struct TSoftClassPtr<UObject> PlayerAnimSet;
	struct Transform GliderMeshTransform;
	struct TSoftClassPtr<UObject> TrailParticles;
	struct TSoftClassPtr<UObject> OwnerTrailParticles;
	struct FName TrailParamName;
	struct FName AttachSocket;
	struct TSoftClassPtr<UObject> TrailEffect;
	struct TSoftClassPtr<UObject> TrailEffectNiagara;
	struct TSoftClassPtr<UObject> TrailEffect2;
	struct TSoftClassPtr<UObject> TrailEffectNiagara2;
	TArray<struct FortCosmeticDependentSwapData> GlidingSwaps;
	bool bAutoActivate;
	struct FName DeployEffectTagName;
	bool CleanUpDeployEffect;
	bool bAttachNiagaraEffectToPlayerPawn;
	struct FName UserSkeletonParameterName;
	struct TSoftClassPtr<UObject> OpenSound;
	struct TSoftClassPtr<UObject> CloseSound;
	struct TSoftClassPtr<UObject> ThrustLoopSound;
	Unknown ThrustSoundParams;
	class UClass* AuthoredData;
	struct MarshalledVFXAuthoredData AuthoredParticleData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHatItemDefinition : public AthenaCharacterPartItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaHoldingArea : public ABuildingGameplayActor
{
public:
	class UClass* MeshComp;
	bool bHoldingAreaActive;
	struct IgnoredPlayerPawnArray IgnoredPlayerPawns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaIndicatorPlayersCache : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaItemShopOfferDisplayData : public UPrimaryDataAsset
{
public:
	TArray<class UClass*> Presentations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemWrapDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ItemWrapModifierBlueprint;
	struct TSoftClassPtr<UObject> ItemWrapMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaLavaFloor : public AAthenaFillFloor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaLayoutRequirementData : public UPrimaryDataAsset
{
public:
	class UClass* BuildingClass;
	TArray<class UClass*> LayoutRequirementClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLoadingScreenItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> BackgroundImage;
	struct TSoftClassPtr<UObject> BackgroundMaterialOrTexture;
	struct TSoftClassPtr<UObject> BackgroundWidget;
	struct Vector2D BackgroundDesiredSize;
	struct LinearColor BackgroundColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLoadingScreenPreviewPanel : public CommonActivatablePanelLegacy
{
public:
	class UClass* LoadingScreenDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapMarkerItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> TopperActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMapPreloadData : public UDataAsset
{
public:
	TArray<struct FName> PackageNames;
	TArray<int> PackageCountToMemLookup;
	int PackageCountStepSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMarkerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnAddMapMarkerOnServerEvent;
	struct FScriptMulticastDelegate OnRemoveMapMarkerOnServerEvent;
	class UClass* MarkerWidgetClass;
	class UClass* MarkerActorClass;
	struct FortWorldMarkerContainer MarkerStream;
	int LocalPlaceableMarkersPerRate;
	int RemotePlayableMarkerSoundsPerRate;
	Unknown RemotePlayableMarkerSoundsPerPlayerIDMap;
	class UClass* PendingCancelMarker;
	class UClass* LastHoveredMarker;
	TArray<class UClass*> MarkerActorPool;
	struct UserWidgetPool MarkerWidgetPool;
	bool bIsAimingDownSights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMarkerComponentLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMatchmakingPlayButtonBase : public CommonButtonLegacy
{
public:
	class UClass* Mobile_FTUE_In;
	class UClass* Mobile_FTUE_Idle;
	class UClass* Mobile_FTUE_Anim;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMemoryBudgetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMemoryCostRegister : public UPrimaryDataAsset
{
public:
	TArray<struct TSoftClassPtr<UObject>> ExtraCharacterParts;
	TArray<struct TotalResKBIncAssetCostPair> TotalResKBIncPerAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMultiStateEmoteItemDefinition : public AthenaDanceItemDefinition
{
public:
	TArray<struct TSoftClassPtr<UObject>> EmoteStageList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMusicPackItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> FrontEndLobbyMusic;
	struct TSoftClassPtr<UObject> CoverArtImage;
	bool bIsDefaultMusicPack;
	float MusicPreviewStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaNavInvokerBox : public AActor
{
public:
	float GenerationRange;
	class UClass* InvokerComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavMesh : public RecastNavMesh
{
public:
	class UClass* HotSpotManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaNavMesh : public FortNavMesh
{
public:
	int HotSpotPathfindingMaxSearchNodes;
	TArray<struct Box> SerializedDirtyAreas;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaNavMeshRenderingComponent : public NavMeshRenderingComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaNavOctTreeInclusionBounds : public AVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavSystem : public NavigationSystemV1
{
public:
	struct TSoftClassPtr<UObject> DefaultSmashableArea;
	struct TSoftClassPtr<UObject> JumpDownArea;
	struct TSoftClassPtr<UObject> JumpDownSmashableArea;
	struct TSoftClassPtr<UObject> JumpDownSmashableArea2;
	struct TSoftClassPtr<UObject> JumpDownSmashableArea3;
	TArray<class UClass*> NamedNavmeshes;
	TArray<class UClass*> NavLinkBlockers;
	TArray<class UClass*> PathEstimators;
	TArray<class UClass*> InescapableZones;
	bool bAllowAutoRebuild;
	bool bRebuildOnInitialUnlock;
	bool bUsesStreamedInNavLevel;
	bool bUseStaticMeshLinks;
	bool bUseStaticWorldLinksDown;
	bool bUseStaticWorldLinksUp;
	bool bUseJumpLinkActors;
	bool bGenerateWallClimbLinks;
	float DirtyAreasUpdateFreqInactive;
	class UClass* NavGraphData;
	TArray<class UClass*> CompositePathGoals;
	TArray<struct Box> AtlasCells;
	TArray<struct MetaNavCachedEntry> MetaNavCachedAreas;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaNavSystem : public FortNavSystem
{
public:
	TArray<struct NavDataSetVariantSettings> NavDataSetVariants;
	bool bUseNavDataSetVariants;
	bool bUseBuildingGridAsNavigableSpace;
	bool bMarkBuildingFoundationDirty;
	bool bSupportRuntimeNavmeshDisabling;
	float NavGenerationObserverCheckInterval;
	TArray<struct BoxNavInvoker> BoxInvokers;
	TArray<struct Box> NavOctTreeInclusionBounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavSystemConfig : public NavigationSystemModuleConfig
{
public:
	bool bAllowAutoRebuild;
	bool bRebuildOnInitialUnlock;
	bool bUsesStreamedInNavLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaNavSystemConfig : public FortNavSystemConfig
{
public:
	TArray<struct NavDataSetVariantSettings> NavDataSetVariants;
	bool bUseNavDataSetVariants;
	bool bUseBuildingGridAsNavigableSpace;
	bool bDiscardNavDataFromSublevels;
	bool bUseNavigationInvokers;
	bool bLazyOctree;
	bool bUseNavOctTreeInclusionBounds;
	bool bPrioritizeNavigationAroundSpawners;
	bool bResetDirtyAreasOnInitialBuildingRelease;
	bool bSupportRuntimeNavmeshDisabling;
	bool bNavOctreeUnlockedByDefaultWhenNotPreloadingNavData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaNavSystemConfigOverride : public NavSystemConfigOverride
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea : public NavArea
{
public:
	bool bObstacle;
	bool bSmashable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_MetaReplacement : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_WallCornerReplacement : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_ObstacleReplacement : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavAreaAutomatic : public FortNavArea
{
public:
	struct CurveTableRowHandle NavCostCurveHandle;
	int NavAreaStrength;
	float AutomaticNavCost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_TempWallReplacement : public FortNavAreaAutomatic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPathFollowingComponent : public FortPathFollowingComponentBase
{
public:
	class UClass* MyAI;
	float MovementBlockFrustrationCooldownSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPathFollowingComponent : public FortPathFollowingComponent
{
public:
	class UClass* AthenaAIController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPetCarrierItemDefinition : public AthenaBackpackItemDefinition
{
public:
	class UClass* DefaultPet;
	struct FortUICameraFrameTargetBounds CameraFramingBounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPetItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	EAthenaPetAttachRule PetAttachRule;
	struct Vector PetAttachOffset;
	struct FName PetAttachSocket;
	TArray<class UClass*> StimuliBanks;
	struct TSoftClassPtr<UObject> PetPrefabClass;
	struct TSoftClassPtr<UObject> PetSoundBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPhysicsAIPerceptionStimuliSourceComponent : public AIPerceptionStimuliSourceComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPickaxeItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	class UClass* WeaponDefinition;
	struct FName MainMeshAttachmentSocketName;
	struct FName OffhandMeshAttachmentSocketName;
	struct Transform MainMeshRelativeTransform;
	struct Transform OffhandMeshRelativeTransform;
	struct Vector PickaxeImpactFXPreviewOffset;
	struct Vector PickaxeDualWieldPreviewOffset;
	struct Rotator PickaxeDualWieldPreviewRotation;
	struct TSoftClassPtr<UObject> PreviewIdleMontage;
	struct TSoftClassPtr<UObject> PreviewSwingMontage;
	struct FortUICameraFrameTargetBounds CameraFramingBounds;
	struct Vector CameraFramingBoundsCenterOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaStatsSet : public UObject
{
public:
	struct AthenaMatchStats CumulativeStats;
	TArray<struct AthenaMatchStats> BestMatches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonStats : public UObject
{
public:
	class UClass* CumulativeStats;
	Unknown Buckets;
	class UClass* SeasonDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaPlayerMatchReport : public UObject
{
public:
	struct FScriptMulticastDelegate OnRewardsAvailable;
	struct FScriptMulticastDelegate OnStatsAvailable;
	struct FScriptMulticastDelegate OnTeamStatsAvailable;
	struct AthenaLevelInfo InitialLevelInfo;
	bool bHasMatchStats;
	struct AthenaMatchStats MatchStats;
	bool bHasTeamStats;
	struct AthenaMatchTeamStats TeamStats;
	bool bHasRewards;
	struct AthenaRewardResult EndOfMatchResults;
	struct AthenaTravelRecord TravelRecord;
	struct FScriptMulticastDelegate TravelLogUpdated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaQuickChatBank : public UDataAsset
{
public:
	TArray<struct AthenaQuickChatLeafEntry> ChatOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaResurrectionComponent : public UActorComponent
{
public:
	TArray<struct UniqueNetIdRepl> PlayerIdsForResurrection;
	Unknown ResurrectionLocation;
	struct MarkerID ResurrectionMachineMarkerID;
	int ClosestSpawnMachineIndex;
	struct CloneMachineRepData CloneMachineRepData;
	float NotifyPlayerDamageThrottle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRewardEventGraph : public FortPersistableItemDefinition
{
public:
	struct FString CalendarEventName;
	struct FString CalendarEventType;
	struct TSoftClassPtr<UObject> PurchaseToken;
	TArray<struct RewardKeyData> RewardKey;
	bool bRewardKeysInternally;
	TArray<struct RewardNode> Rewards;
	TArray<struct TSoftClassPtr<UObject>> ItemsToCleanUpUponRemoval;
	class UClass* CosmeticRandomnes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRewardEventGraphCosmeticItemDefinition : public AthenaCosmeticItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaRewardEventGraphItem : public UFortAccountItem
{
public:
	int player_random_seed;
	int64_t reward_graph_purchased_timestamp;
	struct DateTime unlock_epoch;
	int unlock_keys_used;
	bool reward_graph_purchased;
	TArray<struct GameplayTag> reward_nodes_claimed;
	TArray<struct FString> player_state;
	TArray<struct RewardKeyState> reward_keys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventItemDefinitionBase : public FortAccountItemDefinition
{
public:
	int EventPriority;
	bool bActivateByDefault;
	struct FName RequiredEventTag;
	struct FName DisallowedEventTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSeasonalDecorEvent : public FortEventItemDefinitionBase
{
public:
	struct TSoftClassPtr<UObject> SupplyDropOverride;
	TArray<struct AthenaVehicleOverride> VehicleOverrides;
	bool bForceBattleBusOverrideEvenIfCosmeticSlotted;
	class UClass* BattleBusOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemData_BattlePass : public UAthenaSeasonItemData
{
public:
	TArray<struct BattlePassLevelReward> RewardsGrantedForPremiumBattlePassLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemData_BattleStar : public UAthenaSeasonItemData_BattlePass
{
public:
	TArray<struct AthenaSeasonPageGrid> PageList;
	TArray<struct AthenaSeasonPageGrid> QuestPageList;
	TArray<struct AthenaSeasonPageGrid> BonusPageList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemData_CustomSkin : public UAthenaSeasonItemData_BattlePass
{
public:
	struct AthenaRewardItemReference CustomSkinCID;
	TArray<struct AthenaSeasonItemCustomSkinCategoryData> Categories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemData_FriendChest : public UAthenaSeasonItemData
{
public:
	struct TSoftClassPtr<UObject> FreshDripCounter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemData_Level : public UAthenaSeasonItemData
{
public:
	int NumBattlePassLevels;
	int NumAdditionalBattlePassLevels;
	class UClass* BattlePassXpCurve;
	TArray<int> FreeLevelsThatNavigateToBattlePass;
	TArray<struct TrackCategory> TrackCategories;
	struct GameplayTag BattlePassFreeItemContentTag;
	struct GameplayTag BattlePassPaidItemContentTag;
	struct GameplayTag BattlePassAdditionalItemContentTag;
	struct AthenaRewardSchedule BattlePassXpScheduleFree;
	struct AthenaRewardSchedule BattlePassXpSchedulePaid;
	struct AthenaRewardSchedule AdditionalBattlePassSchedule;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSeasonItemDefinition : public FortAccountItemDefinition
{
public:
	bool bXpOnlySeason;
	bool bCapFreeBattlePassLevels;
	bool bUseSeasonCurveForBattlePassRewards;
	class UClass* SeasonXpOnlyExtendedCurve;
	class UClass* DailyPunchCard;
	class UClass* RepeatableDailiesCard;
	int RestedXpDailyGrant;
	int RestedXpMaxAccrue;
	float RestedXpMultiplier;
	int SeasonStartCalendarOffsetDays;
	int SeasonNumber;
	int NumSeasonLevels;
	class UClass* SeasonXpCurve;
	struct FString SeasonStorefront;
	TArray<struct FString> BattlePassOfferIds;
	TArray<struct FString> BattlePassLevelOfferIDs;
	int BattlePassLevelOffer_MaxLevel;
	struct FString BattlePassLevelBundleOfferID;
	int BattlePassLevelBundleOffer_MaxLevel;
	int BattlePassLevelBundleOffer_NumLevels;
	TArray<struct PrimaryAssetId> FreeTokenItemPrimaryAssetIds;
	TArray<struct TrackDynamicBackground> TrackPageBackgrounds;
	struct AthenaRewardSchedule SeasonXpScheduleFree;
	struct AthenaSeasonBannerLevelSchedule SeasonBannerSchedule;
	class UClass* SeasonalGlyphChallengeBundle;
	struct FString GlyphTokenTemplateId;
	class UClass* SeasonalGlyphRewards;
	class UClass* ChallengeSchedulePaid;
	TArray<class UClass*> ChallengeSchedulesAlwaysShown;
	struct AthenaRewardScheduleLevel SeasonGrantsToEveryone;
	struct AthenaRewardScheduleLevel SeasonFirstWinRewards;
	struct AthenaRewardScheduleLevel BattleStarSubstitutionReward;
	struct GameplayTag FreeSeasonItemContentTag;
	struct GameplayTag SeasonGrantsToEveryoneItemContentTag;
	struct GameplayTag SeasonFirstWinItemContentTag;
	TArray<struct XpDisplayConversion> XpDisplayOverride;
	struct TSoftClassPtr<UObject> XpItemDef;
	TArray<struct TSoftClassPtr<UObject>> ExpiringRewardTypes;
	TArray<struct TSoftClassPtr<UObject>> TokensToRemoveAtSeasonEnd;
	TArray<struct AthenaMidSeasonUpdate> MidSeasonUpdates;
	bool bRemoveAllDailyQuestsAtSeasonEnd;
	struct TSoftClassPtr<UObject> NoBattleBundleToken;
	struct TSoftClassPtr<UObject> CollectionsDataTable;
	class UClass* NPCConversationQuests;
	class UClass* SharedQuests;
	class UClass* NPCConversationServices;
	class UClass* NPCConversationSalesInventory;
	Unknown SeasonDataTables;
	Unknown SeasonDataAssets;
	TArray<struct GameplayTag> FirstTimeTrackedBitFlags;
	TArray<class UClass*> AdditionalSeasonData;
	struct FString BattlePassOfferId;
	struct FString BattlePassLevelOfferID;
	struct AthenaRewardSchedule BookXpScheduleFree;
	struct GameplayTag BattlePassFreeItemContentTag;
	struct AthenaRewardSchedule BookXpSchedulePaid;
	struct GameplayTag BattlePassPaidItemContentTag;
	struct AthenaRewardSchedule AdditionalBookSchedule;
	struct GameplayTag BattlePassAdditionalItemContentTag;
	TArray<int> FreeLevelsThatNavigateToBattlePass;
	TArray<struct TrackCategory> TrackCategories;
	class UClass* BookXpCurve;
	int NumBookLevels;
	int NumAdditionalBookLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemEntryBase : public UObject
{
public:
	EPageItemTileSize TileSize;
	struct TSoftClassPtr<UObject> CustomButtonIcon;
	bool bIsPRMTracked;
	struct FString PRMOwnedParamName;
	struct FString PRMRequiredRewardsParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemEntryEmpty : public UAthenaSeasonItemEntryBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemEntryInfoPanel : public UAthenaSeasonItemEntryBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemEntryQuest : public UAthenaSeasonItemEntryBase
{
public:
	struct AthenaRewardItemReference QuestItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemEntryOfferBase : public UAthenaSeasonItemEntryBase
{
public:
	struct AthenaBattlePassOffer BattlePassOffer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSeasonItemEntryReward : public UAthenaSeasonItemEntryOfferBase
{
public:
	bool bIsFreePassReward;
	int RewardsNeededForUnlock;
	int TotalRewardsNeededForUnlock;
	TArray<struct TSoftClassPtr<UObject>> RequiredItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSeasonTreasureItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaShoutItemDefinition : public AthenaEmojiItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ShoutSound;
	Unknown TemporarilyHeldAudioComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSkyDiveContrailItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ContrailEffect;
	struct TSoftClassPtr<UObject> FrontEndContrailEffect;
	struct TSoftClassPtr<UObject> NiagaraContrailEffect;
	struct Vector DefaultVelocityVector;
	struct FName VelocityVectorParameterName;
	struct FName ParaGlideLeanParameterName;
	TArray<struct VectorParticleParameter> VectorParameters;
	TArray<struct FloatParticleParameter> FloatParameters;
	bool bWaitForFrontendSceneTransition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSpecialActorComponent : public UActorComponent
{
public:
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	bool bUseCompassIcon;
	struct ScalableFloat RenderDistance;
	struct GameplayTagContainer RenderTags;
	struct FName SpecialActorID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSpectatorPlayerListRowData : public UObject
{
public:
	struct FScriptMulticastDelegate OnIsSpectatorTargetChanged;
	struct FScriptMulticastDelegate OnKillsChanged;
	int Rank;
	int TeamNumber;
	struct LinearColor TeamColor;
	struct FString PlayerName;
	int Kills;
	bool IsRecordingPlayer;
	bool IsSpectatorTarget;
	class UClass* PlayerState;
	struct UniqueNetIdRepl PlayerUniqueId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSprayItemDefinition : public AthenaDanceItemDefinition
{
public:
	struct TSoftClassPtr<UObject> DecalMaterial;
	struct FName ProgressiveCosmeticStatName;
	bool bUseBannerAsTexture;
	struct TSoftClassPtr<UObject> DecalTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaSuperDingo : public ABuildingGameplayActor
{
public:
	bool bIsAutoFireTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaToyItemDefinition : public AthenaDanceItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ToySpawnAbility;
	struct TSoftClassPtr<UObject> ToyActorClass;
	struct TSoftClassPtr<UObject> FrontEndPreviewActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTrapAIPerceptionStimuliSourceComponent : public AIPerceptionStimuliSourceComponent
{
public:
	Unknown TrapDiscoverabilityMap;
	bool bEnablePerceptionSystemOnTrap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaVehicleCosmeticItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	EFortVehicleDecoType DecoType;
	struct Transform DecoSocketTransform;
	struct TSoftClassPtr<UObject> TestDecoMesh;
	struct FName DecoSocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaVictoryPoseItemDefinition : public FortMontageItemDefinitionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewActor : public AActor
{
public:
	class UClass* SpecialEventMaterial;
	struct CharacterDisplaySettings CurrentDisplayInfo;
	class UClass* ItemPreviewRootComponent;
	class UClass* UserRotationComponent;
	float ZoomLevel;
	struct Rotator PedestalRotationOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewMultiAngleActor : public AFortItemPreviewActor
{
public:
	class UClass* CameraRotationRootComponent;
	class UClass* PrimaryCameraComponent;
	class UClass* AutotestFloorMaterial;
	float AngleTransitionDuration;
	class UClass* AngleTransitionCurve;
	class UClass* ActiveCameraAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaWrapPreviewActor : public AFortItemPreviewMultiAngleActor
{
public:
	class UClass* ZoomedInWeaponCameraComponent;
	class UClass* ZoomedOutVehicleCameraComponent;
	class UClass* ZoomedInVehicleCameraComponent;
	class UClass* ZoomedOutCampaignVehicleCameraComponent;
	class UClass* ZoomedInCampaignVehicleCameraComponent;
	class UClass* ZoomedOutLargeWeaponCameraComponent;
	class UClass* ZoomedInLargeWeaponCameraComponent;
	class UClass* PreviewSpawnPointComponent;
	class UClass* ItemWrapDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaXPDisplayData : public UDataAsset
{
public:
	TArray<struct XPDisplayData> DisplayData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATimeOfDayController_BlueprintBase : public AActor
{
public:
	bool bOverride_FogCutoffDistance;
	bool bOverride_FogDensity;
	bool bOverride_FogHeightFalloff;
	bool bOverride_FogInscatteringColor;
	bool bOverride_FogMaxOpacity;
	bool bOverride_FogStartDistance;
	bool bOverride_FogDirectionalInscatteringColor;
	bool bOverride_FogDirectionalInscatteringExponent;
	bool bOverride_FogDirectionalInscatteringStartDistance;
	bool bOverride_FogFullyDirectionalInscatteringColorDistance;
	bool bOverride_FogUseVolumetricFog;
	bool bOverride_FogVolumetricFogExtinctionScale;
	bool bOverride_FogVolumetricFogDistance;
	bool bOverride_FogVolumetricFogScatteringDistribution;
	bool bOverride_FogVolumetricFogAlbedo;
	bool bOverride_TimeOfDay;
	bool bOverride_PostProcessBlendWeight;
	bool bOverride_PostProcessFogOpacity;
	bool bOverride_PostProcessFogColor;
	bool bOverride_DirectionalLightColor;
	bool bOverride_DirectionalLightIntensity;
	bool bOverride_DirectionalLightAngle;
	bool bOverride_CloudHorizonColor;
	bool bOverride_SkyboxHorizonColor;
	bool bOverride_SkyboxZenithColor;
	bool bOverride_CloudAmountHorizon;
	bool bOverride_CloudAmountZenith;
	bool bOverride_CloudSpeedMaster;
	bool bOverride_CloudSpeedDetailTextureOne;
	bool bOverride_CloudSpeedDetailTextureTwo;
	bool bOverride_StormStrength;
	bool bOverride_SunScale;
	bool bOverride_SunDiscIntensity;
	bool bOverride_SkyLightColor;
	bool bOverride_SkyLightIntensity;
	bool bOverride_SkyLightCubemap;
	float FogCutoffDistance;
	float FogDensity;
	float FogHeightFalloff;
	struct LinearColor FogInscatteringColor;
	float FogMaxOpacity;
	float FogStartDistance;
	struct LinearColor FogDirectionalInscatteringColor;
	float FogDirectionalInscatteringExponent;
	float FogDirectionalInscatteringStartDistance;
	float FogFullyDirectionalInscatteringColorDistance;
	bool FogUseVolumetricFog;
	float FogVolumetricFogExtinctionScale;
	float FogVolumetricFogDistance;
	float FogVolumetricFogScatteringDistribution;
	struct Color FogVolumetricFogAlbedo;
	float TimeOfDay;
	float PostProcessBlendWeight;
	float PostProcessFogOpacity;
	struct LinearColor PostProcessFogColor;
	struct LinearColor DirectionalLightColor;
	float DirectionalLightIntensity;
	struct Vector DirectionalLightAngle;
	bool bResetMaterialWhenUpdatingParams;
	struct LinearColor CloudHorizonColor;
	struct LinearColor SkyboxHorizonColor;
	struct LinearColor SkyboxZenithColor;
	float CloudAmountHorizon;
	float CloudAmountZenith;
	float CloudSpeedMaster;
	float CloudSpeedDetailTextureOne;
	float CloudSpeedDetailTextureTwo;
	float StormStrength;
	float SunScale;
	float SunDiscIntensity;
	Unknown ScalarParameters;
	TArray<struct FName> SkyboxHorizonMaterialParameters;
	TArray<struct FName> SkyboxZenithMaterialParameters;
	struct LinearColor SkyLightColor;
	float SkyLightIntensity;
	class UClass* SkyLightCubemap;
	class UClass* TODM;
	class UClass* ExponentialHeightFog;
	class UClass* DirectionalLight;
	class UClass* SkyLight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAutoFrameDronePawn : public AHoverDronePawn
{
public:
	TArray<class UClass*> ActorsToTrack;
	Unknown TrackedActorTimes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAutomationPerfMonitorManager : public UObject
{
public:
	TArray<struct FString> DesiredStats;
	bool bRecording;
	float TimeSinceLastRecord;
	int LastGoodFrame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleBusCosmeticInstanceBase : public AActor
{
public:
	class UClass* ActiveSkin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleLabDeviceGameplayActor : public ABuildingGameplayActor
{
public:
	class UClass* BattleLabDeviceItemData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleLabDeviceGameplayActor_VendingMachine : public ABattleLabDeviceGameplayActor
{
public:
	class UClass* VendingMachineMesh;
	class UClass* FunnelMesh;
	class UClass* FunnelCollision;
	class UClass* SpawnLootTransformArrow;
	float LootTossSpeed;
	class UClass* DroppedIntoFunnelPickup;
	TArray<class UClass*> StoredItemDefinitions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleMapEdge : public AActor
{
public:
	TArray<class UClass*> CustomMaterialsPerPlayerIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleMapNode : public AActor
{
public:
	class UClass* EdgeClass;
	class UClass* ChildrenNodeClass;
	bool bEnableAutomaticResize;
	bool bSupportSelection;
	bool bSupportScrubbing;
	TArray<class UClass*> CustomMaterialsPerPlayerIndex;
	TArray<class UClass*> NextEdges;
	Unknown ChildrenNodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleMapGroundMoveNode : public ABattleMapNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleMapPawnLive : public AFortReplaySpectatorPawnBase
{
public:
	class UClass* GroundMoveNodeClass;
	class UClass* AirMoveNodeClass;
	class UClass* GotKillNodeClass;
	class UClass* ZoneNodeClass;
	class UClass* TeamFlightNodeClass;
	class UClass* TimeIndicatorClass;
	class UClass* SelectedNodeSound;
	class UClass* HoveredNodeSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleMapPawnReplay : public AHoverDronePawn
{
public:
	class UClass* GroundMoveNodeClass;
	class UClass* AirMoveNodeClass;
	class UClass* GotKillNodeClass;
	class UClass* ZoneNodeClass;
	class UClass* TeamFlightNodeClass;
	class UClass* TimeIndicatorClass;
	class UClass* SelectedNodeSound;
	class UClass* HoveredNodeSound;
	class UClass* ScrubbingToSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABattleMapTimeIndicator : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABGAConsumableSpawner : public ABuildingActor
{
public:
	class UClass* DummyRoot;
	struct FName SpawnLootTierGroup;
	class UClass* AssociatedBuildingActor;
	class UClass* QueryTemplate;
	TArray<struct AIDynamicParam> QueryConfig;
	bool bAlignSpawnedActorsToSurface;
	TArray<struct FortItemEntry> ConsumablesToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BGAConsumableWrapperItemDefinition : public FortItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ConsumableClass;
	struct ScalableFloat MinNumberConsumablesToSpawn;
	struct ScalableFloat MaxNumberConsumablesToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintLibrarySTW : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoneSetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoneSetVisibilityInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingActorEditorComponent : public UStaticMeshComponent
{
public:
	struct TSoftClassPtr<UObject> CurrentlySnappedMaterial;
	struct TSoftClassPtr<UObject> CubeMesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingActorHotSpotConfig : public UDataAsset
{
public:
	struct BuildingActorHotSpotDirection DirectionSetup;
	struct BuildingActorHotSpotDirection DefaultSetup;
	class UClass* ExtraTypeConfig;
	bool bHasDirectionalSetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingActorHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingActorTickManager : public UWorldSubsystem
{
public:
	TArray<class UClass*> Buildings;
	int LastBuildingIndex;
	int BuildingIndex;
	int MaxBuildingIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingCorner : public ABuildingAutoNav
{
public:
	class UClass* PrimaryWall;
	class UClass* SecondaryWall;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingCustomizableSpawnContainer : public ABuildingContainer
{
public:
	TArray<struct FortItemQuantityPair> SpawnItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingDeco : public ABuildingAutoNav
{
public:
	bool bCastShadow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata : public UDataAsset
{
public:
	bool bSupportNextPieceAssist;
	bool bHasNavigableOpening;
	bool bHasCustomAttackLocation;
	class UClass* DefaultHotspotConfig;
	class UClass* ShootingHotSpotConfig;
	struct ConnectivityCube ConnectivityCubeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata_BinaryToggle : public UBuildingEditModeMetadata
{
public:
	TArray<EBinaryToggleValues> TileData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata_Floor : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata_Pillar : public UBuildingEditModeMetadata
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata_Roof : public UBuildingEditModeMetadata_BinaryToggle
{
public:
	TArray<struct AuxiliaryEditTileMeshData> AuxEditTileMeshData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata_Stair : public UBuildingEditModeMetadata
{
public:
	TArray<int> TileData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadata_Wall : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeMetadataContainer : public UDataAsset
{
public:
	TArray<class UClass*> MetadataCollection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeSupport : public UObject
{
public:
	class UClass* OwnerBuilding;
	class UClass* EditingController;
	class UClass* PreviewMetadata;
	class UClass* ScratchpadMetadata;
	class UClass* ExpectedMetadataClass;
	TArray<class UClass*> PossibleEditClasses;
	struct TSoftClassPtr<UObject> EditTileMesh;
	TArray<class UClass*> EditTileMeshComponents;
	struct TSoftClassPtr<UObject> TileMaterialParent;
	struct TSoftClassPtr<UObject> AlternateTileMaterialParent;
	struct TSoftClassPtr<UObject> ActiveTileTexture;
	struct TSoftClassPtr<UObject> InactiveTileTexture;
	class UClass* LastInteractedComp;
	class UClass* LastHighlightedComp;
	class UClass* PreviewComponent;
	struct TSoftClassPtr<UObject> PreviewMaterial;
	struct TSoftClassPtr<UObject> AlternatePreviewMaterial;
	struct EditModeState PreviewEditModeState;
	struct TSoftClassPtr<UObject> SuccessfulPatternMatchCurve;
	struct Timeline SuccessfulMatchInteractTimeline;
	bool bCanMirrorMetadataToMatch;
	bool bCanRotateMetadataToMatch;
	bool bEditActionInProgress;
	bool bInitializedTimelines;
	bool bUseAlternateMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeSupport_BinaryToggle : public UBuildingEditModeSupport
{
public:
	class UClass* BinaryTogglePreviewData;
	EBinaryToggleValues CurToggleAction;
	struct LinearColor DefaultBlueTileColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeSupport_Floor : public UBuildingEditModeSupport_BinaryToggle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeSupport_Roof : public UBuildingEditModeSupport_BinaryToggle
{
public:
	TArray<struct TileCompInterpData> TileInterpData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeSupport_Stair : public UBuildingEditModeSupport
{
public:
	class UClass* StairPreviewMetadata;
	class UClass* LastValidMetadataConfiguration;
	struct TSoftClassPtr<UObject> AuxiliaryIndicatorMesh;
	TArray<class UClass*> AuxiliaryIndicatorComponents;
	class UClass* ActivatedAuxIndicatorComponent;
	struct TSoftClassPtr<UObject> AuxIndicatorComponentParentMaterial;
	struct TSoftClassPtr<UObject> AuxIndicatorArrowTexture;
	struct TSoftClassPtr<UObject> AuxIndicatorGridTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingEditModeSupport_Wall : public UBuildingEditModeSupport_BinaryToggle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFlagSpawn : public ABuildingGameplayActor
{
public:
	struct Vector HUDIndicatorRelativeOffset;
	byte bPickupOnTouch;
	class UClass* CarriedObjectClass;
	struct Vector RelativeTranslation;
	class UClass* SpawnedObject;
	float SpawnDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFloor : public ABuildingSMActor
{
public:
	bool bShouldIgnoreForHorizontalHotspotSearch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingFlushManager : public UObject
{
public:
	TArray<struct QueuedFlushNetDormancyInfo> FlushNetDormancyQueue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFoundation3x3 : public ABuildingFoundation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFoundation5x10 : public ABuildingFoundation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFoundation5x5 : public ABuildingFoundation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFoundationMayday : public ABuildingFoundation
{
public:
	class UClass* StrangeLandsBuildingGroup;
	class UClass* ForceStrangeLandsBuildingGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingFoundationSlab : public ABuildingFoundation
{
public:
	struct FText CreatorName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorBalloon : public ABuildingGameplayActor
{
public:
	int BalloonLocationSelection;
	float BalloonNoAim;
	struct Vector CharVelZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorBalloonRope : public ABuildingGameplayActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorConsumable : public ABuildingGameplayActor
{
public:
	class UClass* OnConsumeGameplayEffect;
	class UClass* OnConsumeMontageAbility;
	class UClass* OnConsumeMontage;
	bool bSpawnerCalculateRandomRotation;
	class UClass* DeathParticles;
	class UClass* DeathSound;
	float MaxDrawDistanceStw;
	float MaxDrawDistanceAthena;
	struct FName StatNameWhenConsumed;
	struct GameplayTagContainer FailedReason;
	class UClass* SearchAnim;
	bool bReplicateLongInteractionDetails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorLockOnConsumable : public ABuildingGameplayActorConsumable
{
public:
	float SecondsBeforeDeathAfterPickup;
	float InteractRadius;
	float PawnInterpSpeed;
	float PawnDisableRotationSeconds;
	class UClass* InteractingPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorBlade : public ABuildingGameplayActorLockOnConsumable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorBountyToken : public ABuildingGameplayActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorC4 : public ABuildingGameplayActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorCampFire : public ABuildingGameplayActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorChaser : public ABuildingGameplayActor
{
public:
	class UClass* FortProjectileMoveComp_Chase;
	class UClass* CapsuleComponent;
	struct FName TargetSocketName;
	struct FName TargetPlayerSocketName;
	struct FName TargetNpcSocketName;
	class UClass* ForcedMovementTarget;
	struct EventMessageTag AttachedMessageTag;
	struct EventMessageTag DetachedMessageTag;
	struct EventMessageTag SetMarkerPositionMessageTag;
	struct EventMessageTag TargetDamagedMessageTag;
	class UClass* ChaseTarget;
	struct GameplayTagQuery ValidTargetQuery;
	struct ScalableFloat TargetingRangeMax;
	TArray<EObjectTypeQuery> TargetObjectTypes;
	struct ScalableFloat TargetingPrioritizePlayersOverNpcs;
	struct ScalableFloat ChaseDistanceFromTargetToAttach;
	struct ScalableFloat PatrolTargetHeightAboveGround;
	struct ScalableFloat PatrolNewDirectionMin;
	struct ScalableFloat PatrolNewDirectionMax;
	struct ScalableFloat PatrolDriftRange;
	struct ScalableFloat PatrolMoveSpeedMin;
	struct ScalableFloat PatrolMoveSpeedMax;
	struct ScalableFloat PatrolGroundFindDistance;
	TArray<EObjectTypeQuery> PatrolAvoidObjectTypes;
	struct ScalableFloat PatrolTurnSeconds;
	struct ChaserPatrolTurnData PatrolTurnData;
	TArray<class UClass*> PotentialTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorCloneMachine : public ABuildingGameplayActor
{
public:
	class UClass* CloneLocation;
	bool bRespawnCompleteAndSelfDestructing;
	struct ScalableFloat DelayBeforeActivation;
	struct ScalableFloat DelayBeforeRespawn;
	struct ScalableFloat DelayBeforeSelfDestruct;
	struct ScalableFloat DelayBeforeSelfDestructWithStorm;
	class UClass* OnDamagedNotifyPlayerSound;
	class UClass* OnDestroyedNotifyPlayerSound;
	float ActivationServerEndTime;
	float RespawnServerEndTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorQuest : public ABuildingGameplayActor
{
public:
	bool bSuppressSimpleInteractionWidgetForTouch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorConversationCompatible : public ABuildingGameplayActorQuest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorPetrol : public ABuildingGameplayActor
{
public:
	class UClass* SphereCollisionComponent;
	struct SplatterCellIndex SplatterIndices;
	struct Vector StartingPos;
	struct Vector TargetPos;
	class UClass* MaterialInstanceDynamic;
	class UClass* SplatterDecal;
	class UClass* DamageEffectClass;
	TArray<class UClass*> Neighbors;
	float IgniteRange;
	float DamageRange;
	float CurrentSize;
	Unknown PrevPetrol;
	struct Vector ImpactDirection;
	bool bIgnited;
	int ProjectileCount;
	float SplatterMinDecalWidth;
	float SplatterMaxDecalWidth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USplatterGridSystem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorPlayerPropAttachment : public ABuildingGameplayActor
{
public:
	bool bClientAttachmentErrorCorrectionEnabled;
	bool bUseTransformedCalcBounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorPropQuest : public ABuildingGameplayActorQuest
{
public:
	bool bEnableConversationComponent;
	struct GameplayTag ConversationEntryTag;
	class UClass* ConsolidatedQuestComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorSandMound : public ABuildingGameplayActor
{
public:
	float MeshRotationInterpSpeed;
	struct Rotator TargetMeshRotation;
	class UClass* MoundMesh;
	class UClass* MoundMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorSentry : public ABuildingGameplayActor
{
public:
	class UClass* CameraStaticMeshComp;
	class UClass* BaseStaticMeshComp;
	class UClass* AngleRaysStaticMeshComp;
	class UClass* SpotLightComp;
	bool bYawLimitWhileTracking;
	bool bDoesNotRotate;
	bool bLocateDamagerIfHitWhileIdle;
	EBuildingGameplayActorSentry_State CurrentSentryState;
	class UClass* PawnBeingTracked;
	struct ScalableFloat TrackedToAggroDelay;
	bool bIdleRotationStopped;
	float IdleRotationPauseTime;
	float ReturnToIdlePauseTime;
	float RotationRate;
	float ReturnToIdleRotationRate;
	float TrackingRotationRate;
	float LocatingDamagerRotationRate;
	float TrackingAdditionalZLook;
	bool bGoDormantAfterPassiveIdle;
	bool bSetRayScaleOnTrackTick;
	float AngleRaysTrackingYScale;
	float AngleRaysTrackingZScale;
	struct Vector AngleRaysTargetScale;
	struct GameplayTag ReturnToIdleGameplayCueTag;
	struct GameplayTag TrackedGameplayCueTag;
	struct GameplayTag AggroedGameplayCueTag;
	bool bBaseFollowsTargetRotation;
	bool bWasIdleStopped;
	bool bIdleRotatingRight;
	struct Vector LastPawnBeingTrackedLocation;
	float LastNetworkReceiveTime;
	float DisableTickAfterNoNetworkTrafficTime;
	float SentryPitchClampMin;
	float SentryPitchClampMax;
	struct Vector2D SpotLightDistanceMinMax;
	struct Vector2D SpotLightRadiusMinMax;
	struct Vector2D SpotLightOuterConeAngleMinMax;
	float SpotLightRadiusLerpSpeed;
	float SpotLightOuterConeAngleLerpSpeed;
	TArray<class UClass*> PawnsInRange;
	struct Rotator TargetRotation;
	struct Rotator StartingIdleRotation;
	struct Rotator IdleRotationDestination;
	struct Rotator ExactIdleRotation;
	struct Rotator TargetRotationRight;
	struct Rotator TargetRotationLeft;
	struct FScriptMulticastDelegate OnSentryStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorSpawnChip : public ABuildingGameplayActor
{
public:
	class UClass* OwnerPlayerController;
	struct UniqueNetIdRepl OwnerPlayerId;
	class UClass* OwnerPlayerState;
	struct ScalableFloat ChipExpirationLength;
	struct RebootCardReplicatedState RebootCardReplicatedState;
	struct LinearColor MarkerDetailsColor;
	struct MarkerID ResurrectionChipMarkerID;
	class UClass* IndicatorClass;
	struct FText InteractSubText;
	struct LinearColor InteractSubTextColor;
	bool bAutoAcquireSpawnChip;
	byte SquadId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorSpawnMachine : public ABuildingGameplayActor
{
public:
	class UClass* ResurrectLocation;
	TArray<struct UniqueNetIdRepl> PlayerIdsForResurrection;
	Unknown InstigatorPC;
	byte SquadId;
	byte ActiveTeam;
	ESpawnMachineState SpawnMachineState;
	struct ScalableFloat ResurrectionStartDelay;
	struct ScalableFloat ResurrectionNextPlayerDelay;
	class UClass* InteractSoundCueLoop;
	struct ScalableFloat CooldownLengthRow;
	struct FText InteractNoCardsSubText;
	struct FText InteractNoVanLockSubText;
	struct LinearColor InteractSubTextColor;
	ESpawnMachineSubTextState SpawnMachineSubTextState;
	int HandleIntoGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingGameplayActorTransientQuest : public ABuildingGameplayActorConversationCompatible
{
public:
	float InteractionTextRefreshRate;
	struct ScalableFloat NumberOfPlayersToSelectFrom;
	struct GameplayTagQuery TargetFilter;
	struct FText NoBountiesAvailableInteractionText;
	struct FText BountyInProgressInteractionText;
	struct FText FailedInteractionTextToUse;
	struct LinearColor InteractSubTextColor;
	TArray<class UClass*> PawnsInTriggerVolume;
	Unknown PlayersGrantedBounty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingGroup : public UDataAsset
{
public:
	struct FName GroupName;
	class UClass* FallbackGroup;
	EBuildingFoundationType FoundationType;
	struct GameplayTagContainer AllBuildingLevelTags;
	TArray<struct FortMapData> BuildingLevelData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingInfoIndicatorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBuildingInstancedSpawner : public ABuildingSMActor
{
public:
	class UClass* BuildingToInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingItemCollectorActor : public ABuildingGameplayActor
{
public:
	EFortItemCollectorBehavior ItemCollectorBehavior;
	bool bRequireAllForInteraction;
	bool bRequireAllForTurnIn;
	bool bHasToHaveSomething;
	bool bIncrementCaptureCountWhenGoalIsReached;
	bool bCurrentInteractionSuccess;
	EFortItemCollectorState ItemCollectorState;
	EFortItemCollectorTrackingType TrackingType;
	class UClass* ControllingPlayer;
	struct FName DefaultItemLootTierGroupName;
	struct DataTableRowHandle ItemCollectorHandle;
	bool bCallOnLocalInteract;
	bool bUseInstanceLootValueOverrides;
	TArray<struct FortItemQuantityPair> OverrideOutputItems;
	int OverrideGoal;
	int NumInteractionsAllowed;
	int NumInteractions;
	TArray<struct CollectorUnitInfo> ItemCollections;
	struct FScriptMulticastDelegate ManualOutputOverride;
	class UClass* ActiveInputItem;
	class UClass* ClientPausedActiveInputItem;
	struct ScalableFloat ActiveItemRotationTime;
	float ItemRotationTime;
	float ItemRotationTimeVariation;
	struct GameplayTagContainer AllowedItemRotationDamageTags;
	struct ScalableFloat OutputDespenseDelayTime;
	float DespensingDelayTime;
	struct Vector LootSpawnLocation;
	struct Rotator LootTossDirection;
	float LootTossConeHalfAngle;
	float LootTossSpeed;
	bool bTossOnGround;
	bool bSpawnAmmoOnlyWhenCarryingWeapon;
	int StartingGoalLevel;
	int StartingGoalLevelOverride;
	class UClass* InactiveItemTexture;
	bool bPickupOwnedByLooter;
	struct FScriptMulticastDelegate PickupSpawned;
	struct FScriptMulticastDelegate VehicleSpawned;
	TArray<struct CollectorTrackedData> TrackedInteractionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWeaponUpgradeRequiredResources : public UObject
{
public:
	int RequiredWood;
	int RequiredMetal;
	int RequiredBrick;
	EFortWeaponUpgradeDirection Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingItemWeaponUpgradeActor : public ABuildingItemCollectorActor
{
public:
	bool bAllowSecondInteraction;
	class UClass* WoodItem;
	class UClass* MetalItem;
	class UClass* BrickItem;
	struct ScalableFloat WoodCostCurve;
	struct ScalableFloat MetalCostCurve;
	struct ScalableFloat BrickCostCurve;
	struct ScalableFloat HorizontalWoodCostCurve;
	struct ScalableFloat HorizontalMetalCostCurve;
	struct ScalableFloat HorizontalBrickCostCurve;
	struct FText WeaponCannotBeUpgradedText;
	struct FText NotEnoughRessourcesText;
	EFortWeaponUpgradeInteractionResult UpgradeInteractionResult;
	EFortWeaponUpgradeInteractionResult HorizontalUpgradeInteractionResult;
	class UClass* RequiredResources;
	class UClass* RequiredHorizontalResources;
	class UClass* CurrentWeaponDefinition;
	TArray<struct PlayerWeaponUpgradeHoldData> PlayerToUpgradeWeaponData;
	EFortRarity UpgradedWeaponRarity;
	struct ScalableFloat InteractionTimeUncommon;
	struct ScalableFloat InteractionTimeRare;
	struct ScalableFloat InteractionTimeVeryRare;
	struct ScalableFloat InteractionTimeSuperRare;
	struct ScalableFloat InteractionTimeMythic;
	EBuildingAttachmentType BuildingAttachmentType;
	bool bBlocksAttachmentPlacement;
	class UClass* BuildingActorAttachedTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPlayerPrimitivePreview : public ABuildingSMActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingLayoutRequirement : public ABuildingPlayerPrimitivePreview
{
public:
	struct FScriptMulticastDelegate OnLayoutSatisfied;
	struct FScriptMulticastDelegate OnLayoutUnSatisfied;
	class UClass* LayoutRequirementSMActorClass;
	bool bIgnoreResourceTypeRequirements;
	bool bMakeSatisfyingActorIndestructibleWhileRequirementExists;
	bool bNeedToInitializeRequirementStatus;
	bool bRequirementSatisfied;
	ELayoutRequirementStatus RequirementStatus;
	EFortResourceType OverrideResourceType;
	bool bAllowAnyPattern;
	bool bAllowOccupantPatternEditing;
	struct TSoftClassPtr<UObject> LayoutDisplayMaterial;
	class UClass* LayoutDisplayMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMusicSequencerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrap : public ABuildingSMActor
{
public:
	class UClass* TraceLocation;
	class UClass* PlacementSkeletalMesh;
	struct Vector PlacementSkeletalMeshRelativeLocation;
	struct Rotator PlacementSkeletalMeshRelativeRotation;
	class UClass* TrapRangeMesh;
	class UClass* TrapPreviewMesh;
	struct Vector PreviewOverrideScale;
	class UClass* TrapData;
	struct FText AttachmentHintText;
	bool bShouldAffectAllPawnsInMinigames;
	struct FortTargetFilter TriggerFilter;
	struct Vector TrapPlacementOffset;
	bool bTriggerAbilityOnEndoverlap;
	class UClass* AbilitySet;
	TArray<class UClass*> AppliedAlterations;
	TArray<struct FortAbilitySetHandle> AlterationAbilitySetHandles;
	class UClass* AttachedTo;
	bool bTargetWithAttachedTo;
	class UClass* LastAttachedTo;
	float DelayBeforeDestroyAfterDurabilityExpired;
	float SavedDurabilityPct;
	float ObstructedTargetRecheckInterval;
	TArray<struct Vector> ShouldTriggerTraceOffsets;
	TArray<class UClass*> TriggerComponents;
	bool bIgnoreBuildingObstructions;
	bool bOwnAllFacesOfAttachedToActor;
	class UClass* AlternateMaterialInstance;
	class UClass* StimSourceComponent;
	TArray<class UClass*> DamageComponents;
	TArray<class UClass*> StaticMeshes;
	int TrapLevel;
	int OriginalTrapLevel;
	bool bTrapRecharging;
	struct GameplayTagContainer AnalyticsTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor : public ABuildingTrap
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingMusicSequencer : public ABuildingTrapFloor
{
public:
	class UClass* TriggerInstigator;
	class UClass* CachedTriggerInstigator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp : public ABuildingTimeOfDayLights
{
public:
	struct GameplayTagContainer AnalyticsTags;
	bool bSuppressSimpleInteractionWidgetForTouch;
	bool bCanBeMarked;
	bool bBlockMarking;
	struct MarkedActorDisplayInfo MarkerDisplay;
	struct Vector MarkerPositionOffset;
	bool bDoNotBlockMarkerTraceWhenOverlappingPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AOutpostStructureBase : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingOutpostStorageVault : public AOutpostStructureBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingOutpostStormshieldUpgrade : public AOutpostStructureBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingOutpostStormshieldCore : public ABuildingOutpostStormshieldUpgrade
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPhoenixItemCollectorActor : public ABuildingItemCollectorActor
{
public:
	TArray<class UClass*> ResourceWhitelist;
	int VendingTier;
	struct FScriptMulticastDelegate OnOutputItemChanged;
	TArray<struct Recipe> OutputItemRecipes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPhoenixRepairActor : public ABuildingGameplayActor
{
public:
	TArray<class UClass*> ResourceWhitelist;
	struct FScriptMulticastDelegate OnCurrentWeaponChanged;
	bool bCallOnLocalInteract;
	bool bCurrentInteractionSuccess;
	EFortRarity RepairedWeaponRarity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPillar : public ABuildingAutoNav
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_AISpawner : public ABuildingProp
{
public:
	class UClass* CreativeRiftClass;
	class UClass* CreatureManagerComponent;
	class UClass* MinigameProgress;
	class UClass* CreativeRift;
	class UClass* SpawnLocation;
	int ActivationRangeLevel;
	bool bUseDistanceToAI;
	float DespawnRangeOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_CaptureArea : public ABuildingProp
{
public:
	TArray<struct CaptureAreaTeamInfo> CaptureAreaTeamsInfo;
	class UClass* CaptureComponent;
	Unknown InventoryChangedHandlesMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_CaptureItemSpawner : public ABuildingProp
{
public:
	int ItemRefCount;
	bool bPickupWasClaimed;
	struct FName SpecialActorID;
	bool bShowCaptureEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_ClassSelector : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_ConversationCompatible : public ABuildingProp
{
public:
	struct ScalableFloat UseSpecialActorComponent;
	class UClass* SpecialActorComponentClass;
	class UClass* CustomInteractionWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_CreatureManager : public ABuildingProp
{
public:
	TArray<struct TSoftClassPtr<UObject>> AITypeOptions;
	struct TSoftClassPtr<UObject> SelectedAIType;
	float SelectedOverrideAggroDistance;
	int SelectedOverrideHealth;
	int SelectedOverrideScoreValue;
	EScoreDistributionType SelectedOverrideScoreDistribution;
	float SelectedOverrideDamage;
	float SelectedEnvironmentalDamageOverride;
	float SelectedMovementSpeedMultiplier;
	class UClass* DamageOverrideEffect;
	class UClass* EnvironmentalDamageOverrideEffect;
	class UClass* MovementSpeedOverrideEffect;
	struct GameplayTag DamageOverrideTag;
	struct GameplayTag MovementOverrideTag;
	class UClass* CreatureInfoComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_CreaturePlacer : public ABuildingProp_AISpawner
{
public:
	EFortMinigameState CurrentMinigameState;
	TArray<struct SpawnGroupVisuals> SpawnGroupVisuals;
	struct TSoftClassPtr<UObject> SelectedSpawnGroup;
	struct TSoftClassPtr<UObject> SelectedSpawnLimit;
	bool bHideVFX;
	bool bEnabledOnGameState;
	bool bDestroyPreviousOnSpawn;
	EFortMinigameState GameStateEnable;
	struct FScriptMulticastDelegate OnCreatureVisualsLoadComplete;
	bool bCreatureVisualsDoneLoading;
	class UClass* TurnOnReceiverComponent;
	class UClass* TurnOffReceiverComponent;
	class UClass* CreatureKilledTransmitComponent;
	bool bEnableCreativeCreatureSpawners;
	class UClass* CreatureSkeletalMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_DeimosSpawner : public ABuildingProp_AISpawner
{
public:
	TArray<class UClass*> DeimosSpawnerOptions;
	TArray<struct TSoftClassPtr<UObject>> PawnNumberCapOptions;
	TArray<struct TSoftClassPtr<UObject>> SpawnGroupOptions;
	TArray<struct TSoftClassPtr<UObject>> SpawnTimingOptions;
	TArray<struct TSoftClassPtr<UObject>> SpawnLimitOptions;
	TArray<struct TSoftClassPtr<UObject>> EQSQueryOptions;
	struct TSoftClassPtr<UObject> SelectedPawnNumberCap;
	struct TSoftClassPtr<UObject> SelectedSpawnGroup;
	struct TSoftClassPtr<UObject> SelectedSpawnTiming;
	struct TSoftClassPtr<UObject> SelectedSpawnLimit;
	struct TSoftClassPtr<UObject> SelectedEQSQuery;
	bool bNoSpawnLimitEnabled;
	bool bDamageBuildingsOnSpawn;
	bool bInvulnerable;
	bool bVisible;
	bool bHideVFX;
	float OverrideQueryRadius;
	bool bSortSlotsByBestScore;
	bool bEnabledOnMinigameStart;
	class UClass* TurnOnReceiverComponent;
	class UClass* TurnOffReceiverComponent;
	class UClass* KillAllAIReceiverComponent;
	class UClass* KillSpawnerReceiverComponent;
	bool bEnableCreativeCreatureSpawners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_DestructionObject : public ABuildingProp
{
public:
	struct FScriptMulticastDelegate OnBuildingAttributeSetHealthChangedDelegate;
	TArray<struct FText> ObjectiveNameTexts;
	struct FText ObjectiveTextTemplate;
	struct FText ObjectiveText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_LockDevice : public ABuildingProp
{
public:
	struct FScriptMulticastDelegate OnLockableActorChange;
	struct FScriptMulticastDelegate OnLockStateChange;
	TArray<class UClass*> InteractionCollisionComponents;
	float SearchAreaSize;
	class UClass* LockableObject;
	ELockState CurrentLockState;
	byte HideInteractionWhenLocked;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_Quest : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_QuestGlyph : public ABuildingProp_Quest
{
public:
	class UClass* QuestDef;
	struct LinearColor InteractSubTextColor;
	struct LinearColor InteractSubTextColorUnlocked;
	bool bShowContextInfo;
	bool bContextInfoUnlocked;
	float ActivationRange;
	TArray<class UClass*> GlyphActivationEmotes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_SwitchDevice : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingProp_VendingMachine : public ABuildingProp
{
public:
	struct GameplayTagContainer AllowedItemRotationDamageTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropAtlas : public ABuildingProp
{
public:
	class UClass* Ring1Comp;
	class UClass* Ring2Comp;
	class UClass* Ring3Comp;
	class UClass* RingTransitionMID;
	class UClass* PortalAudioComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropBigHealth : public ABuildingProp
{
public:
	int64_t BigHealth;
	int64_t BigHealthMax;
	bool bShowHealthBar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropBigHealthMovable : public ABuildingPropBigHealth
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropCorner : public ABuildingCorner
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropMusicPlayer : public ABuildingProp
{
public:
	bool bCheckAlternateHotfixValue;
	bool bPlayingByDefault;
	bool bPlayRandomSong;
	TArray<int> AvailableSongIndices;
	class UClass* MusicTrackTable;
	TArray<struct TSoftClassPtr<UObject>> MusicArray;
	struct MusicPlayerData PlayingSongData;
	class UClass* SongAudioComponent;
	struct FString SavedTrackName;
	EMusicTrackPlayback PlaybackType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropPlaygroundMusicPlayer : public ABuildingPropMusicPlayer
{
public:
	class UClass* MinigameLogicComponent;
	class UClass* PlayReceiverComponent;
	class UClass* StopReceiverComponent;
	int PlayDuringPregame;
	int PlayDuringWarmup;
	int PlayDuringGameplay;
	int PlayDuringRoundEnd;
	int PlayDuringGameEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropSimpleInteract : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingPropWall : public ABuildingProp
{
public:
	struct BuildingActorNavArea AreaPatternOverride;
	EBuildingWallArea AreaShapeType;
	float AreaWidthOverride;
	bool bOverrideAreaWidth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingRoof : public ABuildingSMActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingStairs : public ABuildingFloor
{
public:
	EBuildingStairsRailing RailingType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingStructuralSupportSystem : public UObject
{
public:
	class UClass* BatchedRemovalInstigator;
	TArray<class UClass*> LayoutRequirementActorsToRegister;
	class UClass* NavGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingTextureData : public UDataAsset
{
public:
	class UClass* Diffuse;
	class UClass* Normal;
	class UClass* Specular;
	class UClass* OverrideMaterial;
	EFortTextureDataType Type;
	EFortResourceType ResourceType;
	float ResourceCost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrap_WaypointDispenser : public ABuildingTrapFloor
{
public:
	TArray<class UClass*> WaypointDefinitions;
	TArray<class UClass*> WaypointTypes;
	int WaypointTypeIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapCeiling : public ABuildingTrap
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapCeiling_Falling : public ABuildingTrapCeiling
{
public:
	class UClass* VisibleMeshComponent;
	TArray<struct Transform> SpawnPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapDefender : public ABuildingTrapFloor
{
public:
	EFortDefenderInteractionError LastInteractError;
	class UClass* DefenderPawn;
	class UClass* DefenderItemDefinition;
	int DefenderItemLevel;
	struct FScriptMulticastDelegate DefenderPawnOrItemSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor_Hoverboard : public ABuildingTrapFloor
{
public:
	class UClass* DirectionArrow;
	float PushAmount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor_Hoverboard_Curve : public ABuildingTrapFloor
{
public:
	class UClass* Target;
	class UClass* TriggeredEffect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor_Launch : public ABuildingTrapFloor
{
public:
	struct TSoftClassPtr<UObject> ForceFeedbackClass;
	struct FName ForceFeedbackName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor_TargetDummy : public ABuildingTrapFloor
{
public:
	TArray<struct Vector> PathPointLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor_Turret : public ABuildingTrapFloor
{
public:
	class UClass* MinigameLogic;
	class UClass* RotateComp;
	class UClass* FiringPoint;
	class UClass* OverlapCollisionComponent;
	float RotateInterval;
	TArray<class UClass*> PlayerArray;
	class UClass* BlockingActor;
	class UClass* Target;
	float MinRotationSpeed;
	float MaxRotationSpeed;
	float CurrentRotationalSpeed;
	float UpdateIntervalTime;
	float CachedUpdateTime;
	float IncreaseIntervalRotationSpeed;
	float DecreaseIntervalRotationSpeed;
	bool bCurrentlyActive;
	bool bInSlowdownMode;
	bool bUseOwnerTeam;
	bool bCanTakeDamage;
	struct Vector ShootLocation;
	struct GameplayTag GTShoot;
	struct GameplayTag GTReload;
	float LifeTime;
	float FireRate;
	float ReloadTime;
	struct Vector BoxExtents;
	int CurrentAmmoCount;
	int MaxAmmo;
	bool bIsSearching;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapFloor_Waypoint : public ABuildingTrapFloor
{
public:
	struct WaypointIndex Index;
	bool bIsActive;
	class UClass* NextPoint;
	class UClass* PreviousPoint;
	class UClass* SplinePointLocation;
	class UClass* DeactivatedMesh;
	class UClass* WaypointGroup;
	class UClass* CachedWaypointGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapLauncher : public ABuildingTrapFloor
{
public:
	struct ScalableFloat LaunchStrength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingTrapWall : public ABuildingTrap
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingTurretComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnTurretTargetChanged;
	struct GameplayTag OnFireTagTrigger;
	float FiringInterval;
	float CurrentTargetValidationInterval;
	bool bPerformPeriodicValidationOnCurrentTarget;
	class UClass* TargetingOverlapComponent;
	class UClass* OwnerASC;
	class UClass* CurrentTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingTurretComponent_MOBA : public UBuildingTurretComponent
{
public:
	struct MOBATurretPrioritySetting TargetingPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingWall : public ABuildingSMActor
{
public:
	struct TSoftClassPtr<UObject> DoorObstacleClass;
	struct ClimbLinkData ClimbLink;
	struct Vector DoorOffset;
	struct Vector SlidingDoorOffset;
	struct Vector AutomaticSlidingDoorBoxExtent;
	struct Vector AutomaticSlidingDoorBoxOffset;
	struct Vector SlamOpenDoorBoxExtent;
	float SlidingTranslation;
	float SlidingOpenTime;
	class UClass* DoorOpeningSound;
	class UClass* DoorSlammedOpenSound;
	class UClass* DoorClosingSound;
	class UClass* DoorAnimatingMaterial;
	class UClass* DoorMesh;
	class UClass* DoubleDoorMesh;
	class UClass* DoorComponent;
	class UClass* SlidingDoorComponent;
	class UClass* DoubleDoorComponent;
	class UClass* DoorBoxComponent;
	struct Vector DoorLinkOffset;
	class UClass* DoorSmartLinkComp;
	class UClass* DoorBlueprintMeshComp;
	class UClass* SlidingDoorBlueprintMeshComp;
	class UClass* DoubleDoorBlueprintMeshComp;
	struct Rotator DoorDesiredRotOffset;
	float DoorDesiredXLocation;
	float SlidingDoorDesiredXLocation;
	struct BuildingActorNavArea AreaPatternOverride;
	float AreaWidthOverride;
	EBuildingWallArea AreaShapeType;
	EDoorOpenStyle DoorOpenStyle;
	bool bSwingingDoor;
	bool bSlidingDoor;
	bool bAutomaticSlidingDoor;
	bool bDoubleDoor;
	bool bCreateDoorLink;
	bool bDoorOpen;
	bool bLocalDoorOpen;
	bool bDoorCollisionDisabled;
	bool bLocalDoorCollisionDisabled;
	bool bOverrideAreaWidth;
	bool bCreateClimbLink;
	bool bProhibitPassOverLowEndOfTriangleWall;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientOnlyActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuildingWeakSpot : public AFortClientOnlyActor
{
public:
	Unknown ParentObject;
	bool bHit;
	bool bFadeOut;
	bool bActive;
	int HitCount;
	int Level;
	int MaxLevel;
	struct Vector StartingLocation;
	struct Vector HitNormal;
	EPhysicalSurface PhysicalSurfaceType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBulletWhipTrackerComponentBase : public UActorComponent
{
public:
	TArray<struct BulletWhipTrackerData> WhipTrackerData;
	bool bEnableGravityCheck;
	float FadeTimeOnProjectileStop;
	class UClass* CachedPassByPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCaptureComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate OnCaptureStateChanged;
	struct FScriptMulticastDelegate OnCaptureProgressUpdate;
	float OldSmoothedProgress;
	float SmoothedProgress;
	float SmoothProgressTimer;
	float ProgressDecaySpeed;
	float ProgressReverseSpeed;
	int CurrentCaptureSpeed;
	float CaptureSpeedBoost;
	float CaptureSpeedBoostEmoting;
	int NeutralizingTime;
	int DeneutralizingSpeed;
	float CaptureTime;
	float CaptureTimeCurrent;
	ECaptureState PreviousCaptureState;
	byte CapturingStateOwner;
	byte NeutralizingStateOwner;
	byte StateOwner;
	ECaptureState CaptureState;
	float CaptureProgress;
	ESmoothProgressState SmoothProgressState;
	struct TimerHandle SnapCaptureProgressTimerHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCatalogMessaging : public UPrimaryDataAsset
{
public:
	Unknown StoreToast_Header;
	Unknown StoreToast_Body;
	Unknown Banners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectMetric_Legacy : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCategoryMetric : public UObjectMetric_Legacy
{
public:
	TArray<class UClass*> Metrics;
	TArray<struct VersionedBudget> VersionedBudgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClassMetric : public UObjectMetric_Legacy
{
public:
	struct TSoftClassPtr<UObject> SoftTargetClass;
	class UClass* TargetClass;
	int TotalNumberOfInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltPlayerComponent : public FortControllerComponent
{
public:
	Unknown CachedMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPOICameraActor : public ACameraActor
{
public:
	struct GameplayTag POITag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACobaltPOICameraActor : public AFortPOICameraActor
{
public:
	class UClass* TranslationSceneComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundParticleModuleBase : public UParticleModule
{
public:
	struct FName DataProviderParameterName;
	bool bUseAverageFrequency;
	struct RawDistributionFloat FrequencyBandIndex;
	bool bSpawnTimeOnly;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UColorBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionVector ColorByMagnitude;
	struct RawDistributionFloat AlphaByMagnitude;
	bool bClampAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CombatManagerComponentSTW : public FortControllerComponent
{
public:
	float ReplicatedCombatEventHeat;
	float CombatEventHeat;
	float CombatFactors;
	float CurrentTotalHeat;
	float MaximumTotalHeat;
	float MaxHeatEver;
	class UClass* CombatGraph;
	class UClass* FactorGraph;
	struct CombatEventData Events;
	struct CombatFactorData Factors;
	struct CombatThresholdData Thresholds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ComplexPawnOverlapComponent : public OverlapComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConsolidatedQuestComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate OnQuestNotReady;
	struct FScriptMulticastDelegate OnQuestReady;
	struct FScriptMulticastDelegate OnQuestComponentSuccessEvent;
	struct FScriptMulticastDelegate OnCustomSetVisualsToFailed;
	struct FScriptMulticastDelegate OnCustomSetVisualsToPassed;
	struct FScriptMulticastDelegate OnCustomUpdateObjective;
	struct FScriptMulticastDelegate OnCustomUpdateQuest;
	class UClass* QuestItemDefinition;
	struct FName ObjectiveBackendName;
	struct FString CalendarEnableEvent;
	struct GameplayTagContainer BlockedPlaylistTags;
	EQuestVisibilityResponse ComponentResponse;
	EQuestUpdateType UpdateType;
	bool bIsInteractable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ContentBeaconClient : public OnlineBeaconClient
{
public:
	struct ContentMessageArray ContentMessagesArray;
	struct FString DestSessionId;
	struct FString DestConnectionInfoString;
	EClientContentReadiness ClientContentReadiness;
	TArray<struct ReplicatedVkResolvedModule> ClientContentModules;
	bool bHostActivatedContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ContentBeaconHostObject : public OnlineBeaconHostObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class InstallBundleRegistrar : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCosmeticDeveloperSettings : public UDeveloperSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCosmeticPreviewInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeDeferredTaskComponent : public UActorComponent
{
public:
	TArray<struct DeferredCreativeTask> DeferredFunctionsToExecute;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeDeveloperSettings : public UDeveloperSettings
{
public:
	struct TSoftClassPtr<UObject> PlaysetThumbnailEditorStage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeEditablePropertyInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACreativeIslandExporter : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACreativeIslandJsonExporter : public ACreativeIslandExporter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeIslandResourceComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate RequestResourcesDelegate;
	struct FScriptMulticastDelegate FreeResourcesDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeIslandResourceManagerComponent : public UActorComponent
{
public:
	TArray<struct CreativeIslandResource> Resources;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeKnobBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVisibilityComponent : public UActorComponent
{
public:
	bool bRegisterWithVisibilityManager;
	bool bObserver;
	bool bDistanceCheck2D;
	bool bCheckFacing;
	bool bCheckLOS;
	bool bRevealWithMap;
	EFortVisibilityBehavior VisibilityBehavior;
	struct FScriptMulticastDelegate OnVisibilityChangedEvent;
	float Radius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapComponent : public UFortVisibilityComponent
{
public:
	struct FortMiniMapData MiniMapData;
	class UClass* LocalMinimapIconOverride;
	Unknown MinimapIndicator;
	class UClass* MinimapIndicatorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMiniMapComponent : public UFortMiniMapComponent
{
public:
	struct FortMiniMapIndicatorTextProperties IndicatorTextProperties;
	struct CreativeMiniMapComponentIconData IconData;
	class UClass* IconList;
	TArray<class UClass*> LoadedMIDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMinimapComponentIconList : public UDataAsset
{
public:
	TArray<class UClass*> Icons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMinimapComponentIcon : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> MaterialInterface;
	class UClass* LoadedMaterialInterface;
	struct Vector2D Size;
	TArray<class UClass*> ColorOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMinimapComponentIconColorOverride : public UDataAsset
{
public:
	struct FName ParameterName;
	Unknown Colors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMoveToolLightPreviewOverride : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMoveToolOverrides : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMoveToolStateComponent : public UActorComponent
{
public:
	bool bPreview;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeMoveToolTarget : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerHealthInfoComponent : public UActorComponent
{
public:
	TArray<class UClass*> TeamHealthInfoArray;
	Unknown TeamInfoToTeamHealthMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativePlayerHealthInfoComponent : public UFortPlayerHealthInfoComponent
{
public:
	struct FScriptMulticastDelegate OnBossPlayerChanged;
	class UClass* ControllingMinigame;
	class UClass* BossPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeQuestComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnConditionsMetDelegate;
	ECreativeQuestStat StatToTrack;
	ECreativeQuestSharing SharingMode;
	int TargetTeam;
	int TargetClass;
	int AssignedToTeam;
	EDeathCause TargetDeathCause;
	bool bSelfEliminationsCount;
	struct FString QuestName;
	struct FString ObjectiveText;
	int MinigameTargetAmount;
	bool bShowQuestOnHUD;
	EShowProgressMode ShowProgressMode;
	bool bShowCompleteEffects;
	TArray<struct CreativeQuestData> QuestIndividualData;
	TArray<int> QuestTeamProgress;
	int QuestAllProgress;
	class UClass* MyMinigame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeQuestManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerGameplay : public FortPlayerController
{
public:
	class UClass* FortAmbientAudioController;
	int16_t PoiTagContainerTableID;
	struct FScriptMulticastDelegate TriggerSetupVehicleFuelWidget;
	struct FScriptMulticastDelegate OnAddFuel;
	struct TimerHandle VerifyAllowedToFlyTimerHandle;
	struct FScriptMulticastDelegate OnCreativeGhostEnabledDelegate;
	struct TimerHandle VerifyAllowModeratorModeTimerHandle;
	struct TimerHandle VerifyAllowedToBeInvulnerableTimerHandle;
	struct FScriptMulticastDelegate OnCreativeInvulnerableEnabledDelegate;
	struct FScriptMulticastDelegate OnCreativeHeatmapToggledDelegate;
	struct FScriptMulticastDelegate OnCreativeSwapPhoneAndHarvestHoldChangedDelegate;
	struct FScriptMulticastDelegate OnCreativeFlyingSpeedChanged;
	struct FScriptMulticastDelegate OnCreativeUIMetricsDisplayChanged;
	struct FScriptMulticastDelegate OnShowCreativeGlobalOptions;
	struct FScriptMulticastDelegate OnCreativeQuickbarEnabledChangedDelegate;
	struct FScriptMulticastDelegate OnCreativeQuickbarComponentLoaded;
	struct FScriptMulticastDelegate OnCreativeQuickmenuEnabledChangedDelegate;
	struct FScriptMulticastDelegate OnCreativeModeEnabledChangedDelegate;
	struct FScriptMulticastDelegate OnCreativePreviewScreenshotActiveChanged;
	struct FScriptMulticastDelegate OnCreativePreviewScreenshotReset;
	struct FScriptMulticastDelegate OnCreativePreviewScreenshotAccepted;
	struct FScriptMulticastDelegate OnCreativePreviewScreenshotCancelled;
	struct FScriptMulticastDelegate OnBalloonMovementChanged;
	struct TSoftClassPtr<UObject> CreativeMoveToolItemDefinition;
	struct TSoftClassPtr<UObject> CreativeQuickbarClass;
	class UClass* CreativeCameraPreviewScreenshotClass;
	class UClass* CreativeQuickbarComponent;
	struct VehicleTrickInfo VehicleTrickInfo;
	struct GhostModeRepData GhostModeRepData;
	struct FScriptMulticastDelegate OnGhostModeChanged;
	struct FScriptMulticastDelegate OnDBNOCarryPlayerChanged;
	struct FScriptMulticastDelegate OnWorldInventoryChangedDelegate;
	struct FScriptMulticastDelegate OnCreativeFlyChangedDelegate;
	struct FScriptMulticastDelegate OnHUDElementVisibilityRefreshedDelegate;
	uint16_t ServerNumNPCs;
	uint16_t ServerMaxNumNPCs;
	struct TimerHandle AmbientControllerInitializeTimer;
	bool bDisplayNPCNumbers;
	bool bHasSetInitialPoiTags;
	class UClass* CreativeModeFlyingInputComponent;
	class UClass* CreativeModeInputComponent;
	class UClass* CreativeGlobalOptionsInputComponent;
	class UClass* CreativeModePreviewScreenshotInputComponent;
	class UClass* CreativeModeInGameReadyCheckInputComponent;
	class UClass* CreativeModeratorModeInputComponent;
	TArray<float> FlyingModifiers;
	int FlyingModifierIndex;
	int UIMetricsDisplayIndex;
	int FlightSpeedWhenEnteredSprint;
	bool bIsFlightSprinting;
	bool bIsCreativeModeEnabled;
	bool bIsCreativeQuickbarEnabled;
	bool bIsCreativeQuickmenuEnabled;
	bool bCreativeMCPProfileIsMatchamkingEnabled;
	bool bIsCreativeThermometer2Enabled;
	bool bIsCreativeThermometerNewUIEnabled;
	bool bIsCreativeIslandExporterEnabled;
	bool bIsCreativeModeratorModeEnabled;
	bool bIsCreativeModeratorModeActive;
	TArray<class UClass*> DefaultCameraModifierClasses;
	struct TSoftClassPtr<UObject> CreativeOptions;
	class UClass* CreativeOptionsInternal;
	struct CreativeOptionVariableBase WantsToGhostMode;
	struct CreativeOptionVariableBase WantsToBeInvulnerable;
	struct CreativeOptionVariableBase WantedFlightSpeed;
	struct CreativeOptionVariableBase WantsToSwapPhoneAndHarvestHold;
	struct CreativeOptionVariableBase WantedUIMetricsDisplay;
	Unknown AppliedInGameModifierAbilitySetHandles;
	Unknown AbilityActivatedByInputInputComponentMap;
	Unknown AbilityActivatedByInputSpecHandleMap;
	class UClass* SpawnedVehicleComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeQuickbarComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnCreativeQuickbarActiveChanged;
	struct FScriptMulticastDelegate OnCreativeQuickbarEquippedChanged;
	struct FScriptMulticastDelegate OnCreativeQuickbarClutchReleasedNoAction;
	struct FScriptMulticastDelegate OnItemAddedToMoveTool;
	struct FScriptMulticastDelegate OnItemAddedToCreativeQuickbar;
	bool bIsCreativeQuickbarActive;
	bool bIsCreativeQuickbarEquipped;
	TArray<class UClass*> QuickbarSlotItemDefinitions;
	class UClass* QuickbarSlotPlaysetItemDefinition;
	class UClass* CurrentQuickbarRequestSaveRecord;
	class UClass* CreativeQuickbarInputComponent;
	class UClass* CreativeQuickbarActiveInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerZone : public FortPlayerControllerGameplay
{
public:
	struct FScriptMulticastDelegate OnBeginSkydiving;
	struct FScriptMulticastDelegate OnEndSkydiving;
	struct FScriptMulticastDelegate OnBeginSkydivingFromBus;
	struct FScriptMulticastDelegate OnEndSkydivingFromBus;
	struct FScriptMulticastDelegate OnVehicleSeatTransitionTargetIndexChange;
	struct FScriptMulticastDelegate OnStartedRespawn;
	bool bDontChangeReticleColorForEnemy;
	float LastVehicleSeatSwitchTime;
	class UClass* PlayerToSpectateOnDeath;
	Unknown GadgetTrackedAttributeItemInstanceIds;
	class UClass* TriggerHapticsComponent;
	class UClass* DeathInputComponent;
	class UClass* RemoteControlledPawnInputComponent;
	struct FortPlayerDeathReport PlayerDeathReport;
	bool bClientNotifiedOfPawnDied;
	bool bEnterCameraModeOnDeath;
	ELeecherStatus PlayerLeecherStatus;
	struct FScriptMulticastDelegate OnPossessedPawnDied;
	Unknown HUDTargetUnderReticle;
	TArray<struct UniqueNetIdRepl> RejoinablePartyMembers;
	float LastScoreEarnedTime;
	int VehicleSeatTransitionTargetIndex;
	struct FString VoiceChatChannel;
	TArray<class UClass*> DesyncNotifyList;
	bool bJetpackExecuteToggle;
	bool bAllowMovementCancellableActionsWithIceFeet;
	float MoveForwardOnlyEmoteCancelBackwardsThreshold;
	float MoveForwardOnlyEmoteCancelStrafeThreshold;
	struct ScalableFloat MovementCancellableActionLeashLength;
	struct Vector MovementCancellableActionLeashLocation;
	struct Vector MovementCancellableActionStartingLeashLocation;
	struct ScalableFloat UpdateSurfaceTypeMinimumLength;
	struct ScalableFloat UpdateSurfaceTypeMinimumDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerAthena : public FortPlayerControllerZone
{
public:
	float FireAbilityToWeaponSwitchTime;
	struct FScriptMulticastDelegate OnAircraftStateChange;
	struct FScriptMulticastDelegate OnItemDropSpawnedDelegate;
	struct FScriptMulticastDelegate OnItemDroppedDueToOverflow;
	struct FScriptMulticastDelegate OnCreativePermissionsChanged;
	class UClass* SwappingItemDefinition;
	float WinScreenDelayTime;
	bool bSkipPlayWinEffects;
	bool bAllowPlayersCreditOnLeave;
	class UClass* FocalPoint;
	struct Vector_NetQuantize FocalPointOffset;
	float FocalPointFOV;
	float FocalPointDuration;
	struct FScriptMulticastDelegate OnUsingFocalPointChanged;
	struct FScriptMulticastDelegate OnFocalPointActorChanged;
	struct FScriptMulticastDelegate OnSkydiveLeaderChanged;
	float SkydiveLeaderManualCameraTime;
	struct Rotator InterpolatedSkydiveFollowerViewRotation;
	class UClass* SkydiveLeader;
	struct FScriptMulticastDelegate OnPickupProjectileCreatedDelegate;
	class UClass* LastDownedVictim;
	class UClass* LastElimVictim;
	struct FScriptMulticastDelegate OnCameraInStormWallChangeDelegate;
	bool bLeaveDisconnectedPawnsInGame;
	class UClass* DisconnectedPawn;
	class UClass* PreviousPawn;
	bool bUseDeferredFireInputs;
	bool bReplicateViewTargetInventory;
	bool bHasHadValidPawn;
	bool bClientNotifiedOfWin;
	bool bClientNotifiedOfTeamWin;
	bool bClientNotifiedOfLoss;
	TArray<struct FString> PlayersTalking;
	struct FScriptMulticastDelegate TalkingPlayersChanged;
	bool bHighlightRecordingEnabled;
	bool bPlaceDangerMarkerWhenTargeting;
	bool bDeferringStartRecordingHighlights;
	struct FString HighlightGroupId;
	int CachedHighlightCount;
	float HighlightFirstKillTime;
	int HighlightKillMultiple;
	int HighlightDownMultiple;
	float HighlightKillCooldown;
	float HighlightKillRewindTime;
	float RespawnCamera_Time;
	float RespawnCamera_HoldPositionTime;
	struct Vector RespawnCamera_InitialLocOffset_InAir;
	struct Vector RespawnCamera_InitialLocOffset_OnGround;
	struct Rotator RespawnCamera_InitialRotOffset_InAir;
	struct Rotator RespawnCamera_InitialRotOffset_OnGround;
	float RespawnCamera_OffsetFromHit;
	bool bNextRespawnInAir;
	struct FName RespawnCameraBehavior;
	int MaximumNumberOfPawnsToSearchForEmoteMusic;
	float PickupSwapHoldTime;
	bool bUseNewPickupSwapLogic;
	float SpectatorLevelStreamDistance;
	float RespawnLevelStreamDistance;
	struct FScriptMulticastDelegate SpectatorStreamingChanged;
	struct FScriptMulticastDelegate InGameLoadScreenChanged;
	struct FScriptMulticastDelegate OnLocalPlayerChangedTeams;
	struct LevelStreamRequestHandshakeState LevelStreamRequestHandshakeState;
	struct FScriptMulticastDelegate OnCreativePlotLinkedVolumeChanged;
	struct FScriptMulticastDelegate OnClientLeaveIsland;
	struct FScriptMulticastDelegate OnClientForcedOffIsland;
	struct FScriptMulticastDelegate OnMakeNewCreativePlotFinished;
	struct FScriptMulticastDelegate OnDestroyCreativePlotFinished;
	struct FScriptMulticastDelegate OnRestoreCreativePlotFinished;
	struct FScriptMulticastDelegate OnDuplicateCreativePlotFinished;
	struct FScriptMulticastDelegate OnIslandEntriesChanged;
	struct FScriptMulticastDelegate OnUpdateCreativePlotName;
	struct FScriptMulticastDelegate OnUpdateCreativeDescriptionTags;
	class UClass* RespawnCameraActor;
	bool bDelayedTeleporting;
	bool bBlockTeleporting;
	int MaxPlotCount;
	struct FScriptMulticastDelegate InGameMatchmakingReadyCheckStarted;
	struct FScriptMulticastDelegate InGameMatchmakingReadyCheckComplete;
	struct FScriptMulticastDelegate InGameMatchmakingReadyCheckCanceled;
	struct FScriptMulticastDelegate InGameMatchmakingStarted;
	struct FScriptMulticastDelegate InGameMatchmakingComplete;
	struct FScriptMulticastDelegate InGameMatchmakingStateChanged;
	struct FScriptMulticastDelegate InGameMatchmakingQueuedStatusUpdated;
	struct FScriptMulticastDelegate InGameMatchmakingError;
	struct FScriptMulticastDelegate OnInGameMatchmakingCanceled;
	struct FScriptMulticastDelegate OnInGameMatchmakingUpdateCheckFailed;
	struct FScriptMulticastDelegate OnInGameContentDownloadStarted;
	bool bNoInGameMatchmaking;
	class UClass* AudioOnExitAircraft;
	class UClass* AudioOnExitAircraftHornDoppler;
	float MinQuickChatCooldown;
	float QuickChatOffCooldownTime;
	bool bMarkedAlive;
	TArray<struct CreativeIslandData> CreativeIslands;
	struct FString LastUsedSavePlot;
	bool bIsAllowedToPublish;
	struct TSoftClassPtr<UObject> GamepadSettingsAssetPtr;
	struct LinearColor TeamMemberIndicatorColor;
	bool bMatchStatsForPlayerSent;
	bool bAddedBookProgressStatsToGamemode;
	bool bHasSentMatchEndedQuestProgress;
	struct QuickBarData QuickBarDefinitions;
	bool bEnableBroadcastRemoteClientInfo;
	class UClass* BroadcastRemoteClientInfo;
	class UClass* StrongMyHero;
	TArray<Unknown> ClientGameWorldHolds;
	float EndMatchHeartbeatTimerDelay;
	double EndMatchHeartbeatTimestamp;
	class UClass* WarmupPlayerStart;
	class UClass* FullScreenScoreboardInputComponent;
	class UClass* CurrentFullscreenInputComponent;
	class UClass* GameChannelRecommendationInputComponent;
	class UClass* SubscriptionNudgeInputComponent;
	class UClass* SocialNotificationInputComponent;
	bool bUseTrapPicker;
	float DoubleTapEditTime;
	class UClass* MatchReport;
	TArray<class UClass*> QuickEditWallPatterns;
	TArray<class UClass*> QuickEditFloorPatterns;
	TArray<class UClass*> QuickEditRoofPatterns;
	TArray<class UClass*> QuickEditStairsPatterns;
	struct FScriptMulticastDelegate OnBuildingQuickEditOptionChanged;
	class UClass* MinimapIndicatorClass;
	class UClass* MinimapChallengeIndicatorClass;
	class UClass* MinimapChallengeIndicators;
	bool bEnableInGameChallengeLocationIndicators;
	class UClass* SquadMarkerActorClass;
	int BuildingsCreated;
	int BuildingsEdited;
	int BuildingsRepaired;
	int BuildingsUpgraded;
	float BuildingActionDoneLastAtTime;
	struct BuildingStats BuildingMatchStats;
	TArray<struct BuildingEditAnalyticEvent> BuildingAnalyticsArray;
	float TimeStartedTrackingBuildingAnalytics;
	class UClass* CreativePlotLinkedVolume;
	struct CreativePlotSessionData CreativePlotSessionData;
	class UClass* OwnedPortal;
	TArray<struct ItemAndCount> CachedPurchasedItems;
	class UClass* CurrentPlayset;
	float DestructedBuildingInGridTimeoutOverride;
	struct FText ClientRespawnText;
	struct FText ClientRebootingText;
	struct FText ClientIslandTravelText;
	struct FText ClientTravelToCreativeHubText;
	TArray<class UClass*> VolumesLoading;
	TArray<class UClass*> VolumesUnloading;
	class UClass* MarkerComponent;
	class UClass* ResurrectionComponent;
	class UClass* HeldDeviceUsageComponent;
	class UClass* XPComponent;
	class UClass* DiscoverabilityComponent;
	class UClass* TransientQuestsComponent;
	class UClass* SkydiveFeedback;
	class UClass* ContextualChallenges;
	class UClass* IndicatedActorManagementComponent;
	class UClass* LocalizationServiceComponent;
	class UClass* ToxicityServiceComponent;
	class UClass* RechargingWeaponsComponent;
	class UClass* InventoryServiceComponent;
	class UClass* RadiusTrackerComponent;
	class UClass* MinigameActivityComponent;
	struct ScalableFloat SightWeatherCapRadius;
	double TimeSinceLastCreativeSpawn;
	struct CompositeBool IgnoreSignifanceBasedCustomDepthRendering;
	class UClass* CreativeUserContentManager;
	struct TSoftClassPtr<UObject> CreativeUserContentManagerClassSoftClassPtr;
	class UClass* CreativeObjectTrackingComponent;
	struct FScriptMulticastDelegate OnPreviewScreenshotCameraActivated;
	class UClass* CreativeItemToRemoveWhenAddingInventoryItem;
	struct QuickBarEquippedItemGuids PrimaryQuickBarSlotItemGuids;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeUserContentManager : public UActorComponent
{
public:
	Unknown LevelSaveRecords;
	Unknown SaveThumbnails;
	class UClass* ThumbnailGenerator;
	struct TSoftClassPtr<UObject> ThumbnailStageActorClassSoftClassPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayEffectExecutionCalculation : public GameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CueManualHandledExecutionCalculation : public FortGameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomAccessoryAttachmentData : public UDataAsset
{
public:
	struct Vector MaleRelativeScale;
	struct Vector FemaleRelativeScale;
	struct Vector SmallMaleRelativeScale;
	struct Vector SmallFemaleRelativeScale;
	struct Vector LargeMaleRelativeScale;
	struct Vector LargeFemaleRelativeScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomColorSwatch : public UPrimaryDataAsset
{
public:
	EFortCustomGender GenderPermitted;
	EColorSwatchType ColorSwatchType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomDynamicColorSwatch : public UCustomColorSwatch
{
public:
	TArray<struct ColorSwatchPair> ColorPairs;
	TArray<struct CustomPartTextureParameter> TextureParameters;
	Unknown SpecificIconography;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomAccessoryColorSwatch : public UCustomDynamicColorSwatch
{
public:
	struct LinearColor AccessoryColors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterAccessoryData : public UCustomCharacterPartData
{
public:
	struct FName AttachSocketName;
	struct Vector AttachOffset;
	class UClass* AttachmentOverrideData;
	bool bUseClothCollisionFromOtherParts;
	bool bCollideWithOtherPartsCloth;
	struct TSoftClassPtr<UObject> AnimClass;
	struct TSoftClassPtr<UObject> FrontEndAnimClass;
	struct TSoftClassPtr<UObject> MannequinAnimClass;
	struct TSoftClassPtr<UObject> AccessoryColors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterBackpackData : public UCustomCharacterAccessoryData
{
public:
	struct FName LootSocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterBodyPartData : public UCustomCharacterPartData
{
public:
	struct TSoftClassPtr<UObject> AnimClass;
	struct TSoftClassPtr<UObject> FrontEndAnimClass;
	struct TSoftClassPtr<UObject> MannequinAnimClass;
	struct TSoftClassPtr<UObject> AccessoryColors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterCharmData : public UCustomCharacterAccessoryData
{
public:
	EFortCustomPartType PartAttachedToOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterFaceData : public UCustomCharacterAccessoryData
{
public:
	EFortCustomPartType PartAttachedToOverride;
	struct CustomAccessoryHatReactiveMorphs HatMorphData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterHatData : public UCustomCharacterAccessoryData
{
public:
	ECustomHatType HatType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterHeadData : public UCustomCharacterBodyPartData
{
public:
	struct TSoftClassPtr<UObject> RootSkeletonDefaultMontageLookupTable;
	struct TSoftClassPtr<UObject> RootSkeletonOverrideMontageLookupTable;
	struct TSoftClassPtr<UObject> SkinColorSwatch;
	struct TSoftClassPtr<UObject> HairColorSwatch;
	TArray<struct FName> CapMorphTargets;
	TArray<struct FName> HelmetMorphTargets;
	TArray<struct FName> MaskMorphTargets;
	TArray<struct FName> HatMorphTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPart : public UPrimaryDataAsset
{
public:
	EFortCustomGender GenderPermitted;
	EFortCustomBodyType BodyTypesPermitted;
	EFortCustomPartType CharacterPartType;
	struct GameplayTagContainer BoneSetsToHide;
	bool bShouldHideBonesForThisPart;
	struct GameplayTagContainer GameplayTags;
	struct GameplayTagContainer DisallowedCosmeticTags;
	bool bGameplayRelevantCosmeticPart;
	bool bAttachToSocket;
	bool bIgnorePart;
	struct TSoftClassPtr<UObject> PartModifierBlueprint;
	class UClass* AdditionalData;
	struct TSoftClassPtr<UObject> DefaultMontageLookupTable;
	struct TSoftClassPtr<UObject> OverrideMontageLookupTable;
	struct TSoftClassPtr<UObject> FrontendAnimMontageIdleOverride;
	float FrontEndBackPreviewRotationOffset;
	struct TSoftClassPtr<UObject> SkeletalMesh;
	TArray<struct TSoftClassPtr<UObject>> MasterSkeletalMeshes;
	bool bSinglePieceMesh;
	bool bSupportsColorSwatches;
	bool bAllowStaticRenderPath;
	TArray<struct CustomPartMaterialOverrideData> MaterialOverrides;
	TArray<struct CustomPartTextureParameter> TextureParameters;
	TArray<struct CustomPartScalarParameter> ScalarParameters;
	TArray<struct CustomPartVectorParameter> VectorParameters;
	TArray<int> IgnoredMaterialOverrideIndices;
	TArray<class UClass*> FoleyLibraries;
	int MaterialOverrideFlags;
	int IgnoredMaterialOverrideFlags;
	struct TSoftClassPtr<UObject> IdleEffect;
	struct TSoftClassPtr<UObject> IdleEffectNiagara;
	struct FName IdleFXSocketName;
	bool bUseIdleFXNativeCustomAttachmentParams;
	struct CharacterPartAttachmentParams IdleFXNativeCustomAttachmentParams;
	bool bAutoActivate;
	class UClass* AuthoredData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance : public UFortAnimInstance
{
public:
	class UClass* CurrentWeapon;
	bool bUsesDayPhaseChange;
	bool bIgnoreSignificanceManagerAndAlwaysTick;
	bool bHideUntilFirstAnimationUpdate;
	bool bUnhideOnNextUpdate;
	bool bCanPlayCustomAnimations;
	bool bUpdateOwnerAnimInputProperty;
	bool bIsCharacterCustomizationLoaded;
	bool bIsSkydiving;
	bool bIsParachuteOpened;
	bool bIsSkydiveDiveMode;
	bool bIsSkydiveFloating;
	bool bIsCrouching;
	bool bIsSprinting;
	bool bIsAccelerating2D;
	bool bIsMoving2D;
	bool bIsBackpedaling;
	bool bIsUsingJetpack;
	bool bGoopJumpExecuted;
	bool bIsSlopeSliding;
	bool bIsSurfaceSwimming;
	bool bIsWaterJump;
	bool bIsSwimSprinting;
	bool bIsPlayingEmote;
	bool bIsPlayingMeleeAnim;
	bool bIsPlayingFullBodySlotInFrontEnd;
	bool bIsInFrontEnd;
	bool bIsInVehicle;
	bool bIsValetDriver;
	bool bIsValetPassenger;
	bool bIsInShoppingCart;
	bool bIsInCannon;
	bool bIsTargeting;
	bool bIsTargetingConsumableThrow;
	bool bIsCrouchSprinting;
	bool bIsDBNO;
	bool bIsOnGround;
	bool bIsLandingPredicted;
	bool bIsInVehicleSeat;
	bool bIsFerretVehicleDriver;
	bool bIsFerretVehiclePassenger;
	bool bIsGolfCartVehicleDriver;
	bool bIsGolfCartVehicleFrontPassenger;
	bool bIsGolfCartVehicleBackPassenger;
	bool bIsAntelopeVehicleDriver;
	bool bIsAntelopeVehiclePassenger;
	bool bIsJackalVehicleDriver;
	bool bIsOctopusVehicleDriver;
	bool bIsOstrichVehicleDriver;
	bool bIsOstrichVehicleGunner;
	bool bIsMeatballDriver;
	bool bIsMeatballPassenger;
	bool bIsDBNOCarrying;
	bool bIsDBNOCarried;
	bool bOverrideRBANSimSpaceInFrontEnd;
	ESlotEnvironmentExposure VehicleSlotExposure;
	struct GameplayTagAnimations GameplayTagAnimations;
	float CrouchingWithRigidBodyEnabled;
	int CurrentLOD;
	struct FortAnimInput_SkydivingExternalForce SkydivingExternalForceInput;
	struct FortAnimInput_SlopeInfo SlopeInfoInput;
	bool bRegisteredForDayPhaseChange;
	EFortCustomPartType PartType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHeadPartAnimInstance : public UCustomCharacterPartAnimInstance
{
public:
	struct FortAnimInput_Facial FacialInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SlurpLegendsBase : public UHeadPartAnimInstance
{
public:
	float MorphBlendAlpha;
	class UClass* PartMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_AlienFishHeadSlurpFace : public UCustomCharacterPartAnimInstance_SlurpLegendsBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_AlienFishHeadSlurpHead : public UCustomCharacterPartAnimInstance_SlurpLegendsBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Alter_Ego_Pack_F : public UCustomCharacterPartAnimInstance
{
public:
	float BackpackTransformAlpha;
	float SkydiveDynamicsAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Angel : public UCustomCharacterPartAnimInstance
{
public:
	float SkydivingAlpha;
	float CrouchAlpha;
	float RearClothAlpha;
	float ClothAlpha;
	float FrontClothAlpha;
	float FeatherAlpha;
	float CrouchSkirtAlpha;
	float FrontClothCrouchAlpha;
	float SpineRotLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_AngelBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector FallingAnimDynamicsUpForce;
	float SpeedAlpha;
	float WingRigidAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_AshtonBoardwalkFaceAcc : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator HairRightRotation;
	struct Rotator HairLeftRotation;
	float ArmUpRightAlpha;
	float CrouchAlpha;
	bool bIsCrouchMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_AztecBackpack : public UCustomCharacterPartAnimInstance
{
public:
	float PlayerFwdBwd;
	float PlayerLeftRight;
	float SprintSpeedRemapped;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BalloonHead : public UCustomCharacterPartAnimInstance
{
public:
	float PawnSpeedAlpha;
	float CrouchAlpha;
	float InvCrouchAlpha;
	float HandOffGunAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Balloons : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* PlayerPawn;
	class UClass* Character;
	class UClass* BGABalloon;
	float PawnSpeed;
	bool bIsMovingBackward;
	float TrailVehicleAlpha;
	float BalloonLocationAlpha;
	struct Rotator BalloonSideRot;
	float IsFloatingAlpha;
	float SpringAlpha;
	float PawnZVelCheck;
	float AimAlpha;
	TArray<float> ForwardLocationAlphas;
	TArray<float> BackwardLocationAlphas;
	TArray<struct Rotator> ForwardRotators;
	TArray<struct Rotator> BackwardRotators;
	float SpringMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BananaBody : public UCustomCharacterPartAnimInstance
{
public:
	float LeftLegUpAlpha;
	float RightLegUpAlpha;
	float ADSRigidBodyAlpha;
	float ADSFlapAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BananaHead : public UCustomCharacterPartAnimInstance
{
public:
	float ADSRigidBodyAlpha;
	float ADSFlapAlpha;
	float DisableFaceOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BaseTail : public UCustomCharacterPartAnimInstance
{
public:
	struct FortAnimInput_Skydiving SkydivingState;
	float TailSkydiveLean;
	float TailDiveSpeed;
	float TailSkydiveYaw;
	float SpeedAdjustedPlayrate;
	bool bIsInShoppingCartSprinting;
	bool bIsInShoppingCartMoving;
	bool bIsInShoppingCartCoasting;
	bool bIsInShoppingCartInAir;
	bool bIsHoverboardJumping;
	bool bIsHoverboardLanding;
	bool bIsWearingCape;
	bool bBlendInBackwardPose;
	bool bTransition_Idle_Locomotion;
	bool bTransition_Locomotion_Idle;
	bool bTransition_Idle_Skydive;
	bool bTransition_Idle_Crouching;
	bool bTransition_Skydive_Idle;
	bool bTransition_StartJump_SkyDive;
	bool bTransition_JumpLoop_Idle;
	bool bTransition_DownSights_Conduit_DownSightsToIdle;
	bool bTransition_Crouching_Locomotion;
	bool bShoppingCartSprint_Or_Sprint;
	bool bIsFalling_Or_IsJumping_Or_IsShoppingCartInAir;
	bool bIsFalling_Or_IsHoverboardJumping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BigChuggus_M : public UCustomCharacterPartAnimInstance
{
public:
	bool bIsRigidBodyDisabled;
	float CrouchAlpha;
	float ArmUpR;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BlackKnightBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator ShldrPadRightRotator;
	struct Rotator ShldrPadLeftRotator;
	struct Rotator ShldrPadLeftAimRotator;
	struct Rotator ShldrPadRightAimRotator;
	struct Rotator ShldrPadLeftRollRot;
	struct Vector ShldrPadLeftTrans;
	struct Vector ShldrPadLeftAimTrans;
	struct Vector ShldrPadRightAimTrans;
	struct Vector ShldrPadLeftRollTrans;
	struct Vector ShldrPadRightPackTrans;
	struct Vector ShldrPadRightTrans;
	float ShldrLeftRifleAlpha;
	float CollarFrontAlpha;
	float ShldrLeftAlpha;
	float ShldrRightAlpha;
	float ShldrLeftRollAlpha;
	float ShldrRightRollAlpha;
	float KneeBendRightAlpha;
	float KneeBendLeftAlpha;
	float ThighRotLeft;
	float ThighKnifeFix;
	float ShldrLeftTwistAlpha;
	float WristRotLeft;
	float WristRotRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BlackWidow_F : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator BackpackRotator;
	struct FName BackpackRotatorBoneName;
	struct FName BackpackRotatorBaseName;
	struct Vector2D BackpackRotatorMapInputRange;
	struct Vector2D BackpackRotatorMapOutputRange;
	float PawnSpeedRange;
	struct Vector2D PawnSpeedMapInputRange;
	struct Vector2D PawnSpeedMapOutputRange;
	struct Vector FallingAnimDynamicsUpForce;
	struct Vector2D FallingAnimDynamicsPerlinNoiseMapRange;
	float FallingAnimDynamicsForceGliderMultiplier;
	float FallingAnimDynamicsForceGlobalMultiplier;
	struct Rotator LegTop01Rotation;
	struct Rotator LegTop02Rotation;
	struct Rotator LegTop03Rotation;
	struct Rotator LegTop04Rotation;
	struct Rotator LegMid01Rotation;
	struct Rotator LegMid03Rotation;
	struct Rotator LegMid04Rotation;
	struct Rotator LegBot01Rotation;
	struct Rotator LegBot02Rotation;
	struct Rotator LegBot03Rotation;
	float LegRotationScaleDownRateADS;
	float Legs01PoseTargetAlpha;
	float Legs02PoseTargetAlpha;
	float Legs03PoseTargetAlpha;
	float Legs04PoseTargetAlpha;
	float CollapseLegsTimeSeconds;
	float CollapsingLegs01PoseFullAlphaDelay;
	float CollapsingLegs02PoseFullAlphaDelay;
	float CollapsingLegs03PoseFullAlphaDelay;
	float CollapsingLegs04PoseFullAlphaDelay;
	float TopLegsAlpha;
	float MidLegsAlpha;
	float BotLegsAlpha;
	float LegSinAnimationFrequency;
	struct BlackWidowLegSinAnimationRotator LegTop01SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegTop02SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegTop03SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegTop04SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegMid01SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegMid03SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegMid04SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegBot01SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegBot02SinAnimation;
	struct BlackWidowLegSinAnimationRotator LegBot03SinAnimation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BlackWidow_M : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator BackpackRotator;
	struct FName BackpackRotatorBoneName;
	struct FName BackpackRotatorBaseName;
	struct Vector2D BackpackRotatorMapInputRange;
	struct Vector2D BackpackRotatorMapOutputRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BoneSnakeBody : public UCustomCharacterPartAnimInstance
{
public:
	float LegLeftUpAlpha;
	float LegLeftSideAlpha;
	float LegRightUpAlpha;
	float ShoulderLeftUpAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BoneSnakeFace : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator TongueRotationA;
	struct Rotator TongueRotationB;
	struct Rotator TongueRotationC;
	struct Vector TongueScale;
	float ShoulderLeftAlpha;
	float ShoulderRightAlpha;
	float HeadForwardAlpha;
	float LifeSpan;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BuffCatBody : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* SyncedSequence;
	float ThighRotationRightAlpha;
	float ThighRotationLeftAlpha;
	float IsPlayingEmoteAlpha;
	float MeowsclesMontagePosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_BuffcatFaceAcc : public UCustomCharacterPartAnimInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_CageSaddleBackGadget : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* SkeletalMeshComponent;
	class UClass* PlayerPawn;
	struct Rotator KnobRotation;
	float RollAlpha;
	bool bHasTriggeredGCBurstLocal;
	struct Rotator HeadRotation;
	float InflationBlendWeight;
	struct GameplayTagContainer BlockDeploymentTags;
	struct GameplayTag TickTag;
	float MinDurationRemainingForGCBurstLocal;
	struct Rotator HeadRotation_Sprinting;
	struct Rotator HeadRotation_Otherwise;
	class UClass* InflationCurveLong;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Cape : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* MeshToCopy;
	class UClass* ClothingSimInteractor;
	struct Vector FakeWindVelocityDBNO;
	float BlendOutForksAlpha;
	bool bBlendInBackwardPose;
	struct Vector CapeFakeVelocity;
	struct Vector FakeWindVelocity;
	struct Vector AimOffset;
	float AimOffsetMultiplier;
	struct Vector FinalCapeWindVelocity;
	float FinalCapeBlendOutAlpha;
	float SwingRotateAlpha;
	float Cape05TrailControllerAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_CavalryBanditBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector FinalGravity;
	float SkydiveSpineSpace;
	float SkydiveRootSpace;
	float CrouchRootSpace;
	float CrouchSpineSpace;
	float FinalRootSpace;
	float FinalSpineSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ClockBackpack_M : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector BoneAPosition;
	float AimOffsetMultiplier;
	struct Rotator BackpackRotator;
	struct FName BackpackRotatorBoneName;
	struct FName BackpackRotatorBaseName;
	struct Vector2D BackpackRotatorMapInputRange;
	struct Vector2D BackpackRotatorMapOutputRange;
	struct Rotator PendulumRotator;
	float PendulumFrequency;
	float PendulumAmplitude;
	float PendulumDynamicsAlpha;
	float PendulumDynamicsSpeedThreshold;
	float PendulumDynamicsCrouchWalkAlpha;
	struct Vector2D PendulumDynamicsSpeedMapInputRange;
	struct Vector2D PendulumDynamicsSpeedMapOutputRange;
	struct Rotator HourHandRotator;
	float HourHandPitchMultiplier;
	struct Rotator MinuteHandRotator;
	float MinuteHandPitchMultiplier;
	bool bIsCuckooOut;
	bool bCuckooOutOnKillRequested;
	float CuckooDynamicsAlpha;
	float CuckooOutTimeRemaining;
	float CuckooOutDurationOnKill;
	float CuckooOutDurationInFrontEnd;
	int CuckooFrontEndInterval;
	struct Vector CurrentLlamaScale;
	struct Vector DefaultLlamaScale;
	struct Vector CuckooOutLlamaScale;
	float DefaultLlamaScaleInterpSpeed;
	float CuckooOutLlamaScaleInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ColumbusBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector2D SpinePositivePitchInputRange;
	float ThighRotationRightDynamicsAlpha;
	float ThighRotationLeftDynamicsAlpha;
	float ThighRotationRightAlpha;
	float ThighRotationLeftAlpha;
	float ClavicleRotationRightAlpha;
	float ClavicleRotationLeftAlpha;
	float PickaxeSwingPositionLeftPositiveAlpha;
	float PickaxeSwingPositionLeftNegativeAlpha;
	float PickaxeSwingPositionRightPositiveAlpha;
	float PickaxeSwingPositionRightNegativeAlpha;
	float ChestArmorDynamicsAlpha;
	float ChestArmorDynamicsInvAlpha;
	float ChestArmorDynamicsClavicleLeftInvAlpha;
	float ChestArmorDynamicsClavicleRightInvAlpha;
	float CrouchMoveAlpha;
	float UpperArmLeftSwingAlpha;
	float SkydivingAlpha;
	float SpinePositivePitchAlpha;
	bool bChestDynamicsDisableRB;
	bool bIsCrouchMoving;
	bool bIsAboveLODThreshold;
	bool bShouldResetDynamics;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ColumbusHead : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator HeadRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DemonBackpack : public UCustomCharacterPartAnimInstance
{
public:
	float SprintSpeedRemap;
	float PlayerForwardAcceleration;
	float PlayerSidewaysAcceleration;
	float DynamicsAlpha;
	float RunSpeedRemap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DesertOpsBody : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* MannequinOwner;
	float ThighRotLeftAlpha;
	float ThighRotRightAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DesertOpsCamoHair : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* MannequinOwner;
	float HeadSwingAlpha;
	float HeadTwistRightAlpha;
	float HeadTwistLeftAlpha;
	float HeadRotBackAlpha;
	float SkydivingFrontAlpha;
	float SkydivingBackAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DieselPunk : public UCustomCharacterPartAnimInstance
{
public:
	float ArmPistolPadAlpha;
	float ArmPistolChestAlpha;
	float ArmPistolAlpha;
	float CrouchAlpha;
	float SpeedMaskAlpha;
	float SpeedMaskSpring;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Dieselpunk02_F_Body : public UCustomCharacterPartAnimInstance
{
public:
	float SkydivingAlpha;
	float ArmPistolAlpha;
	float ArmPistolAlphaInverse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DJ_Remix_Tier2_M : public UCustomCharacterPartAnimInstance
{
public:
	float ArmUpperRightAlpha;
	float ArmUpperLeftAlpha;
	float ArmLowerRightAlpha;
	float ArmLowerLeftAlpha;
	float ThighUpperRightAlpha;
	float ThighUpperLeftAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DJBackpack : public UCustomCharacterPartAnimInstance
{
public:
	bool bIsKillCelebrationActive;
	int KillCountLastFrame;
	int KillCount;
	float CurrentSpinRate;
	struct Rotator BallRotator;
	float BaseSpinRate;
	float SpinRateMultiplier;
	float DefaultSpinRate;
	float DefaultSpinRateInterpSpeed;
	float KillCelebrationSpinRate;
	float KillCelebrationSpinRateInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DonutCupCape : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector WindVector;
	struct Vector PelvisLocation;
	struct Vector ThighLeftLocation;
	struct Vector ThighRightLocation;
	struct Vector CalfLeftLocation;
	struct Vector CalfRightLocation;
	struct Vector BodyRootLocation;
	struct Rotator PelvisRotation;
	struct Rotator ThighLeftRotation;
	struct Rotator ThighRightRotation;
	struct Rotator CalfLeftRotation;
	struct Rotator CalfRightRotation;
	struct Rotator BodyRootRotation;
	float RigidBodyAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Dragon_Mask : public UCustomCharacterPartAnimInstance
{
public:
	float ShortsAlpha;
	float ArmUp_R;
	float ArmBack_R;
	float ArmUpMore_R;
	float HeadRotBack;
	float CalfRotBack_R;
	float CalfRotBack_L;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_DumplingBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector Bun1Translation;
	struct Vector Bun2Translation;
	struct Vector Bun3Translation;
	float Bun1Cycle;
	float Bun2Cycle;
	float Bun3Cycle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ForestQueenFace : public UCustomCharacterPartAnimInstance
{
public:
	float HeadRotationAlpha;
	float HeadSwingAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Frogman_M : public UCustomCharacterPartAnimInstance
{
public:
	float CrouchAlpha;
	struct Vector GravityOverride;
	float ThighUpL;
	float ThighUpR;
	float ARFiringPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_GalileoOutriggerBody : public UCustomCharacterPartAnimInstance
{
public:
	float UpperArmRightYaw;
	float UpperArmLeftYaw;
	float LegLeftPitch;
	float LegLeftYaw;
	float LegRightYaw;
	float LegRightPitch;
	float CrouchingAlpha;
	float ShoulderLeftPitch;
	float ShoulderRightPitch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_GoldenSkeletonBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator WristLeftRotation;
	struct Rotator WristRightRotation;
	struct Vector GravityOverride;
	float ArmRightUpAlpha;
	float CrouchAlpha;
	float ArmLeftUpAlpha;
	float HeadUpAlpha;
	float CrouchInverseAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_GraffitiRemixBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRightRotationAlpha;
	float ThighLeftRotationAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Grilled_Cheese_Pack : public UCustomCharacterPartAnimInstance
{
public:
	bool ActiveKill;
	float crackCount;
	float crackSpin;
	float crackSpinSpeed;
	float InterpSpeed;
	bool isCrackCount;
	float KillCount;
	TArray<float> killCrackArray;
	float onCrackSpinSpeed;
	struct Rotator crackRot;
	struct Rotator Spinning_Rotator_00;
	struct Rotator Spinning_Rotator_01;
	struct Rotator Spinning_Rotator_02;
	struct Rotator Spinning_Rotator_03;
	struct Vector crackTran;
	struct Vector Cube_Float_A;
	struct Vector Cube_Float_B;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HenchmanBase : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride;
	float ThighAlphaLeft;
	float ThighAlphaRight;
	float DynamicsAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HenchmanShortsBase : public UCustomCharacterPartAnimInstance
{
public:
	float ThighAlphaRight;
	float ThighAlphaLeft;
	struct Vector GravityOverride;
	float CalfAlphaRight;
	float CalfAlphaLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HenchmanTough : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride;
	float ThighAlphaLeft;
	float ThighAlphaRight;
	float DynamicsAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HighTowerDateBody : public UCustomCharacterPartAnimInstance
{
public:
	float SkydiveFloat;
	float CrouchFloat;
	bool bThrone;
	float ThroneFloat;
	float ThroneFloatINV;
	float DateGliderDeployFloat;
	float FrontEndPosingFloat;
	float JubileeFloat;
	TArray<struct TSoftClassPtr<UObject>> ThroneAnimations;
	struct TSoftClassPtr<UObject> JubileeAnimation;
	struct TSoftClassPtr<UObject> FrontEndPoseAnimation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HighTowerDateCape : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector CapeGravityOverride;
	float CapeTrailRelaxSpeedScale;
	float SkydiveFloat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerMangoBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride;
	struct Vector VectorForce;
	float ClothAlpha;
	float FrontEndRearAlpha;
	float ThighRotationLeft;
	float ThighRotationRight;
	bool bIsWearingLongCape;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerMangoDarkBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRotationRight;
	float ThighRotationLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerSquashCape : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride;
	struct Vector GravityOverrideArms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerTapasAxe : public UCustomCharacterPartAnimInstance
{
public:
	bool bRigidsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerTapasBody : public UCustomCharacterPartAnimInstance
{
public:
	struct TSoftClassPtr<UObject> TapasDanceMontage;
	struct Vector WindVector;
	float CrouchingAlpha;
	float ElbowRightAlpha;
	float ElbowLeftAlpha;
	float LatStretchRightAlpha;
	float IsWearingCapeAlpha;
	float HalfIsWearingCapeAlpha;
	float TapasMontageAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerTapasCape : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector PelvisLocation;
	struct Vector ThighLeftLocation;
	struct Vector ThighRightLocation;
	struct Vector CalfLeftLocation;
	struct Vector CalfRightLocation;
	struct Vector BodyRootLocation;
	struct Vector Spine05Location;
	struct Vector ClavicleRightLocation;
	struct Vector ClavicleLeftLocation;
	struct Vector UpperarmLeftLocation;
	struct Vector UpperarmRightLocation;
	struct Vector LowerarmLeftLocation;
	struct Vector LowerarmRightLocation;
	struct Vector Spine01Location;
	struct Vector Spine02Location;
	struct Vector Spine03Location;
	struct Vector Spine04Location;
	struct Vector FinalGravity;
	struct Vector CompLinearAccelarationScale;
	struct Vector CompLinearVelocityScale;
	struct Rotator PelvisRotation;
	struct Rotator ThighLeftRotation;
	struct Rotator ThighRightRotation;
	struct Rotator CalfLeftRotation;
	struct Rotator CalfRightRotation;
	struct Rotator BodyRootRotation;
	struct Rotator Spine05Rotation;
	struct Rotator ClavicleRightRotation;
	struct Rotator ClavicleLeftRotation;
	struct Rotator UpperarmLeftRotation;
	struct Rotator UpperarmRightRotation;
	struct Rotator LowerarmLeftRotation;
	struct Rotator LowerarmRightRotation;
	struct Rotator Spine01Rotation;
	struct Rotator Spine02Rotation;
	struct Rotator Spine03Rotation;
	struct Rotator Spine04Rotation;
	float RigidBodyAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerTapasTop : public UCustomCharacterPartAnimInstance
{
public:
	struct TSoftClassPtr<UObject> PickaxeMontage;
	struct Vector WindVector;
	float IsSkydivingAlpha;
	float HeadLookUpAlpha;
	float IsPickaxingAlpha;
	float InvHeadLookUpAlpha;
	bool bRigidsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HightowerWasabiBody : public UCustomCharacterPartAnimInstance
{
public:
	float RightArmDistanceBICEPAlpha;
	float LeftArmDistanceBICEPAlpha;
	float RightPecAimPosAlpha;
	float RightPecStretchAlpha;
	float LeftPecStretchAlpha;
	float RightLatStretchAlpha;
	float RightKneeAlpha;
	float LeftKneeAlpha;
	float LeftTrapsStretchAlpha;
	float RightTrapsStretchAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HoneydewBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRotationLeft;
	float ThighRotationRight;
	float HeadRotation;
	float ClavicleLeft;
	float ClavicleRight;
	float SkirtDynAlpha;
	float IsCrouchingAndStillAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HoneydewHead : public UCustomCharacterPartAnimInstance
{
public:
	float HeadRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_HoneydewSwoleBody : public UCustomCharacterPartAnimInstance
{
public:
	struct TSoftClassPtr<UObject> MusclesLobbyMontage;
	float ThighRotationLeft;
	float ThighRotationRight;
	float ElbowRotationLeft;
	float ElbowRotationRight;
	float UpperarmRotationLeft;
	float UpperarmRotationRight;
	float EmoteAlpha;
	float MusclesPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Houston_Cape_M : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector CapeTrailFakeVelocityLowLeft;
	struct Vector CapeTrailFakeVelocityMidLeft;
	struct Vector CapeTrailFakeVelocityMidRight;
	struct Vector CapeTrailFakeVelocityLowRight;
	float SprintSpeedAlpha;
	float RunSpeedAlpha;
	float PlayerForwardAcceleration;
	float PlayerSidewaysAcceleration;
	float SkyDiveTrailAlpha;
	float CapeTrailRelaxSpeedScale;
	float DBNOAdditiveAlpha;
	float DBNOTrailAlpha;
	float ShoulderCorrectionAlpha;
	bool bIsPlayingBlackMondayEmote;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_IceCreamBody : public UCustomCharacterPartAnimInstance
{
public:
	float AimUp;
	float AimIn;
	float AimInAlpha;
	struct Vector HoodieExtForce;
	float InVehicleAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Islander : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride_SwimSprinting;
	struct Vector GravityOverride_SkyDiving;
	struct Vector GravityOverride_NormalGravity;
	struct Vector2D ThighRotationUpRight_MinMax;
	struct Vector2D ThighRotationUpLeft_MinMax;
	struct Vector2D KneeRotationUpRight_MinMax;
	struct Vector2D KneeRotationUpLeft_MinMax;
	float ThighRotationUpRight;
	float ThighRotationUpLeft;
	float KneeRotationUpRight;
	float KneeRotationUpLeft;
	struct Vector GravityOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_JerkyBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector WindVector;
	float SkydiveAlpha;
	float CrouchingAlpha;
	float ShoulderRightScaleAlpha;
	float ShoulderLeftScaleAlpha;
	float BicepLeftLengthAlpha;
	float BicepRightLengthAlpha;
	bool bShouldDisableRigidBodies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_JerkySpaceBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector WindVector;
	float SkydiveAlpha;
	bool bDisableRigidBodies;
	struct Rotator CrouchRootRotation;
	struct Vector CoatScale;
	struct Vector CoatLocationOffset;
	struct Vector WorldGravityOverride;
	struct Rotator CoatRotation0;
	struct Rotator CoatRotation1;
	struct Rotator CoatRotation2;
	struct Rotator CoatRotation4;
	struct Rotator CoatRotation3;
	struct Rotator CoatRotation5;
	struct Rotator CoatRotation6;
	struct Rotator CoatRotationFoot0;
	struct Rotator CoatRotationFoot1;
	struct Rotator CoatRotationFoot2;
	float HeadTwistLeftAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_JerkyUniverseBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector WindVector;
	float SkydiveAlpha;
	struct Rotator RotCoat0;
	struct Rotator RotCoat1;
	struct Rotator RotCoat2;
	struct Rotator RotCoat3;
	struct Rotator RotCoat4;
	struct Rotator RotCoat5;
	struct Rotator RotCoat6;
	bool bDisableRigidBodies;
	float LOD2MovingAndCrouchAlpha;
	float SkydivingVectorForceMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_KayakCape : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* HeadMesh;
	struct Vector CapeTrailFakeVelocityLowLeft;
	struct Vector CapeTrailFakeVelocityMidLeft;
	struct Vector CapeTrailFakeVelocityMidRight;
	struct Vector CapeTrailFakeVelocityLowRight;
	struct Vector CapeGravityOverride;
	struct Vector HoodGravityOverride;
	struct Rotator HeadRotation;
	float CapeTrailRelaxSpeedScale;
	float PlayerForwardAcceleration;
	float UpperArmRightAlpha;
	float UpperArmLeftAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_KitbashBody : public UCustomCharacterPartAnimInstance
{
public:
	float JumpAlpha;
	float ClavUpLeft;
	float ClavDownLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_KrampusFaceAcc : public UCustomCharacterPartAnimInstance
{
public:
	struct FName JawOpenPoseCurveName;
	float TonguePhysicsAlpha;
	float TongueBoneAlpha;
	bool bUseRigidBody;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_LlamaRider : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* LlamaEmote;
	class UClass* MeshToCopy;
	struct Rotator CurrentDiveJiggle;
	struct Vector FallingAnimDynUpForce;
	float LlamaHeadPhysAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Mascot_Militia_F : public UCustomCharacterPartAnimInstance
{
public:
	float CalfLeftRotAlpha;
	float CalfRightRotAlpha;
	float SpeedAlpha;
	bool bBackIsStatic;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_MastermindBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride;
	float ThighUpLeft;
	float ThighUpRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_MechanicalEngBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct FortAnimInput_Skydiving SkydivingState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_MechanicalEngineerBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighUpLeft;
	float ThighUpRight;
	float ThighSideRight;
	float KneeLeft;
	float KneeRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_MechEngineerHead : public UCustomCharacterPartAnimInstance
{
public:
	float BoneVelocityTimer;
	float HeadUp;
	float HeadTwist;
	float HelmetUp;
	bool bTransferBoneVelocity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Medusa_FaceAcc : public UCustomCharacterPartAnimInstance
{
public:
	bool bIsSnakeInMotion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_MissingLinkBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRightRotationAlpha;
	float ThighLeftRotationAlpha;
	float TargetingAlpha;
	float LOD2Alpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_OceanRiderBody : public UCustomCharacterPartAnimInstance
{
public:
	float HeadRot;
	float LeftArmDown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_PetCarrier : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* PlayerPawn;
	bool bIsZiplining;
	bool bIsBallooning;
	bool bIsFlying;
	bool bIsInAirNotJumping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_PhotographerBody : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* MatchingMontage;
	float CrouchingAlpha;
	float InverseDancingAlpha;
	float SpineUpAlpha;
	float BackblingAlpha;
	float PelvisForwardAlpha;
	float InverseBackblingAlpha;
	float TraversalAlpha;
	float SkydiveAlpha;
	bool bPlayingPhotoTraversalEmote;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Pirate02Backpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator BackpackRotation;
	struct Vector BackpackTranslation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SyncedPart : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* SyncedSequence;
	bool bIsPlayingSyncedMontage;
	float SyncedMontagePosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ProfPupBody : public UCustomCharacterPartAnimInstance_SyncedPart
{
public:
	struct Rotator WheelRotator;
	float WheelAngle;
	float SkydiveReduceAlpha;
	float DynamicsAlpha;
	float VehicleOrSkydivingOffAlpha;
	float CatBodyAlpha;
	float MechBodyAlpha;
	float AdditiveIdleAlpha;
	float ModifyTailAlpha;
	float TraversalEmoteTime;
	float CurrentLODValue;
	float BaseWheelSpeed;
	float TreadmillBaseSpeed;
	bool bTurnOnBreaklight;
	bool bLongBackbling;
	bool bShortBackbling;
	bool bIsBlendingTraversalEmote;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_PunkDevilBack : public UCustomCharacterPartAnimInstance
{
public:
	float SprintAlpha;
	float RunAlpha;
	float WingsBlendspaceFwdBwd;
	float WingsBlendspaceLeftRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_PunkDevilBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRotationRightAlpha;
	float ThighRotationLeftAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_RacerZeroBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRotRight;
	float ThighRotLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_RacerZeroMaskBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector GravityOverride;
	float ThighRotRight;
	float ThighRotLeft;
	float InVehicleScaleAlpha;
	float InVehicleRigidAlpha;
	float TargetingAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_RamirezHead : public UCustomCharacterPartAnimInstance
{
public:
	float HeadRotationBack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Rebirth_Soldier_F : public UCustomCharacterPartAnimInstance
{
public:
	float ThighLeftRotationAlpha;
	float ThighRightRotationAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Rebirth_Soldier_M : public UCustomCharacterPartAnimInstance
{
public:
	float ArmRightRotAlpha;
	float ArmLeftRotAlpha;
	float ClavicleRightRotAlpha;
	float ClavicleLeftRotAlpha;
	float HeadRotAlpha;
	float CalfRightRotAlpha;
	float CalfLeftRotAlpha;
	float ThighRightRotAlpha;
	float ThighLeftRotAlpha;
	float WeaponRaisedAlpha;
	bool bIsWearingBackbling;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Rhino : public UCustomCharacterPartAnimInstance
{
public:
	float ThighPadAlpha;
	float CrouchSpeedAlpha;
	bool bIsCrouchMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_RhinoBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector Piston1Movement;
	struct Vector Piston2Movement;
	struct Vector Piston3Movement;
	float Piston1SinOffset;
	float Piston2SinOffset;
	float Piston3SinOffset;
	float DefaultPistonSpeed;
	float FastPistonSpeed;
	float FastPistonThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_RobotTroubleBody : public UCustomCharacterPartAnimInstance
{
public:
	float CollarRightAlpha;
	float CollarLeftAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_RoosterBody : public UCustomCharacterPartAnimInstance
{
public:
	float PouchAlpha;
	float HeadRotationBackAlpha;
	float CrouchingRigidBodyAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Sandcastle_Body_M : public UCustomCharacterPartAnimInstance
{
public:
	float BicepLeftLengthAlpha;
	float BicepRightLengthAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ScrapyardBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator ShoulderpadRightRot;
	float SkydivingAlpha;
	float SkydivingInvertedAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Shapeshifter_Medusa : public UCustomCharacterPartAnimInstance
{
public:
	struct FScriptMulticastDelegate ActivateTargeting;
	struct Vector GravityOverride;
	struct Vector HairBandScale;
	struct Vector HairScale;
	struct Vector HairScaleInterp;
	struct Vector SnakeBandScale;
	struct Vector SnakeHairScale;
	struct Vector SnakeHairScaleInterp;
	float BackblingAlpha;
	float HairRbanAlpha;
	float HairRbanAlphaInterp;
	float PawnMovementDirectionAzimuth2;
	float RigidsAlpha;
	float ScaleAnimExplicitTime;
	bool bDisableSnakes;
	bool bIsReactivePreviewSnakesFromAds;
	bool bIsMedusaTargeting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SheathBody : public UCustomCharacterPartAnimInstance
{
public:
	float CrouchSpeedAlpha;
	float CrouchAlpha;
	float LegUpLeftAlpha;
	float LegUpRightAlpha;
	float LeftLegCrossAlpha;
	float RightLeftCrossAlpha;
	float JumpAlpha;
	float SkydivingAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SheathFace : public UCustomCharacterPartAnimInstance
{
public:
	float SkydivingAlpha;
	float HeadForwardAlpha;
	float HeadTwistAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Skull_Brite_FaceAcc : public UCustomCharacterPartAnimInstance
{
public:
	float JumpStrapAlpha;
	float PawnSpeed;
	float StrapRotAlpha;
	float StrapsStandingAlpha;
	float StrapsStandRot;
	bool bIsStandingStill;
	bool bIsMovingBackward;
	struct Vector JumpVector;
	struct Vector StrapsVector;
	struct Vector HairVector;
	struct Vector StrapsForceVector;
	class UClass* PlayerPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SlurpBandolierBaseHead : public UCustomCharacterPartAnimInstance_SlurpLegendsBase
{
public:
	float WPOMultiplier;
	struct FName MorphTargetName;
	bool bUpdateMaterialAO;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SlurpBandolierMonsterHead : public UCustomCharacterPartAnimInstance_SlurpLegendsBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SnufflesLeaderFace : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* MeshToCopy;
	struct Vector EyebrowsNoiseVector;
	struct Vector EarbrowNoiseVectorA;
	struct Vector EarbrowNoiseVectorB;
	struct Vector HitBoneScale;
	struct Vector HashTagBoneScale;
	struct Vector CheekLineBoneScale;
	struct Vector EarlineBoneScale;
	float DynamicsDisabledAlpha;
	float HeadForwardAlpha;
	float PlayerHealth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Soldier : public UCustomCharacterPartAnimInstance
{
public:
	class UClass* MeshToCopy;
	float ScarfAlpha;
	float CrouchAlpha;
	float JumpAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SpaceWandererBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator SpinnerRot;
	float JumpAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SpaceWandererBody : public UCustomCharacterPartAnimInstance
{
public:
	float CrouchAlpha;
	float CrouchMoveAlpha;
	float SkydiveAlpha;
	float SuspenderAlpha;
	float JumpAlpha;
	float PickaxeSwingMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SquashBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRotationRight;
	float ThighRotationLeft;
	float CalfRotationRight;
	float CalfRotationLeft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SquashPunkBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighRotationRight;
	float ThighRotationLeft;
	float HeadRotation;
	float ElbowRotationLeft;
	float ElbowRotationRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SquashPunkHead : public UCustomCharacterPartAnimInstance
{
public:
	float HeadRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SRDriftBody : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector WeaponKickupExternalForce;
	struct Vector WeaponKickupExternalForceLeft;
	struct Rotator DiveJiggleRotation;
	struct Vector FallingAnimDynamicsUpForce;
	float RightFootJacketBackDistanceAlpha;
	float LeftFootJacketBackDistanceAlpha;
	float LegJacketFrontAlpha;
	float CrouchJacketFrontRightAlpha;
	float AnimDynamicsAlpha;
	float CrouchJacketBackRightAlpha;
	float CrouchJacketFrontLeftAlpha;
	float JacketCopyBoneAlpha;
	float JacketRightSleeveDynamicAlpha;
	float JacketLeftSleeveDynamicAlpha;
	float JacketTailGroundAlpha;
	float ThighLeftAlpha;
	float ThighRightAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_StrawberryPilotBody : public UCustomCharacterPartAnimInstance
{
public:
	float LegRightSwingAlpha;
	float LegLeftSwingAlpha;
	float RigidBodyCrouchAlpha;
	float CrouchSpeedAlpha;
	float ArmRightSwingAlpha;
	float ArmRightSwingTargetingAlpha;
	float ArmLeftSwingAlpha;
	float HeadSwingAlpha;
	float HeadRightTwistAlpha;
	float HeadLeftTwistAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_StrawberryPilotFace : public UCustomCharacterPartAnimInstance
{
public:
	float HeadSwingDeltaValue;
	float ArmSwingDeltaLValue;
	float ArmSwingDeltaRValue;
	float HeadTwistLValue;
	float HeadTwistRValue;
	float HeadSwingDeltaTargetLValue;
	float HeadSwingDeltaTargetRValue;
	struct Vector2D ArmSwingDeltaLInRange;
	struct Vector2D ArmSwingDeltaLOutRange;
	struct Vector2D ArmSwingDeltaRInRange;
	struct Vector2D ArmSwingDeltaROutRange;
	struct Vector2D HeadSwingDeltaInRange;
	struct Vector2D HeadSwingDeltaOutRange;
	struct Vector2D HeadTwistRInRange;
	struct Vector2D HeadTwistROutRange;
	struct Vector2D HeadTwistLInRange;
	struct Vector2D HeadTwistLOutRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Street_Fashion_FaceAcc_F : public UCustomCharacterPartAnimInstance
{
public:
	float HeadSwingAlpha;
	float HeadTwistRightAlpha;
	float HeadTwistLeftAlpha;
	float HeadRotBackAlpha;
	float SkydivingFrontAlpha;
	float SkydivingBackAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_StreetGoth_M : public UCustomCharacterPartAnimInstance
{
public:
	float SpineRotLeft;
	float SpeedAlpha;
	float RearCrouchAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_SwordBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator BackpackRotation;
	struct Vector BackpackTranslation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_TacticalBearBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighLeftRotationAlpha;
	float ThighRightRotationAlpha;
	float CalfRightRotationAlpha;
	float CalfLeftRotationAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Tennis : public UCustomCharacterPartAnimInstance
{
public:
	float CrouchSpeedAlpha;
	float CrouchRigidAlpha;
	float MoveSpeedAlpha;
	bool bIsCrouchMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_TeriyakiWarriorBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector PistonJitterA;
	struct Vector PistonJitterB;
	struct Vector PistonJitterC;
	struct Vector PistonJitterD;
	struct Vector StretchA;
	struct Vector StretchB;
	struct Vector StretchC;
	struct Vector StretchD;
	float FallingAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_TowerSentinelPack : public UCustomCharacterPartAnimInstance
{
public:
	struct Vector WindVector;
	struct Vector FinalGravity;
	float IsEmotingAlpha;
	float JumpingAlpha;
	struct Vector CompLinearVelScale;
	struct Vector CompLinearAccScale;
	float SkydivingForceScale;
	struct Vector NonSkydivingWindVector;
	struct FName DanceGravityBoneName;
	struct FName DanceGravityBaseName;
	float DanceGravityInflectionAngle;
	float IsEmotingAlphaMin;
	float IsEmotingAlphaMax;
	float JumpingAlphaMin;
	float JumpingAlphaMax;
	struct Vector SkydivingCompLinearScale;
	struct Vector NonSkydivingCompLinearScale;
	struct Rotator IndexA;
	struct Rotator IndexB;
	struct Rotator IndexC;
	struct Rotator IndexA_Amplitudes;
	struct Rotator IndexA_Frequencies;
	struct Rotator IndexA_Offsets;
	struct Vector IndexA_Min;
	struct Vector IndexA_Max;
	struct Rotator IndexB_Amplitudes;
	struct Rotator IndexB_Frequencies;
	struct Rotator IndexB_Offsets;
	struct Vector IndexB_Min;
	struct Vector IndexB_Max;
	struct Rotator IndexC_Amplitudes;
	struct Rotator IndexC_Frequencies;
	struct Rotator IndexC_Offsets;
	struct Vector IndexC_Min;
	struct Vector IndexC_Max;
	struct Rotator MiddleA;
	struct Rotator MiddleB;
	struct Rotator MiddleC;
	struct Rotator MiddleA_Amplitudes;
	struct Rotator MiddleA_Frequencies;
	struct Rotator MiddleA_Offsets;
	struct Vector MiddleA_Min;
	struct Vector MiddleA_Max;
	struct Rotator MiddleB_Amplitudes;
	struct Rotator MiddleB_Frequencies;
	struct Rotator MiddleB_Offsets;
	struct Vector MiddleB_Min;
	struct Vector MiddleB_Max;
	struct Rotator MiddleC_Amplitudes;
	struct Rotator MiddleC_Frequencies;
	struct Rotator MiddleC_Offsets;
	struct Vector MiddleC_Min;
	struct Vector MiddleC_Max;
	struct Rotator RingA;
	struct Rotator RingB;
	struct Rotator RingC;
	struct Rotator RingA_Amplitudes;
	struct Rotator RingA_Frequencies;
	struct Rotator RingA_Offsets;
	struct Vector RingA_Min;
	struct Vector RingA_Max;
	struct Rotator RingB_Amplitudes;
	struct Rotator RingB_Frequencies;
	struct Rotator RingB_Offsets;
	struct Vector RingB_Min;
	struct Vector RingB_Max;
	struct Rotator RingC_Amplitudes;
	struct Rotator RingC_Frequencies;
	struct Rotator RingC_Offsets;
	struct Vector RingC_Min;
	struct Vector RingC_Max;
	struct Rotator PinkyA;
	struct Rotator PinkyB;
	struct Rotator PinkyC;
	struct Rotator PinkyA_Amplitudes;
	struct Rotator PinkyA_Frequencies;
	struct Rotator PinkyA_Offsets;
	struct Vector PinkyA_Min;
	struct Vector PinkyA_Max;
	struct Rotator PinkyB_Amplitudes;
	struct Rotator PinkyB_Frequencies;
	struct Rotator PinkyB_Offsets;
	struct Vector PinkyB_Min;
	struct Vector PinkyB_Max;
	struct Rotator PinkyC_Amplitudes;
	struct Rotator PinkyC_Frequencies;
	struct Rotator PinkyC_Offsets;
	struct Vector PinkyC_Min;
	struct Vector PinkyC_Max;
	struct Vector BodyRootTran;
	struct Rotator BodyRootRot;
	struct Vector PelvisTran;
	struct Rotator PelvisRot;
	struct Vector RootTran;
	struct Rotator RootRot;
	struct Vector ThighLTran;
	struct Rotator ThighLRot;
	struct Vector ThighRTran;
	struct Rotator ThighRRot;
	struct Vector CalfLTran;
	struct Rotator CalfLRot;
	struct Vector CalfRTran;
	struct Rotator CalfRRot;
	struct Vector Spine01Tran;
	struct Rotator Spine01Rot;
	struct Vector Spine02Tran;
	struct Rotator Spine02Rot;
	struct Vector Spine03Tran;
	struct Rotator Spine03Rot;
	struct Vector Spine04Tran;
	struct Rotator Spine04Rot;
	struct Vector Spine05Tran;
	struct Rotator Spine05Rot;
	struct Vector ClavicleLTran;
	struct Rotator ClavicleLRot;
	struct Vector ClavicleRTran;
	struct Rotator ClavicleRRot;
	struct Vector UpperarmLTran;
	struct Rotator UpperarmLRot;
	struct Vector UpperarmRTran;
	struct Rotator UpperarmRRot;
	struct Vector LowerarmLTran;
	struct Rotator LowerarmLRot;
	struct Vector LowerarmRTran;
	struct Rotator LowerarmRRot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ToyMonkeyTail : public UCustomCharacterPartAnimInstance
{
public:
	float RelaxSpeed;
	float TrailAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_WegameSkeletonBackpack : public UCustomCharacterPartAnimInstance
{
public:
	struct Rotator BackpackRotation;
	struct Vector2D BackpackYawOutputRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_Whiff_Cape : public UCustomCharacterPartAnimInstance
{
public:
	float SkydivingVectorForceScalingFactor;
	struct Vector DanceYawGravityPositive;
	struct Vector DanceYawGravityNegative;
	struct Vector NonSkyDivingWind;
	struct Vector SkydivingScale;
	struct Vector NonSkyDivingScale;
	bool bIsInTheAir;
	struct Vector WindVector;
	struct Vector FinalGravity;
	struct Vector CompLinearVelScale;
	struct Vector CompLinearAccScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_WinterHoliday : public UCustomCharacterPartAnimInstance
{
public:
	bool bIsCrouchingOrSprinting;
	bool bUsePonytailAdjustment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartAnimInstance_ZeppelinBody : public UCustomCharacterPartAnimInstance
{
public:
	float ThighLeftAlpha;
	float ThighRightAlpha;
	float CalfLeftAlpha;
	float CalfRightAlpha;
	float BeltAlpha;
	float FrontEndIdleAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACustomCosmeticModifierBase : public AActor
{
public:
	struct GameplayTagContainer CurieElementsToCareAbout;
	EVehicleEnteredCosmeticReaction EnteredVehicleSeatsToCareAbout;
	Unknown FortPlayerPawnPtr;
	bool bUsesDayPhaseChange;
	bool bUsesWeaponChangeDelegate;
	bool bUsesWeaponFire;
	bool bUsesNewWeapon;
	bool bUsesWeaponChange;
	bool bUsesCurieWhatsoever;
	bool bUsesCurieAttach;
	bool bUsesCurieDetach;
	bool bUsesEnteredVehicle;
	bool bUsesExitVehicle;
	bool bUsesTargetingOrFirstPersonCameraChange;
	bool bUsesOnHitPawn;
	bool bUsesOnBeginSkydiving;
	bool bUsesOnEndSkydiving;
	bool bRegisteredForDayPhaseChange;
	bool bRegisteredForSkydiving;
	bool bRegisteredForTargetingOrFirstPersonCamera;
	bool bRegisteredForWeaponChanges;
	bool bRegisteredForCurieChanges;
	bool bRegisteredForNewWeapons;
	bool bRegisteredForEnterVehicle;
	bool bRegisteredForExitVehicle;
	bool bRegisteredOnHitPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACustomCharacterPartModifier : public ACustomCosmeticModifierBase
{
public:
	struct FName ChildComponentTag;
	bool bAutoApplyVariants;
	class UClass* IdleVFX;
	EFortCustomPartType PartType;
	TArray<struct MarshalledVFXRuntimeData> RuntimeParticleData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACustomCharacterPartModifier_SlurpLegendsBody : public ACustomCharacterPartModifier
{
public:
	class UClass* TransformBurst;
	class UClass* LoopingDrip;
	float InterpolationRate;
	float ShieldOverride;
	bool bUseShieldOverride;
	TArray<struct SlurpLegendSwapToVariantData> VariantData;
	class UClass* AssociatedPS;
	class UClass* AssociatedAnimInstance;
	class UClass* BodyMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACustomCharacterPartModifier_TripleScoopBackpack_Common : public ACustomCharacterPartModifier
{
public:
	float BaseWheelSpeed;
	float IdlePlayerSpeed;
	int RollingPeriod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomCharacterPartOwnerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomClothingColorSwatch : public UCustomColorSwatch
{
public:
	struct LinearColor AccessoryColors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomColorComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACustomCosmeticCharmModifier : public ACustomCosmeticModifierBase
{
public:
	EFortCustomCharmType CharmType;
	class UClass* MyCharmOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomHairColorSwatch : public UCustomDynamicColorSwatch
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACustomItemWrapModifier : public ACustomCosmeticModifierBase
{
public:
	Unknown GenericActorPtr;
	Unknown VehiclePtr;
	Unknown WeaponPtr;
	Unknown MeshPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomizationItemInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomPlayerComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomSkinColorSwatch : public UCustomDynamicColorSwatch
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDAD_CosmeticItemUserOptions : public UPrimaryDataAsset
{
public:
	struct FName CosmeticItemUserOptionsListName;
	TArray<struct DAD_CosmeticItemUserOption> CosmeticItemUserOptionsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionBase : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> OptionScope;
	struct FString OptionKey;
	struct FText OptionDisplayName;
	struct FText OptionDescription;
	struct GameplayTagContainer Tags;
	class UClass* OptionMaterial;
	bool bCanHaveNoOverride;
	EUFortMatchmakingKnobsDataSource MenuListType;
	class UClass* OverridenBy;
	int WeightOffset;
	class UClass* EditWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct PlaylistOptionValue> OptionValues;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionDADCosmetic : public UPlaylistUserOptionEnum
{
public:
	struct FName CosmeticItemUserOptionsListName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameInstance : public UGameInstance
{
public:
	struct FScriptMulticastDelegate OnKairosLoadElectraPlayer;
	Unknown EventFlagsForcedOnByHotfix;
	Unknown EventFlagsForcedOffByHotfix;
	Unknown CosmeticsBlacklistedByHotfix;
	Unknown CosmeticsBlacklistedByHotfixInCompetitive;
	Unknown NiagaraAssetsBlacklistedByHotfix;
	bool bBattleRoyaleMatchmakingEnabled;
	bool bCreativeModeProfileEnabled;
	TArray<struct PlaylistOverrideData> PlaylistOverrides;
	TArray<struct AudioDynamicSoundData> DynamicSoundData;
	TArray<struct PlaylistFrontEndSettings> FrontEndPlaylistData;
	struct AthenaDataTableSet AthenaDataTables;
	Unknown CachedBaseDataTables;
	Unknown CachedBaseCurveTables;
	bool bOverridingCurrentEmoteMusicFFT;
	float CurrentEmoteMusicFFT100hz;
	float CurrentEmoteMusicFFT2000hz;
	float EmoteMusicEnvelopeBeatCount;
	class UClass* KairosHeartbeatManager;
	class UClass* ProfileManager;
	class UClass* InventoryManager;
	class UClass* Matchmaking;
	class UClass* MatchmakingV2;
	class UClass* RejoinCheck;
	class UClass* SocialManager;
	class UClass* MatchAnalytics;
	class UClass* PartySpectateAnalytics;
	class UClass* SidecarSys;
	struct Guid GlobalUnregistrationSaveGUID;
	class UClass* TooltipManager;
	TArray<class UClass*> RegisteredPlayers;
	class UClass* UpdateManager;
	class UClass* DataAssetDirectoryManager;
	class UClass* InteractabilityTracker;
	class UClass* Chatroom;
	TArray<Unknown> RegisteredPlayerInfosAwaitingRefresh;
	struct FString LastGameHighlightGroupId;
	class UClass* SeasonalEventManager;
	class UClass* TournamentManager;
	class UClass* MobilePushNotificationManager;
	float BroadcastFeatureStatusRate;
	class UClass* CurrentMissionGenerator;
	struct FScriptMulticastDelegate OnSubGameChangedBP;
	class UClass* AppActivationSoundMixManager;
	int KairosUIResX;
	int KairosUIResY;
	TArray<struct WebEnvUrl> KairosWebUrls;
	int KairosMinSupportedAppVersion;
	float KairosHotfixCheckTimer;
	float KairosHotfixCheckVariance;
	class UClass* PlaylistManager;
	TArray<class UClass*> LoggedInPlayers;
	TArray<EAppStore> StoreSupport;
	TArray<EAppStore> StoreSupport_Android_Samsung;
	TArray<EAppStore> StoreSupport_Android_SideloadSamsung;
	TArray<EAppStore> StoreSupport_Android_SideloadOther;
	TArray<EAppStore> StoreSupportPartner;
	class UClass* MaterialCacheManager;
	class UClass* ReplayVideoManager;
	class UClass* ExtractionBootstrapper;
	class UClass* PegasusDriver;
	class UClass* ContentBeaconClient;
	class UClass* DADIslandQuerier;
	class UClass* DADCosmeticItemUserOptionsCollection;
	class UClass* CreativeDiscoverySurfaceManager;
	TArray<struct TSoftClassPtr<UObject>> BlacklistedPhysicsAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDAD_CosmeticItemUserOptionsCollection : public UObject
{
public:
	TArray<class UClass*> CosmeticItemUserOptionAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDAD_IslandQuerier : public UObject
{
public:
	struct FScriptMulticastDelegate OnWellKnownIslandsUpdated;
	class UClass* WellKnownIslands;
	bool bResolveMetrics;
	float UpdateMetricsInterval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDAD_WellKnownIslands : public UPrimaryDataAsset
{
public:
	struct FName WellKnownIslandsListName;
	TArray<struct DAD_Island> WellKnownIslandsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDadBroHealthInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UServiceBriefConfigCollection : public UDataAsset
{
public:
	Unknown ServiceConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DeathEffectsPawnComponent : public PawnComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADecoyActor : public ABuildingGameplayActor
{
public:
	float GoalOverrideRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADeployableBaseCore : public ABuildingGameplayActor
{
public:
	class UClass* Plot;
	struct TSoftClassPtr<UObject> SimpleDeathParticles;
	struct TSoftClassPtr<UObject> SimpleDeathSound;
	bool bRegisterAsGlobalGameplayEventListener;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADeployableBasePlot : public ABuildingGameplayActor
{
public:
	struct UniqueNetIdRepl OccupantNetID;
	struct FortCloudSaveInfo OccupantNextCloudSaveInfo;
	class UClass* OccupantDeployableBaseRecord;
	class UClass* BuildableSpaceComponent;
	class UClass* SavableSpaceComponent;
	class UClass* EntirePlotSpaceComponent;
	class UClass* SpawnOffsetComponent;
	class UClass* BuildableAreasArray;
	struct TSoftClassPtr<UObject> DeployableBaseCoreClass;
	class UClass* DeployableBaseCore;
	bool bDirty;
	bool bDirtiedSinceLastWriteToBuffer;
	bool bCloudFileSavedSinceLastCloudItemUpdate;
	EDeployableBaseBuildingState CurrentBuildingState;
	EDeployableBaseBuildingState GoalBuildingState;
	struct FScriptMulticastDelegate OnOccupantIdChanged;
	struct FScriptMulticastDelegate OnDeployableBaseCoreCreated;
	struct FScriptMulticastDelegate OnDeployableBaseCoreDestroyed;
	struct FScriptMulticastDelegate OnDeployableBasePlotSpacesChanged;
	TArray<class UClass*> OutstandingAssociatedPickups;
	class UClass* PlotInventory;
	int DeferredActorIdxToResumeAt;
	int NumActorsFromRecordDestroyed;
	struct IntVector BuildableSpaceExpansionVector;
	int MaxActorsToCreatePerBuildingCall;
	int MaxActorsToDestroyPerDestroyCall;
	float DelayBetweenActorRecordBuilding;
	float DelayBetweenActorRecordDestroying;
	class UClass* PlayerStart;
	class UClass* ConstructionTimeEffect;
	TArray<struct DeferredActorData> DeferredConstructionActors;
	struct Box BuildableAreasStructuralSupportBoxesArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DestinationTrackerPawnComponent : public PawnComponent
{
public:
	struct Vector Destination;
	float DistanceSquared;
	struct Rotator Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeviceSaveCollection : public USaveGame
{
public:
	Unknown Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDevicesDataTrackingComponent : public UActorComponent
{
public:
	TArray<class UClass*> DevicesTrackedData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeviceTrackedData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDragBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionFloat DragByMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDrawCallMetric : public UObjectMetric_Legacy
{
public:
	uint32_t TotalNumberOfDrawCalls;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicInputSubsystem : public UGameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AEdgeNavLinks : public ANavLinkProxy
{
public:
	float DistanceBetweenLinks;
	struct Vector Start;
	struct Vector End;
	float SnapRadius;
	float SnapHeight;
	float LinkProjectionHeight;
	float RightLinkForwardOffset;
	ECollisionChannel CollisionChannel;
	bool bManualAdjustment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EdgeNavLinksRenderingComponent : public NavLinkRenderingComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UExternalContent : public UDataAsset
{
public:
	EReferenceType Type;
	struct FString ProjectID;
	struct FString Label;
	struct GameplayTagContainer Tags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSaveFileBuildingInstructionsHandler : public AActor
{
public:
	struct FString SaveFileName;
	struct Vector LoadedBuildingsScale;
	struct Vector LoadedBuildingsAdditionalTranslation;
	bool bUseAbsoluteCoordinates;
	bool bTrackDestroyedBuildings;
	struct TSoftClassPtr<UObject> DefaultBuildingInstructions;
	bool bLoadInvisible;
	bool bDespawnOnBuildingsSpawned;
	bool bSpawnBuildingsAutomaticallyAfterLoad;
	struct UniqueNetIdRepl OperationUserId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFOBSaveFileBuildingInstructionsHandler : public AFortSaveFileBuildingInstructionsHandler
{
public:
	float BuildingPieceConstructionTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFort3PCameraMode : public UFortCameraMode
{
public:
	struct ViewOffsetData ViewOffsets;
	float FOV;
	struct Vector SafeLocationOffset;
	bool bValidateSafeLoc;
	bool bDoPredictiveAvoidance;
	bool bPreventPenetration;
	TArray<struct PenetrationAvoidanceFeeler> PenetrationAvoidanceFeelers;
	float PenetrationBlendInTime;
	float PenetrationBlendOutTime;
	struct Vector PivotLocInterpSpeed;
	float PivotRotInterpSpeed;
	float FOVInterpSpeed;
	float ViewOffsetInterpSpeed;
	float SafeLocationInterpSpeed;
	struct Vector LastActualViewOffset;
	struct Vector LastIdealViewOffset;
	struct Vector LastSafeLocationLocal;
	struct Vector LastSafeLocation;
	float LastSafeLocBlockedPct;
	float LastPenetrationBlockedPct;
	struct Vector LastActualPivotLoc;
	struct Rotator LastActualPivotRot;
	struct Vector LastIdealPivotLoc;
	struct Rotator LastIdealPivotRot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFort3PCam_Default : public UFort3PCameraMode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFort3PCam_Targeting : public UFort3PCameraMode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoTool : public AFortWeapon
{
public:
	bool bButtonDown;
	class UClass* ItemDefinition;
	class UClass* DecoHelper;
	class UClass* CarriedActor;
	bool bPlaceCarriedActor;
	struct TSoftClassPtr<UObject> SpawnEffect;
	bool bPreventExecutionOnOwningPlayerFalling;
	bool bIsEquipped;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAbilityDecoTool : public AFortDecoTool
{
public:
	struct AbilityToolSpawnParameters CachedSpawnParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySet : public UPrimaryDataAsset
{
public:
	TArray<class UClass*> GameplayAbilities;
	TArray<struct GameplayEffectApplicationInfoHard> GrantedGameplayEffects;
	bool bUsePrimaryInputComponent;
	bool bShouldHotbarKeysForceExitBuildMode;
	struct GameplayTag AbilityActivatedByInputKeyTag;
	struct GameplayTag AbilityActivatedByInputTag;
	struct GameplayTag AbilityActivatedByInputCooldownTag;
	TArray<struct AbilityActivatedByInputData> AbilitiesActivatedByInput;
	TArray<class UClass*> AdditionalItemsToAdd;
	TArray<struct GameplayEffectApplicationInfo> PassiveGameplayEffects;
	struct GameplayTagContainer AnalyticsTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilityKit : public UFortAbilitySet
{
public:
	struct FText DisplayName;
	TArray<struct FText> Description;
	struct FText TooltipDescription;
	struct SlateBrush IconBrush;
	struct SlateBrush PrimaryTraitIconBrushOverride;
	TArray<struct TSoftClassPtr<UObject>> Gadgets;
	TArray<struct AbilityKitItem> Items;
	TArray<class UClass*> AddedSchematics;
	TArray<class UClass*> RemovedSchematics;
	class UClass* Tooltip;
	class UClass* SummaryTooltip;
	class UClass* StatList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilityKitTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySetTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySystemBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilitySystemComponent : public AbilitySystemComponent
{
public:
	struct FScriptMulticastDelegate OnClientVehicleBlockingChanged;
	struct ReplicatedMontagePair LandingMontagePair;
	struct GameplayAbilityRepSharedAnim RepSharedAnimInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySystemComponentAbilityGivenListenerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilitySystemComponentAthena : public FortAbilitySystemComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipContext : public UObject
{
public:
	class UClass* SourceAbilitySystem;
	class UClass* DestAbilitySystem;
	int TreatAsLevel;
	struct GameplayTagContainer TagContainer;
	class UClass* ComparisonObject;
	class UClass* PlayerInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySystemComponentTooltipContext : public UFortTooltipContext
{
public:
	struct GameplayAttribute Attribute;
	struct ActiveGameplayEffectHandle ActiveGEHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySystemComponentTooltip : public UFortTooltip
{
public:
	class UClass* CachedContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTokenToAttributeTable : public UDataAsset
{
public:
	TArray<struct TokenAttributePair> TokenToAttributeList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilitySystemGlobals : public AbilitySystemGlobals
{
public:
	TArray<struct FName> BROnlyAttributeSetDefaultsToExclude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilitySystemInterface : public AbilitySystemInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilitySystemUI : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAbilityTagRelationshipMapping : public UDataAsset
{
public:
	TArray<struct FortAbilityTagRelationship> AbilityTagRelationships;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_ApplyRootMotionFallingBoostForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinish;
	float VerticalImpulse;
	float Duration;
	float GravityScalar;
	float MaxAcceleration;
	float LateralFriction;
	float MaxLateralSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_ApplyRootMotionFollowCharacterRotation : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinish;
	float Strength;
	float Duration;
	bool bIsAdditive;
	class UClass* StrengthOverTime;
	bool bEnableGravity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_AutoAimConditionFailed : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnAutoAimConditionFailed;
	class UClass* CachedPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_CommitAccountCosts : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnCommitted;
	struct FScriptMulticastDelegate OnFailed;
	bool bWasCancellable;
	bool bRequestPending;
	bool bCommittedLocally;
	struct FString PlayerName;
	struct FString AbilityName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_DirectedMovement : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnMovementComplete;
	struct FScriptMulticastDelegate OnMovementCancelled;
	struct Vector TargetLocation;
	class UClass* TargetComponent;
	float MovementDistance;
	float IdealArrivalDistance;
	float DurationOfMovement;
	bool bModifyZ;
	bool bCancelOnFalling;
	class UClass* MovementComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_Move : public AITask_MoveTo
{
public:
	struct FortMoveConfig MoveConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_MoveAI : public FortAITask_Move
{
public:
	struct FScriptMulticastDelegate OnComplete;
	struct FScriptMulticastDelegate OnInterrupted;
	struct FScriptMulticastDelegate OnCancelled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_PlayAnimAndWait : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnCompleted;
	struct FScriptMulticastDelegate OnBlendOut;
	struct FScriptMulticastDelegate OnInterrupted;
	struct FScriptMulticastDelegate OnCancelled;
	struct FortGameplayAbilityMontageInfo MontageInfo;
	EFortSharedAnimationState AnimState;
	bool bStopWhenAbilityEnds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_PlayAnimWaitTarget : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Triggered;
	struct FScriptMulticastDelegate Cancelled;
	struct FScriptMulticastDelegate Completed;
	struct FortGameplayAbilityMontageInfo MontageInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_PlayMontageWaitNotify : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnCompleted;
	struct FScriptMulticastDelegate OnBlendOut;
	struct FScriptMulticastDelegate OnInterrupted;
	struct FScriptMulticastDelegate OnCancelled;
	struct FScriptMulticastDelegate OnNotifyBegin;
	struct FScriptMulticastDelegate OnNotifyEnd;
	class UClass* MontageToPlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_PlayMontageWaitTarget : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Triggered;
	struct FScriptMulticastDelegate Cancelled;
	struct FScriptMulticastDelegate Completed;
	struct FortGameplayAbilityMontageInfo MontageInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_SetNextMontageSectionAndWait : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnComplete;
	struct FScriptMulticastDelegate OnInterrupted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_SpawnProjectileAndWait : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Created;
	struct FScriptMulticastDelegate Touched;
	struct FScriptMulticastDelegate Bounced;
	struct FScriptMulticastDelegate Stopped;
	struct FScriptMulticastDelegate Exploded;
	struct FScriptMulticastDelegate Destroyed;
	Unknown SpawnedProj;
	class UClass* RequestedBy;
	struct Vector SpawnLocation;
	struct Rotator SpawnRotation;
	struct Rotator SpawnDirection;
	float InitialSpeed;
	struct FortGameplayEffectContainerSpec EffectContainerSpecToApplyOnHit;
	struct FortGameplayEffectContainerSpec EffectContainerSpecToApplyOnExplode;
	float GravityScale;
	class UClass* HomingTarget;
	bool bAllowSpawnWhenDead;
	bool bAllowSpawnWhenDBNO;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_Sprint : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnTargetLocationReached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_TargetSelectionContinuous : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Targeted;
	struct FScriptMulticastDelegate Cancelled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_WaitAnimBPOverride : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnReady;
	struct TSoftClassPtr<UObject> AnimInstanceWaitingFor;
	struct TSoftClassPtr<UObject> GadgetItemDefWaitingFor;
	class UClass* FortPlayerPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_WaitPerformTargeting : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Targeted;
	struct FScriptMulticastDelegate Cancelled;
	class UClass* TargetingPreset;
	TArray<class UClass*> InitialTargets;
	bool bForceTargetingOnServer;
	bool bUseAsyncTargeting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_WaitTargetSelection : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Targeted;
	struct FScriptMulticastDelegate Cancelled;
	EGameplayTargetingConfirmation ConfirmationType;
	bool bForceTargetingOnServer;
	struct GameplayTag InstantTargetTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAbilityTestObserver : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAccoladeItem : public UFortAccountItem
{
public:
	int last_earned_day;
	int earned_count;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccoladeItemDefinition : public FortPersistableItemDefinition
{
public:
	EFortAccoladeType AccoladeType;
	EFortAccoladeSubtype AccoladeSubtype;
	TArray<struct TSoftClassPtr<UObject>> AccoladeToReplace;
	struct TSoftClassPtr<UObject> PreviouseAccoladeSmallPreviewImage;
	struct TSoftClassPtr<UObject> PreviouseAccoladeLargePreviewImage;
	EXPEventPriorityType Priority;
	struct ScalableFloat XpRewardAmount;
	float AccoladeLevel;
	bool bOnlyAllowOncePerDay;
	bool bIgnoreInAntiAddictionReducedStates;
	class UClass* AwardedSoundCue;
	struct ScalableFloat XpRewardScalarByCount;
	TArray<struct AccoladeSecondaryXpType> SecondaryXpValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAccountBuffCreditItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConsumableAccountItemDefinition : public FortAccountItemDefinition
{
public:
	bool bCanActivateOnSelf;
	bool bCanActivateOnOthers;
	bool bIsAutomaticallyConsumed;
	EItemProfileType ProfileType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountBuffCreditItemDefinition : public FortConsumableAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> BuffToGrant;
	int MinutesOfBuffTimeToGrant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAccountBuffItem : public UFortAccountItem
{
public:
	struct DateTime expiration_date;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountBuffItemDefinition : public FortAccountItemDefinition
{
public:
	TArray<struct TSoftClassPtr<UObject>> BuffEffects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAccountItemTooltip : public UFortItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAccountStatProxyInstance : public UObject
{
public:
	struct FString StatName;
	struct FText CachedDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActiveDurationExecutionCalculation : public FortGameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortActiveEventManagerSubsystem : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate OnActiveEventHotfixesApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortActivitiesSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<struct PlaylistToActivityMapping> PlaylistToActivityMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortActorComponent_Affiliation : public UActorComponent
{
public:
	bool bHasSpecificRelations;
	bool bHasPerceptionUpdateRequest;
	bool bIsInGameParticipantFaction;
	struct GameplayTagContainer DefaultFactionTags;
	bool bIsRegisteredToAffiliationSystem;
	float ResetSpecificRelationUnawareDelay;
	float ResetSpecificRelationNoDamageDelay;
	uint32_t AffiliationUID;
	struct GameplayTagContainer CurrentFactions;
	struct GameplayTagContainer CurrentBlockResetRelationTags;
	struct FortAffiliationComponentSpecificRelations SpecificRelations;
	class UClass* CachedAffiliationManager;
	class UClass* CachedAIPerceptionComponent;
	class UClass* CachedBotController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortActorIndicatorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortActorOptionsComponent : public UActorComponent
{
public:
	struct FText OptionsDisplayName;
	struct FText OptionsDescription;
	class UClass* OverrideDisplayNameOption;
	struct FText InteractionText;
	struct CurveTableRowHandle InteractionSpeed;
	struct TSoftClassPtr<UObject> OptionsItemDefinition;
	class UClass* PlayerOptions;
	struct PropertyOverrideData PlayerOptionData;
	struct FScriptMulticastDelegate OnAnyPropertyChanged;
	struct FScriptMulticastDelegate OnPropertiesLoaded;
	struct FScriptMulticastDelegate OnPropertiesReadyForLocalization;
	struct FScriptMulticastDelegate OnRestoreDefaults;
	bool bRedirectInteractToParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAdvancedMeleeComponent : public UActorComponent
{
public:
	float AttackRangePrimary;
	float AttackRangeJab;
	float AttackRangeSpin;
	float AttackRangeSecondary;
	struct TSoftClassPtr<UObject> PrimarySwing;
	struct TSoftClassPtr<UObject> JabSwing;
	struct TSoftClassPtr<UObject> SpinSwing;
	struct TSoftClassPtr<UObject> SecondarySwing;
	TArray<struct GameplayAbilitySpecHandle> FightListHandles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAttributeSet : public AttributeSet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAdvancedMovementSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData GroundFriction;
	struct FortGameplayAttributeData BrakingDecelerationWalking;
	struct FortGameplayAttributeData BrakingDecelerationFalling;
	struct FortGameplayAttributeData BrakingDecelerationFlying;
	struct FortGameplayAttributeData MaxAcceleration;
	struct FortGameplayAttributeData MaxAccelerationFlying;
	struct FortGameplayAttributeData BrakingFrictionFactor;
	struct FortGameplayAttributeData JumpZVelocity;
	struct FortGameplayAttributeData JumpHorizontalAccelerationOverride;
	struct FortGameplayAttributeData JumpHorizontalVelocityOverride;
	struct FortGameplayAttributeData MinAnalogWalkSpeed;
	struct FortGameplayAttributeData AirControlMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAffiliationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIAssetLoader : public UObject
{
public:
	TArray<struct PendingRequestManager> PendingRequests;
	TArray<class UClass*> AssetsLoaded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIAssignment : public UObject
{
public:
	struct FortAIAssignmentIdentifier AssignmentIdentifier;
	class UClass* AssignmentSettings;
	class UClass* GoalProvider;
	TArray<class UClass*> GoalComponentsOnAssignment;
	TArray<struct FortAIGoal> Goals;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIAssignmentSettings : public UDataAsset
{
public:
	TArray<struct GoalSelectionQueryInfo> GoalSelectionQueryInfos;
	bool bGoalLocationsAlwaysKnown;
	bool bIsEnemyAssignment;
	struct GameplayTagContainer RequiredTags;
	struct GameplayTagContainer ProhibitedTags;
	float MaxAIAllowedForAssignment;
	float MaxAIAllowedPerGoal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCharacterAttrSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData Fortitude;
	struct FortGameplayAttributeData Offense;
	struct FortGameplayAttributeData Tech;
	struct FortGameplayAttributeData Resistance;
	struct FortGameplayAttributeData MaxCharacterLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIAttributesSet : public FortCharacterAttrSet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPawn : public ACharacter
{
public:
	bool bUseBaseChanged;
	bool bIgnoreNextFallingDamage;
	bool bIsDying;
	bool bPlayedDying;
	bool bIsHiddenForDeath;
	bool bIsKnockedback;
	bool bIsStaggered;
	bool bCanCapsuleBeUsedForTargeting;
	bool bUseLineTestForDamageZoneBoneDetection;
	bool bMovingEmote;
	bool bMovingEmoteForwardOnly;
	bool bMovingEmoteFollowingOnly;
	bool bMovingEmoteSkipLandingFX;
	bool bIsInvulnerable;
	bool bSpotted;
	bool bRegisterWithAISight;
	bool bRegisterWithAimAssist;
	bool bPrimaryInputHeld;
	bool bSecondaryInputHeld;
	bool bPrimaryInputQueued;
	bool bWeaponActivated;
	bool bIsInGoop;
	bool bReplicatedIsInGoop;
	bool bSkipAnalogJump;
	ETraceTypeQuery FootstepTraceTypeQuery;
	EFortFootstepSurfaceType FootstepSurfaceType;
	EFortSoundIndicatorTypes DefaultSoundIndicatorType;
	TArray<struct SoundIndicatorTypePicker> SoundIndicatorTypeOverrides;
	class UClass* FootstepIconOverride;
	struct LinearColor SoundIndicatorTintOverride;
	float SoundIndicatorMaxDistance;
	EUpdateRateShiftBucket UroShiftBucket;
	bool bUpdateMeshComponentUpdateFlagOnServer;
	bool bUROCanTieToLODs;
	bool bPostProcessNavLocation;
	bool bHealthSynced;
	bool bWeaponHolstered;
	bool bSkipReticleColorTrace;
	bool bTreatAsPawnForHitMarkers;
	bool bDisplayPawnHitMarkersForChildActors;
	bool bUsesStats;
	bool bAllowBuildingActorTeleport;
	bool bIsDBNO;
	bool bWasDBNOOnDeath;
	bool bCachedIsInAthena;
	bool bShouldUseCharacterMovementIdleFastPath;
	bool bIsLocalViewTarget;
	EFortMovementStyle CurrentMovementStyle;
	EFortControlRecoveryBehavior ControlRecoveryBehavior;
	byte TeleportCounter;
	struct DataTableRowHandle PawnStatHandle;
	float SlidingFriction;
	float SlidingBrakingDeceleration;
	class UClass* StormShieldComponent;
	struct FScriptMulticastDelegate OnStormShieldComponentCreated;
	EFortPawnPushSize PushSize;
	float LastSurfaceTraceTime;
	struct Vector LastSurfaceTraceLocation;
	int PawnUniqueID;
	class UClass* CurrentWeapon;
	class UClass* PreviousWeapon;
	TArray<class UClass*> CurrentWeaponList;
	struct FString PreviousAbilityWeaponNameForTelemetry;
	struct FName WeaponHandSocketName;
	struct FName LeftHandWeaponHandSocketName;
	class UClass* SpawnSpot;
	struct GameplayTagContainer DeathTags;
	float SpawnImmunityTime;
	class UClass* CurrentWaterBody;
	bool bShouldSupportSurfaceSwimming;
	class UClass* ReplicatedWaterBody;
	TArray<class UClass*> IncomingPickups;
	TArray<struct FortPickupEntryData> PickupDirectionData;
	bool bIsStunned;
	int AdditiveCringeCount;
	float AdditiveCringeDuration;
	bool bSupportsDamageNumbersAtHitLocation;
	struct Vector_NetQuantize PushMomentum;
	float LocalSpin;
	struct GameplayCueTag DeathCueTag;
	class UClass* DeathHitSocket;
	struct FScriptMulticastDelegate OnPlayerStartDBNO;
	struct FScriptMulticastDelegate OnDBNOStateChanged;
	float DefaultLifespanAfterDeath;
	float TeamBeaconMaxDist;
	struct Color TeamBeaconTextColor;
	float LastTakeHitTimeTimeout;
	float LastDamagedTime;
	class UClass* CurrentlyAttachedWeapon;
	class UClass* CachedNavFloor;
	float MaxFootstepDistance;
	class UClass* DBNOLandingSound;
	class UClass* DefaultFootstepSound;
	class UClass* DefaultFastFootstepSound;
	class UClass* DefaultLandingSound;
	class UClass* DefaultHardLandingSound;
	class UClass* DefaultJumpSound;
	class UClass* DefaultHitNotifyAudioBank;
	class UClass* DefaultSwimmingAudioBank;
	float LineTestForDamageZoneBoneDetectionRadius;
	struct PawnDamageZones DamageZones;
	byte DamageZoneActiveBitMask;
	float TargettingZOffset;
	byte JumpFlashCountPacked;
	byte LandingFlashCountPacked;
	Unknown EmoteAudioComps;
	class UClass* FrontEndEmoteAudioAttenuation;
	class UClass* InGameEmoteAudioAttenuation;
	class UClass* InGameEmoteSoundEffectSoundPresetChain;
	Unknown EmoteMeshComps;
	Unknown EmotePropActors;
	Unknown EmoteParticleSystemComps;
	int EmoteCount;
	float LastEmoteTime;
	float LastEmoteEndTime;
	class UClass* LastEmoteItemDef;
	class UClass* LastReplicatedEmoteExecuted;
	bool bFireBlockedByEmoteCooldown;
	float EmoteToFireCooldownTime;
	float EmoteWalkSpeed;
	TArray<class UClass*> AdditionalModifierDefinitions;
	struct FScriptMulticastDelegate OnPawnTeleported;
	struct FScriptMulticastDelegate OnPawnLanded;
	struct FScriptMulticastDelegate OnPawnStartedEmote;
	struct FScriptMulticastDelegate OnPawnStoppedEmote;
	struct FScriptMulticastDelegate OnHitPawn;
	struct FScriptMulticastDelegate OnDied;
	struct FScriptMulticastDelegate OnDeathEffects;
	struct FScriptMulticastDelegate OnDamaged;
	struct FScriptMulticastDelegate OnDidDamage;
	class UClass* FootstepBank;
	class UClass* FoleyFootstepContext;
	class UClass* FoleyHitContext;
	struct FScriptMulticastDelegate OnWeaponEquippedDelegate;
	struct FScriptMulticastDelegate OnWeaponUnEquippedDelegate;
	struct FScriptMulticastDelegate OnWeaponAttachmentChangedDelegate;
	class UClass* HealthRegenDelayGameplayEffect;
	class UClass* HealthRegenGameplayEffect;
	class UClass* ShieldRegenDelayGameplayEffect;
	class UClass* ShieldRegenGameplayEffect;
	class UClass* CurrentWeaponAnimLayerOverlayClass;
	struct FScriptMulticastDelegate OnHolsteredEvent;
	struct FScriptMulticastDelegate OnUnholsteredEvent;
	int WeaponHolsterCounter;
	TArray<struct FName> WeaponHolsterIds;
	float StaySpottedTime;
	struct FName SpottedEvent;
	class UClass* DefaultFeedback;
	TArray<class UClass*> ActiveSoundIndicators;
	class UClass* DefaultSoundTrackingVisual;
	struct GameplayTagContainer SoundTrackingVisibilityTags;
	Unknown PriorityModifiers;
	TArray<struct FortPawnVocalChord> VocalChords;
	bool bIsDisconnectedPawn;
	struct ActiveGameplayEffectHandle MaxHealthApplicationHandle;
	class UClass* MaxHealthApplicationGameplayEffect;
	class UClass* HealthSet;
	class UClass* ControlResistanceSet;
	class UClass* DamageSet;
	class UClass* MovementSet;
	class UClass* AdvancedMovementSet;
	struct FScriptMulticastDelegate OnAbilityDecisionWindowStackUpdated;
	class UClass* AbilitySystemComponent;
	TArray<struct FortActiveMontageDecisionWindow> DecisionWindowStack;
	struct GameplayTagContainer GameplayTags;
	struct FText DisplayName;
	TArray<struct DamagerInfo> Damagers;
	TArray<struct DamageDoneInfo> DamageDone;
	TArray<struct DamageDoneSourceInfo> TotalDamageDoneTrackers;
	TArray<struct DamageDoneTargetInfo> TargetDamageDoneTrackers;
	float DamageDoneLastAtTime;
	float TotalPlayerDamageDealt;
	class UClass* HealthBarIndicator;
	struct GameplayTag CurrentCalloutTag;
	TArray<struct CalloutEntry> CalloutEntries;
	float HealthBarWidth;
	float HealthBarHeightMultiplier;
	struct SlateBrush SpottedBrush;
	struct Vector SpottedIconOffset;
	int ClientNonRenderedAnimUpdateRate;
	int MaxEvalRateForInterpolation;
	TArray<float> AnimUpdateRateVisibleMaxDistanceFactor;
	Unknown LODToFrameSkipMap;
	struct FortConversationSentence CurrentSentence;
	struct FScriptMulticastDelegate OnPawnHealthChanged;
	struct AthenaBatchedDamageGameplayCues_Shared AccumulatedBatchData_Shared;
	struct AthenaBatchedDamageGameplayCues_NonShared AccumulatedBatchData_NonShared;
	struct GameplayCueParameters BatchedGameplayCueParameters;
	struct GameplayTagContainer ReplayItemActions;
	struct GameplayTagContainer HidingVisibilityTags;
	struct GameplayTagContainer HidingTransitionVisibilityTags;
	class UClass* PegasusTimelineCollector;
	class UClass* AILODComponent;
	struct ClientAILODSettings ClientAILODSettings;
	struct GameplayTag FallbackTag;
	struct FString DebugType;
	Unknown RecordedGunshots;
	struct FScriptMulticastDelegate OnPawnComponentAttachedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIPawn : public AFortPawn
{
public:
	struct GameplayCueParameters DeimosBatchedGameplayCueParameters;
	struct FortAIAttributeReplicationProxy AttributeReplicationProxy;
	struct GameplayAbilityRepAnimMontage RepAnimMontageInfo;
	struct GameplayAbilityRepSharedAnim RepSharedAnimInfo;
	struct MinimalGameplayCueReplicationProxy SimulatedProxyGameplayCues;
	bool bAttacking;
	bool bDied;
	bool bHitReact;
	bool bFullBodyHitReact;
	bool bDancing;
	bool bRangedAttacking;
	bool bHasGoalActor;
	bool bFrozen;
	bool bUseSharedAnimation;
	bool bNeedsDeathNotification;
	bool bKilledOrDowned;
	bool bDespawnedDueToInactivity;
	bool bNotifySpawnRift;
	bool bUsesDBNO;
	bool bHasInventory;
	bool bShouldTossInventoryOnDeath;
	bool bUseDefenderInventoryManagement;
	bool bIgnoreDefender;
	bool bTrackNearbyPickups;
	bool bIsCharging;
	bool bIsCowering;
	bool bCanShowMinimapIndicator;
	bool bShowMinimapFarOffDirectionArrow;
	bool bHasEngaged;
	bool bIsAlwaysGameplayRelevant;
	bool bIsDebugSpawnedAI;
	bool bEncounterExpectedLifespanExpired;
	bool bEnableBlockingCollisionWithOtherAI;
	bool bSetMiniMapIconRotation;
	bool bHasDroppedLoot;
	bool bUseFastAbilityReplication;
	bool bUseAIGoalComponent;
	struct MinimalReplicationTagCountMap FastReplicationMinimalReplicationTags;
	struct MinimalGameplayCueReplicationProxy FastReplicationMinimalGameplayCueProxy;
	struct FScriptMulticastDelegate OnInventoryInitialized;
	struct FScriptMulticastDelegate OnInventoryUpdated;
	float AIDifficultyLevel;
	EFortAILevelRatingDisplayType LevelRatingDisplayType;
	class UClass* EncounterInfo;
	int SpawnSetIndex;
	struct Guid SpawnGroupGuid;
	int EnemyIndexInSpawnGroup;
	float FinishEncounterSpawnFallbackTime;
	float EncounterSpawnDisableRangedAttackingTime;
	float EncounterSpawnDisableMeleeAttackingTime;
	struct TimerHandle EncounterExpectedLifespanTimerHandle;
	class UClass* SpawnRift;
	struct Vector SpawnRiftLocation;
	class UClass* SpawnSourceActor;
	class UClass* AIGoalComponentClass;
	float MaxTimeAllowedOutsideTether;
	class UClass* BehaviorTree;
	class UClass* DefaultNavFilter;
	class UClass* HuntingNavFilter;
	float DBNOInteractionDuration;
	struct FScriptMulticastDelegate OnDowned;
	ETInteractionType DBNOInteractionType;
	EFortMovementStyle MovementStyles;
	float UpdateNearbyPickupFrequency;
	struct GameplayTag RequiredWeaponPickupTag;
	struct GameplayTagQuery RequiredWeaponPickupTagQuery;
	bool bUsePickupDirectionOverride;
	struct Vector PickupDirectionOverride;
	struct FName NoWeaponInCombatEventName;
	struct FName NoWeaponOutOfCombatEventName;
	struct Vector CachedHitLocation;
	struct GameplayTagContainer TurnTransitionGameplayAbilityTag;
	struct TSoftClassPtr<UObject> DeathParticles;
	int NumRunVariations;
	int CurrentRunVariationIndex;
	float RunVariationRadius;
	int EyeIndex;
	int SkinIndex;
	struct LinearColor DefaultEyeColor;
	float DefaultEyeBrightness;
	struct LinearColor DefaultSkinColor;
	float DefaultSkinGlow;
	struct LinearColor MinimapDefaultIconColor;
	struct LinearColor PlayerManagerMinimapColor;
	struct SlateBrush MiniMapIconBrush;
	struct SlateBrush MiniMapAboveBelowIconBrush;
	TArray<struct MinimapGoalByTagColorsData> MinimapGoalByTagColors;
	int8_t MinimapGoalByTagColorIndex;
	struct FName AppearanceOverrideName;
	EFortAIPawnGender AppearanceOverrideGender;
	EFortCombatEvents FollowPlayerEvent;
	EFortCombatEvents InCombatNearPlayerEvent;
	ETInteractionType InteractionType;
	float FollowPlayerRange;
	float InteractionDuration;
	struct FText InteractionText;
	ETInteractionType SecondInteractionType;
	float SecondInteractionDuration;
	struct FText SecondInteractionText;
	struct FScriptMulticastDelegate OnInteraction;
	class UClass* InteractionSound;
	class UClass* DefenderTrap;
	struct FScriptMulticastDelegate OnActorBeginCrowdOverlap;
	float DeepWaterImmersionDepth;
	bool bDebugAI;
	bool bDebugAIAnim;
	bool bUseBuildingAttackingHotspots;
	bool bCanBeLaunched;
	bool bCanMoveThroughWalls;
	bool bCanUseNavWalking;
	bool bCanUseSimpleCollisions;
	bool bCanUseStepAside;
	bool bCanUseDoors;
	bool bCanUseOpenedDoors;
	bool bCanUseShootingHotspots;
	bool bCanSleep;
	bool bIsSleeping;
	bool bShouldStartSleeping;
	bool bCanLookAtGoal;
	bool bAllowServerCosmeticComponentOptimizations;
	bool bAllowCapsuleComponentsOnServer;
	bool bRootComponentIgnoreQueryPawnCapsule;
	bool bCanUseMeshPooling;
	bool bUseCrowdSimulation;
	bool bControlWalkingOffLedges;
	bool bUseAppearanceOverride;
	bool bCanInteract;
	bool bHideHealthBar;
	bool bHasBuildingHitEffects;
	bool bReplicateGrantedTagsWithFastAbilityReplication;
	bool bReplicateGameplayCuesWithFastAbilityReplication;
	bool bOnlySkipAbilitySystemComponentWithFastAbilityReplication;
	EFortMovementUrgency MovementUrgency;
	EFortressAIType AIType;
	byte Team;
	struct FName SimpleCollisionsProfileName;
	struct FortAISpawnGroupUpgradeUIData UpgradeUIData;
	struct SlateBrush CachedUpgradeUIDataUpgradeIconBrush;
	float ScoreMultiplier;
	int OverriddenScore;
	EScoreDistributionType OverriddenScoreDistribution;
	float LootDropConeHalfAngle;
	float LootDropSpeed;
	float MinItemTossDist;
	float MaxItemTossDist;
	float ItemTossDirectionConeHalfAngle;
	EFortHotSpotSlot HotspotType;
	EFortPartialPathUsage PartialPathUsage;
	class UClass* PlayerManager;
	struct FString DefenderItemInstanceId;
	struct FName DefenderSquadId;
	float DefenderPlacedTime;
	float RecentlySeenInterval;
	struct Rotator CurrentAIRotationRate;
	float MoveSoundStimulusBroadcastInterval;
	float MoveSoundStimulusMaxRange;
	bool bGenerateMoveSoundInAllMovementModes;
	class UClass* WeaponCollisionComponent;
	class UClass* Inventory;
	TArray<class UClass*> NearbyPickups;
	Unknown UnreachablePickups;
	TArray<struct FortAIAppearanceOverrideEntry> AppearanceOverrideEntries;
	int AppearanceOverrideEntryIndex;
	struct Vector SpawnLocation;
	struct Rotator SpawnRotation;
	Unknown SleepingFloor;
	struct FName PelvisBoneName;
	struct FName HeadBoneName;
	float MinimapIndicatorUpdateFrequency;
	float MiniMapViewableDistance;
	float DistanceToPlayerManagerToShowHealthBar;
	float DistanceToOtherPlayersToShowHealthBar;
	class UClass* AttributesSet;
	class UClass* CharacterAttrSet;
	class UClass* WeaponAttrSet;
	class UClass* ImpactPhysicalSurfaceSounds;
	class UClass* ImpactPhysicalSurfaceEffects;
	struct ScalableFloat AthenaRVOWeightOverride;
	class UClass* MinimapIndicator;
	struct Vector2D MinimapScale;
	TArray<class UClass*> DefaultGameplayAbilitySets;
	TArray<class UClass*> SpawnInheritedCharacterAbilitySets;
	TArray<class UClass*> SpawnModifierDefinitions;
	class UClass* AIPawnAbilitySystemComponent;
	struct GameplayTagContainer WallAttackGameplayAbilityTags;
	struct GameplayTagContainer WallRangedAttackGameplayAbilityTags;
	struct GameplayTagContainer CeilingAttackGameplayAbilityTags;
	struct GameplayTagContainer FloorAttackGameplayAbilityTags;
	TArray<struct GameplayTagContainer> FailedAbilityQueryTags;
	class UClass* CurrentAimTarget;
	class UClass* NavObstacleComponent;
	float BuildingHitMaxDistanceToPlayer;
	float BuildingHitMaxDistanceToHitLocation;
	float HeadHeightPercent;
	struct MarkedActorDisplayInfo MarkerDisplay;
	bool bCanBeMarked;
	class UClass* DefenderItem;
	class UClass* TetheredFollower;
	class UClass* TetheredCamera;
	class UClass* TetheredTargetingCamera;
	bool bIsTetheredBoosting;
	float TetherBoostMultiplier;
	float TetherJumpServerCorrectionIgnoreTime;
	float TetherJumpLastTime;
	class UClass* TetherBoundsXYSplineClass;
	class UClass* TetherBoundsXYSplineComponent;
	struct FScriptMulticastDelegate OnUpdateFromVehicleInput;
	class UClass* CustomizationsToLoad;
	bool bCanUnloadCustomization;
	class UClass* UsedCustomization;
	struct FScriptMulticastDelegate OnCustomizationsLoadedEvent;
	struct FScriptMulticastDelegate OnCustomizationsUnloadedEvent;
	class UClass* AIAssetLoader;
	float UpdateMovementSoundIndicatorFrequency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIBuddy : public AFortAIPawn
{
public:
	class UClass* ConsumableItem;
	struct ScalableFloat ConsumableItemCount;
	class UClass* DrainPawn;
	class UClass* DrainItem;
	struct ScalableFloat DrainItemCount;
	struct ScalableFloat DrainItemTick;
	TArray<struct FortBuddyTagListener> TagListeners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIComponent_Voice : public UActorComponent
{
public:
	class UClass* VoiceSoundBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDataProvider_Ability : public UAIDataProvider
{
public:
	struct GameplayTagContainer AbilityTag;
	struct GameplayTagContainer AbilityBehaviorDistanceTag;
	float BehaviorDistance;
	float MaxTargetSelectionRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDataProvider_AIDirector : public UAIDataProvider
{
public:
	float AIRelevantDistanceToPlayer;
	float EncounterRelevantDistanceToPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDataProvider_FloatCurveOverGameDifficulty : public UAIDataProvider
{
public:
	struct ScalableFloat ScalableFloat;
	float FloatValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDataProvider_GoalProviderAbility : public UFortAIDataProvider_Ability
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDataProvider_Pawn : public UAIDataProvider
{
public:
	float SightRadius;
	float HearingRadius;
	float ViewLocationOffsetFromGround;
	float MaxStepHeight;
	struct Vector TetheredBoxCenterLocation;
	float TetheredBoxWidth;
	float TetheredBoxHeight;
	float TetheredBoxEQSGridSize;
	float TetheredBoxEQSSpaceBetween;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDirectorLODAIConfig : public UObject
{
public:
	struct ScalableFloat SingleAIUnitCost;
	struct ScalableFloat Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIDirectorDataManager : public AActor
{
public:
	class UClass* OwnerObject;
	TArray<struct AIDirectorEventData> EventsToTrack;
	TArray<struct FortAIDirectorFactorData> FactorsToTrack;
	TArray<EFortAIDirectorFactor> FactorsBeingTracked;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIDirectorDataTrackingSettings : public UDataAsset
{
public:
	class UClass* PlayerDataManager;
	class UClass* EncounterDataManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIDirectorEventManager : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIEncounterInfo : public UObject
{
public:
	class UClass* SpawnGroupProgressionInfo;
	struct FortSpawnPointsPercentageCurveSequenceInstanceInfo SpawnPointsPercentageCurveSequence;
	struct FortIntensityCurveSequenceInstanceInfo IntensityCurveSequence;
	float BurstSpawnPointsPercentage;
	float SpawnPointsMultiplier;
	bool bUseBreathers;
	struct CurveTableRowHandle LowPlayerPerformanceBreatherTimeSecondsCurve;
	struct CurveTableRowHandle NormalPlayerPerformanceBreatherTimeSecondsCurve;
	struct CurveTableRowHandle HighPlayerPerformanceBreatherTimeSecondsCurve;
	float EncounterTimeSeconds;
	TArray<struct UtilityTypeFloatPair> LockedUtilityValues;
	int NumFreeUtilities;
	float UtilityAdjustmentPeriodSeconds;
	float MinSpawnDistance;
	float MaxSpawnDistance;
	int NumDirections;
	bool bChangeDirectionsOnRest;
	float SpawnPointsPercentageLimit;
	int PawnNumberLimit;
	struct FortEncounterPawnNumberCaps PawnNumberCaps;
	float SpawningIntervalSeconds;
	float PreSpawnRequeryTime;
	struct FortEncounterSettingsFixedPace EncounterSettingsFixed;
	struct FScriptMulticastDelegate OnEncounterSpawnDirectionsChosen;
	float NextRiftReplacementTime;
	float NextSpawningTime;
	struct FortAIEncounterSpawnGroupCapsProfile EncounterSpawnGroupCapsProfile;
	TArray<struct FortAIEncounterSpawnGroupCapsCategory> AdditionalSpawnGroupCapsCategories;
	struct FortAIEncounterSpawnPointsProfile EncounterSpawnPointsProfile;
	TArray<struct FortAISpawnGroupUpgradeData> AvailableUpgrades;
	TArray<struct CurveTableRowHandle> PawnDifficultyLevelModifiers;
	TArray<struct FortAIBaseLootDropRow> BaseLootDropRows;
	TArray<struct FortAILootDropModifierRow> LootDropModifierRows;
	bool bRequiresReinitializationFromProfile;
	struct CurveTableRowHandle DesiredHostilityCurve;
	class UClass* IntensitySequenceProgression;
	float AliveMultiplier;
	EFortEncounterSpawnLimitType SpawnLimitType;
	int SpawnLimit;
	int PawnNumberLimitProgress;
	int SpawnPointsLimitProgress;
	bool bSpawnLimitReached;
	bool bHasSpawnedAllBurstSpawnAI;
	bool bOverrideAliveCounts;
	int MinAliveOverride;
	int MaxAliveOverride;
	float HostilityThreshold;
	float PeakTimeSeconds;
	float BreatherTimeSeconds;
	float MaxRampTimeSeconds;
	float MinTimeBetweenBreathesSeconds;
	float MaxFadeTimeSeconds;
	float FadeEndIntensity;
	float FadeEndRemainingSpawnPointsPercentage;
	float CompletionPercentageToDisableBreathers;
	struct FScriptMulticastDelegate OnEncounterAllEnemiesKilled;
	struct FScriptMulticastDelegate OnEncounterEnemySpawned;
	struct FScriptMulticastDelegate OnEncounterEnemySpawnFailed;
	struct FScriptMulticastDelegate OnEncounterAllBurstEnemiesSpawned;
	struct FScriptMulticastDelegate OnEncounterCompleted;
	struct FScriptMulticastDelegate OnEncounterPawnDied;
	struct FScriptMulticastDelegate OnEncounterSpawnedFinalEnemy;
	struct FScriptMulticastDelegate OnEncounterRiftSpawned;
	struct FScriptMulticastDelegate OnBuildingRiftBlockedShouldDie;
	bool bDisplayThreatVisuals;
	float BaseDesiredUtilities;
	struct GameplayTagContainer UtilitiesRequiredTags;
	struct GameplayTagContainer InjectedTagForUtilityCheck;
	float MaxLargeSpawnGroupDiscountInterval;
	float MaxSelectionToSpawningDelay;
	TArray<struct UtilityTypeFloatPair> CurrentDesiredUtilities;
	float UtilityRecentSelectionPenalties;
	float UtilityEffectivenessMeasurements;
	struct CurveTableRowHandle UtilityEffectivenessMultiplierCurve;
	float UtilityEffectivenessInfluenceCap;
	TArray<struct UtilityTypeFloatPair> CurrentTopUtilityPercentages;
	TArray<EFortAIUtility> UsedTopUtilities;
	TArray<EFortAIUtility> CurrentlySelectedFreeUtilities;
	int NumUtilitiesConsidered;
	float ReactivityPercentage;
	bool bAdjustUtilitiesDuringRest;
	bool bDespawnAIsDuringRest;
	float LastPlayerCombatFactorUpdateTime;
	float LastUtilityAdjustTime;
	float LastSpawnPointAdjustmentTime;
	float LastLargeGroupSpawnTime;
	TArray<struct AIEncounterSpawnGroupWeights> EnemySpawnData;
	struct FortAIEncounterPIDController EncounterPIDController;
	int CurrentSpawnPointsCap;
	int CurrentSpawnPointsUsed;
	int FailSafeMinSpawnPoints;
	TArray<struct SpawnGroupInstanceInfo> ActiveSpawnGroups;
	float EncounterEngagementDistance;
	float MinRelevantBuildingDamagedDistance;
	float MaxRelevantBuildingDamagedDistance;
	class UClass* CurrentGroupSpawnPoint;
	EFortEncounterState EncounterState;
	EFortEncounterPacingState PacingState;
	float LastPacingStateTransitionTime;
	struct FortAIEncounterWaveProgressEstimation WaveProgressEstimate;
	float DesiredDifficultyLevel;
	float DifficultyLevelOverride;
	class UClass* MyAIDirector;
	TArray<struct FortGoalActorEncounterDataManagerPair> DataManagers;
	class UClass* TargetObjective;
	bool bOnlyActiveAtNight;
	int NumRiftsToUse;
	int MinRiftsToUse;
	int NumRiftsUsed;
	struct FortEncounterSettings EncounterSettings;
	float EncounterStartTime;
	float HostilityCurveStartTime;
	struct EncounterEnvironmentQueryInfo DefaultEnvironmentQueryInfo;
	struct EncounterEnvironmentQueryInfo FallbackEnvironmentQueryInfo;
	struct EncounterEnvironmentQueryInfo OverrideEnvironmentQueryInfo;
	struct EncounterEnvironmentQueryInfo CurrentEnvironmentQueryInfo;
	bool bNukeWavesAtDaybreak;
	bool bNukeWavesAtEncounterEnd;
	bool bNukeWavesAtEncounterDeactivation;
	int ActiveEnemyCap;
	float CurrentHostilityLevel;
	struct FScriptMulticastDelegate OnEncounterRampStarted;
	struct FScriptMulticastDelegate OnEncounterPeakStarted;
	struct FScriptMulticastDelegate OnEncounterFadeStarted;
	struct FScriptMulticastDelegate OnEncounterRestStarted;
	struct FScriptMulticastDelegate OnEncounterCombatParticipation;
	struct FScriptMulticastDelegate OnEncounterOptionsChanged;
	class UClass* RiftClassTemplate;
	Unknown ExternalAISpawners;
	struct FortAIEncounterQueryData EncounterQueryData;
	class UClass* RiftManager;
	struct FString AssociatedMissionName;
	EFortMissionType AssociatedMissionType;
	bool bCanBeActive;
	TArray<class UClass*> EncounterAssignments;
	class UClass* DefaultEncounterAssignmentSettings;
	int MaxActiveAlive;
	int MaxSpawnPointsUsed;
	class UClass* OverrideSpawnPointsCurve;
	bool bSendFullAnalyticsReport;
	bool bUseAILifespans;
	bool bTrackCombatParticipation;
	struct GameplayTagContainer ModifierTags;
	TArray<struct FortAIEncounterTimedModifierTags> TimedModifierTags;
	struct GameplayTagContainer GameContextTags;
	class UClass* AILevelMutator;
	TArray<class UClass*> EncounterModifierTagsMutators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIEncounterInfoOwnerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIEncounterRiftManager : public UObject
{
public:
	class UClass* MyEncounter;
	class UClass* AIDirector;
	struct FortAIEncounterSpawnArea CurrentSpawnArea;
	struct FortAIEncounterSpawnArea FutureSpawnArea;
	float UpdateIntervalTimeSeconds;
	int NumRiftsToUse;
	int MinRiftsToUse;
	struct FortEncounterSettings EncounterSettings;
	float ExtraSpawnLocationPercentage;
	struct EncounterEnvironmentQueryInfo CurrentEnvironmentQueryInfo;
	struct EncounterEnvironmentQueryInfo FallbackEnvironmentQueryInfo;
	struct FortAIEncounterQueryDirectionTracker EncounterQueryDirectionTracker;
	class UClass* RiftClassTemplate;
	float LastObjectiveBatchPathCostUpdateTime;
	float LastPlayerBatchPathCostUpdateTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIEncounterSequence : public UObject
{
public:
	struct FortGeneratedEncounterSequence GeneratedEncounterSequence;
	int CurrentEncounterIndexInSequence;
	class UClass* CurrentEncounter;
	class UClass* AssociatedAIDirector;
	class UClass* AssociatedMission;
	TArray<class UClass*> TargetActors;
	class UClass* AssignmentSettings;
	struct EncounterEnvironmentQueryInfo OverrideEnvironmentQueryInfo;
	class UClass* OptionalQueryActor;
	struct GameplayTagContainer InjectedTags;
	struct FortEncounterSettings EncounterSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIEncounterTargetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAIGoalComponent : public AIGoalComponent
{
public:
	Unknown AssignmentUpdatePeriods;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIGoalManager : public AActor
{
public:
	TArray<class UClass*> WorldAssignments;
	TArray<class UClass*> WorldEnemyAssignments;
	class UClass* DefaultAttackPlayersAssignment;
	TArray<class UClass*> CombinedQueries;
	class UClass* DefaultEncounterAssignmentSettings;
	class UClass* DefaultEnemyAssignmentSettings;
	TArray<struct PawnGoalSelectionTableEntry> PawnGoalSelectionTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIGoalProvider : public UObject
{
public:
	class UClass* World;
	class UClass* AssignmentOwner;
	class UClass* EncounterInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIGoalProvider_EnvQuery : public UFortAIGoalProvider
{
public:
	class UClass* GoalQuery;
	float AutomaticUpdatePeriodInSeconds;
	struct FortAIAssignmentIdentifier SpecificAssignmentContext;
	struct TSoftClassPtr<UObject> AIPawnContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIEncounterGoalSelectionTable : public UDataAsset
{
public:
	TArray<struct EncounterGoalSelectionTableEntry> EncounterGoalSelectionCriteria;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIHotSpot : public AAIHotSpot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIHotSpot_Building : public AFortAIHotSpot
{
public:
	class UClass* ExtraTypeConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIHotSpot_FakeBuilding : public AFortAIHotSpot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIHotSpot_Shooting : public AFortAIHotSpot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIHotSpotManager : public UAIHotSpotManagerProxy
{
public:
	struct TSoftClassPtr<UObject> FallbackHotspotConfig;
	TArray<struct AutoAcquireSlot> AutoAcquireSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIHotSpotSlot : public UAIHotSpotSlot
{
public:
	EFortHotSpotSlot SlotType;
	bool bHasProjectedLocation;
	bool bProjectedOnLowArea;
	bool bIsAutoGenerated;
	bool bCanDuplicateOnProjection;
	bool bCanProjectUp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIHotSpotSlotGenerator_FromConfig : public UAIHotSpotSlotGenerator
{
public:
	class UClass* BuildingConfig;
	struct Vector Offset;
	bool bMirrorX;
	bool bMirrorY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator_OnBoundingBox
{
public:
	float DistanceForRangedSlots;
	float DistanceForHugeSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIHotSpotSlotGenerator_RampTrace : public UAIHotSpotSlotGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAimAssist2D_TargetManager : public UGameInstanceSubsystem
{
public:
	Unknown TargetMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIProxyActor : public AActor
{
public:
	EPhysicalSurface PrimaryPhysicalSurface;
	class UClass* HealthSet;
	class UClass* DamageSet;
	class UClass* MovementSet;
	class UClass* AbilitySystemComponent;
	EFortBaseWeaponDamage BaseWeaponDamageResponseType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAIMobileProxyActor : public AFortAIProxyActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIObjectiveInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIPawnCustomizationDefinition : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> SkeletalMesh;
	TArray<struct FortAIPawnMaterialDefinition> OverrideMaterials;
	struct TSoftClassPtr<UObject> AnimationBP;
	TArray<class UClass*> CharacterParts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIPawnVariant : public UObject
{
public:
	TArray<class UClass*> PawnClasses;
	TArray<struct FortAIPawnVariantDefinition> PawnVariantDefinitions;
	int MinPlayersToSpawnVariant;
	struct DataTableRowHandle SpawnPointValueHandle;
	int CachedSpawnPointValue;
	float EncounterExpectedLifespan;
	int VersionNum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIPerceptionSystem : public UAIPerceptionSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAircraft : public AActor
{
public:
	int JumpFlashCount;
	class UClass* CameraModeClass;
	struct Rotator CameraInitialRotation;
	struct Vector ExitLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIRootAssignmentProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAISpawnerActorBase : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAISpawnerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAISpawnGroup : public UPrimaryDataAsset
{
public:
	float EnemyUtilities;
	TArray<struct SpawnGroupEnemy> EnemiesToSpawn;
	bool bIsPrototype;
	bool bIsValidForEnemySpawners;
	bool bIsLargeSpawnGroup;
	float MaxDiscountRatio;
	bool bUseWeightSystem;
	struct ScalableFloat Weight;
	struct ScalableFloat MinNumber;
	struct ScalableFloat MaxNumber;
	struct CurveTableRowHandle MaxGroupCategoryPopulationDensityCurve;
	TArray<struct FortSpawnGroupEncounterTypeData> EncounterTypeData;
	struct GameplayTagContainer SpawnGroupGameplayTags;
	struct GameplayTagQuery RequiredTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAISpawnGroupCapsCategorySet : public UObject
{
public:
	TArray<struct FortAIEncounterSpawnGroupCapsCategory> SpawnGroupCapsCategories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAISpawnGroupProgressionInfo : public UDataAsset
{
public:
	TArray<struct SpawnGroupProgression> SpawnGroups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAISpawnGroupUpgrade : public UObject
{
public:
	struct GameplayTagContainer UpgradeTags;
	struct GameplayTagQuery GroupRequiredTagQuery;
	TArray<struct FortAIPawnUpgrade> BasePawnUpgrades;
	struct FName AdditionalModifiersLootTierGroup;
	bool bInvalidForEnemySpawners;
	float SpawnGroupDiscountPercentage;
	struct FortAISpawnGroupUpgradeUIData UIData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAISpawnGroupUpgradeProbabilities : public UObject
{
public:
	bool bIsGuaranteedUpgrade;
	TArray<struct FortAIPawnUpgradeProbability> UpgradeProbabilities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_AdjustToSlot : public AITask
{
public:
	struct Vector SlotLocation;
	struct Vector SlotDirection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_ExecuteAbility : public AITask_ExecuteAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_FuzzyQueue : public AITask_MoveTo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_NavmeshWait : public AITask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_RotateToFace : public AITask
{
public:
	class UClass* FocusTarget;
	struct Vector FocalPoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAITask_StepAside : public FortAITask_Move
{
public:
	class UClass* GoalActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAITetheringBoxBoundsInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAlterableItem : public UFortAccountItem
{
public:
	TArray<struct FString> alterations;
	TArray<class UClass*> AlterationInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterableItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAlterationItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationItemDefinition : public FortAccountItemDefinition
{
public:
	EFortAlteration AlterationType;
	struct FortCosmeticModification DefaultCosmetic;
	TArray<struct FortConditionalCosmeticModification> ConditionalCosmetics;
	TArray<struct FortConditionalIncludeTags> AdditionalGameplayTags;
	struct TSoftClassPtr<UObject> AlterationAbilitySet;
	TArray<struct FortItemQuantityPair> AdditionalRespecCosts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAlterationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAmbientOneShotInstance : public UObject
{
public:
	struct FName AssociatedTag;
	bool bActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAmbientAudioController : public UActorComponent
{
public:
	class UClass* DefaultAudioBank;
	struct GameplayTag RequiredTagSubstr;
	class UClass* PlayerController;
	float PauseFadeTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAmmoItemDefinition : public FortWorldItemDefinition
{
public:
	struct SlateBrush ClipIconBrush;
	struct ScalableFloat bIsConsumed;
	bool bTriggersFeedbackLines;
	struct ScalableFloat RegenCooldown;
	struct FortMultiSizeBrush AmmoIconBrush;
	struct TSoftClassPtr<UObject> HUDAmmoSmallPreviewImage;
	class UClass* WorldItemClassOverride;
	class UClass* ItemOptions;
	struct FortCreativeTagsHelper CreativeTagsHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnalyticsClientEngagementsManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnalyticsConfig : public UObject
{
public:
	TArray<struct FString> AltDomains;
	struct FString UrlEndpoint;
	TArray<struct FortAnalyticsEventBlacklistEntry> EventBlacklist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnalyticsControllerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnalyticsData : public UDataAsset
{
public:
	struct GameplayTagContainer DownedOrFinishTagWhitelist;
	TArray<struct GameplayTag> WhiteListTags;
	struct GameplayTag BanhammerTag;
	struct GameplayTag RemovedFromGameTag;
	struct GameplayTag LoggedOutTag;
	struct ScalableFloat PlaylistAnalyticPercentBotWriteAllEvents;
	struct ScalableFloat PlaylistAnalyticPercentBotEndPhase;
	struct ScalableFloat PlaylistAnalyticPercentPCEndPhase;
	struct ScalableFloat PlaylistAnalyticPercentBotMatchStats;
	struct ScalableFloat PlaylistAnalyticPercentBotsWonMatch;
	struct ScalableFloat PlaylistAnalyticPercentBotStartMatch;
	struct ScalableFloat PlaylistAnalyticPercentBotStartZone;
	struct ScalableFloat PlaylistAnalyticPercentBotDeath;
	struct ScalableFloat PlaylistAnalyticPercentPCDeath;
	struct ScalableFloat PlaylistAnalyticPercentPlayerInterrogated;
	struct ScalableFloat PlaylistAnalyticPercentZero;
	struct ScalableFloat PlaylistAnalyticPercentOneHundred;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnalyticsInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnalyticsItemExclusions : public UDataAsset
{
public:
	Unknown ExcludedRarities;
	Unknown ExcludedItemTypes;
	struct GameplayTagContainer ExcludedItemTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCapMipsExperimentConfig : public UObject
{
public:
	TArray<struct CapMipsTextureGroup> TextureLODGroups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimationBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInputEvent : public UObject
{
public:
	struct FName EventName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInputEvent_Bool : public UFortAnimInputEvent
{
public:
	bool bValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInputEvent_Float : public UFortAnimInputEvent
{
public:
	float Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInputEvent_Vector : public UFortAnimInputEvent
{
public:
	struct Vector Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInputEvent_AnimClass : public UFortAnimInputEvent
{
public:
	class UClass* Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimInputBlueprintLibrary : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_StartGliderSwaps : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_StopGliderSwaps : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_AudioComponentParameters : public UAnimNotify
{
public:
	EFortNotifyAudioParamsStoreSource Source;
	struct FName DataStoreName;
	struct FName ParameterGroupName;
	TArray<struct FortBasicAudioParam> AudioParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_AudioComponentParameters : public UAnimNotifyState
{
public:
	EFortNotifyAudioParamsStoreSource Source;
	struct FName DataStoreName;
	TArray<struct FortBasicAudioParam> AudioParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_ConditionalSwapEquippedCosmetic : public UAnimNotify
{
public:
	bool bCheckBaseLoadout;
	TArray<struct FortCosmeticDependentSwapData> Swaps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_CycleCharacterVariants : public UAnimNotify
{
public:
	TArray<struct FortCosmeticVariantSwapData> TransitionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_GameplayCue : public UAnimNotify
{
public:
	struct GameplayCueTag Cue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_GameplayCueState : public UAnimNotifyState
{
public:
	struct GameplayCueTag Cue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_GameplayTag : public UAnimNotify
{
public:
	struct GameplayTag NotifyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_GameplayTag : public UAnimNotifyState
{
public:
	struct GameplayTag NotifyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_GenericSoundIndicator : public UAnimNotify
{
public:
	struct TSoftClassPtr<UObject> BaseSound;
	float MaxAudibleDistance;
	EFortSoundIndicatorTypes IndicatorType;
	bool bIgnoreForLocalPlayer;
	TArray<EFortTeamAffiliation> ShowAffiliations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_HeldObjectEquip : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_MeleeAnimTrails_On : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_MeleeAnimTrails_Off : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_MeleeComboBlocked : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_MeleeImpactPreview : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayConsumeSound : public UAnimNotify_PlaySound
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayEmojiItem : public UAnimNotify
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayEmoteMusic : public UAnimNotify_PlaySound
{
public:
	class UClass* Sound3P;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayFeedbackLine : public UAnimNotify
{
public:
	struct FortFeedbackHandle Event;
	bool bAllowReplication;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNotify_PlayNiagaraEffectWithBackup : public AnimNotify_PlayNiagaraEffect
{
public:
	EFXType Type;
	class UClass* BackupTemplate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayParticleConditional : public UAnimNotify_PlayParticleEffect
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayPetSound : public UAnimNotify
{
public:
	struct GameplayTag PetSoundTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayReloadFX : public UAnimNotify
{
public:
	EFortReloadFXState ReloadStage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlaySoundConditional : public UAnimNotify_PlaySound
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlaySoundLocalOnly : public UAnimNotify_PlaySound
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlaySwimmingSound : public UAnimNotify
{
public:
	EFortSwimmingAudioType SoundType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PlayWindParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_RemoveCosmeticSwap : public UAnimNotify
{
public:
	TArray<struct Guid> SwapIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_SetRelaxedState : public UAnimNotify
{
public:
	EAnimRelaxedState NewRelaxedState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_SwapActiveCharacterVariant : public UAnimNotify
{
public:
	struct McpVariantChannelInfo VariantToSwapTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_SwapEquippedItem : public UAnimNotify
{
public:
	struct Guid SwapId;
	TArray<struct FortSwapItemAndVariantData> SwapData;
	EFortAppliedSwapItemAndVariantState ForcedSwapState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_TriggerGameplayAbility : public UAnimNotify
{
public:
	struct GameplayTag ApplicationTag;
	struct FName MontageSectionIfBlocked;
	bool bSetNextSectionIfBlocked;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_AbilityDecisionWindow : public UAnimNotifyState
{
public:
	struct FortMontageInputAction PrimaryInput;
	struct FortMontageInputAction SecondaryInput;
	struct FName DefaultNextSection;
	float PrimaryInputStrikeAngle;
	float SecondaryInputStrikeAngle;
	int ComboCounter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_AllowBlockedActions : public UAnimNotifyState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_ConsumeSound : public UAnimNotifyState
{
public:
	class UClass* ConsumeUseSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_CycleCharacterVariants : public UAnimNotifyState
{
public:
	TArray<struct FortCosmeticVariantSwapData> TransitionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_DeferredCustomNotify : public UAnimNotifyState
{
public:
	struct FName NotifyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_DualWieldHandState : public UAnimNotifyState
{
public:
	EFortDualWieldSwingState EnterWeaponState;
	EFortDualWieldSwingState ExitWeaponState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_EmoteProximityGroup : public UAnimNotifyState
{
public:
	struct FName GroupName;
	float GroupMaxRange;
	int GroupMaxSize;
	class UClass* SoundOnEnterGroup;
	class UClass* SoundOnExitGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_EmoteRetargeting : public UAnimNotifyState
{
public:
	TArray<struct EmoteRetargetingNotifyParameters> EmoteParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_EmoteSound : public UAnimNotifyState
{
public:
	class UClass* EmoteSound1P;
	class UClass* EmoteSound3P;
	bool bPrimarySound;
	struct FName SoundName;
	float FadeOutTime;
	bool CopyrightedAudio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_HideBodyPartGrouping : public UAnimNotifyState
{
public:
	EBodyPartVisibilityGrouping BodyPartVisibilityGrouping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_MissingCosmeticAnimOverride : public UAnimNotifyState
{
public:
	class UClass* RequiredAnimInstanceClass;
	EFortCustomPartType PartTypeToCheck;
	class UClass* UpperBodyOverride;
	class UClass* LowerBodyOverride;
	class UClass* LowerBodyInMotionOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_NotifyParts : public UAnimNotifyState
{
public:
	struct FName Context;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_OverrideWeaponAnimSet : public UAnimNotifyState
{
public:
	class UClass* WeaponOverrideAnimSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_PerformNativeAction : public UAnimNotify
{
public:
	struct GameplayTag NativeAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_PerformNativeAction : public UAnimNotifyState
{
public:
	struct GameplayTag NativeAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_PetSound : public UAnimNotifyState
{
public:
	struct GameplayTag PetSoundTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_PlayPetMontage : public UAnimNotifyState
{
public:
	class UClass* PetDance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_PlaySyncedMontage : public UAnimNotifyState
{
public:
	TArray<struct SyncedMontageParams> MontageParamsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_PlaySyncedPickaxeMontage : public UAnimNotifyState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_RandomizeNextSection : public UAnimNotifyState
{
public:
	int MinLoopsBeforeChange;
	int MaxLoopsBeforeChange;
	TArray<struct FName> SectionsToJumpTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_RestartTraversalEmote : public UAnimNotifyState
{
public:
	class UClass* InMotionMontage;
	float BlendOutSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_RootMotionInterrupt : public UAnimNotifyState
{
public:
	EMontageInterrupt MontageInterrupt;
	bool bAllowMoveInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_SpawnProp : public UAnimNotifyState
{
public:
	struct FName SocketName;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	struct Vector Scale;
	class UClass* ActorProp;
	class UClass* SkeletalMeshProp;
	class UClass* SkeletalMeshPropAnimation;
	class UClass* SkeletalMeshPropAnimClass;
	bool bInheritScale;
	bool bAbsoluteScale;
	bool bUseAttachParentBound;
	bool bPropAnimLooping;
	bool bSyncMontage;
	bool bPrestreamTextures;
	float PrestreamTextureDuration;
	class UClass* StaticMeshProp;
	TArray<struct EmotePropMaterialScalarParam> PropMaterialScalarParams;
	int PropId;
	struct TSoftClassPtr<UObject> VariantsCosmeticItemDef;
	bool bApplyVariantsToSpawnedItems;
	bool bTrackComponentPropInGC;
	Unknown PersistComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_SpawnArrow : public UFortAnimNotifyState_SpawnProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_SpawnEmoteEmitter : public UAnimNotifyState
{
public:
	struct FName SocketName;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	struct Vector Scale;
	class UClass* EmitterTemplate;
	int EmitterId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_SpawnPickaxe : public UFortAnimNotifyState_SpawnProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_StopMeleeAnimTrailsOnEnd : public UAnimNotifyState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_SwapEquippedItem : public UAnimNotifyState
{
public:
	struct Guid SwapId;
	TArray<struct FortSwapItemAndVariantData> SwapData;
	EFortAppliedSwapItemAndVariantState ForcedSwapState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNotifyState_TimedNiagaraEffectWithBackup : public AnimNotifyState_TimedNiagaraEffect
{
public:
	EFXType Type;
	class UClass* BackupTemplate;
	class UClass* CosmeticDefContainingVariants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimNotifyState_TimedNiagaraEffectVariant : public AnimNotifyState_TimedNiagaraEffect
{
public:
	class UClass* CosmeticDefContainingVariants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_ToySpawn : public UAnimNotifyState
{
public:
	struct FName SocketName;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	int PropId;
	bool bRepositionOnSpawn;
	struct Transform ComponentSpaceSpawnPoint;
	bool bRepositionOnLaunch;
	struct Transform ComponentSpaceLaunchPoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimSet : public UDataAsset
{
public:
	struct DirectoryPath SourceRootPath;
	TArray<struct DirectoryPath> TargetRootPathList;
	class UClass* FallbackSequence;
	TArray<struct FName> UniqueInSourceAssets;
	TArray<struct FName> UniqueInTargetAssets;
	TArray<struct FortAnimSetRandomAnimation> RandomAnimations;
	Unknown AssetRemapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnimSharingStateInstance : public AnimSharingStateInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimationSharingStateProcessor : public UAnimationSharingStateProcessor
{
public:
	float RunningVelocityThreshold;
	float WalkingVelocityThreshold;
	float SprintingVelocityThreshold;
	float IdleVelocityThreshold;
	float FallingZVelocityThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAntelopeVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* AntelopeVehicle;
	float VehicleSpeed;
	bool bForwardSpeedIsNearlyZero;
	bool bForwardSpeedIsGreaterThanOne;
	bool bReverseSpeedIsGreaterThanOne;
	bool bSpeedIsGreaterThanFiveAndPlayerHitSpace;
	bool bIsBraking;
	bool bIsBoosting;
	bool bPlayerHitSpaceBar;
	float ChargingValue;
	float ChargingMax;
	float ChargingMin;
	float ChargingInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAntelopeVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float BounceCrouchTime;
	float BounceCrouchTimeDeadzone;
	float BounceRecoilTime;
	float BounceForcePerMass;
	float PassengerLeanMagnitude;
	float PassengerLeanMinMagnitude;
	float PassengerLeanLeftRightInterpolationPerSecond;
	float PassengerLeanUpInterpolationPerSecond;
	float PassengerLeanDownInterpolationPerSecond;
	float PassengerLeanResetInterpolationPerSecond;
	float PassengerLeanDeadzone;
	float NaturalSlideMinAngle;
	float BoostAccumulationRate;
	float BoostExpenseRate;
	float BoostPassiveExpenseRate;
	float BoostTopSpeedMultiplier;
	float BoostTopSpeedInAirMultiplier;
	float BoostSteeringMultiplier;
	float BoostCooldown;
	float BoostSteeringMultiplierRampTime;
	float BoostSlowExtraStrength;
	float BoostTopSpeedForceMultiplier;
	float VehicleBoostFrontFrictionMultiplier;
	float VehicleBoostRearFrictionMultiplier;
	float BoostMinPushForce;
	float BoostSmashForgivenessDuration;
	float CameraShakeAmplitudeMin;
	float CameraShakeAmplitudeMax;
	float SpringFudgeFactor;
	float CameraShakeNormalizedSpeed;
	float CameraShakeSpeedCurvePow;
	float BoostingCameraShakeAmount;
	float BoostCameraShakeFrequency;
	float SmoothedSpringCompressionMin;
	float SmoothedSpringCompressionMax;
	float ScreenShakeFrequencyMin;
	float ScreenShakeFrequencyMax;
	float PassengerCameraShakeMultiplier;
	float ScreenShakeYawFrequencyMultiplier;
	struct LinearColor WheelSlideBoostColorWhenNotPowerSliding;
	float TreadWidth;
	float RumbleMultiplier;
	float SparksRumbleMultiplier;
	float BoostCameraOffset;
	float ADSCameraDistance;
	float PassengerCameraOffset;
	float ADSInterpSpeed;
	float MinBoostTime;
	float TractionVelocityDelta;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAppActivationSoundMixManager : public UObject
{
public:
	struct FortAppActivationSoundMixPair InAppSoundsAllowedMix;
	struct FortAppActivationSoundMixPair AppActiveSoundMix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayEffectDeliveryActor : public AActor
{
public:
	struct FortGameplayEffectContainerSpec EffectContainerSpecToApplyOnTouch;
	bool bKillOnExplode;
	bool bSetHiddenOnKill;
	bool bKillOnMaxTargetsTouched;
	bool bSkipRecaptureSourceActorTagsOnTouch;
	struct FortGameplayEffectContainerSpec EffectContainerSpecToApplyOnExplode;
	TArray<struct FortGameplayEffectContainerSpec> AdditionalExplodeEffectContainers;
	float LifespanAfterKill;
	float TouchingActorsEffectApplicationUpdateTime;
	TArray<struct OverlapRestrictions> OverlapRestrictions;
	bool bIsBeingKilled;
	bool bHasExploded;
	bool bIgnoreInstigatorCollision;
	bool bIgnoreVehicleAndAttachedActors;
	bool bDisableClientOverlapEvents;
	bool bAddHitResultToTouchApplication;
	bool bExplosionTransformIgnoresRotation;
	bool bCanExplodeMultipleTimes;
	bool bRegisterForEndOverlaps;
	bool bSpawnNavAreaModifierOverTargetSelectionShape;
	class UClass* NavAreaClass;
	struct GameplayTag CurieIdentifier;
	class UClass* CollisionComponent;
	struct FortSpawnContext SpawnContext;
	bool bDoExplosionReentrancyGuard;
	TArray<class UClass*> InstigatorActorsAdded;
	struct GameplayTagContainer AnalyticsTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAreaOfEffectCloud : public AFortGameplayEffectDeliveryActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortArenaCamera : public CineCameraActor
{
public:
	bool bEnabled;
	struct GameplayTag CameraZone;
	class UClass* CameraComponentType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortArmoredInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHLODStreamingData : public UObject
{
public:
	Unknown WorldData;
	struct WorldHLODStreamingData GlobalData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAssetManager : public UAssetManager
{
public:
	Unknown GCPreventionPool;
	TArray<struct FName> DefaultBundleState;
	TArray<struct FName> PlatformBundleState;
	class UClass* FortReleaseVersionManager;
	class UClass* GameDataCommon;
	struct FString GameDataNameCommon;
	class UClass* GameDataCosmetics;
	struct FString GameDataNameCosmetics;
	class UClass* GameDataBR;
	struct FString GameDataNameBR;
	class UClass* GameDataSTW;
	struct FString FastCookTheaterPath;
	struct FString PerfMemTheaterPath;
	struct FString BROnlyTheaterPath;
	struct FString ActiveTheaterListPath;
	struct FString DanceRoyaleMapPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_AbandonSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* PlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_AuthorityMatchReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CosmeticAdaptiveStatWatcher : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnStatChanged;
	class UClass* MyPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CosmeticHitPointsStateWatcher : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnHitPointsChanged;
	class UClass* MyPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CurrentPlaylistReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CurrentQuestsReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnCurrentQuestsReady;
	class UClass* MyQuestManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_EnsureClientQuestLogin : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* QuestManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_GameStateReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_MakeTieredWaveEncounterSettings : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnComplete;
	struct TieredWaveSetData WaveData;
	struct FortEncounterSettings EncounterSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_MeshNetworkReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_OpenChoiceUI : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* PlayerController;
	struct ChoiceData ChoiceItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_PlayConversation : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnCanceled;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* Pawn;
	class UClass* ConversationToPlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_RejoinSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* PlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_SendQuestStatEvent : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnIgnored;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* QuestManager;
	struct DataTableRowHandle ObjectiveStat;
	struct GameplayTagContainer TargetTags;
	struct GameplayTagContainer SourceTags;
	struct GameplayTagContainer ContextTags;
	int Count;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_TeleportAndWaitForLevelStreaming : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnComplete;
	class UClass* PlayerPawn;
	struct Vector TeleportLocation;
	struct Rotator TeleportRotation;
	bool bIgnoreCollision;
	bool bIgnoreSupplementalKillVolumeSweep;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_TimeOfDayManagerReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_WaitForClientAnnouncement : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnAllClientsReady;
	struct FScriptMulticastDelegate OnCanceled;
	struct Guid AnnouncementID;
	struct TimerHandle CheckAllPlayersReadyTimerHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_WaitQuestProgressionEnabled : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnQuestProgressionEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAsyncActorDetectionComponent : public GameFrameworkComponent
{
public:
	struct FScriptMulticastDelegate OnDetectActor;
	ECollisionChannel CollisionChannel;
	TArray<class UClass*> ClassesToConsider;
	TArray<class UClass*> RecentlyDetectedActors;
	struct ScalableFloat MinimumSpeedToTrigger;
	float TraceLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthena_WaxToken : public AActor
{
public:
	class UClass* TokenMesh;
	class UClass* EntrySpline;
	class UClass* ExitSpline;
	class UClass* ReusedSpline;
	Unknown TravelTimeAtState;
	struct ScalableFloat TotalTravelTime;
	struct ScalableFloat DistanceStopInterpolationAt;
	class UClass* Target;
	int PayloadCount;
	EWaxTokenState CurrentState;
	float TimeInState;
	float InterpolationSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaSpawnerDataBase : public UObject
{
public:
	struct GameplayTagContainer DescriptorTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaActorSpawnerData : public UFortAthenaSpawnerDataBase
{
public:
	class UClass* ActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBot_EQSQueryContext_CurrentTarget : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotAimingDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	struct DigestedFocusSetting DefaultFocusSetting;
	TArray<struct DigestedFocusSetting> FocusSettings;
	struct LookAtDigestedSetting LookAtSettings;
	bool bAllowScanAroundWhileSwimming;
	float TrackingReactionTime;
	float TrackingInterpTime;
	float TrackingInterpTimeMultForGroundVehicles;
	float TrackingInterpTimeMultForFlyingVehicles;
	float MaxTrackingPredictionError;
	float MaxTrackingOffsetErrorMultiplier;
	float AdjustedTrackingOffsetErrorMultiplierAgainstAIs;
	float TrackingErrorUpdateInterval;
	float TrackingInAirVelocityThreshold;
	float TrackingInAirHeightDeltaThreshold;
	float TargetAcquisitionRate;
	float MaxDistanceEvaluationErrorRatio;
	float TargetingUpdateInterval;
	float TargetingUpdateIntervalMaxDeviation;
	float ReachLeashLimitToleranceDistance;
	bool bShootFloorTrapOnlyWhenHigherThanTrap;
	struct DigestedWeaponAccuracy NoWeaponAccuracy;
	TArray<struct DigestedWeaponAccuracyCategory> WeaponAccuracies;
	TArray<struct DigestedTargetBasedAccuracyCategory> DigestedTargetBasedAccuracies;
	struct DigestedTrackingOffsetModifiers TrackingOffsetModifiers;
	class UClass* CachedWeaponUsedToCalculateAccuracy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotAimingSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct FocusSetting DefaultFocusSetting;
	TArray<struct FocusSetting> FocusSettings;
	struct LookAtSetting LookAtSettings;
	struct ScalableFloat AllowScanAroundWhileSwimming;
	struct ScalableFloat TrackingReactionTime;
	struct ScalableFloat TrackingInterpTime;
	struct ScalableFloat TrackingInterpTimeMultForGroundVehicles;
	struct ScalableFloat TrackingInterpTimeMultForFlyingVehicles;
	struct ScalableFloat MaxTrackingPredictionError;
	struct ScalableFloat MaxTrackingOffsetErrorMultiplier;
	struct ScalableFloat AdjustedTrackingOffsetErrorMultiplierAgainstAIs;
	struct ScalableFloat TrackingErrorUpdateInterval;
	struct ScalableFloat TrackingInAirVelocityThreshold;
	struct ScalableFloat TrackingInAirHeightDeltaThreshold;
	struct ScalableFloat TargetAcquisitionRate;
	struct ScalableFloat MaxDistanceEvaluationErrorRatio;
	struct ScalableFloat TargetingUpdateInterval;
	struct ScalableFloat TargetingUpdateIntervalMaxDeviation;
	struct ScalableFloat ReachLeashLimitToleranceDistance;
	struct ScalableFloat ShootFloorTrapOnlyWhenHigherThanTrap;
	struct WeaponAccuracy NoWeaponAccuracy;
	TArray<struct WeaponAccuracyCategory> WeaponAccuracies;
	TArray<struct TargetBasedAccuracyCategory> TargetBasedAccuracies;
	bool bDigestTrackingOffsetModifiersWithAvgMatchMMR;
	TArray<struct TrackingOffsetModifierInfo> TrackingOffsetModifiers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseScalableConfig : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseScalableConfig_Sight : public UAISenseScalableConfig
{
public:
	struct ScalableFloat SightRadius;
	struct ScalableFloat LoseSightRadius;
	struct ScalableFloat PeripheralVisionAngleDegrees;
	struct ScalableFloat PointOfViewBackwardOffset;
	struct ScalableFloat NearClippingRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAISenseScalableConfig_Hearing : public UAISenseScalableConfig
{
public:
	struct ScalableFloat HearingRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotAlertLevelConfig : public UObject
{
public:
	int AlertLevels;
	class UClass* ScalableSenseConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotAttackingDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float MaxDistanceToEngageMeleeSq;
	bool bOnlyEngageMeleeAgainstThreatThatHasNoRangeWeapon;
	float MaxDistanceToConsiderAsAnAlternateTargetSq;
	bool bEnableAlternateTargetRequiredTags;
	struct GameplayTagContainer AlternateTargetRequiredTags;
	bool bEnableWTFBehavior;
	float MinCooldownDelayBetweenMeleeAttackAttempts;
	float MaxCooldownDelayBetweenMeleeAttackAttempts;
	struct GameplayTagContainer ThrowableGameplayTags;
	int MinThrowableCount;
	int MaxThrowableCount;
	float ThrowableCooldownMin;
	float ThrowableCooldownMax;
	float ThrowableMinimumRangeSquared;
	bool bThrowableEvaluatorActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotAttackingSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat MaxDistanceToEngageMelee;
	struct ScalableFloat OnlyEngageMeleeAgainstThreatThatHasNoRangeWeapon;
	struct ScalableFloat MaxDistanceToConsiderAsAnAlternateTarget;
	struct ScalableFloat EnableAlternateTargetRequiredTags;
	struct GameplayTagContainer AlternateTargetRequiredTags;
	struct ScalableFloat EnableWTFBehavior;
	struct ScalableFloat MinCooldownDelayBetweenMeleeAttackAttempts;
	struct ScalableFloat MaxCooldownDelayBetweenMeleeAttackAttempts;
	struct GameplayTagContainer ThrowableGameplayTags;
	struct ScalableFloat MinThrowableCount;
	struct ScalableFloat MaxThrowableCount;
	struct ScalableFloat ThrowableCooldownMin;
	struct ScalableFloat ThrowableCooldownMax;
	struct ScalableFloat ThrowableMinimumRange;
	struct ScalableFloat ThrowableEvaluatorActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotBuildingComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotBuildingDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float DefensiveBuildingDelayBetweenBuilds;
	float DefensiveBuildingDelayDeviationBetweenBuilds;
	float DelayBetweenBuildPieces;
	float ForceEquipBuildToolDuration;
	float StealWallTurboBuildDetectionTime;
	int StealWallAfterNumberOfTurboBuiltWall;
	float StealWallEfficiency;
	float StealWallBuildingTemplateWeights;
	TArray<struct AthenaFortAIBotDigestedWeightedBuildingList> WeightedBuildingLists;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotBuildingSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat DefensiveBuildingDelayBetweenBuilds;
	struct ScalableFloat DefensiveBuildingDelayDeviationBetweenBuilds;
	struct ScalableFloat DelayBetweenBuildPieces;
	struct ScalableFloat ForceEquipBuildToolDuration;
	TArray<struct AthenaFortAIBotWeightedBuildingList> WeightedBuildingLists;
	struct ScalableFloat StealWallTurboBuildDetectionTime;
	struct ScalableFloat StealWallAfterNumberOfTurboBuiltWall;
	struct ScalableFloat StealWallEfficiency;
	struct ScalableFloat StealWallBuildingTemplateWeights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotCharacterCustomization : public UObject
{
public:
	struct FortAthenaLoadout CustomizationLoadout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBotNameSettings : public UObject
{
public:
	EBotNamingMode NamingMode;
	struct FText OverrideName;
	bool bAddPlayerIDSuffix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotCosmeticData : public UDataAsset
{
public:
	TArray<struct TSoftClassPtr<UObject>> CosmeticLibraries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotCosmeticLibraryData : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> PredefineSetsDataTable;
	struct TSoftClassPtr<UObject> CharactersDataTable;
	struct TSoftClassPtr<UObject> GlidersDataTable;
	struct TSoftClassPtr<UObject> SkyDiveContrailsDataTable;
	struct TSoftClassPtr<UObject> BackpacksDataTable;
	struct TSoftClassPtr<UObject> PickaxesDataTable;
	struct TSoftClassPtr<UObject> FallbackCharactersDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotCustomizationData : public UPrimaryDataAsset
{
public:
	class UClass* PawnClass;
	bool bRequiresUniqueNetId;
	bool bHasCustomSquadId;
	byte CustomSquadId;
	bool bOverrideCanRespawnOnDeath;
	bool bCanRespawnOnDeath;
	bool bOverrideBehaviorTree;
	bool bOverrideCharacterCustomization;
	bool bOverrideDBNOPlayStyle;
	bool bOverrideSkillLevel;
	bool bUseMatchMMRToOverrideSkillLevel;
	bool bOverrideSkillSets;
	bool bOverrideStartupInventory;
	bool bOverrideBotNameSettings;
	bool bOverrideBotIDAnalyticsSuffix;
	bool bOverrideConstructionBuildingInfo;
	struct TSoftClassPtr<UObject> OverrideSkillLevelMMRTable;
	class UClass* BehaviorTree;
	EBotDataOverrideCosmeticMode OverrideCosmeticMode;
	class UClass* CharacterCustomization;
	struct TSoftClassPtr<UObject> CosmeticCustomizationLibrary;
	EDBNOPlayStyle DBNOPlayStyle;
	float SkillLevel;
	TArray<class UClass*> SkillSetOverrideClasses;
	class UClass* StartupInventory;
	class UClass* BotNameSettings;
	struct FString BotAnalyticsSuffix;
	float SpawnTracePadding;
	struct ConstructionBuildingInfo OverrideConstructionBuildingInfo;
	class UClass* AILODSettingsContainer;
	class UClass* AILODSettingsContainerLoaded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotDBNODigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float MaxDBNOCrawlingResponseTime;
	float MaxDBNOCrawlingResponseTimeDeviation;
	float AllyEvaluationTime;
	float AllyEvaluationTimeDeviation;
	float AllyEvaluationMaxDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotDBNOSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat MaxDBNOCrawlingResponseTime;
	struct ScalableFloat MaxDBNOCrawlingResponseTimeDeviation;
	struct ScalableFloat AllyEvaluationTime;
	struct ScalableFloat AllyEvaluationTimeDeviation;
	struct ScalableFloat AllyEvaluationMaxDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEmoteDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float InfiniteEmoteMinDuration;
	float InfiniteEmoteMaxDuration;
	int EmotesMaxCount;
	float DanceOnKillMaxDistanceFromKillSqr;
	float DanceOnKillMaxTimeFromKill;
	float DanceOnKillMinTimeFromLastTry;
	float DanceOnKillChanceToDanceOnBots;
	float DanceOnKillChanceToDanceOnPlayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEmoteSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat InfiniteEmoteMinDuration;
	struct ScalableFloat InfiniteEmoteMaxDuration;
	struct ScalableFloat DanceOnKillMaxDistanceFromKill;
	struct ScalableFloat DanceOnKillMaxTimeFromKill;
	struct ScalableFloat DanceOnKillMinTimeFromLastTry;
	struct ScalableFloat DanceOnKillChanceToDanceOnBots;
	struct ScalableFloat DanceOnKillChanceToDanceOnPlayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_AvoidThreat : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName AvoidThreatKeyName;
	struct FName AvoidThreatMovementStateKeyName;
	struct FName AvoidThreatDestinationKeyName;
	class UClass* CurrentThreatActorAvoiding;
	class UClass* CacheEMDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_CharacterLaunched : public UFortAthenaAIBotEvaluator
{
public:
	bool bSteerInSameDirectionAsLaunchVelocity;
	struct FName CharacterLaunchedExecutionStatusKeyName;
	struct FName SteerDirectionKeyName;
	struct Vector LastLaunchVelocity;
	class UClass* CachedMovementSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Conversation : public UFortAthenaAIBotEvaluator
{
public:
	class UClass* ConversationRuntimeParameters;
	class UClass* AffiliationManager;
	class UClass* ActorToFocus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Converted : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName ShouldMoveTowardsConverterName;
	struct FName ShouldTeleportTowardsConverterName;
	struct FName ConvertedAllowPatrolAroundName;
	struct FName ConvertedAllowScanAroundWhenWaitingName;
	struct FName ConvertedDestinationName;
	struct FName CrouchExecutionStatusName;
	struct FName SprintExecutionStatusName;
	struct Vector TeleportLocationProjectionExtent;
	class UClass* ConverterPawn;
	class UClass* CachedAIBotConvertParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_DanceOnKill : public UFortAthenaAIBotEvaluator
{
public:
	struct FName LastKillPositionKeyName;
	struct FName LastKillTimeKeyName;
	struct FName LastKillWasABotKeyName;
	struct FName PlayEmoteExecutionStatusKeyName;
	class UClass* CacheEmoteDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_TagQuery : public UFortAthenaAIBotEvaluator
{
public:
	struct GameplayTagQuery TagQuery;
	class UClass* CachedAbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_DangerDetection : public UFortAthenaAIBotEvaluator_TagQuery
{
public:
	class UClass* DangerNavAreaClass;
	float TimeToCheckForDangerAfterValidQuery;
	float MaxRadiusToSearchForSafePlace;
	struct FName DangerZoneDetectedExecutionStatusName;
	struct FName DangerZoneDetectedSafeLocationKeyName;
	class UClass* CachedMovementSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_DBNO : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName DBNODestinationKeyName;
	bool bAllowReachSquadmates;
	bool bAllowReachSameFactionNPCs;
	TArray<class UClass*> AllyPawns;
	struct Vector CachedCurrentDestination;
	class UClass* DBNOSkillSet;
	class UClass* DBNOBehaviorRuntimeParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_DefensiveBuilding : public UFortAthenaAIBotEvaluator
{
public:
	class UClass* CachedBuildingDigestedSkillSet;
	class UClass* CachedBuildingComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_DormantUntilPhase : public UFortAthenaAIBotEvaluator
{
public:
	struct ScalableFloat bIsEnabled;
	EAthenaGamePhaseStep RequiredGamePhaseStep;
	struct ScalableFloat DelayAfterPhase;
	struct ScalableFloat RandomDeviationAfterPhase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Escape : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct GameplayTagContainer EscapeTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_EvasiveManeuvers : public UFortAthenaAIBotEvaluator
{
public:
	struct FName CrouchExecutionStatusName;
	struct FName JumpExecutionStatusName;
	struct FName JetpackStrafeExecutionStatusName;
	struct FName DodgeName;
	struct FName DestinationKeyName;
	bool bDoCrouching;
	bool bDoDodging;
	bool bDoJumping;
	bool bDoJumpingDistanceCheck;
	bool bDoJetpackStrafing;
	bool bDoJetpackStrafingDistanceCheck;
	float JetpackStrafingRequiredFuelPercent;
	float JetpackStrafeNavPadding;
	struct GameplayTagQuery RequiredTagQuery;
	struct GameplayTagQuery JetpackRequiredTagQuery;
	struct GameplayTagQuery JumpRequiredTagQuery;
	class UClass* CacheEMDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_FreeFalling : public UFortAthenaAIBotEvaluator
{
public:
	struct FName DiveExecutionStatusKeyName;
	struct FName DiveDestinationKeyName;
	struct FName GlideExecutionStatusKeyName;
	struct FName GlideDestinationKeyName;
	struct FName JumpOffBusDestinationName;
	bool bRandomlySelectFreeFallingMode;
	struct ScalableFloat IdleWeight;
	struct ScalableFloat RandomWeight;
	struct ScalableFloat TowardNearestAllyWeight;
	EFreeFallingMode FreeFallingMode;
	float MaxOffsetRangeFromNearestAlly;
	bool bShouldRecomputeDestinationWhenTowardNearestAlly;
	bool bShouldSearchAllyInSquad;
	bool bShouldSearchAllyInTeam;
	bool bGlideAllowed;
	class UClass* NearestAlly;
	struct Vector CachedLatestDestination;
	class UClass* CacheMovementDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Ground : public UFortAthenaAIBotEvaluator
{
public:
	struct Vector SurfaceTypeRaycastDir;
	class UClass* CachedBehaviorRuntimeParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_HandleFocusing : public UFortAthenaAIBotEvaluator
{
public:
	struct FName TargetActorName;
	struct FName FocusActorName;
	struct FName FocalPointName;
	EFocusingBehavior FocusingBehavior;
	EFocusingBehavior NoRangedWeaponFocusBehavior;
	bool bPrioritizeThreatOverCurrentTarget;
	class UClass* CacheAimingDigestedSkillSet;
	class UClass* LastTargetedThreat;
	class UClass* FocusActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Heal : public UFortAthenaAIBotEvaluator
{
public:
	struct FName HealingObjectKeyName;
	struct GameplayTagQuery RequiredTagQuery;
	class UClass* HealingSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_HitAndRun : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct ScalableFloat AttackDurationBeforeEvade;
	struct ScalableFloat MeleeAttackMaxDistToEvade;
	struct ScalableFloat ClampEvadeDistanceEnable;
	struct ScalableFloat MinDistanceToEvade;
	struct ScalableFloat MaxDistanceToEvade;
	struct FName EvadeKeyName;
	struct FName EvadeMovementStateKeyName;
	struct FName EvadeDestinationKeyName;
	struct FName WeaponTriggerMeleeName;
	float MeleeAttackMaxDistToEvadeSqr;
	float MaxDistanceToEvadeSqr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_HolsterWeapon : public UFortAthenaAIBotEvaluator
{
public:
	class UClass* CachedNPCBehaviorParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Investigate : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName LastKnownPositionName;
	struct FName DestinationKeyName;
	struct FName MoveToDestinationKeyName;
	struct FName AggressivenessName;
	class UClass* InvestigatingSupportingActor;
	class UClass* UnderminingBuildingActor;
	class UClass* BlacklistReachingTarget;
	class UClass* CacheMovementDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_JumpOffBus : public UFortAthenaAIBotEvaluator
{
public:
	struct FName JumpOffBusDestinationName;
	struct FName JumpOffBusDestinationVolumeKeyName;
	class UClass* BusDroppingVolume;
	class UClass* CachedAthenaGameState;
	class UClass* CacheMovementDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Loot : public UFortAthenaAIBotEvaluator_Movement
{
public:
	class UClass* CachedAIServiceLoot;
	class UClass* LootingSkillSet;
	struct FName LootDestinationKeyName;
	struct FName LootObjectKeyName;
	struct FName LootTypeKeyName;
	struct FName POINavigationExecutionStatusKeyName;
	EExecutionStatus POINavigationExecutionStatus;
	class UClass* CurrentLootActor;
	class UClass* CachedTeamInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_MeleeAttack : public UFortAthenaAIBotEvaluator_Attack
{
public:
	struct FName WeaponTriggerMeleeName;
	struct FName TargetActorName;
	bool bPrioritizeMovingTowardsThreatOverCurrentTarget;
	class UClass* AttackingSkillSet;
	class UClass* BlacklistReachingTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Observe : public UFortAthenaAIBotEvaluator
{
public:
	struct FName AggressivenessName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_PatrolAround : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName PatrolDestinationName;
	class UClass* CacheAthenaGameMode;
	class UClass* CacheMovementDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_PlayEmote : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName PlayEmoteExecutionStatusKeyName;
	struct FName PlayEmoteDestinationKeyName;
	class UClass* BlacklistReachingTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_PropagateAwareness : public UFortAthenaAIBotEvaluator
{
public:
	struct GameplayTagQuery AwarenessTagQuery;
	class UClass* AwarenessGameplayEffectClass;
	TArray<class UClass*> AwareAllyPawns;
	TArray<class UClass*> AlreadyTestedPawns;
	class UClass* PropagateAwarenessSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_RangeAttack : public UFortAthenaAIBotEvaluator_Attack
{
public:
	struct FName WeaponReloadName;
	struct FName WeaponFireName;
	struct FName WeaponTargetingName;
	struct FName TargetActorName;
	struct FName AggressivenessName;
	struct FName HasLoSOnThreatName;
	class UClass* CacheRangeAttackDigestedSkillSet;
	class UClass* CacheAimingDigestedSkillSet;
	class UClass* CachePerceptionDigestedSkillSet;
	class UClass* CacheMovementDigestedSkillSet;
	class UClass* CacheAttackingDigestedSkillSet;
	class UClass* BlacklistReachingTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_ReachBeacon : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName ReachBeaconStatusKeyName;
	struct FName ReachBeaconMovementStateKeyName;
	struct FName ReachBeaconTargetKeyName;
	class UClass* CurrentBeacon;
	class UClass* CachedServerManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Revive : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName ReviveTargetKeyName;
	class UClass* ReviveBehaviorRuntimeParameters;
	class UClass* CurrentReviveTarget;
	TArray<class UClass*> DBNOAllyPawns;
	class UClass* ReviveSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_SandTunnel : public UFortAthenaAIBotEvaluator_TagQuery
{
public:
	struct FName JumpExecutionStatusName;
	struct FName LootInteractionExecutionStatusName;
	struct FName WeaponTriggerMeleeName;
	struct FName WeaponFireName;
	struct GameplayTagQuery BuriedTagQuery;
	class UClass* CacheMovementDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_SelectNextPOI : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName NextPOIKeyName;
	struct FName MarkerLocationKeyName;
	TArray<class UClass*> VisitedPOIList;
	class UClass* CacheLootingSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Sprinting : public UFortAthenaAIBotEvaluator
{
public:
	struct FName JumpExecutionStatusName;
	bool bSprintOnlyInWater;
	class UClass* SkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_StealWall : public UFortAthenaAIBotEvaluator
{
public:
	struct FName StealWallBuildTypeName;
	struct FName StealWallBuildGridCoordName;
	struct FName TargetActorName;
	class UClass* CacheBuildingDigestedSkillSet;
	class UClass* CurrentBuildingTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Storm : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName StormDestinationName;
	class UClass* CacheAthenaGameMode;
	class UClass* CachedBTComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_TagQueryToBBKey : public UFortAthenaAIBotEvaluator_TagQuery
{
public:
	struct FName LinkedBBKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_ThrowableAttack : public UFortAthenaAIBotEvaluator_Attack
{
public:
	struct FName WeaponTriggerThrowableName;
	struct FName TargetActorName;
	class UClass* AttackingSkillSet;
	class UClass* RangeAttackSkillSet;
	class UClass* BestWeapon;
	class UClass* CachedFortPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_TrapOnPathDetected : public UFortAthenaAIBotEvaluator
{
public:
	class UClass* CacheAimingDigestedSkillSet;
	struct FName TrapOnPathKeyName;
	struct FName TrapActorOnPathKeyName;
	struct FName TargetActorName;
	struct FName AlertLevelName;
	struct FName RangeAttackExecutionStatusName;
	class UClass* CurrentTrapTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_Warmup : public UFortAthenaAIBotEvaluator
{
public:
	struct FName WarmupPlayEmoteExecutionStatusKeyName;
	struct FName WarmupLootAndShootExecutionStatusKeyName;
	struct FName WarmupIdleExecutionStatusKeyName;
	class UClass* CacheWarmupDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvasiveManeuversDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float JumpDelay;
	float JumpRandomDeviationDelay;
	float CrouchDelay;
	float CrouchRandomDeviationDelay;
	float JetpackStrafeDelay;
	float JetpackStrafeRandomDeviationDelay;
	float DodgeDelay;
	float DodgeRandomDeviationDelay;
	float CrouchOverlayWeight;
	float JumpOverlayWeight;
	float JetpackStrafeOverlayWeight;
	float NoOverlayWeight;
	float DodgeWeight;
	float DodgeDistanceMax;
	float DodgeDistanceMin;
	float JetpackStrafeDistanceMax;
	float JetpackStrafeDistanceMin;
	float JetpackStrafeActivationTime;
	float JetpackStrafeActivationTimeRandomDeviation;
	float JetpackStrafeTime;
	float JetpackStrafeTimeRandomDeviation;
	float CrouchTimeMax;
	float CrouchTimeMin;
	float DodgeMaxDistanceSquared;
	float CrouchMaxDistanceSquared;
	float JumpMaxDistanceSquared;
	float JetpackStrafeMaxDistanceSquared;
	float AvoidProjectilesReactionDistanceSqr;
	float AvoidProjectilesReactionTimeMin;
	float AvoidProjectilesReactionTimeMax;
	float AvoidProjectilesEvasiveDistanceMin;
	float AvoidProjectilesEvasiveDistanceMax;
	float AvoidPhysicsObjectsReactionDistanceMin;
	float AvoidPhysicsObjectsReactionDistanceMax;
	float AvoidPhysicsObjectsSpeedMin;
	float AvoidPhysicsObjectsSpeedMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvasiveManeuversSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat CrouchOverlayWeight;
	struct ScalableFloat JumpOverlayWeight;
	struct ScalableFloat JetpackStrafeOverlayWeight;
	struct ScalableFloat NoOverlayWeight;
	struct ScalableFloat DodgeWeight;
	struct ScalableFloat JumpDelay;
	struct ScalableFloat JumpRandomDeviationDelay;
	struct ScalableFloat CrouchDelay;
	struct ScalableFloat CrouchRandomDeviationDelay;
	struct ScalableFloat JetpackStrafeDelay;
	struct ScalableFloat JetpackStrafeRandomDeviationDelay;
	struct ScalableFloat DodgeDelay;
	struct ScalableFloat DodgeRandomDeviationDelay;
	struct ScalableFloat DodgeDistanceMax;
	struct ScalableFloat DodgeDistanceMin;
	struct ScalableFloat JetpackStrafeDistanceMax;
	struct ScalableFloat JetpackStrafeDistanceMin;
	struct ScalableFloat JetpackStrafeActivationTime;
	struct ScalableFloat JetpackStrafeActivationTimeRandomDeviation;
	struct ScalableFloat JetpackStrafeTime;
	struct ScalableFloat JetpackStrafeTimeRandomDeviation;
	struct ScalableFloat CrouchTimeMax;
	struct ScalableFloat CrouchTimeMin;
	struct ScalableFloat DodgeMaxDistance;
	struct ScalableFloat CrouchMaxDistance;
	struct ScalableFloat JumpMaxDistance;
	struct ScalableFloat JetpackStrafeMaxDistance;
	struct ScalableFloat AvoidProjectilesReactionDistanceMax;
	struct ScalableFloat AvoidProjectilesReactionTimeMin;
	struct ScalableFloat AvoidProjectilesReactionTimeMax;
	struct ScalableFloat AvoidProjectilesEvasiveDistanceMin;
	struct ScalableFloat AvoidProjectilesEvasiveDistanceMax;
	struct ScalableFloat AvoidPhysicsObjectsReactionDistanceMin;
	struct ScalableFloat AvoidPhysicsObjectsReactionDistanceMax;
	struct ScalableFloat AvoidPhysicsObjectsSpeedMin;
	struct ScalableFloat AvoidPhysicsObjectsSpeedMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotHarvestDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float DelayBetweenHarvest;
	float DeviationTimeBetweenHarvest;
	float HarvestingMaxDistanceSquared;
	float WeakSpotHitProbability;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotHarvestSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat DelayBetweenHarvest;
	struct ScalableFloat DeviationTimeBetweenHarvest;
	struct ScalableFloat HarvestingMaxDistance;
	struct ScalableFloat WeakSpotHitProbability;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotHealingDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	struct FortBotDigestedHealingItemsList HealthItemsList;
	TArray<struct FortBotDigestedHealingItemsSpec> HealthItemsSpecializations;
	struct FortBotDigestedHealingItemsList ShieldItemsList;
	TArray<struct FortBotDigestedHealingItemsSpec> ShieldItemsSpecializations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotHealingSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct FortBotHealingItemsList HealthItemsList;
	TArray<struct FortBotHealingItemsSpec> HealthItemsSpecializations;
	struct FortBotHealingItemsList ShieldItemsList;
	TArray<struct FortBotHealingItemsSpec> ShieldItemsSpecializations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotInventoryItems : public UObject
{
public:
	TArray<struct ItemAndCount> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotInventoryDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float DefaultWeaponSelectionDistance;
	float DefaultWeaponSelectionDistanceDeviation;
	bool bHasInfiniteResources;
	struct GameplayTagContainer InventorySlotPreference;
	TArray<struct DigestedBotEquipWeaponInfo> EquipWeaponInfo;
	struct GameplayTagContainer InfiniteAmmoCheats;
	struct GameplayTagContainer CheckLoadedAmmoForInfiniteAmmoCheats;
	float NoWeaponGiveWeaponAfterTime;
	float NoWeaponNoPlayerConeDistance;
	float NoWeaponNoPlayerConeFOV;
	struct FName NoWeaponLootTierGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotInventorySkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat DefaultWeaponSelectionDistance;
	struct ScalableFloat DefaultWeaponSelectionDistanceDeviation;
	struct ScalableFloat HasInfiniteResources;
	struct GameplayTagContainer InventorySlotPreference;
	TArray<struct BotEquipWeaponInfo> EquipWeaponInfo;
	TArray<struct WeaponAmmoCheat> AmmoCheats;
	struct ScalableFloat NoWeaponGiveWeaponAfterTime;
	struct ScalableFloat NoWeaponNoPlayerConeDistance;
	struct ScalableFloat NoWeaponNoPlayerConeFOV;
	struct FName NoWeaponLootTierGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotLootingDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float ThresholdDistanceToSwitchLootItem;
	float ThresholdDistanceSquaredToRescanForBetterLoot;
	float ThresholdTimeToRescanForBetterLoot;
	struct Vector OctreeBoxHalfExtent;
	float LootStateEvaluationRadiusSq;
	float MinLootDurationPerPOI;
	float MaxLootDurationPerPOI;
	float LootPickupInteractionTime;
	float LootPickupInteractionDeviationTime;
	float Distance2DScore;
	float HeightScore;
	float ThreatMaxScore;
	float PrioritizeWeaponScore;
	float PoiSelectionDistanceScore;
	float PoiSelectionBotPresenceScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotLootingSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat ThresholdDistanceToSwitchLootItem;
	struct ScalableFloat ThresholdDistanceToRescanForBetterLoot;
	struct ScalableFloat ThresholdTimeToRescanForBetterLoot;
	struct Vector OctreeBoxExtent;
	struct ScalableFloat LootStateEvaluationRadius;
	struct ScalableFloat MinLootDurationPerPOI;
	struct ScalableFloat MaxLootDurationPerPOI;
	struct ScalableFloat LootPickupInteractionTime;
	struct ScalableFloat LootPickupInteractionDeviationTime;
	struct ScalableFloat Distance2DScore;
	struct ScalableFloat HeightScore;
	struct ScalableFloat ThreatMaxScore;
	struct ScalableFloat PrioritizeWeaponScore;
	struct ScalableFloat PoiSelectionDistanceScore;
	struct ScalableFloat PoiSelectionBotPresenceScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotMovementDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float SlowDownDistance;
	float TraversalSpeedEstimation;
	float TraversalSpeedEstimationWithThreat;
	float GliderDeployMinAngle;
	float GliderDeployMaxAngle;
	float GliderNoiseMinDistance;
	float GliderNoiseMaxDistance;
	float GliderNoiseMinDelay;
	float GliderNoiseMaxDelay;
	float JumpOffMinAngle;
	float JumpOffMaxAngle;
	float MaxPatrolDistance;
	float MaxPatrolDistanceRandomDeviation;
	float WobbleProbability;
	float MaxDelayBetweenWobblingMovement;
	float MaxDelayBetweenWobblingMovementRandomDeviation;
	bool bAllowSwimWobble;
	float MaxWobblingDuration;
	float MaxWobblingDurationRandomDeviation;
	float MaxWobblingIntensity;
	float WobblingIntensityDeviation;
	float MaxWobblingFrequency;
	float WobblingFrequencyDeviation;
	float WobblingStickToPathCorridorStrength;
	float MaxAfterLaunchedPauseTime;
	float MaxAfterLaunchedFromVortexPauseTime;
	float AfterLaunchedPauseTimeDeviation;
	bool bSteerMovementWhenLaunched;
	float SteerMovementWhenLaunchedDirectionUpdateTime;
	float MaxReactionTimeToDangerZone;
	float MaxReactionTimeToDangerZoneDeviation;
	bool bLimitBlockingObstacleAngle;
	float SwimSprintJumpDelay;
	float SwimSprintJumpDelayDeviation;
	float SwimUnblockJumpHeightThreshold;
	bool bSwimSprintJumpNav2D;
	float MoveToRangeAttackMinOffset;
	float MoveToRangeAttackMaxOffset;
	float LKPMinOffset;
	float LKPMaxOffset;
	float SandTunnelJumpMinTime;
	float SandTunnelJumpMaxTime;
	float SandTunnelBurrowedAndHiddenChance;
	float SandTunnelBurrowedAndHiddenMinTime;
	float SandTunnelBurrowedAndHiddenMaxTime;
	struct DigestedBotKnockbackSettings DefaultKnockbackSettings;
	TArray<struct DigestedBotKnockbackSettings> KnockbackSettingsSpecializations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotMovementSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat SlowDownDistance;
	struct ScalableFloat TraversalSpeedEstimation;
	struct ScalableFloat TraversalSpeedEstimationWithThreat;
	struct ScalableFloat GliderDeployMinAngle;
	struct ScalableFloat GliderDeployMaxAngle;
	struct ScalableFloat GliderNoiseMinDistance;
	struct ScalableFloat GliderNoiseMaxDistance;
	struct ScalableFloat GliderNoiseMinDelay;
	struct ScalableFloat GliderNoiseMaxDelay;
	struct ScalableFloat JumpOffMinAngle;
	struct ScalableFloat JumpOffMaxAngle;
	struct ScalableFloat MaxPatrolDistance;
	struct ScalableFloat MaxPatrolDistanceRandomDeviation;
	struct ScalableFloat MoveToRangeAttackMinOffset;
	struct ScalableFloat MoveToRangeAttackMaxOffset;
	struct ScalableFloat LKPMinOffset;
	struct ScalableFloat LKPMaxOffset;
	struct ScalableFloat SandTunnelJumpMinTime;
	struct ScalableFloat SandTunnelJumpMaxTime;
	struct ScalableFloat SandTunnelBurrowedAndHiddenChance;
	struct ScalableFloat SandTunnelBurrowedAndHiddenMinTime;
	struct ScalableFloat SandTunnelBurrowedAndHiddenMaxTime;
	struct ScalableFloat WobblingProbability;
	struct ScalableFloat MaxDelayBetweenWobblingMovement;
	struct ScalableFloat MaxDelayBetweenWobblingMovementRandomDeviation;
	struct ScalableFloat MaxWobblingDuration;
	struct ScalableFloat MaxWobblingDurationRandomDeviation;
	struct ScalableFloat MaxWobblingIntensity;
	struct ScalableFloat WobblingIntensityDeviation;
	struct ScalableFloat MaxWobblingFrequency;
	struct ScalableFloat WobblingFrequencyDeviation;
	struct ScalableFloat WobblingStickToPathCorridorStrength;
	struct ScalableFloat LimitBlockingObstacleAngle;
	struct ScalableFloat MaxAfterLaunchedPauseTime;
	struct ScalableFloat MaxAfterLaunchedFromVortexPauseTime;
	struct ScalableFloat AfterLaunchedPauseTimeDeviation;
	struct ScalableFloat SteerMovementWhenLaunched;
	struct ScalableFloat SteerMovementWhenLaunchedDirectionUpdateTime;
	struct ScalableFloat MaxReactionTimeToDangerZone;
	struct ScalableFloat MaxReactionTimeToDangerZoneDeviation;
	struct ScalableFloat AllowSwimWobble;
	struct ScalableFloat SwimSprintJumpDelay;
	struct ScalableFloat SwimSprintJumpDelayDeviation;
	struct ScalableFloat SwimUnblockJumpHeightThreshold;
	struct ScalableFloat SwimSprintJumpNav2D;
	TArray<struct BotKnockbackSettings> KnockbackSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotNameDataAsset : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> DefaultNameDataTable;
	struct TSoftClassPtr<UObject> ChinaNameDataTable;
	TArray<struct FortAthenaAIBotNameRegionData> RegionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotPerceptionDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float SightReactionTime;
	float SightRandomDeviation;
	TArray<struct DigestedSightReactionSpecialization> SightReactionSpecializations;
	float LoseSightTime;
	float LoseSightRandomDeviation;
	float SightSuspicionTime;
	float SightSuspicionRandomDeviation;
	float EnemyMarkedReactionTime;
	float EnemyMarkedReactionRandomDeviation;
	float ChancesToHelpOnMarkedEnemy;
	float DamageReactionTime;
	float DamageRandomDeviation;
	float HearingReactionTime;
	float HearingRandomDeviation;
	float MaxHearingLocationError;
	struct DigestedPerceptionStateSettings PerceptionStateSettings;
	float ThreatDamageWeight;
	float ThreatDamageWeightMultiplier;
	float ObstacleDistanceOverrideTargetingSq;
	float ObstacleForgetDistanceSq;
	float DBNOWeightModifier;
	struct SoundPerceptionDigestedSetting SoundSettings;
	float AlertedAccumulatedLoudnessLimit;
	float LKPAccumulatedLoudnessLimit;
	float EnemyMarkingDelay;
	float EnemyMarkingDelayRandomDeviation;
	float AdditionalMarkedEnemyLKPForgetTime;
	float AdditionalMarkedEnemyLKPForgetDistance;
	struct AlertLevelInfo AlertLevelInfos;
	float ProjectileThreatForgetTime;
	struct TrapPerceptionSettings TrapPerceptionSettings;
	bool bStealthMeterEnable;
	float StealthMeterThreshold;
	struct ScalableFloat StealthMeterIncreaseSpeed;
	float StealthMeterDecreaseSpeed;
	bool bStealthMeterAllowSharedTarget;
	bool bStealthMeterForceLKPWhenDamagedAndThreatened;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotPerceptionSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat SightReactionTime;
	struct ScalableFloat SightRandomDeviation;
	struct ScalableFloat SightRandomAddition;
	TArray<struct SightReactionSpecialization> SightReactionSpecializations;
	struct ScalableFloat LoseSightTime;
	struct ScalableFloat LoseSightRandomDeviation;
	struct ScalableFloat SightSuspicionTime;
	struct ScalableFloat SightSuspicionRandomDeviation;
	struct ScalableFloat EnemyMarkedReactionTime;
	struct ScalableFloat EnemyMarkedReactionRandomDeviation;
	struct ScalableFloat ChancesToHelpOnMarkedEnemy;
	struct ScalableFloat DamageReactionTime;
	struct ScalableFloat DamageRandomDeviation;
	struct ScalableFloat HearingReactionTime;
	struct ScalableFloat HearingRandomDeviation;
	struct ScalableFloat MaxHearingLocationError;
	struct PerceptionStateSettings ThreatSeeingPerceptionSettings;
	struct PerceptionStateSettings ThreatLKPPerceptionSettings;
	struct PerceptionStateSettings ThreatAlertedPerceptionSettings;
	struct ScalableFloat ThreatDamageWeight;
	struct ScalableFloat ThreatDamageWeightMultiplier;
	struct ScalableFloat ObstacleDistanceOverrideTargeting;
	struct ScalableFloat ObstacleForgetDistance;
	struct ScalableFloat DBNOWeightModifier;
	struct SoundPerceptionSetting SoundSettings;
	struct ScalableFloat AlertedAccumulatedLoudnessLimit;
	struct ScalableFloat LKPAccumulatedLoudnessLimit;
	struct ScalableFloat EnemyMarkingDelay;
	struct ScalableFloat EnemyMarkingDelayRandomDeviation;
	struct ScalableFloat AdditionalMarkedEnemyLKPForgetTime;
	struct ScalableFloat AdditionalMarkedEnemyLKPForgetDistance;
	TArray<class UClass*> AlertLevelConfigs;
	struct ScalableFloat ProjectileThreatForgetTime;
	struct ScalableFloat TrapDetectionDistanceMax;
	struct ScalableFloat TrapDetectionDistanceMaxDeviation;
	struct ScalableFloat TrapDetectionChanceWhenPerpendicular;
	struct ScalableFloat TrapDetectionChanceWhenParallel;
	struct ScalableFloat TrapDetectionEvaluationAngleThreshold;
	struct ScalableFloat TrapDetectionAutomaticIfWithinCreationTime;
	struct ScalableFloat StealthMeterEnable;
	struct ScalableFloat StealthMeterThreshold;
	struct ScalableFloat StealthMeterIncreaseSpeed;
	struct ScalableFloat StealthMeterDecreaseSpeed;
	struct ScalableFloat StealthMeterAllowSharedTarget;
	struct ScalableFloat bStealthMeterForceLKPWhenDamagedAndThreatened;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotPlayStyleDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	struct ScalableFloat AggressiveTowardsThreatWeight;
	struct ScalableFloat DefensiveTowardsThreatWeight;
	EDBNOPlayStyle DBNOPlayStyle;
	TArray<struct PlaystyleSwitchToAggressiveDataDigested> ChangeToAggressiveData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotPlayStyleSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat AggressiveTowardsThreatWeight;
	struct ScalableFloat DefensiveTowardsThreatWeight;
	struct ScalableFloat PassiveDBNOPlayStyle;
	struct ScalableFloat ThirstyDBNOPlayStyle;
	struct ScalableFloat PassiveOnHumansDBNOPlayStyle;
	TArray<struct PlaystyleSwitchToAggressiveData> ChangeToAggressiveData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotPropagateAwarenessDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float PropagationMaxDistanceSQ;
	float CosineFOV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotPropagateAwarenessSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat PropagationMaxDistance;
	struct ScalableFloat FOV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotRangeAttackDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	class UClass* CachedWeaponUsedToCalculateSkillSet;
	TArray<struct DigestedRangedWeaponSkillCategory> RangedWeaponCategorySkills;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotRangeAttackSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	TArray<struct RangedWeaponSkillCategory> RangedWeaponSkills;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotReviveDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float AllyEvaluationTime;
	float AllyEvaluationTimeDeviation;
	float CooldownOnCancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotReviveSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat AllyEvaluationTime;
	struct ScalableFloat AllyEvaluationTimeDeviation;
	struct ScalableFloat CooldownOnCancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerData : public UFortAthenaSpawnerDataBase
{
public:
	TArray<class UClass*> ClassComponentList;
	class UClass* SpawnParamsComponent;
	class UClass* BehaviorComponent;
	class UClass* AffiliationComponent;
	class UClass* LODComponent;
	class UClass* DebugComponent;
	class UClass* AnalyticComponent;
	class UClass* GameplayComponent;
	class UClass* ConversationComponent;
	class UClass* VoiceComponent;
	class UClass* CosmeticComponent;
	class UClass* ChanceEncounterComponent;
	class UClass* OptimizationComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotSpawnerData : public UFortAthenaAISpawnerData
{
public:
	class UClass* GameplayAbilityComponent;
	class UClass* SkillSetComponent;
	class UClass* InventoryComponent;
	class UClass* ConstructionComponent;
	class UClass* VehicleComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotUnstuckDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	bool bCanTeleportWhenStuck;
	bool bCanTeleportWhenStuckWithPlayerAround;
	float MaxDistanceSqToPlayerToTeleport;
	float PlayerToPhoebeAngleVisibilityConeToTeleport;
	float TimeBetweenPartialPathToConsiderPathStuck;
	int ConsecutivePartialPathCountToConsiderPathStuck;
	float DistanceSqBetweenBlockedPathToConsiderPathStuck;
	float DistanceBetweenSampleToConsiderPathStuckInWater;
	float TimeBetweenSampleToConsiderPathStuckInWater;
	float DistanceBetweenSampleToConsiderPathStuckOnGround;
	float TimeBetweenSampleToConsiderPathStuckOnGround;
	int ConsecutiveBlockedPathCountToConsiderPathStuck;
	int MaxSafeZoneIndexToAllowTeleport;
	float TimeToBreakBlockingDoor;
	float TimeToCloseBlockingDoor;
	float RiverbedObstacleCollisionNormalThreshold;
	int MaxSteeringDirectionAttempts;
	float SteeringAttemptDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotUnstuckSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat CanTeleportWhenStuck;
	struct ScalableFloat CanTeleportWhenStuckWithPlayerAround;
	struct ScalableFloat MaxDistanceToPlayerToTeleport;
	struct ScalableFloat PlayerToPhoebeAngleVisibilityConeToTeleport;
	struct ScalableFloat MaxSafeZoneIndexToAllowTeleport;
	struct ScalableFloat TimeToCloseBlockingDoor;
	struct ScalableFloat TimeToBreakBlockingDoor;
	struct ScalableFloat RiverbedObstacleCollisionNormalThreshold;
	struct ScalableFloat MaxSteeringDirectionAttempts;
	struct ScalableFloat SteeringAttemptDuration;
	struct ScalableFloat TimeBetweenPartialPathToConsiderPathStuck;
	struct ScalableFloat ConsecutivePartialPathCountToConsiderPathStuck;
	struct ScalableFloat DistanceBetweenSampleToConsiderPathStuckInWater;
	struct ScalableFloat TimeBetweenSampleToConsiderPathStuckInWater;
	struct ScalableFloat DistanceBetweenSampleToConsiderPathStuckOnGround;
	struct ScalableFloat TimeBetweenSampleToConsiderPathStuckOnGround;
	struct ScalableFloat DistanceBetweenBlockedPathToConsiderPathStuck;
	struct ScalableFloat ConsecutiveBlockedPathCountToConsiderPathStuck;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotWarmupDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float WarmupPlayEmoteBehaviorWeight;
	float WarmupLootAndShootBehaviorWeight;
	float WarmupIdleBehaviorWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotWarmupSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat WarmupPlayEmoteBehaviorWeight;
	struct ScalableFloat WarmupLootAndShootBehaviorWeight;
	struct ScalableFloat WarmupIdleBehaviorWeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIControllerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlackboardKeyAccessValidator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIEvaluatorComponent : public UActorComponent
{
public:
	TArray<class UClass*> AIEvaluators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAILODSettingsContainer : public UObject
{
public:
	Unknown ClassToSettings;
	TArray<class UClass*> LODSettings_AIEvaluators;
	TArray<class UClass*> LODSettings_CharacterMovement;
	TArray<class UClass*> LODSettings_FortWeaponRanged;
	class UClass* FortAIDirectorLODConfig;
	class UClass* FortAIDirectorObjectLODConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAILODComponent : public UActorComponent
{
public:
	EFortAILODLevel CurrentFortAILODLevel;
	bool bCouldBeVisibleToPlayers;
	class UClass* CachedFortPawn;
	class UClass* AILODSettingsContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAILODSettings_AIEvaluator : public UObject
{
public:
	TArray<class UClass*> SystemClasses;
	struct FortAILODSetting_AIEvaluator BelowLowerLODSettings;
	struct FortAILODSetting_AIEvaluator LowerLODSettings;
	struct FortAILODSetting_AIEvaluator AboveLowerLODSettings;
	struct FortAILODSetting_AIEvaluator BelowNormalLODSettings;
	struct FortAILODSetting_AIEvaluator NormalLODSettings;
	struct FortAILODSetting_AIEvaluator AboveNormalLODSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAILODSettings_CharacterMovement : public UObject
{
public:
	TArray<class UClass*> SystemClasses;
	struct FortAILODSetting_CharacterMovement BelowLowerLODSettings;
	struct FortAILODSetting_CharacterMovement LowerLODSettings;
	struct FortAILODSetting_CharacterMovement AboveLowerLODSettings;
	struct FortAILODSetting_CharacterMovement BelowNormalLODSettings;
	struct FortAILODSetting_CharacterMovement NormalLODSettings;
	struct FortAILODSetting_CharacterMovement AboveNormalLODSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAILODSettings_FortWeaponRanged : public UObject
{
public:
	TArray<class UClass*> SystemClasses;
	struct FortAILODSetting_FortWeaponRanged BelowLowerLODSettings;
	struct FortAILODSetting_FortWeaponRanged LowerLODSettings;
	struct FortAILODSetting_FortWeaponRanged AboveLowerLODSettings;
	struct FortAILODSetting_FortWeaponRanged BelowNormalLODSettings;
	struct FortAILODSetting_FortWeaponRanged NormalLODSettings;
	struct FortAILODSetting_FortWeaponRanged AboveNormalLODSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAILODSettings : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIObjectTracker : public UWorldSubsystem
{
public:
	Unknown TrackedObjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaAircraft : public AFortAircraft
{
public:
	struct LinearColor MinimapIconColorTeammate;
	struct LinearColor MinimapIconColorEnemy;
	int NumSpawnSlots;
	float SpawnOffsetRadius;
	struct AircraftFlightInfo FlightInfo;
	float FlightStartTime;
	float FlightEndTime;
	float DropStartTime;
	float DropEndTime;
	bool bIsOutOfPhaseAircraft;
	float ReplicatedFlightTimestamp;
	float FlightElapsedTime;
	float ClientFlightTimerDrift;
	float MiniMapIconScale;
	struct SlateBrush MiniMapIconBrush;
	float MiniMapTeamIndicatorIconScale;
	struct SlateBrush MiniMapTeamIndicatorIconBrush;
	class UClass* DefaultBusSkin;
	class UClass* SpawnedCosmeticActor;
	class UClass* AsyncLoadingSkin;
	int AircraftIndex;
	class UClass* Indicator;
	class UClass* TeamIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParametersProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParametersComponent : public UActorComponent
{
public:
	Unknown RegisteredParametersProviders;
	TArray<class UClass*> ExtractedRuntimeParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AffiliationBase : public UFortAthenaAISpawnerDataComponent
{
public:
	struct GameplayTagContainer FactionTags;
	TArray<struct SpawnerDataComponentAffiliationSharedBBConfiguration> FactionSharedBBConfigurations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Analytic : public UFortAthenaAIRuntimeParameters
{
public:
	struct GameplayTagContainer OnDeathGameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_AIAnalytic : public UFortAthenaAIRuntimeParameters_Analytic
{
public:
	struct FString AnalyticUniqueID;
	struct FString AIType;
	bool bShouldSendSpawnEvents;
	bool bShouldRecordGrabbedPickups;
	bool bShouldRecordDroppedPickups;
	bool bShouldRecordDeathInstigator;
	bool bShouldRecordRegularDowns;
	bool bShouldRecordTetheredDowns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AnalyticBase : public UFortAthenaAISpawnerDataComponent
{
public:
	struct GameplayTagContainer OnDeathGameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIAnalytic : public UFortAthenaAISpawnerDataComponent_AnalyticBase
{
public:
	struct FString AIType;
	struct ScalableFloat ShouldSendSpawnEvents;
	struct ScalableFloat ShouldRecordGrabbedPickups;
	struct ScalableFloat ShouldRecordDroppedPickups;
	struct ScalableFloat ShouldRecordDeathInstigator;
	struct ScalableFloat ShouldRecordRegularDowns;
	struct ScalableFloat ShouldRecordTetheredDowns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Marker : public UFortAthenaAIRuntimeParameters
{
public:
	bool bSupportsMarkerWithFaction;
	float MarkerPropagationMaxDistanceSQ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_AIBotDisguise : public UFortAthenaAIRuntimeParameters
{
public:
	bool bShouldApplyDisguise;
	bool bRevealDisguiseOnDamage;
	bool bRevealOnDamageExcludeAIPawnDamage;
	bool bRevealDisguiseOnPlayerProximity;
	float RevealPlayerProximityDistanceSqr;
	float RevealPlayerProximityMinDuration;
	float RevealPlayerProximityMaxDuration;
	class UClass* NameSettingsAfterReveal;
	struct GameplayTagContainer DisguisedFactionsBeforeReveal;
	struct GameplayTagContainer DisguisedFactionsAfterReveal;
	TArray<class UClass*> DisguiseGameplayEffectBeforeReveal;
	TArray<class UClass*> DisguiseGameplayEffectAfterReveal;
	TArray<struct ItemAndCount> DisguiseInventory;
	struct DataTableRowHandle DisguiseLootInfo;
	class UClass* DisguiseConversationComponentOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Collection : public UFortAthenaAIRuntimeParameters
{
public:
	bool bForceAddToCollectionOnDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotAffiliation : public UFortAthenaAISpawnerDataComponent_AffiliationBase
{
public:
	bool bForceAddToCollectionOnDamage;
	bool bOverrideIsAnAthenaGameParticipant;
	bool bIsAnAthenaGameParticipant;
	struct ScalableFloat SupportsMarkerWithFaction;
	struct ScalableFloat MarkerPropagationMaxDistance;
	struct ScalableFloat DisguiseProbability;
	struct ScalableFloat RevealDisguiseOnDamage;
	struct ScalableFloat RevealOnDamageExcludeAIPawnDamage;
	struct ScalableFloat RevealDisguiseOnPlayerProximity;
	struct ScalableFloat RevealPlayerProximityDistance;
	struct ScalableFloat RevealPlayerProximityMinDuration;
	struct ScalableFloat RevealPlayerProximityMaxDuration;
	class UClass* NameSettingsAfterReveal;
	struct GameplayTagContainer DisguisedFactionsBeforeReveal;
	struct GameplayTagContainer DisguisedFactionsAfterReveal;
	TArray<class UClass*> DisguiseGameplayEffectBeforeReveal;
	TArray<class UClass*> DisguiseGameplayEffectAfterReveal;
	TArray<struct ItemAndCount> DisguiseInventory;
	struct DataTableRowHandle DisguiseLootInfo;
	class UClass* DisguiseConversationComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotAnalytic : public UFortAthenaAISpawnerDataComponent_AnalyticBase
{
public:
	bool bUseDescriptorTagSuffix;
	struct FString BotIDSuffix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_ReviveBehavior : public UFortAthenaAIRuntimeParameters
{
public:
	bool bAllowReviveSquadmates;
	bool bAllowReviveSameFactionNPCs;
	bool bUseReviveToken;
	float MaxDistanceToRevive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_DBNOBehavior : public UFortAthenaAIRuntimeParameters
{
public:
	bool bDieWhenAllAlliesAreDBNO;
	float AliveAlliesMaxRangeSqr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_NPCBehavior : public UFortAthenaAIRuntimeParameters
{
public:
	bool bSupportsHolsteredWeapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Behavior : public UFortAthenaAIRuntimeParameters
{
public:
	bool bSurfaceTypeCheckEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_BehaviorBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_Behavior : public UFortAthenaAISpawnerDataComponent_BehaviorBase
{
public:
	class UClass* BehaviorTree;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotBehavior : public UFortAthenaAISpawnerDataComponent_Behavior
{
public:
	bool bCanUseFallbackPatrolAround;
	bool bAllowReviveSquadmates;
	bool bAllowReviveSameFactionNPCs;
	bool bUseReviveToken;
	float MaxDistanceToRevive;
	struct ScalableFloat DieWhenAllAlliesAreDBNO;
	struct ScalableFloat AliveAlliesMaxRange;
	struct ScalableFloat SupportsHolsteredWeapon;
	struct ScalableFloat SurfaceTypeCheckEnabled;
	struct ScalableFloat bShouldResetAggressivePlayStyleOnUnaware;
	struct ScalableFloat TimeToKeepTrackOfDamagingActorsForAggressivePlayStyle;
	struct ScalableFloat TimeToIgnoreDamagingActorsWhenBeingControlled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_ChanceEncounterBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotChanceEncounter : public UFortAthenaAISpawnerDataComponent_ChanceEncounterBase
{
public:
	struct ScalableFloat PassiveHealerEnable;
	class UClass* PassiveHealerComponentClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_ConstructionBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotConstruction : public UFortAthenaAISpawnerDataComponent_ConstructionBase
{
public:
	struct ConstructionBuildingList ConstructionBuildingInfoList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_AIBotLoopSettings : public UFortAthenaAIRuntimeParameters
{
public:
	bool bSpawnOutsideTheLoop;
	bool bRespawnOustideTheLoop;
	bool bDisableSpecialActorComponentUntilRespawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Conversation : public UFortAthenaAIRuntimeParameters
{
public:
	bool bEnterBTTaskConversationIfPlayerAround;
	float EnterBTTaskConversationIfPlayerAroundDistSqr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_ConversationBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotConversation : public UFortAthenaAISpawnerDataComponent_ConversationBase
{
public:
	class UClass* ConversationComponentClass;
	struct GameplayTag ConversationEntryTag;
	struct GameplayTag InteractorParticipantTag;
	struct GameplayTag SelfParticipantTag;
	struct ScalableFloat EnterBTTaskConversationIfPlayerAround;
	struct ScalableFloat EnterBTTaskConversationIfPlayerAroundDist;
	class UClass* CharacterData;
	struct FName ConversationInteractionCollisionProfile;
	struct Vector ConversationInteractionBoxExtent;
	struct Vector ConversationInteractionBoxOffset;
	struct ScalableFloat SpawnOutOfTheLoop;
	struct ScalableFloat RespawnOutsideTheLoop;
	class UClass* NPCLoopStateComponentClass;
	struct ScalableFloat UseSpecialActorComponent;
	class UClass* SpecialActorComponentClass;
	struct ScalableFloat BlockSpecialActorUntilOutsideTheLoop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_CosmeticBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotCosmeticBase : public UFortAthenaAISpawnerDataComponent_CosmeticBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_DebugBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotDebug : public UFortAthenaAISpawnerDataComponent_DebugBase
{
public:
	struct DebugMinimapData DebugMinimapData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_AIConvert : public UFortAthenaAIRuntimeParameters
{
public:
	bool bCanBeConverted;
	bool bCanBeConvertedFromDBNO;
	bool bForceKillWhenUnconverted;
	bool bCopyConverterSpecificRelations;
	bool bRemoveFromAllFactions;
	float ReleaseDistanceSq;
	float CheckReleaseConditionsTimeInterval;
	struct GameplayTagContainer AddToFactions;
	struct GameplayTagContainer RemoveFromFactions;
	byte PreConversionTeamIndex;
	struct GameplayTagContainer PreConversionFactions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_AIBotConvert : public UFortAthenaAIRuntimeParameters_AIConvert
{
public:
	bool bShouldLeashFollowConverter;
	bool bShouldScanAroundWhenWaiting;
	bool bShouldMoveTowardsConverter;
	bool bShouldTeleportTowardsConverter;
	bool bCanDanceWithConverter;
	float SkillLevelOverride;
	float InnerLeashRadius;
	float OuterLeashRadius;
	float LeashFollowActorUpdateRate;
	struct Vector LeashFollowActorLocalOffset;
	float MoveTowardsConverterInnerDistanceSq;
	float MoveTowardsConverterOuterDistanceSq;
	float TeleportTowardsConverterDistanceSq;
	float MinDistanceFromConverterWhenTeleported;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Leash : public UFortAthenaAIRuntimeParameters
{
public:
	struct Vector LeashLocation;
	float LeashInnerRadius;
	float LeashOuterRadius;
	ELeashReturnLocationMode LeashReturnLocationMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_AIBotRespawn : public UFortAthenaAIRuntimeParameters
{
public:
	bool bCanRespawnOnDeath;
	bool bRespawnOnDeathLocation;
	float RespawnTime;
	class UClass* AISpawnerDataComponentList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_GameplayBase : public UFortAthenaAISpawnerDataComponent
{
public:
	struct ScalableFloat CanBeConverted;
	struct ScalableFloat CanBeConvertedFromDBNO;
	struct ScalableFloat ForceKillWhenUnconverted;
	struct ScalableFloat CopyConverterSpecificRelations;
	struct ScalableFloat RemoveFromAllFactions;
	struct ScalableFloat ReleaseDistance;
	struct ScalableFloat CheckReleaseConditionsTimeInterval;
	struct GameplayTagContainer AddToFactions;
	struct GameplayTagContainer RemoveFromFactions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotGameplay : public UFortAthenaAISpawnerDataComponent_GameplayBase
{
public:
	class UClass* NameSettings;
	bool bRequiresUniqueNetId;
	struct ScalableFloat CanRespawnOnDeath;
	struct ScalableFloat RespawnOnDeathLocation;
	struct ScalableFloat RespawnTime;
	float PawnCullDistance;
	float PawnCullDistanceAfterPlayerAggroMode;
	EReachLocationValidationMode ReachLocationValidationMode;
	float LeashInnerRadius;
	float LeashOuterRadius;
	ELeashReturnLocationMode LeashReturnLocationMode;
	bool bCanInvestigateWithMeleeWeapon;
	bool bApplyMutatorsHealthAndShieldModifiers;
	bool bSupportsTethering;
	bool bEnableRenderCustomDepth;
	struct ScalableFloat InnerLeashRadius;
	struct ScalableFloat OuterLeashRadius;
	struct ScalableFloat ShouldLeashFollowConverter;
	struct ScalableFloat LeashFollowActorUpdateRate;
	struct Vector LeashFollowActorLocalOffset;
	struct ScalableFloat SkillLevelOverride;
	struct ScalableFloat ShouldScanAroundWhenWaiting;
	struct ScalableFloat ShouldMoveTowardsConverter;
	struct ScalableFloat ShouldTeleportTowardsConverter;
	struct ScalableFloat MoveTowardsConverterInnerRadius;
	struct ScalableFloat MoveTowardsConverterOuterRadius;
	struct ScalableFloat CanDanceWithConverter;
	struct ScalableFloat TeleportTowardsConverterDistance;
	struct ScalableFloat MinDistanceFromConverterWhenTeleported;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_GameplayAbilityBase : public UFortAthenaAISpawnerDataComponent
{
public:
	TArray<struct InitialGameplayEffectInfo> InitialGameplayEffect;
	TArray<class UClass*> InitialGameplayAbilitiesSet;
	struct GameplayTagContainer LooseTagsToApplyToPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotGameplayAbilityBase : public UFortAthenaAISpawnerDataComponent_GameplayAbilityBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_InventoryBase : public UFortAthenaAISpawnerDataComponent
{
public:
	struct ScalableFloat ShouldDropCurrencyOnDeath;
	struct ScalableFloat DefaultInventoryIgnoresRestrictions;
	struct FName CurrencyPayoutRowName;
	struct DataTableRowHandle LootInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIBotInventory : public UFortAthenaAISpawnerDataComponent_InventoryBase
{
public:
	TArray<struct ItemAndCount> Items;
	bool bItemsToGiveInEditorWhenCustomizationIsEnabled;
	TArray<struct ItemAndCount> EditorOnlyItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIGameplay : public UFortAthenaAISpawnerDataComponent_GameplayBase
{
public:
	float MoveSoundStimulusBroadcastInterval;
	float MaxMoveSoundRange;
	bool bGenerateSoundInAllMovementModes;
	struct ScalableFloat PawnCullDistance;
	struct ScalableFloat DefaultLifespanAfterDeath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIPawnCosmeticBase : public UFortAthenaAISpawnerDataComponent_CosmeticBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIPawnCosmeticCustomization : public UFortAthenaAISpawnerDataComponent_AIPawnCosmeticBase
{
public:
	struct GameplayTag FallbackTag;
	class UClass* CustomizationDefinition;
	bool bCanUnloadCustomization;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_OptimBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_AIPawnOptim : public UFortAthenaAISpawnerDataComponent_OptimBase
{
public:
	bool bRegisterToAIDropper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_CosmeticLibrary : public UFortAthenaAISpawnerDataComponent_AIBotCosmeticBase
{
public:
	TArray<struct TSoftClassPtr<UObject>> CosmeticLibraries;
	struct ScalableFloat DefaultCosmeticLibraryWeight;
	struct GameplayTag PredefinedCosmeticSetTag;
	struct TSoftClassPtr<UObject> EmotesDataTable;
	struct ScalableFloat EmotesMaxCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_CosmeticLoadout : public UFortAthenaAISpawnerDataComponent_AIBotCosmeticBase
{
public:
	struct FortAthenaLoadout CosmeticLoadout;
	TArray<class UClass*> CustomCharacterParts;
	bool bCanShowDefaultSkin;
	struct GameplayTag FallbackTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIRuntimeParameters_Inventory : public UFortAthenaAIRuntimeParameters
{
public:
	bool bShouldDropCurrencyOnDeath;
	bool bDefaultInventoryIgnoresRestrictions;
	bool bSkipInventoryInitialization;
	struct FName CurrencyPayoutRowName;
	struct DataTableRowHandle LootInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_LODBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_LOD : public UFortAthenaAISpawnerDataComponent_LODBase
{
public:
	class UClass* LODSettings;
	struct ClientAILODSettings ClientLODSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_PlayerBotSkillset : public UFortAthenaAISpawnerDataComponent_AIBotSkillset
{
public:
	class UClass* WarmUpSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_RandomInventory : public UFortAthenaAISpawnerDataComponent_InventoryBase
{
public:
	TArray<struct WeightedAIInventoryLoadout> Loadouts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_SpawnParamsBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_SpawnParams : public UFortAthenaAISpawnerDataComponent_SpawnParamsBase
{
public:
	class UClass* PawnClass;
	TArray<class UClass*> SpawnerDataSpawnedAsChildren;
	bool bSpawnInAir;
	bool bSetSkyDivingFromBus;
	float InAirSpawnTraceStartHeight;
	float InAirSpawnTraceEndHeight;
	float InAirSpawnTraceSphereRadius;
	float SpawnTracePadding;
	bool bCheckForOverlaps;
	bool bAddPOILocationTagsOnSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_VoiceBase : public UFortAthenaAISpawnerDataComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_Voice : public UFortAthenaAISpawnerDataComponent_VoiceBase
{
public:
	class UClass* VoiceComponentClass;
	class UClass* SoundBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponentList : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAlertStateComponent : public UActorComponent
{
public:
	float StealthMeterTarget;
	float StealthMeterTargetTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaAntelopeVehicle : public AFortAthenaSKMotorVehicle
{
public:
	struct Vector LeanPositionBack;
	struct Vector LeanPositionFront;
	float LeanPositionFrontMaxLag;
	float LeanPositionFrontLagCoefficient;
	float LeanImpulseScaleBack;
	struct Vector BounceOffsetBack;
	class UClass* BounceCurve;
	TArray<struct LinearColor> BoostSlideColors;
	float HandBrakeSkidParam;
	float BoostParam;
	float MovementParam;
	float BatteryParam;
	float RumbleIntensity;
	bool bBoostCameraActive;
	bool bLocalPlayerADS;
	class UClass* DriverCameraShake;
	class UClass* PassengerCameraShake;
	class UClass* LocalPlayerPawn;
	class UClass* PSC_Boost_Flames;
	float CachedSkidValue;
	class UClass* CachedAudioEngineRevUp;
	class UClass* CachedAudioSkid;
	class UClass* CachedAudioScrape;
	class UClass* CachedAudioWind;
	class UClass* CachedAudioBoost;
	class UClass* CachedAudioHandbrakeSkid;
	class UClass* CachedAudioBoostCharge;
	class UClass* CachedAudioEngineIdle;
	bool bOutOfRangeAudioParamsSet;
	bool bBudgetBasedAudioParamsCleared;
	class UClass* BoostMeterMID;
	class UClass* BodyMID;
	class UClass* PSC_ATV_Engine_Ready;
	class UClass* PS_Sputtering_Flames_Template;
	bool bHaveTriggeredBoostFX;
	bool bIsUsingSputteringFlamesTemplate;
	bool bAreWheelsIced;
	int RenderingDetailMode;
	float CacheWheelsBackOpacity;
	float CacheWheelsFrontOpacity;
	class UClass* WheelBlursFront;
	class UClass* WheelBlursBack;
	class UClass* WheelBlur_BL;
	class UClass* WheelBlur_BR;
	class UClass* WheelBlur_FL;
	class UClass* WheelBlur_FR;
	class UClass* PSC_WheelDust;
	class UClass* PSC_WheelSlide;
	class UClass* PSC_TrailLeft;
	class UClass* PSC_TrailRight;
	class UClass* FortAntelopeVehicleConfigsClass;
	bool bPlayingBoostFX;
	bool bPlayingBoostFXForward;
	float BoostFXTime;
	float BoostFXFOVOffset;
	class UClass* BoostFXStrengthCurve;
	class UClass* BoostFXRumbleStrengthCurve;
	class UClass* FortAntelopeVehicleConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBeaconComponent : public UActorComponent
{
public:
	int MaxAttractedBots;
	float AttractionRadius;
	TArray<class UClass*> RegisteredActors;
	struct FScriptMulticastDelegate OnConsumeEvent;
	bool bIsConsumed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTService_ContextOverride : public UBTService
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTContext_SuppressAutomaticAttackCheck : public UFortBTService_ContextOverride
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_AIEvaluator : public UBTService
{
public:
	class UClass* AIEvaluatorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_ApplyGameplayTags : public UBTService
{
public:
	struct GameplayTagContainer GameplayTagsToApply;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_BuildConstruction : public UBTService
{
public:
	struct FName StealWallBuildName;
	struct FName StealWallBuildTypeName;
	struct FName StealWallBuildGridCoordName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_CopyBlackboardVariable : public UBTService
{
public:
	struct BlackboardKeySelector SourceBlackboardKey;
	struct BlackboardKeySelector DestinationBlackboardKey;
	bool bCopyOnBecomeRelevant;
	bool bCopyOnCeaseRelevant;
	bool bCopyWhenSourceValueChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Crouch : public UBTService
{
public:
	struct FName CrouchExecutionStatusName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Escape : public UBTService
{
public:
	struct FName EscapeKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Jump : public UBTService
{
public:
	struct FName JumpExecutionStatusName;
	struct FName CrouchExecutionStatusName;
	float JumpInputReleaseDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_JetpackStrafe : public UFortAthenaBTService_Jump
{
public:
	struct FName JetpackStrafeExecutionStatusName;
	class UClass* CacheEMDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_JumpOffBus : public UBTService
{
public:
	struct FName JumpOffBusExecutionStatusName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_ManageWeapon : public UBTService
{
public:
	struct FName WeaponFireName;
	struct FName WeaponTriggerMeleeName;
	struct FName WeaponTriggerThrowableName;
	struct FName WeaponReloadName;
	struct FName WeaponName;
	struct FName WeaponTargetingName;
	struct FName SprintExecutionStatusName;
	bool bEndChargeOnFireStop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_ManageVehicleWeapon : public UFortAthenaBTService_ManageWeapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Patrolling : public UBTService
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_PickUpLoot : public UBTService
{
public:
	struct FName LootObjectKeyName;
	struct FName ExecutionStatusName;
	struct FName InteractionExecutionStatusName;
	struct FName InteractionContextInfoName;
	struct FName MovementStateKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Revive : public UBTService
{
public:
	struct FName ReviveTargetKeyName;
	struct FName ExecutionStatusName;
	struct FName MoveToPathMovementStateName;
	struct FName InteractionExecutionStatusName;
	struct FName InteractionContextInfoName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Sprinting : public UBTService
{
public:
	struct FName SprintExecutionStatusName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_UpdateTarget : public UBTService
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_BotAmbushPlayer : public UBTTask_Wait
{
public:
	float FacingPrecision;
	float WeaponCooldown;
	bool bClearBlackboardOnFinished;
	struct BlackboardKeySelector TargetedPlayerKeySelector;
	struct BlackboardKeySelector MaxLocationErrorKeySelector;
	struct BlackboardKeySelector MinLocationErrorKeySelector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_BotUnstuckTeleport : public UBTTaskNode
{
public:
	struct EQSParametrizedQueryExecutionRequest EQSRequest;
	struct FName CanReachDestinationKeyName;
	struct FName TeleportExecutionStatusKeyName;
	struct FName LastPartialPathTimeKeyName;
	struct FName LastPartialPathCountKeyName;
	class UClass* UnstuckSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_BotWait : public UBTTask_Wait
{
public:
	struct BlackboardKeySelector WaitCompleteKeySelector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_Build : public UBTTaskNode
{
public:
	struct FName ExecutionStatusKeyName;
	struct FName FocalPointName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_Conversation : public UBTTaskNode
{
public:
	struct FName ConversationStatusKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_Dive : public UBTTaskNode
{
public:
	struct FName ExecutionStatusKeyName;
	struct FName DiveDestinationKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_DynamicBlueprint : public UBTTaskNode
{
public:
	struct FName DynamicBlueprintStatusKeyName;
	struct FName DynamicBlueprintActorKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_Glide : public UBTTaskNode
{
public:
	struct FName ExecutionStatusKeyName;
	struct FName GlideDestinationKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_Interact : public UBTTaskNode
{
public:
	struct BlackboardKeySelector InteractExecutionStatusKeySelector;
	struct BlackboardKeySelector InteractContextInfoKeySelector;
	struct FName FocalPointName;
	struct FName JumpExecutionStatusName;
	struct FName WeaponTriggerMeleeName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_PlayEmote : public UBTTaskNode
{
public:
	struct FName PlayEmoteExecutionStatusKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_ShootTrap : public UBTTask_Wait
{
public:
	struct BlackboardKeySelector TargetActorKey;
	struct FName TrapOnPathKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_SteerMovement : public UBTTaskNode
{
public:
	struct BlackboardKeySelector SteerDirectionKeySelector;
	bool bSetControlRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_Undermine : public UBTTaskNode
{
public:
	struct FName UndermineTargetKeyName;
	struct FName UndermineLocationImpactName;
	struct FName UndermineExecutionStatusKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_UseItem : public UBTTaskNode
{
public:
	struct FName ActionObjectKeyName;
	struct FName ExecutionStatusKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaCreativePortal : public ABuildingGameplayActor
{
public:
	int PortalIndex;
	class UClass* DestinationActor;
	struct FString OverrideImageURL;
	struct Vector MarkerDetailsPointerOrigin;
	float MaxInstantTeleportDistance;
	struct FText LoadingText;
	struct FText SavingText;
	struct FText TeleportingPlayersText;
	struct FText TeleportingVehiclesText;
	class UClass* LinkedVolume;
	bool bReturnToCreativeHub;
	bool bInErrorState;
	bool bUserInitiatedLoad;
	struct CreativeLoadedLinkData IslandInfo;
	struct FText VolumeStatus;
	struct FText SanitizedTitle;
	struct FText SanitizedTagline;
	struct FText SanitizedCreatorName;
	class UClass* InteractComponent;
	byte CurrentPopulation;
	byte MaxAvailablePopulation;
	struct UniqueNetIdRepl OwningPlayer;
	TArray<struct UniqueNetIdRepl> PlayersReady;
	bool bIsPublishedPortal;
	struct Vector TeleportLocation;
	struct ScalableFloat TeleportExitDistance;
	bool bTeleportLocationIsIslandStart;
	bool bDisallowPortalInteract;
	bool bPortalOpen;
	class UClass* CachedOwningPlayerState;
	class UClass* ThumbnailTexture;
	Unknown InteractIconPlacementCapsule;
	bool bForceUpdateInteraction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSupplyDrop : public ABuildingGameplayActor
{
public:
	struct CollisionProfileName GroundCollsionProfile;
	class UClass* WaveSpawnSoundCue;
	struct FName LootTableNameOverride;
	struct HitResult LastGroundLocationHitResult;
	float SpawnOffsetZ;
	class UClass* SearchingSoundCueLoop;
	bool bReplicateLongUseNotifies;
	bool bDisableAbilitySystemReplication;
	int CachedSpecialActorIdx;
	struct FName SpecialActorID;
	struct ScalableFloat InStormDespawnTimeInSeconds;
	float CachedInStormDespawnTimeInSeconds;
	class UClass* LongInteractAudioComponent;
	class UClass* SpectatorMapIcon;
	int NumPlayersInteracting;
	bool bVisualizePlayerInteractionChanges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaCreativeSupplyDrop : public AFortAthenaSupplyDrop
{
public:
	TArray<struct FortItemQuantityPair> SpawnItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaCustomTimeDilationManager : public UObject
{
public:
	class UClass* TimeDilationCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaDoghouseVehicle : public AFortAthenaSKVehicle
{
public:
	float AntiGravityScalerWhenEmpty;
	float CameraPitchInterpSpeed;
	float CameraYawInterpSpeed;
	float PropSpeed;
	float PropRotation;
	float AirbrakeDragCoefficient;
	struct FortRechargingActionTimer BoostAction;
	struct AileronRoll AileronRoll;
	float AileronRollDoubleClickSpeed;
	bool bFreelookAutoRecenter;
	float FreelookPitchConstraintDegrees;
	float FreelookYawConstraintDegrees;
	float FreelookSensitivity;
	float MouseSteerSensitivity;
	float FreelookInterpolation;
	float FreelookReturnAcceleration;
	float FreelookReturnDecelleration;
	struct FName ShootCenterPointSocket;
	float ShootAimAheadDistance;
	class UClass* FortAirVehicleConfigs;
	bool bIsFlying;
	bool bIsEngineOn;
	bool bAutoStartEngineInAir;
	bool bEngineStartIsBeingHeld;
	class UClass* FuelComponent;
	EVehicleFuelState VehicleFuelSystemState;
	TArray<struct ActiveVehicleUI> ActiveUI;
	TArray<struct VehicleSpecificUIDetails> CustomUI;
	TArray<struct VehicleSpecificUIDetails> CustomFuelUI;
	struct ReplicatedControlState ControlState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaExitCraftBalloon : public AActor
{
public:
	class UClass* RootMeshComp;
	class UClass* PhysicsComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaExitCraft : public AFortAthenaVehicle
{
public:
	class UClass* MeshComponent;
	class UClass* OverlapMesh;
	class UClass* ExitCraftInfo;
	struct FName CraftSpecialActorID;
	EExitCraftState CurrentState;
	TArray<class UClass*> OverlappingPawns;
	class UClass* BalloonClass;
	class UClass* BalloonActor;
	class UClass* FortVehicleConfigClass;
	class UClass* GettingIntoPostionCurve_Location;
	class UClass* GettingIntoPostionCurve_Rotation;
	float BuildingZOffset;
	struct GameplayTagContainer TagsToApplyOnAttached;
	struct FText InteractText;
	float SafetyTimerTime;
	TArray<class UClass*> VehicleSkins;
	int VehicleSkinIndex;
	TArray<class UClass*> PlayersNeedingSeats;
	struct LocationLerpData LocationLerpData;
	struct RotationLerpData RotationLerpData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaExitCraftInfo : public UPrimaryDataAsset
{
public:
	class UClass* ExitCaftClass;
	class UClass* ExitCraftSpawnerClass;
	struct ExitCraftInfo ExitCraftInfo;
	struct GameplayTag SpecialActorSpawnerTag;
	struct SlateBrush SpawnerMinimapIconBrush;
	struct Vector2D SpawnerMinimapIconScale;
	struct SlateBrush SpawnerCompassIconBrush;
	struct Vector2D SpawnerCompassIconScale;
	struct GameplayTag SpecialActorCraftTag;
	struct SlateBrush CraftMinimapIconBrush;
	struct Vector2D CraftMinimapIconScale;
	struct SlateBrush CraftCompassIconBrush;
	struct Vector2D CraftCompassIconScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaExitCraftSpawner : public AActor
{
public:
	class UClass* DestructionOverlapCapsule;
	class UClass* ExitCraftInfo;
	TArray<class UClass*> BuildingActorsToDestroy;
	struct FName SpawnerSpecialActorID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaExplosionImpulseExecutionCalculation : public FortGameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaFerretVehicle : public AFortAthenaDoghouseVehicle
{
public:
	float BoostParam;
	float MovementParam;
	float RumbleIntensity;
	bool bBoostCameraActive;
	bool bLocalPlayerADS;
	class UClass* DriverCameraShake;
	class UClass* PassengerCameraShake;
	class UClass* LocalPlayerPawn;
	float CurrentMaxSpringCompression;
	float SpringCompressionRefireTime;
	float SparksRightParam;
	float MovementAmountParam;
	float MinPropSpeedWhenShooting;
	class UClass* PS_TrailTop;
	class UClass* PS_TrailBottom;
	class UClass* PSC_TrailTopLeft;
	class UClass* PSC_TrailTopRight;
	class UClass* PSC_TrailBottomLeft;
	class UClass* PSC_TrailBottomRight;
	class UClass* FortFerretVehicleConfigsClass;
	class UClass* BoostMeterSM;
	class UClass* PropellerSM;
	class UClass* BoostMID;
	class UClass* FuelGaugeMID;
	class UClass* PlaneSpeedFX;
	class UClass* FortAudioMovementClose;
	class UClass* FortAudioMovementDistant;
	class UClass* FortAudioWindFirstPerson;
	class UClass* FortAudioDive;
	class UClass* FortAudioTaxi;
	class UClass* FortAudioSpark;
	class UClass* FortFerretVehicleConfigs;
	class UClass* RightGunMuzzle;
	class UClass* LeftGunMuzzle;
	float MaxHealthToDestroyPropWhileBoosting;
	float MaxHealthToDestroyPropWithDirectHit;
	float MaxHealthToDestroyProp;
	bool bShowWingTrails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaGoatVehicle : public AFortAthenaSKMotorVehicle
{
public:
	struct Vector LeanPositionFR;
	struct Vector LeanPositionTargetFR;
	float LeanImpulseScaleFR;
	struct Vector LeanPositionBR;
	struct Vector LeanPositionTargetBR;
	float LeanImpulseScaleBR;
	struct Vector LeanPositionBL;
	struct Vector LeanPositionTargetBL;
	float LeanImpulseScaleBL;
	struct Vector BounceOffsetFR;
	struct Vector BounceOffsetBR;
	struct Vector BounceOffsetBL;
	class UClass* BounceCurve;
	TArray<struct LinearColor> BoostSlideColors;
	float HandBrakeSkidParam;
	float BoostParam;
	float MovementParam;
	float BatteryParam;
	float RumbleIntensity;
	bool bBoostCameraActive;
	bool bLocalPlayerADS;
	class UClass* DriverCameraShake;
	class UClass* PassengerCameraShake;
	class UClass* LocalPlayerPawn;
	float AccumulatedPowerSlideBoostDiscrete;
	struct Vector LeanSocketPositionFR;
	struct Vector LeanSocketPositionBR;
	struct Vector LeanSocketPositionBL;
	EPowerSlideState PowerSlideState;
	float BounceForceFR;
	float BounceForceBR;
	float BounceForceBL;
	float AngularSpeedEnterPowerSlide;
	class UClass* PSC_WheelDust;
	class UClass* PSC_WheelSlide;
	class UClass* PSC_TrailLeft;
	class UClass* PSC_TrailRight;
	class UClass* FortGoatVehicleConfigsClass;
	class UClass* FortGoatVehicleConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaGrowthManager : public ABuildingActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaHUDInfoDataAsset : public UPrimaryDataAsset
{
public:
	Unknown TeamInfo;
	Unknown TeamAffiliationInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaImpulseResponseSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData ImpulseMultiplier;
	struct FortGameplayAttributeData ImpulseMagnitude;
	struct FortGameplayAttributeData ImpulseZAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaInventoryLoadout : public UPrimaryDataAsset
{
public:
	struct FText LoadoutTitle;
	struct FText LoadoutDescription;
	TArray<struct AthenaLoadoutEntry> LoadoutInfo;
	struct ScalableFloat LoadoutEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaJackalVehicle : public AFortAthenaSKVehicle
{
public:
	class UClass* FortJackalVehicleConfigsClass;
	class UClass* FortJackalVehicleConfigs;
	int NumBoostTimers;
	TArray<struct FortRechargingActionTimer> BoostTimers;
	struct GameplayTagContainer AbortSprintPlayerTags;
	struct GameplayTagContainer PreventBoostPlayerTags;
	class UClass* SprintCameraModeClass;
	class UClass* BoostCameraModeClass;
	float JumpCharge;
	float JumpCooldownRemaining;
	float PendingJumpCharge;
	class UClass* CacheBoostFX;
	class UClass* CacheLoopingFX;
	class UClass* BoostMID;
	class UClass* CacheAudioMovement;
	class UClass* CacheAudioBoost;
	class UClass* CacheAudioWind;
	struct Vector FrontSpringFXOffset;
	struct Vector RearSpringFXOffset;
	struct Vector FXBoostEnd;
	bool bBoosting;
	bool bShouldCorrectYaw;
	class UClass* BoostingAnimClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaJackalVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float BoostTopSpeedMultiplier;
	float BoostTopSpeedForceMultiplier;
	float BoostSteeringMultiplier;
	float BoostMinPushForce;
	float BoostSteeringMultiplierRampTime;
	float BoostCameraAdditionalOffset;
	float SprintTopSpeedMultiplier;
	float SprintTopSpeedForceMultiplier;
	float SprintMinPushForce;
	float AutoSprintDelay;
	float MaxCombatSpeed;
	float CombatTransitionDragCoefficient;
	float CombatTransitionDragCoefficient2;
	float SprintCameraAdditionalOffset;
	float TurnInPlaceSpeed;
	float AsyncTurnInPlaceSpeed;
	float MaxSpeedForTurnInPlaceKmH;
	float BlendOutExtraSpeedTurnInPlaceKmH;
	float LandTopSpeedMultiplier;
	float MinJumpForce;
	float MaxJumpForce;
	float JumpChargeRate;
	float JumpChargeLossRate;
	float MinJumpChargeToActivate;
	float JumpRequiredVerticalAngle;
	float JumpCooldown;
	float EmptyDragCoefficient;
	float EmptyDragCoefficient2;
	float MaxEmptyDragSpeed;
	float ForwardAlphaDeadZone;
	float ForwardInputCutoffForSharpTurn;
	float MinRightInputForSharpTurn;
	float SharpTurnLateralFrictionRuntimeMultiplier;
	float MinForwardAlphaForLeftAnalogTurn;
	float EmptyLateralFrictionRuntimeMultiplier;
	float BumpForce;
	float InPlaceForwardPushForce;
	float MaxSpeedForInPlaceForwardPush;
	float TorsionRollStiff;
	float TorsionRollDamp;
	float TorsionRollAirStiff;
	float TorsionRollAirDamp;
	float TorsionRollStrength;
	float SteerRollFactor;
	float VehicleMaxRollAccel;
	float CorrectionalYawMinVelocitySq;
	float CorrectionalYawDotToleranceStart;
	float CorrectionalYawDotToleranceEnd;
	float CorrectionalYawStiff;
	float CorrectionalYawDamp;
	float CorrectionalYawMaxAccel;
	float MaxYawCorrectionIncline;
	float AimSteeringMultiplier;
	float AimSteeringTurnMultiplier;
	float AimSteeringStrafeMultiplier;
	bool bUseCameraAssistWhenADS;
	bool bJumpForceWorldVertical;
	bool bAutoSprintGamepadToggle;
	float JumpPercentWorldUpForPureVertical;
	float JumpPercentSurfaceNormal;
	bool bJumpInstantlyFullCharge;
	bool bHolsterWeaponDuringBoostOnServer;
	bool bHolsterWeaponDuringBoostOnClient;
	bool bPlayHolsterAnimsOnClient;
	bool bSwapDriveTagsDuringBoost;
	bool bDisableReticleDuringBoost;
	bool bUseViewRotationDuringSprint;
	bool bAlwaysConstrainViewDuringCombat;
	bool bAlwaysConstrainViewDuringCombatADS;
	float GroundForwardToUpTolerance;
	float GroundRightToUpTolerance;
	float TurnRateExponent;
	float MinSpeedMaxSteeringAngle;
	float MaxSpeedMaxSteeringAngle;
	float AllowSharpTurnForwardAlpha;
	float SharpTurnSwitchOffAlpha;
	bool bUseLookAheadTraceInAir;
	float VehicleCameraLeftAnalogMultiplierInAir;
	float MaxAutoFlipVelocitySquared;
	float AutoFlipCooldown;
	float BalloonPitchStrengthModifier;
	float MinSpeedSquaredForCameraFollowInAir;
	float JumpChargeSteeringMultiplier;
	float VerticalOnGroundEjectCooldown;
	float OnSideOnGroundEjectCooldown;
	float MaxForwardSpeedForTurnInPlaceDrag;
	float TurnInPlaceDragCoefficient;
	float TurnInPlaceDrag2Coefficient;
	float VehicleAirCameraYawStrength;
	float MaxPitchForCameraSteer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaLocalGameplayBehavior : public AActor
{
public:
	bool bNeedToAwakeDuringExecution;
	class UClass* CachedTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaLowGravZone : public ABuildingGameplayActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMapInfo : public AActor
{
public:
	struct ScalableFloat GoldenPoiPercents;
	struct ScalableFloat GoldenPoiPercentOfSelectedAtBusPathEnd;
	struct ScalableFloat GoldenPoiDistanceAroundBusPathEnd;
	struct ScalableFloat GoldenPoiDistanceMustBeAwayFromBusPath;
	TArray<struct FortTreasureChestSpawnInfo> TreasureChestSpawnInfos;
	TArray<struct FortAmmoBoxSpawnInfo> AmmoBoxSpawnInfos;
	TArray<struct BuildingGameplayActorSpawnDetails> BuildingGameplayActorSpawnDetails;
	class UClass* VendingMachineClass;
	struct ScalableFloat VendingMachineRarityCount;
	class UClass* WeaponUpgradeMachineClass;
	struct ScalableFloat WeaponUpgradeMachineSpawnChance;
	class UClass* LlamaClass;
	struct ScalableFloat LlamaQuantityMin;
	struct ScalableFloat LlamaQuantityMax;
	TArray<class UClass*> SupplyDropInfoList;
	struct ScalableFloat SupplyDropMinPlacementHeight;
	struct ScalableFloat SupplyDropMaxPlacementHeight;
	class UClass* AircraftClass;
	struct Box2D AircraftSpawnZone;
	struct Box2D AircraftDropZone;
	class UClass* AircraftDropVolume;
	struct ScalableFloat SkydivingScanForImpactWorldZ;
	struct ScalableFloat SkydivingForceDeployParachuteWorldZ;
	TArray<struct AircraftFlightInfo> FlightInfos;
	struct BoxSphereBounds CachedPlayableBoundsForClients;
	struct ScalableFloat AircraftDeviationAngle;
	struct ScalableFloat AircraftDistanceFromMidLine;
	struct ScalableFloat AircraftHeight;
	struct ScalableFloat AircraftSpeed;
	struct ScalableFloat AircraftDesiredDoorOpenTime;
	class UClass* PlayableBoundsVolume;
	struct ScalableFloat SafeZoneStartDelay;
	struct ScalableFloat SafeZoneStartingRadius;
	TArray<struct FortSafeZoneVolumeDefinition> SafeZoneVolumeDefinitions;
	struct FortSafeZoneDefinition SafeZoneDefinition;
	class UClass* SafeZoneStorm;
	struct TSoftClassPtr<UObject> WarmupBuildingFoundation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AddBarrier : public AFortAthenaMutator
{
public:
	class UClass* BigBaseWallClass;
	bool bStartTimerAtSafeZone;
	bool bSpawnAtMidFlightPathDuringBusLockedPhase;
	struct ScalableFloat TimeToBringDownWall;
	struct ScalableFloat WallGravity;
	struct ScalableFloat WallZLevel;
	class UClass* BigBaseWall;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_AdHocSquads : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAdHocSquadData : public UObject
{
public:
	TArray<class UClass*> PlayerStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AdHocSquads : public AFortAthenaMutator
{
public:
	int MaxAdHocSquadSize;
	struct ScalableFloat bVoiceChatSquaddingEnabled;
	struct ScalableFloat MaxDistInviteNotificationCanBeReceived;
	struct ScalableFloat MinimumDistInviteNotificationIsLost;
	class UClass* AdHocSquadsControllerComponentClass;
	class UClass* AdHocSquadDataClass;
	bool bMaintainSquadDataForNonAdHocSquads;
	struct ScalableFloat bForceAllPlayersOntoIndividualTeams;
	struct ScalableFloat bFollowingPlayerAutomaticallyLeavesCurrentSquadWhenSquadingUp;
	struct ScalableFloat bSquadingUpMergesSquads;
	struct ScalableFloat bEnsureOnOutsideTeamOrSquadChanged;
	Unknown AdHocSquadDataMap;
	struct AdHocSquad_InviteDataArray InviteDataArray;
	TArray<struct AdHocSquad_InviteData> LocalClientInviteDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AI : public AFortGameplayMutator
{
public:
	TArray<class UClass*> DeimosMoveComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AimAssist : public AFortAthenaMutator
{
public:
	bool bAimAssistAllowed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AllowADS : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AllowItemDrop : public AFortAthenaMutator
{
public:
	bool bAllowItemDrop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AllowItemPickUp : public AFortAthenaMutator
{
public:
	bool bAllowItemPickUp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AllowLootItem : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AllowSpectateOtherTeams : public AFortAthenaMutator
{
public:
	bool bAllowSpectateOtherTeams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Ashton : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnStoneListChanged;
	struct FScriptMulticastDelegate OnVillainRespawnsRemainingChanged;
	struct ScalableFloat GameOverDelay;
	struct AshtonStoneData StoneDataList;
	struct AshtonStoneSpawnData StoneSpawnDataList;
	TArray<struct AshtonStoneState> StoneList;
	TArray<struct AshtonStoneState> CachedStoneList;
	struct Vector VillainLeaderLocationForSnapSound;
	struct Vector VillainLeaderLocationForDeathSound;
	struct Vector VillainLeaderLocationForSound;
	struct GameplayTag JimInventoryTag;
	struct GameplayTag JimPickupTag;
	struct GameplayTag VillainTeamTag;
	struct GameplayTag HeroTeamTag;
	struct GameplayTagContainer ForceEquipTags;
	struct SlateBrush MapEnemyBrush;
	struct Vector2D MapEnemyScale;
	class UClass* AutoEquipController;
	class UClass* VillainLeaderItemDef;
	TArray<class UClass*> VillainItemDefs;
	class UClass* VillainLeaderPC;
	struct FortRespawnLogicData RespawnLogicData;
	struct ScalableFloat NumVillainRespawns;
	int NumVillainRespawnsRemaining;
	struct ScalableFloat PromoteNextVillainLeaderDelay;
	struct ScalableFloat VillainsDisplayStoneIcons;
	int CachedNumCapturedStones;
	struct AthenaGameMessageData GameMsg_IntroVillain;
	struct AthenaGameMessageData GameMsg_IntroHero;
	struct AthenaGameMessageData GameMsg_RespawnVillain;
	struct AthenaGameMessageData GameMsg_RespawnHero;
	struct AthenaGameMessageData GameMsg_HeroFollowMap;
	struct AthenaGameMessageData GameMsg_FirstStoneComingVillain;
	struct AthenaGameMessageData GameMsg_FirstStoneComingHero;
	struct AthenaGameMessageData GameMsg_StoneComingVillain;
	struct AthenaGameMessageData GameMsg_StoneComingHero;
	struct AthenaGameMessageData GameMsg_FirstStoneCapturedVillain;
	struct AthenaGameMessageData GameMsg_FirstStoneCapturedHero;
	struct AthenaGameMessageData GameMsg_StoneCapturedVillain;
	struct AthenaGameMessageData GameMsg_StoneCapturedHero;
	struct AthenaGameMessageData GameMsg_OneStoneLeftVillain;
	struct AthenaGameMessageData GameMsg_OneStoneLeftHero;
	struct AthenaGameMessageData GameMsg_FinalStoneComingVillain;
	struct AthenaGameMessageData GameMsg_FinalStoneComingHero;
	struct AthenaGameMessageData GameMsg_EliminatedThanosVillain;
	struct AthenaGameMessageData GameMsg_EliminatedThanosHero;
	struct AthenaGameMessageData GameMsg_RespawnThanosVillain;
	struct AthenaGameMessageData GameMsg_RespawnThanosHero;
	struct AthenaGameMessageData GameMsg_StonesCompleteVillain;
	struct AthenaGameMessageData GameMsg_StonesCompleteHero;
	struct AthenaGameMessageData GameMsg_VillainArmyDepletedVillain;
	struct AthenaGameMessageData GameMsg_VillainArmyDepletedHero;
	struct AthenaGameMessageData GameMsg_NoMoreRespawns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AthenaLoadouts : public AFortAthenaMutator
{
public:
	class UClass* LoadoutUserWidget;
	TArray<class UClass*> Loadouts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AudioFadeOverride : public AFortAthenaMutator
{
public:
	class UClass* FadeoutSoundMix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_AutoPickup : public AFortAthenaMutator
{
public:
	byte AutoPickupDefaultItems;
	byte AutoPickupAmmoItems;
	byte AutoPickupConsumableItems;
	byte AutoPickupGadgetItems;
	byte AutoPickupTrapItems;
	byte AutoPickupWeaponItems;
	byte AutoPickupWorldResourceItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Bagel : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnTeamScoreMultiplierChanged;
	struct FScriptMulticastDelegate OnPlayerDataChanged;
	struct FScriptMulticastDelegate OnPhaseChanged;
	struct FScriptMulticastDelegate OnBagelVictory;
	struct FScriptMulticastDelegate OnPlayerFriendLeaderboardUpdated;
	bool bOverrideReplicationSettingsDebug;
	struct ScalableFloat MaxAIPerClient;
	struct ScalableFloat ReplicateGameplayCues;
	EBagelDifficulty CurrentDifficulty;
	TArray<class UClass*> StormMaterialOverrides;
	class UClass* ObjectiveObjectClass;
	class UClass* FinalPhaseObjectiveObjectClass;
	struct GameplayTag StartingAreaTag;
	struct GameplayTag ObjectiveAreaTag;
	struct ScalableFloat IsPreparationPhase;
	struct ScalableFloat IsSurvivePhase;
	struct ScalableFloat IsMovingPhase;
	struct ScalableFloat IsAftermathPhase;
	struct ScalableFloat IsFinalPhase;
	struct ScalableFloat RefillPlayerHealth;
	struct ScalableFloat RefillPlayerShield;
	struct ScalableFloat OnlyRespawnAtNewPhase;
	struct ScalableFloat ShouldRespawnDeadPlayers;
	float SpawnScoreMultiplierTraceStartHeight;
	float SpawnSscoreMultiplierTraceEndHeight;
	struct BagelAreaSpecialActorData AreaSpecialActorData;
	struct BagelScoreMultiplierSpawnData ScoreMutliplierSpawnData;
	class UClass* DifficultyEncounterSettingsStatic;
	class UClass* DifficultyEncounterSettingsDynamic;
	class UClass* DifficultyEncounterSettingsFinalPhase;
	struct ScalableFloat DisplayIntroGameMsg;
	struct AthenaGameMessageData GameMsg_Intro;
	struct ScalableFloat DisplayOnTeamMultiplierIncreasedGameMsg;
	struct AthenaGameMessageData GameMsg_OnTeamMultiplierIncreased;
	struct BagelDifficultySettings DifficultySettings;
	bool bUseLootTierOverrides;
	TArray<struct BagelLootTierOverrideAssetData> LootTierOverrides;
	struct GameplayTag HeadshotGameplayTag;
	struct BagelScoreData ScoreEventList;
	struct ScalableFloat ObjectiveAreaCompletedScoreMultiplierBonus;
	struct ScalableFloat RiftDestroyedScoreMultiplierBonus;
	struct ScalableFloat StreakScoreMultiplierUseSpecialMechanicToActivate;
	struct ScalableFloat StreakScoreMultiplierResetTime;
	struct ScalableFloat StreakScoreMultiplierKillThreshold;
	struct ScalableFloat StreakScoreMultiplierTimeThresholdToActivate;
	struct ScalableFloat StreakScoreMultiplierMaxLevel;
	struct ScalableFloat StreakScoreMultiplierValue;
	TArray<struct FString> PlayerStatsNames;
	int FriendsLeaderboardDisplayedNumber;
	float TimeSecRetreiveLeaderboardTimeOut;
	bool bIsGameOver;
	bool bIsRespawningAllowed;
	byte CurrentObjectiveAreaIndex;
	byte TotalObjectiveAreaCount;
	TArray<struct BagelObjectiveAreaInstanceData> ObjectiveAreas;
	class UClass* CurrentEncounter;
	class UClass* FinalPhaseEncounter;
	struct FName CurrentLootTierGroupOverride;
	byte TeamScoreMultiplier;
	struct BagelPlayerDataArray PlayerDataArray;
	EBagelPhase CurrentPhase;
	class UClass* RespawnLocationActor;
	TArray<struct RiftDamagerInfo> RiftDamagerInfo;
	class UClass* FinalBoss;
	struct BagelFriendsLeaderboard LocalPlayerFriendsLeaderboard;
	struct BagelLeaderboardQuery LocalPlayerFriendsLeaderboardQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BallerRace : public AFortAthenaMutator
{
public:
	float ServerWorldTimeToStartRace;
	struct ScalableFloat DelayBeforeRace;
	struct AthenaGameMessageData GameMsg_IntroMessage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Barrier : public AFortAthenaMutator
{
public:
	class UClass* BigBaseWallClass;
	class UClass* ObjectiveFlag;
	bool bGameEndsWhenObjectiveIsDestroyed;
	struct BarrierHeadData FoodHeadData;
	struct BarrierMountedTurretData MountedTurretOverrideMaterials;
	class UClass* BigBaseWall;
	struct BarrierTeamState Team_0_State;
	struct BarrierTeamState Team_1_State;
	struct ScalableFloat ObjectiveDistanceFromWall;
	struct ScalableFloat SafeZonePhaseToStartObjectiveDestructionTimer;
	struct ScalableFloat ObjectiveDestructionTimer;
	struct ScalableFloat StartObjectiveDamageOnSpecialEvent;
	struct ScalableFloat ObjectiveZOffset;
	struct ScalableFloat ObjectiveMaxZDiff;
	struct ScalableFloat ObjectiveMaxSpawnHeight;
	struct ScalableFloat ObjectivesSpawnSameHeight;
	struct ScalableFloat LavaLevelRelativeToMascot;
	struct ScalableFloat ObjectiveHealthTiers;
	struct ScalableFloat WallGravity;
	struct ScalableFloat SafeZonePhaseWhenToBringDownWall;
	struct ScalableFloat TimeToBringDownWall;
	struct FortRespawnLogicData RespawnLogicData;
	struct ScalableFloat SafeZonePhaseToTurnOffRespawning;
	struct ScalableFloat HealthToWarnAboutRespawnsAt;
	struct AthenaGameMessageData GameMsg_Intro;
	struct AthenaGameMessageData GameMsg_WallComingDown;
	struct AthenaGameMessageData GameMsg_WallDown;
	struct AthenaGameMessageData GameMsg_Objective_Destroyed_Friendly;
	struct AthenaGameMessageData GameMsg_Objective_Destroyed_Friendly_NotGameOver;
	struct AthenaGameMessageData GameMsg_Objective_Destroyed_Enemy;
	struct AthenaGameMessageData GameMsg_NoMoreRespawnsWarning_Friendly;
	struct AthenaGameMessageData GameMsg_NoMoreRespawns_Friendly;
	struct AthenaGameMessageData GameMsg_NoMoreRespawns_Enemy;
	struct AthenaGameMessageData GameMsg_ObjectiveDamageState_Friendly;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BasicLimitedLives : public AFortAthenaMutator
{
public:
	struct LimitedLifeByTeamData DefaultData;
	Unknown SpecificTeamData;
	struct LimitedLifeDataArray LiveData;
	Unknown AlreadySeenStates;
	struct ScalableFloat bShouldCalculateRespawnLocation;
	struct ScalableFloat bPreferSpectateTeammates;
	bool bAlwaysShowSquadInfo;
	struct FortRespawnLogicData RespawnLogicData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BattleLab : public AFortAthenaMutator
{
public:
	int SpawnPortalIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Bismuth : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Bismuth : public AFortAthenaMutator_GameModeBase
{
public:
	class UClass* BotData;
	struct ScalableFloat NumOfBotsToSpawn;
	struct ScalableFloat AIBotsHostileToEachOther;
	int BotTeamStartIndex;
	struct TSoftClassPtr<UObject> SpawnersSelectionQuery;
	struct ScalableFloat MinimumDistanceBetweenSpawners2D;
	struct ScalableFloat ReflectKillDelay;
	struct GameplayTag ReflectDeathReason;
	TArray<EDeathCause> ValidDeathReasons;
	class UClass* ReflectGameplayEffect;
	class UClass* InitiateGameplayEffect;
	TArray<class UClass*> BismuthSpawners;
	TArray<class UClass*> BismuthAIBots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Bison : public AFortAthenaMutator
{
public:
	struct AthenaGameMessageData GameMsg_IntroMessage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BlockBuilding : public AFortAthenaMutator
{
public:
	EBuildingMode AllowBuilding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BlockEmotes : public AFortAthenaMutator
{
public:
	bool bGlobalEmoteBlock;
	struct GameplayTagContainer BlockEmotesWithTags;
	TArray<struct PrimaryAssetId> SpecificEmotesToBlock;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BossHealthInfo : public AFortAthenaMutator
{
public:
	ECreativeBossDisplayMode DisplayMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutator_SpawningPolicyData : public UDataAsset
{
public:
	struct ScalableFloat NumItemsToSpawn;
	struct TSoftClassPtr<UObject> ItemPlacementQuery;
	struct TSoftClassPtr<UObject> ItemRemovalQuery;
	float RemovalQueryInterval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBotELOSpawningInfo : public UFortAthenaMutator_SpawningPolicyData
{
public:
	class UClass* BotSpawningDataInfo;
	class UClass* CachedGameMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawningPolicyBase : public AFortAthenaMutator
{
public:
	TArray<struct ObjectiveSpecialActorContainer> SpecialActorIDList;
	int CachedSpecialActorIdx;
	struct ScalableFloat MinRespawnTime;
	struct ScalableFloat MaxRespawnTime;
	float SpawnFailureLockoutTime;
	EAthenaGamePhase GamePhaseToStartSpawning;
	bool bShouldCenterGroundCheckAtFoundLocation;
	bool bShouldMaintainItemCount;
	bool bAllowedDespawnToMaintainItemCount;
	bool bWaitForNavmeshToBeLoaded;
	class UClass* ItemDataRemovalQueryPending;
	TArray<struct SpawningInfo> QueuedSpawnInfo;
	Unknown QueuedSpawnInfoCount;
	Unknown NextSpawnTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawningPolicyEQS : public AFortAthenaMutator_SpawningPolicyBase
{
public:
	float BaseQueryingAttemptIntervalTimeSeconds;
	struct TSoftClassPtr<UObject> BasePlacementQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Bots : public AFortAthenaMutator_SpawningPolicyEQS
{
public:
	TArray<class UClass*> BotSpawningDataItemClasses;
	bool bBotHostileToHumanPlayersOnly;
	class UClass* CacheBotData;
	struct TSoftClassPtr<UObject> MMRSpawnSpec;
	struct TSoftClassPtr<UObject> OverrideTableInfo;
	struct TSoftClassPtr<UObject> ABTestOverrideTableInfo;
	TArray<struct SoftObjectPath> AllPossibleOverrideTables;
	TArray<class UClass*> BotSpawningDataItems;
	struct MMRSpawningBotsRuntimeInfo CachedMMRSpawningInfo;
	bool bSpawnInAir;
	struct ScalableFloat MinHeightFromGround;
	float MaxAroundBotDistanceToSearchPOIToLand;
	struct ScalableFloat OverridePOISpreadingSquadCount;
	class UClass* CacheCompositeCurveTable;
	class UClass* CacheCompositeDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_BotsWinCondition : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ButterflyEvent : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnPawnBroadcast;
	float PawnGatherFrequency;
	struct ScalableFloat PawnSpawnLocationX;
	struct ScalableFloat PawnSpawnLocationY;
	struct ScalableFloat PawnSpawnMinDistance;
	struct ScalableFloat PawnSpawnMaxDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Carmine : public AFortAthenaMutator
{
public:
	struct GameplayTag JimInventoryTag;
	struct GameplayTag JimPickupTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CenterSafezonesOnPOIs : public AFortAthenaMutator
{
public:
	struct ScalableFloat UseFirstEntryForAllSafezones;
	struct ScalableFloat InitialSafezoneForcedToMapCenter;
	Unknown CenterSafezonesOnPOITag;
	Unknown CenterSafezonesOnLiteralLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Chameleon : public AFortAthenaMutator
{
public:
	struct AthenaGameMessageData GameMsg_IntroMessage_Team_0;
	struct AthenaGameMessageData GameMsg_IntroMessage_Team_1;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Character : public AFortAthenaMutator
{
public:
	class UClass* ForcedCharacterItemDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Chrome : public AFortAthenaMutator_GameModeBase
{
public:
	struct FText TeleportingPlayersText;
	class UClass* TraversePointClass;
	TArray<struct PrimaryAssetId> ChromeVehicleAssetIds;
	struct FortSquadStartSearchParamData VehicleStartSearchParam;
	class UClass* FuelSettingGE;
	struct ScalableFloat ScoreToWin;
	struct ScalableFloat bUseOverridingSpawnTransforms;
	TArray<struct Transform> OverridingSpawnTransforms;
	TArray<struct ChromeRoute> Routes;
	struct ScalableFloat CountdownDuration;
	struct ScalableFloat NumOfTeamsToFinishBeforeFinalizeWinner;
	struct AthenaGameMessageData GameMsg_ChromeInfoMessage;
	TArray<struct AthenaGameMessageData> GameMsg_RaceCountdownMessage;
	struct AthenaGameMessageData GameMsg_FinishPointReached;
	TArray<class UClass*> ChromeSquadStarts;
	TArray<class UClass*> FinishedPlayerStates;
	class UClass* TeleportMutator;
	class UClass* FinishTraversePoint;
	bool bRaceStarted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Cobalt : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Cobalt : public AFortAthenaMutator_GameModeBase
{
public:
	struct FScriptMulticastDelegate OnTeleportComplete;
	struct FScriptMulticastDelegate OnRoundComplete;
	struct FScriptMulticastDelegate OnRoundCompleteUIFinished;
	struct FScriptMulticastDelegate OnRoundAdvanced;
	struct FScriptMulticastDelegate OnShowVsDisplay;
	struct FScriptMulticastDelegate OnHideVsDisplay;
	struct FScriptMulticastDelegate OnStormShieldArrayUpdated;
	struct FScriptMulticastDelegate OnPlaylistTimerValueUpdated;
	struct FScriptMulticastDelegate OnUpdatePreRoundDisplayVisibility;
	class UClass* StormShieldClass;
	TArray<struct TaggedPOI> POIList;
	struct ScalableFloat MinimumDistanceBetweenPOIs;
	struct ScalableFloat StormShieldRadiusMultiplierPerPlayer;
	struct ScalableFloat StormShieldMinRadiusMultiplier;
	struct ScalableFloat DelayBeforeStormShrink;
	struct ScalableFloat StormShieldShrinkLocationMinOffset;
	struct ScalableFloat StormShieldShrinkLocationMaxOffset;
	struct ScalableFloat StormShieldShrinkRate;
	struct ScalableFloat StormShieldGrowthRate;
	struct ScalableFloat DelayBeforeNextRound;
	struct ScalableFloat DelayBeforePushToSpectateMode;
	float DelayBeforeRoundEndDeathAndStinger;
	float DelayBeforeShowingRoundEndUI;
	struct ScalableFloat RadiusRatioForRespawn;
	struct ScalableFloat HeightOfSpawnIntoNewStormShield;
	struct ScalableFloat DistanceBetweenPlayersOfSameTeamDuringRespawn;
	struct FText TeleportingPlayersText;
	struct FText TeleportingSpectatorsText;
	struct ScalableFloat bResetPlayerAbilitiesOnRoundEnd;
	struct GameplayTag RiftTeleportEventTag;
	struct ScalableFloat AvailablePerkRerolls;
	struct ScalableFloat ResetPlayerInventoryBetweenRounds;
	struct ScalableFloat bKeepWarmupLoadoutsInFirstRound;
	TArray<EFortItemType> ItemTypesToRemove;
	bool bRespawnEnabled;
	struct ScalableFloat RoundDuration;
	struct ScalableFloat RespawnDelay;
	struct FortRespawnLogicData RespawnLogicData;
	float RespawnFallbackHeight;
	float RespawnTraceEnd;
	class UClass* MinimapMPC;
	struct ScalableFloat MinimumVersusScreenDuration;
	float POICameraViewPhaseDuration;
	struct ScalableFloat HideStormShieldDuringPOICameraViewPhase;
	float PreRoundDisplayDelay;
	float PreRoundDisplayDuration;
	float RoundStartWidgetSequenceAdditionalDelay;
	float UILastManStandingDisplayTime;
	TArray<struct AthenaGameMessageData> RoundGameMessageData;
	class UClass* StormShieldShrinkBeginSound;
	class UClass* VictoryStingerSound;
	class UClass* LoserStingerSound;
	float RoundEndStingerFadeDuration;
	class UClass* DeathEffectsComponentClass;
	struct FText RoundResultsText_Win;
	struct FText RoundResultsText_Lost;
	bool bShouldSkipWinLossScreen;
	struct ScalableFloat ShowTeammatesInMap;
	struct ScalableFloat ShowEnemiesInMap;
	struct ScalableFloat TeammateMapIconScale;
	struct ScalableFloat EnemyMapIconScale;
	class UClass* InventoryOverrideMutator;
	struct GameplayTag RoundCompleteAccoladeTag;
	struct GameplayTag RoundWinAccoladeTag;
	struct GameplayTag FirstEliminationAccoladeTag;
	class UClass* SafeZoneMaterialCollection;
	struct FName SafeZoneLocMaterialParamName;
	struct FName SafeZoneScaleMaterialParamName;
	float SafeZoneRadiusAtMaxSafeZoneScale;
	class UClass* StormEyeActorClass;
	struct ScalableFloat MaxSupplyDropSpawnTime;
	struct ScalableFloat MinSupplyDropSpawnTime;
	bool bTeleportComplete;
	bool bRoundStartWidgetSequenceRunning;
	class UClass* TeleportMutator;
	struct CobaltCombatStormShieldArray CombatStormShieldArray;
	int8_t ActiveRound;
	bool bIsCobaltFinished;
	int8_t FirstRound;
	TArray<byte> TeamWinners;
	TArray<byte> TeamLosers;
	TArray<class UClass*> PendingTeleportingPlayers;
	TArray<struct TimerHandle> MoveToSpectateTimerHandles;
	bool bClientPlaylistTimerStarted;
	class UClass* RoundEndStingerInstance;
	struct ScalableFloat bUseStrictBracketStructure;
	struct CobaltWidgetRoundData WidgetRoundData;
	bool bIsFinishedDisplayingRoundEndUI;
	class UClass* StormEyeActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ConditionalSounds : public AFortAthenaMutator
{
public:
	bool bShouldPlayDeathSoundEffects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ContextTutorial : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnShowButtonHighlight;
	bool bEnableTutorials;
	int bContextTutorialMinimumLevelOverride;
	class UClass* MessageSound;
	int ConcurrentActiveContextualTutorials;
	float CooldownTimeBetweenContextualTutorialTips;
	TArray<class UClass*> ContextualTutorialDefinitions;
	float InCombatGraceTime;
	float RayCastDistanceForNearbyEnemyCentimeter;
	float WorldMarkerPadding;
	struct FName WorldMarkerSockerName;
	bool bEnableWorldMarker;
	bool bEnableHighlight;
	TArray<class UClass*> Controllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ControlOnVictoryTimeDilation : public AFortAthenaMutator
{
public:
	struct ScalableFloat bAllowEndGameTimeDilation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CosmeticLoadoutOverride : public AFortAthenaMutator
{
public:
	TArray<struct CosmeticOverrideData> CosmeticOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeAllowItemDrop : public AFortAthenaMutator_AllowItemDrop
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeAllowItemPickUp : public AFortAthenaMutator_AllowItemPickUp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeAllowLootItem : public AFortAthenaMutator_AllowLootItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeAllowSpectateOtherTeams : public AFortAthenaMutator_AllowSpectateOtherTeams
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeAutoPickup : public AFortAthenaMutator_AutoPickup
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeCombineMinigameStats : public AFortAthenaMutator
{
public:
	class UClass* ChangingStat;
	struct StatEventFilter StatEventFilter;
	float StatMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_EnvironmentalDamage : public AFortAthenaMutator
{
public:
	struct GameplayTagQuery DamageTagQuery;
	float DamageMultiplier;
	bool bExcludeActorsAddedToVolume;
	float WorldActivationTime;
	EBuildingDamageTeamFilter TeamDamageFilter;
	EEnvironmentDamageFilter EnvironmentDamageFilter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeEnvironmentalDamage : public AFortAthenaMutator_EnvironmentalDamage
{
public:
	EAllowedToEdit AllowedToEditFilter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InfiniteResources : public AFortAthenaMutator
{
public:
	bool bInfiniteResources;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeInfiniteResources : public AFortAthenaMutator_InfiniteResources
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_IsPlayerTriggeredRespawnAllowed : public AFortAthenaMutator
{
public:
	bool bIsPlayerTriggeredRespawnAllowed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeIsPlayerTriggeredRespawnAllowed : public AFortAthenaMutator_IsPlayerTriggeredRespawnAllowed
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_IsWorldResourceWidgetVisible : public AFortAthenaMutator
{
public:
	bool bWoodResourceWidgetVisible;
	bool bStoneResourceWidgetVisible;
	bool bMetalResourceWidgetVisible;
	bool bGoldCurrencyResourceWidgetVisible;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeIsWorldResourceWidgetVisible : public AFortAthenaMutator_IsWorldResourceWidgetVisible
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MaxItemSlots : public AFortAthenaMutator
{
public:
	float MaxItemSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeMaxItemSlots : public AFortAthenaMutator_MaxItemSlots
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeModifyEmotes : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ResourceRateOverride : public AFortAthenaMutator
{
public:
	int ResourceRateOverrideIndex;
	TArray<class UClass*> ResourceRateOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeResourceRateOverride : public AFortAthenaMutator_ResourceRateOverride
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ResourcesEarned : public AFortAthenaMutator
{
public:
	float ResourcesEarnedMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeResourcesEarned : public AFortAthenaMutator_ResourcesEarned
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeRespawnWave : public AFortAthenaMutator
{
public:
	ECreativeRespawnWaveType RespawnWaveType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_RoundSettings : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeRoundSettings : public AFortAthenaMutator_RoundSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawnImmunityTime : public AFortAthenaMutator
{
public:
	float SpawnImmunityTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeSpawnImmunityTime : public AFortAthenaMutator_SpawnImmunityTime
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeTutorial : public AFortAthenaMutator
{
public:
	struct AthenaGameMessageData GameMsg_LandOnHub;
	struct AthenaGameMessageData GameMsg_LandOnIsland;
	struct AthenaGameMessageData GameMsg_Inventory;
	struct AthenaGameMessageData GameMsg_IslandMenu;
	struct AthenaGameMessageData GameMsg_BackToHub;
	struct AthenaGameMessageData GameMsg_ExploreFriendsIslands;
	struct AthenaGameMessageData GameMsg_Permissions;
	struct AthenaGameMessageData ServerShutdownInitiated;
	bool bHasSeenInventoryTutorial;
	bool bHasSeenReturnToCreativeHubTutorial;
	bool bHasSeenMyIslandTutorial;
	bool bHasSeenWelcomeTutorial;
	bool bHasSeenPermissionsTutorial;
	bool bCanShowMyIslandMessage;
	float ServerShutdownTimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_WeaponSettings : public AFortAthenaMutator
{
public:
	TArray<class UClass*> WeaponSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CreativeWeaponSettings : public AFortAthenaMutator_WeaponSettings
{
public:
	struct PrimaryAssetId EmptyHandsWeaponAssetId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Crucible : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnCrucibleLeaderboardUpdated;
	struct FScriptMulticastDelegate OnCrucibleParticipantBestTimesUpdated;
	struct FScriptMulticastDelegate OnCrucibleLatestCourseResultsUpdated;
	struct CrucibleCourseData CourseData;
	TArray<struct CrucibleStatValue> ParticipantBestTimes;
	EFortCrucibleControlType CurrentControlType;
	struct CrucibleCourseResults LatestCourseResults;
	float LatestServerTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CustomCharacterParts : public AFortAthenaMutator
{
public:
	TArray<struct PartOverrideData> PartOverrideCustomizations;
	struct ScalableFloat ShouldSwapSkins;
	struct GameplayTagContainer SkinMetaTagsToSkip;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CustomCharacterPartsByKills : public AFortAthenaMutator_CustomCharacterParts
{
public:
	TArray<struct CustomCharacterPartsByKillOverrideData> PartOverrideByKillsCustomizations;
	Unknown TotalKillsPerPlayerMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CustomRespawnLogic : public AFortAthenaMutator
{
public:
	struct FortRespawnLogicData_Teams RespawnSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_CustomStormMovement : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_CustomStormMovement : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnSafeZoneRouteChanged;
	TArray<struct SafeZoneRoute> SafeZoneRoutes;
	class UClass* PhaseProgressCurve;
	int SafeZoneRouteIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_DadBro : public AFortAthenaMutator_GameModeBase
{
public:
	class UClass* DadBroEncounter;
	struct Vector DadBroSpawnLocation;
	class UClass* DadBroEncounterInstance;
	class UClass* DadBroPawn;
	struct FScriptMulticastDelegate OnDadBroSpawnedDelegate;
	TArray<struct FortDadbroPickupDespawnData> PendingPickupDespawns;
	int MaxPickupsToDespawnAtOnce;
	float PickupTimeRangeToDespawnAtOnce;
	EDadBroState DadBroCodeState;
	float ServerTimeDadBroStarted;
	float TimeTakenToDefeatDadBro;
	class UClass* ListeningPawn;
	struct GameplayTag InitialLandingCueTag;
	struct FortRespawnLogicData RespawnLogicData;
	struct ScalableFloat UseLevelsForSizeModes;
	struct ScalableFloat OverrideTimeOfDay;
	struct ScalableFloat OverriddenTimeOfDay;
	struct ScalableFloat OverriddenTimeOfDayRate;
	struct ScalableFloat DelayGameOverOnPlayerWin;
	struct ScalableFloat DelayGameOverOnDadBroWin;
	struct ScalableFloat DadBroFirstSafeZoneIndex;
	struct ScalableFloat HideSafeZoneCircles;
	struct ScalableFloat DadBroDelayBeforeSpawning;
	struct ScalableFloat DadBroApplySpawnImpulse;
	struct ScalableFloat DadBroImpulseForce;
	struct ScalableFloat DadBroImpulseRadius;
	struct ScalableFloat DadBroVerticalImpulseOffset;
	struct ScalableFloat OverridePickUpDespawnTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_DamageZoneOverride : public AFortAthenaMutator
{
public:
	TArray<struct FName> BoneNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_DBNOSetting : public AFortAthenaMutator
{
public:
	TArray<struct DBNOSettingsByActor> SettingsByActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_DeimosSurvival : public AFortAthenaMutator
{
public:
	struct TSoftClassPtr<UObject> AdjustSafezoneCentersQuery;
	TArray<struct FortAthenaMutator_SurvivalObjectiveData> ObjectivesData;
	struct AthenaGameMessageData GameMsg_Intro;
	struct AthenaGameMessageData GameMsg_CompleteObjective;
	struct AthenaGameMessageData GameMsg_DownTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_DeployToVehicle : public AFortAthenaMutator
{
public:
	class UClass* VehicleClass;
	struct FText VehicleDisplayName;
	class UClass* GameplayEffectToApplyOnDeploy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_DisableReplayRecordings : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Disco : public AFortAthenaMutator
{
public:
	struct ScalableFloat GoalScoreToWin;
	struct ScalableFloat PointAccrualFrequency;
	struct ScalableFloat LastRespawnableSafeZone;
	struct ScalableFloat LastSafeZone;
	struct FortRespawnLogicData RespawnLogicData;
	int LastRespawnableSafeZoneIndex;
	bool bRespawnWarningGiven;
	int LastSafeZoneIndex;
	struct ControlPointAssetData ControlPointAssets;
	TArray<struct ControlPointSpawnData> ControlPointSpawnData;
	TArray<struct ControlPointInstanceData> SpawnedControlPoints;
	TArray<class UClass*> DancingPlayerList;
	TArray<class UClass*> PrevDancingPlayerList;
	float TimeUntilPointAccrual;
	int SentDiscoOpenedMessagesIndex;
	struct AthenaGameMessageData GameMsg_Intro;
	struct AthenaGameMessageData GameMsg_FirstCapturePointsEnabled;
	struct AthenaGameMessageData GameMsg_SecondCapturePointsEnabled;
	struct AthenaGameMessageData GameMsg_ThirdCapturePointsEnabled;
	struct AthenaGameMessageData GameMsg_LastCapturePointsEnabled;
	struct AthenaGameMessageData GameMsg_CapturePointsEnabled;
	struct AthenaGameMessageData GameMsg_CapturePointsDisabled;
	struct AthenaGameMessageData GameMsg_EnemyCapturedAllPoints;
	struct AthenaGameMessageData GameMsg_AlliesCapturedAllPoints;
	struct AthenaGameMessageData GameMsg_AllyCapturePointLost;
	struct AthenaGameMessageData GameMsg_EnemyAboutToWin;
	struct AthenaGameMessageData GameMsg_AlliesAboutToWin;
	struct AthenaGameMessageData GameMsg_NoMoreRespawnsWarning;
	struct AthenaGameMessageData GameMsg_NoMoreRespawns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Encounter : public AFortAthenaMutator
{
public:
	struct ScalableFloat ShouldSpawnEncounter;
	class UClass* EncounterSettings;
	class UClass* CurrentEncounter;
	bool bUsesAnimationSharing;
	struct TSoftClassPtr<UObject> AnimationSharingSetup;
	struct FName LootTierGroupOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutator_EQSActorProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEQSActorSpawnerHelperDestroyActorsInArea : public UObject
{
public:
	struct Vector OverlapCheckExtent;
	TArray<class UClass*> ActorClassesToDestroy;
	bool bDestroyBuildingActorsOnSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEQSActorSpawner : public UObject
{
public:
	class UClass* OwningActorSpawnerMutator;
	TArray<class UClass*> SpawnedActors;
	TArray<class UClass*> SpawnerHelperDestroyActorsInAreaList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_EQSActorSpawner : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnEQSActorSpawningPhaseStarted;
	struct FScriptMulticastDelegate OnEQSActorSpawningPhaseEnded;
	struct FScriptMulticastDelegate OnActorSpawnedDelegate;
	struct FScriptMulticastDelegate OnAISpawnedDelegate;
	struct FScriptMulticastDelegate OnPrepareEQS;
	class UClass* MutatorBasePlacementQuery;
	float MutatorBaseQueryingAttemptIntervalTimeSeconds;
	TArray<struct EQSActorSpawnerData> ActorSpawningDatas;
	TArray<class UClass*> ActorSpawners;
	Unknown AIPawnSpawnRequestIdToEQSActorSpawnerMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutator_EQSProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ExternalEmote : public AFortAthenaMutator
{
public:
	TArray<struct ExternalEmoteCategory> GlobalEmotes;
	TArray<struct ExternalEmoteCategory> DynamicEmotes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_FactionCustomCharacterParts : public AFortAthenaMutator_CustomCharacterParts
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_FallDamageMultiplier : public AFortAthenaMutator
{
public:
	float FallDamageMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_FF2 : public AFortAthenaMutator_GameModeBase
{
public:
	TArray<class UClass*> FoundationsToWatch;
	TArray<class UClass*> AllObjectiveFoundations;
	TArray<struct TargetDataEntry> TargetData;
	TArray<struct TeamSetupDataEntry> TeamSetupData;
	struct ScalableFloat LastRoundLength;
	int CurrentRound;
	float CurrentHealth;
	float MaxHealth;
	float EndOfLastRoundServerTime;
	struct AthenaGameMessageData GameMsg_1x1_LowHealth;
	struct AthenaGameMessageData GameMsg_3x3_LowHealth;
	struct AthenaGameMessageData GameMsg_5x5_LowHealth;
	struct AthenaGameMessageData GameMsg_Round_1_Done;
	struct AthenaGameMessageData GameMsg_Round_2_Done;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Fill : public AFortAthenaMutator
{
public:
	class UClass* FloorActorClass;
	struct ScalableFloat SpawnHeight;
	struct ScalableFloat ZKillOffset;
	struct ScalableFloat ZMovementToleranceOffset;
	struct ScalableFloat BuildableOffset;
	struct ScalableFloat CanBuildOnLava;
	class UClass* LavaFloor;
	struct AthenaGameMessageData GameMsg_LavaMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Flag : public AFortAthenaMutator
{
public:
	struct FText GameMsgText_Intro;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ForceWeaponToAllowTargeting : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InventoryOverride : public AFortAthenaMutator
{
public:
	bool bWantsAutoTDMActivation;
	struct ScalableFloat bRunForAthenaGameParticipantsOnly;
	struct ScalableFloat bSelectRandomLoadoutOnce;
	struct ScalableFloat bSelectRandomLoadoutForAll;
	struct ScalableFloat bSelectRandomLoadoutPerPlayer;
	struct ScalableFloat bNoRepeat;
	EAthenaLootDropOverride DropAllItemsOverride;
	EAthenaLootDropOverride TrapDropOverride;
	EAthenaLootDropOverride WeaponDropOverride;
	EAthenaLootDropOverride MaterialDropOverride;
	EAthenaLootDropOverride GadgetDropOverride;
	EAthenaLootDropOverride ConsumableDropOverride;
	EAthenaLootDropOverride AmmoDropOverride;
	EAthenaInventorySpawnOverride InventoryUpdateOverride;
	TArray<struct ItemLoadoutContainer> InventoryLoadouts;
	struct ItemLoadoutContainer AlwaysGiveLoadout;
	struct ScalableFloat bPreventPickaxe;
	struct ScalableFloat bPreventAllDefaultItems;
	TArray<class UClass*> PreventDefaultItems;
	int InventoryLoadoutIndex;
	TArray<struct ItemLoadoutTeamMap> TeamLoadouts;
	TArray<EFortItemType> ItemTypesToRemoveOnReset;
	struct ScalableFloat bKeepUnchangedItemsOnReset;
	Unknown LoadoutRandomizationPerPlayer;
	Unknown LoadoutIndexMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_OverrideInventoryOnce : public AFortAthenaMutator_InventoryOverride
{
public:
	Unknown AlreadyProcessedPlayerStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GalileoEquipment : public AFortAthenaMutator_OverrideInventoryOnce
{
public:
	class UClass* StopDropsByApplyEffect;
	bool bShouldStopDropsAfterApplying;
	int SlotToSwapToAfterGrant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GameDifficulty : public AFortAthenaMutator
{
public:
	struct ScalableFloat GameDifficultyOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioEventForwarder : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GamePhaseMessage : public AFortAthenaMutator
{
public:
	Unknown GamePhaseMessageData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GameplayEffect : public AFortAthenaMutator
{
public:
	class UClass* GameplayEffectClass;
	float GameplayEffectLevel;
	bool bEnableMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GameStartCountdown : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnGameStartCountdownBegin;
	struct FScriptMulticastDelegate OnGameStartCountdownEnd;
	class UClass* CountdownMusicStinger;
	struct ScalableFloat CountdownDuration;
	struct ScalableFloat StartingCountdownInteger;
	bool bCountdownTimerRunning;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GenerateOverlapEventsOverride : public AFortAthenaMutator
{
public:
	bool bGenerateOverlapEventsOverrideValue;
	float Radius;
	struct Vector CenterLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GG : public AFortAthenaMutator
{
public:
	struct ScalableFloat UseInfiniteAmmo;
	struct ScalableFloat GameIsReverse;
	struct ScalableFloat bShareSquadKills;
	struct ScalableFloat FinalTierSize;
	struct ScalableFloat ElimsWithFinalTierToWin;
	TArray<struct GunGameGunEntry> WeaponEntries;
	int ScoreToWin;
	TArray<struct AthenaGameMessageData> IntroMessages;
	class UClass* CachedContext;
	Unknown AwardEntriesAtElimMap;
	Unknown PlayerData;
	struct FScriptMulticastDelegate OnLocalPlayerAwardedWeapon;
	struct FScriptMulticastDelegate OnOtherPlayerAwardedWeapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GiveCosmeticsOnItemPickup : public AFortAthenaMutator
{
public:
	Unknown PickupToSkinDataMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GiveItemsAtGamePhase : public AFortAthenaMutator
{
public:
	EAthenaGamePhase PhaseToGiveItems;
	TArray<struct ItemsToGiveAtPhase> ItemsToGive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GiveItemsAtGamePhaseStep : public AFortAthenaMutator
{
public:
	EAthenaGamePhaseStep PhaseToGiveItems;
	TArray<struct ItemsToGive> ItemsToGive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GliderOverride : public AFortAthenaMutator
{
public:
	class UClass* GliderOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GliderRedeploy : public AFortAthenaMutator
{
public:
	bool bGliderRedeploy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSharedGravityMovementData : public UDataAsset
{
public:
	TArray<struct GravityMovementData> GravityData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_GravityMultiplier : public AFortAthenaMutator
{
public:
	int GravityOverride;
	class UClass* GravityPresets;
	TArray<struct GravityMovementData> CustomGravityData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Hardcore : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_HealthAndShield : public AFortAthenaMutator
{
public:
	EAthenaMutatorEvaluators NumericalMutatorOverride;
	float MaxHealth;
	float StartingHealth;
	float MaxShield;
	float StartingShield;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Heist : public AFortAthenaMutator
{
public:
	class UClass* ExitCraftInfo;
	TArray<struct HeistExitCraftSpawnData> HeistExitCraftSpawnData;
	TArray<struct HeistBlingDropSpawnData> HeistBlingDropSpawnData;
	class UClass* HeistVictorySoundCue;
	struct ScalableFloat SpawnExitCraftInitialDelay;
	struct ScalableFloat BlingCarryingEnemiesVisibleTime;
	TArray<struct HeistExitCraftData> SpawnedExitCraftList;
	bool bCurrExitCraftDeparted;
	TArray<class UClass*> ExitCraftOverlappingPawns;
	float SpawnExitCraftTime;
	int CurrExitCraftIndexToSpawn;
	float SupplyDropStartingAngle;
	float ExitCraftStartingAngle;
	int CurrBlingSupplyDropIndexHandled;
	TArray<int> RemainingExitCraftSpawnIndexes;
	TArray<int> RemainingSupplyDropSpawnIndexes;
	int NumUnspawnedExitCrafts;
	int NumSpawnedExitCrafts;
	int NumDepartedExitCrafts;
	TArray<int> NumPlayersAliveOnDeparture;
	int JewelsLostToStorm;
	int SafesLostToStorm;
	Unknown JewelHeldByTeamMap;
	struct GameplayTag BlingTrackingCategoryTag;
	struct GameplayTag SafeSupplyDropTag;
	struct GameplayTag BlingItemTag;
	struct GameplayTag CarryingBlingItemTag;
	struct GameplayTag ExitCraftTag;
	struct GameplayTag BlingLootItemTag;
	float LastAcquiredEnemyMsgTime;
	float MinTimeAllowedBetweenAcquiredEnemyMessages;
	struct AthenaGameMessageData GameMsg_Intro;
	struct AthenaGameMessageData GameMsg_InitialBlingIncoming;
	struct AthenaGameMessageData GameMsg_InitialExitCraftsIncoming;
	struct AthenaGameMessageData GameMsg_FinalExitCraftIncoming;
	struct AthenaGameMessageData GameMsg_HeistCompleted;
	struct AthenaGameMessageData GameMsg_HeistCompletedOneRemains;
	struct AthenaGameMessageData GameMsg_DiamondAcquiredByEnemy;
	struct AthenaGameMessageData GameMsg_DiamondAcquiredByAlly;
	struct AthenaGameMessageData GameMsg_DiamondAcquiredByAllyNoVans;
	struct AthenaGameMessageData GameMsg_DiamondAcquiredByLocalPlayer;
	struct AthenaGameMessageData GameMsg_DiamondAcquiredByLocalPlayerNoVans;
	struct SlateBrush FriendlyCarrierBrush;
	struct Vector2D FriendlyCarrierBrushScale;
	struct SlateBrush CompassFriendlyCarrierBrush;
	struct SlateBrush EnemyCarrierBrush;
	struct Vector2D EnemyCarrierBrushScale;
	struct SlateBrush CompassEnemyCarrierBrush;
	class UClass* IconToShowInSquadBar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_HideHUDElements : public AFortAthenaMutator
{
public:
	Unknown HUDElementsToHideAtGamePhaseStart;
	TArray<struct HUDElementsToHideData> HUDElementsToHideDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Hover : public AFortAthenaMutator
{
public:
	struct AthenaGameMessageData GameMsg_Intro;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_HUDElementVisibility : public AFortAthenaMutator
{
public:
	struct HUDElementVisibilityRepData HUDElementVisbilityData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Infiltration : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Infiltration : public AFortAthenaMutator_GameModeBase
{
public:
	struct ScalableFloat GroundTimer;
	struct InfiltrationTeamInfo InfiltrationTeamInfos;
	struct ScalableFloat CaptureTimeRequired;
	struct ScalableFloat CaptureRange;
	struct IconDisplayData IntelIconData;
	struct IconDisplayData IntelCapturePointIconData;
	struct SlateBrush Brush_UpArrow;
	struct SlateBrush Brush_DownArrow;
	float VerticalBuffer;
	struct ScalableFloat TimeToBlockRespawnBetweenRounds;
	struct ScalableFloat NumOfActiveCapturePoints;
	class UClass* PerkUnlockedGameplayEffectClass;
	struct InfiltrationModeState ModeState;
	class UClass* CurrentSpawnPoint;
	class UClass* CurrentCapturePoint;
	TArray<struct InfiltrationPOIInfo> POIInfo;
	struct GameplayTag RoundAccoladeTag;
	struct GameplayTag RoundWinAccoladeTag;
	struct GameplayTag MostRoundsAccoladeTag;
	struct GameplayTag PlayedInfAccoladeTag;
	struct FText RoundResultsText_Attacker_Win;
	struct FText RoundResultsText_Attacker_Lose;
	struct FText RoundResultsText_Defender_Win;
	struct FText RoundResultsText_Defender_Lose;
	TArray<struct RoundCosmeticInfo> RoundCosmeticInfo;
	struct ScalableFloat bRoundIntroEnabled;
	class UClass* DilationCurve;
	Unknown CachedRoundHelper;
	struct Vector IntelLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ShowPlacard : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnShowPlacard_Finished;
	struct FScriptMulticastDelegate OnShowPlacard_SetWidgetVisibility;
	EShowPlacardPhase ShowPlacardPhase;
	float WaitBeforeInitialFadeOutDuration;
	float FadeDuration;
	float ShowPlacardDuration;
	float ServerWaitsOnBlackScreenDuration;
	Unknown CameraActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InfiltrationRoundPlacard : public AFortAthenaMutator_ShowPlacard
{
public:
	class UClass* RoundInfoInterfaceRedirectReplicationObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InfiniteAmmo : public AFortAthenaMutator
{
public:
	bool bInfiniteAmmo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InteractionDistance : public AFortAthenaMutator
{
public:
	float InteractionDistanceOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InventoryOverride_Bucket : public AFortAthenaMutator_InventoryOverride
{
public:
	TArray<struct ItemLoadoutBucket> LoadoutBuckets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_InventoryOverride_TeamBucket : public AFortAthenaMutator_InventoryOverride
{
public:
	TArray<struct TeamBucketDefinition> TeamBuckets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ItemDropOnDeath : public AFortAthenaMutator
{
public:
	ERespawnRequirements RespawnRequirements;
	struct ScalableFloat PercentAmmoToDrop;
	struct ScalableFloat AmmoDespawnTime;
	struct ScalableFloat AmmoStormDespawnTime;
	struct ScalableFloat MaxAmmoTypeDrops;
	struct ScalableFloat MaxResourceTypeDrops;
	TArray<struct ItemsToDropOnDeath> ItemsToDrop;
	struct ScalableFloat ShouldNonParticipantAIAlsoDropItems;
	TArray<struct FName> LootTierGroupsToDrop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ItemPromotion : public AFortAthenaMutator
{
public:
	class UClass* UpgradeTable;
	EFortRarity HighestUpgradeTier;
	struct GameplayTagContainer ValidWeaponTags;
	struct ScalableFloat bPromoteAllItemsOnRespawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_JoinInProgressSpawnLocation : public AFortAthenaMutator_GameModeBase
{
public:
	struct FortRespawnLogicData SpawnLogicData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_JumpPenalty : public AFortAthenaMutator
{
public:
	bool bApplyJumpPenalty;
	struct ScalableFloat bOverridePenalties;
	TArray<struct AthenaJumpPenalty> Penalties;
	struct ScalableFloat bOverrideResetTime;
	struct ScalableFloat ResetTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_KillsFeedback : public AFortAthenaMutator
{
public:
	bool bShouldDisplayKillFeed;
	bool bShouldDisplayKillsInSocialMenu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Leave : public AFortAthenaMutator_GameModeBase
{
public:
	struct TSoftClassPtr<UObject> CustomDBNOWidget;
	struct TSoftClassPtr<UObject> CustomReviveIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_LoadoutSwap : public AFortAthenaMutator
{
public:
	EAthenaGamePhase GamePhaseToStart;
	TArray<struct PlayerLoadout> Loadouts;
	bool bRandomizeLoadOuts;
	struct ScalableFloat AreLoadoutsRandomized;
	struct ScalableFloat WarningTime;
	float ServerWorldTimeOfNextSwap;
	TArray<struct PlayerLoudoutEntry> NextItemsToGrant;
	TArray<int> RemainingLoadouts;
	TArray<class UClass*> ItemstoAlwaysRemove;
	TArray<class UClass*> ItemsWithInfiniteAmmo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_LootChoice : public AFortAthenaMutator
{
public:
	ECustomLootSelection LootSelection;
	TArray<struct CustomLootOverrideData> LootOverrideDataList;
	bool bUsingExperimentalTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MarkerUtilities : public AFortAthenaMutator
{
public:
	struct ScalableFloat bMarkIndicatedPlayersOnCompass;
	struct FortAthenaCompassIcon IndicatedPlayerCompassIcon;
	struct ScalableFloat bMarkIndicatedPlayersOnMap;
	struct MarkerUtilitiesMapIcon IndicatedPlayerMapIcon;
	struct ScalableFloat NumTopScoringTeamsToShowOnMap;
	struct ScalableFloat bDisplayLocalPlayerAsTopScoringTeamsOnMap;
	struct ScalableFloat bOverlayTopScoringTeamIndicatorOnLocalPlayerOnMap;
	TArray<struct MarkerUtilitiesMapPlacementIcon> PlacementBasedMapIcons;
	struct GameplayTag TopScoringPlayerSpecialActorTag;
	struct ScalableFloat TopScoringPlayerSpecialActorRepInterval;
	struct ScalableFloat NumTopScoringTeamsToShowOnCompass;
	TArray<struct MarkerUtilitiesCompassPlacementIcon> PlacementBasedCompassIcons;
	struct ScalableFloat bDrawLocalPlayerTopScoringTeamOnCompass;
	struct ScalableFloat WorldIndicator_IndicatorZOffset;
	struct ScalableFloat bWorldIndicator_IndicatorClampToScreen;
	struct ScalableFloat bDrawMarkedActorStencils;
	struct FName StencilName;
	TArray<struct MarkerUtilitiesTeamPlacement> ReplicatedTeamPlacements;
	struct ScalableFloat bUseAthenaTeamScoreForRanking;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Mash : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnTeamScoreMultiplierChanged;
	struct FScriptMulticastDelegate OnPlayerDataChanged;
	struct FScriptMulticastDelegate OnPhaseChanged;
	struct FScriptMulticastDelegate OnMashVictory;
	struct FScriptMulticastDelegate OnPlayerFriendLeaderboardUpdated;
	bool bOverrideReplicationSettingsDebug;
	struct ScalableFloat MaxAIPerClient;
	struct ScalableFloat ReplicateGameplayCues;
	EMashDifficulty CurrentDifficulty;
	TArray<class UClass*> StormMaterialOverrides;
	class UClass* ObjectiveObjectClass;
	class UClass* FinalPhaseObjectiveObjectClass;
	struct GameplayTag StartingAreaTag;
	struct GameplayTag ObjectiveAreaTag;
	struct ScalableFloat IsPreparationPhase;
	struct ScalableFloat IsSurvivePhase;
	struct ScalableFloat IsMovingPhase;
	struct ScalableFloat IsAftermathPhase;
	struct ScalableFloat IsFinalPhase;
	struct ScalableFloat RefillPlayerHealth;
	struct ScalableFloat RefillPlayerShield;
	struct ScalableFloat OnlyRespawnAtNewPhase;
	struct ScalableFloat ShouldRespawnDeadPlayers;
	float SpawnScoreMultiplierTraceStartHeight;
	float SpawnSscoreMultiplierTraceEndHeight;
	struct MashAreaSpecialActorData AreaSpecialActorData;
	struct MashScoreMultiplierSpawnData ScoreMutliplierSpawnData;
	class UClass* DifficultyEncounterSettingsStatic;
	class UClass* DifficultyEncounterSettingsDynamic;
	class UClass* DifficultyEncounterSettingsFinalPhase;
	struct ScalableFloat DisplayIntroGameMsg;
	struct AthenaGameMessageData GameMsg_Intro;
	struct ScalableFloat DisplayOnTeamMultiplierIncreasedGameMsg;
	struct AthenaGameMessageData GameMsg_OnTeamMultiplierIncreased;
	struct MashDifficultySettings DifficultySettings;
	bool bUseLootTierOverrides;
	TArray<struct MashLootTierOverrideAssetData> LootTierOverrides;
	struct GameplayTag HeadshotGameplayTag;
	struct MashScoreData ScoreEventList;
	struct ScalableFloat ObjectiveAreaCompletedScoreMultiplierBonus;
	struct ScalableFloat RiftDestroyedScoreMultiplierBonus;
	struct ScalableFloat StreakScoreMultiplierUseSpecialMechanicToActivate;
	struct ScalableFloat StreakScoreMultiplierResetTime;
	struct ScalableFloat StreakScoreMultiplierKillThreshold;
	struct ScalableFloat StreakScoreMultiplierTimeThresholdToActivate;
	struct ScalableFloat StreakScoreMultiplierMaxLevel;
	struct ScalableFloat StreakScoreMultiplierValue;
	TArray<struct FString> PlayerStatsNames;
	int FriendsLeaderboardDisplayedNumber;
	float TimeSecRetreiveLeaderboardTimeOut;
	bool bIsGameOver;
	bool bIsRespawningAllowed;
	byte CurrentObjectiveAreaIndex;
	byte TotalObjectiveAreaCount;
	TArray<struct MashObjectiveAreaInstanceData> ObjectiveAreas;
	class UClass* CurrentEncounter;
	class UClass* FinalPhaseEncounter;
	struct FName CurrentLootTierGroupOverride;
	byte TeamScoreMultiplier;
	struct MashPlayerDataArray PlayerDataArray;
	EMashPhase CurrentPhase;
	class UClass* RespawnLocationActor;
	TArray<struct RiftDamagerInfo> RiftDamagerInfo;
	class UClass* FinalBoss;
	struct MashFriendsLeaderboard LocalPlayerFriendsLeaderboard;
	struct MashLeaderboardQuery LocalPlayerFriendsLeaderboardQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MatchCondition : public AFortAthenaMutator
{
public:
	struct ScalableFloat bEnabled;
	EMatchConditionMutatorTimingType TimingType;
	class UClass* MatchConditionManager;
	bool bSatisfied;
	bool bLocked;
	bool bLockedPermanently;
	TArray<struct MatchConditionMutatorTeamData> TeamDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MatchCondition_ConnectedTeams : public AFortAthenaMutator_MatchCondition
{
public:
	struct ScalableFloat MinConnectedTeams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MatchCondition_DeadTeams : public AFortAthenaMutator_MatchCondition
{
public:
	struct ScalableFloat NumTeamsToDie;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_MatchConditionManagerMutator : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MatchConditionManager : public AFortAthenaMutator
{
public:
	TArray<byte> TeamNums;
	TArray<class UClass*> MatchConditionMutators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MaxWorldResource : public AFortAthenaMutator
{
public:
	int MaxWorldResources;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MinigameDamageSupression : public AFortAthenaMutator
{
public:
	bool bPreventPreGameDamage;
	bool bPreventPostGameDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Missions : public AFortAthenaMutator
{
public:
	TArray<class UClass*> Missions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MovementSpeed : public AFortAthenaMutator
{
public:
	float MovementSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_MusicEvents : public AFortAthenaMutator
{
public:
	TArray<struct FortMutatorGamePhaseMusicEvent> GamePhaseEvents;
	TArray<struct FortMutatorGamePhaseStepMusicEvent> GamePhaseStepEvents;
	struct FortMutatorMusicEvent MatchEndWinEvent;
	struct FortMutatorMusicEvent MatchEndLoseEvent;
	struct FortMutatorMusicEvent MatchEndNeutralEvent;
	float CrossfadeTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_NamePlate : public AFortAthenaMutator
{
public:
	EIndicatorDisplayMode DisplayMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Omaha : public AFortAthenaMutator
{
public:
	struct OmahaCharacterVariantInfoData CharacterVariantInfoData;
	struct OmahaCharacterVariantInfoData SpecialCharacterVariantInfoData;
	int SpecialTeamMembersCount;
	struct ScalableFloat HomeTeamIndex;
	struct ScalableFloat AwayTeamIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_OnDmgDamageSelf : public AFortAthenaMutator
{
public:
	float DamageToDeal;
	bool bRequiresNonZeroDamage;
	int TargetQueryIndex;
	int WeaponQueryIndex;
	TArray<struct GameplayTagQuery> TargetQueries;
	TArray<struct GameplayTagQuery> WeaponQueries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOperationsCharacterPartsFactionAuthority : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_OperationsCustomCharacterParts : public AFortAthenaMutator_FactionCustomCharacterParts
{
public:
	TArray<struct PartOverrideData> FactionCustomizations_Alter;
	TArray<struct PartOverrideData> FactionCustomizations_Ego;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Papaya : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Payback : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Payback : public AFortAthenaMutator
{
public:
	class UClass* PaybackMarkerEffectClass;
	struct ScalableFloat bEffectLastsUntilRespawn;
	struct ScalableFloat DefaultEffectDuration;
	struct GameplayTag SetByCallerDurationTag;
	struct GameplayTag ShowPaybackHUDTag;
	struct ScalableFloat bNewEffectPerKill;
	struct ScalableFloat ExtraPointsPerPaybackKill;
	struct FScriptMulticastDelegate OnPaybackKill;
	TArray<struct PaybackMutatorEffectData> PaybackEffectDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PerkSystemMutator : public AFortAthenaMutator
{
public:
	int MinPerksToUnlock;
	int MaxPerksToUnlock;
	struct PerkMutatorData MutatorData;
	struct ScalableFloat MaxTimeAtPerkScreen;
	struct ScalableFloat MaxTimeToBlockRespawn;
	bool bDelayedPerkSelection;
	TArray<class UClass*> DefaultPerks;
	Unknown SafetyTimerMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PickaxeDamage : public AFortAthenaMutator
{
public:
	bool PickaxeInstantDestroy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutator_PlayerBotSpawningPolicyData : public UFortAthenaMutator_SpawningPolicyData
{
public:
	bool bUseCustomizationInEditor;
	class UClass* PlayerBotPawn;
	struct ScalableFloat Skill;
	TArray<class UClass*> SkillSetOverrideClasses;
	class UClass* StartupInventory;
	class UClass* CachedGameMode;
	float MaxTraceHeight;
	float MinTraceHeight;
	float InitialSpawnDelay;
	float SpawnDelay;
	struct TSoftClassPtr<UObject> CosmeticCustomizationData;
	struct ScalableFloat DefaultCosmeticLibraryWeight;
	struct TSoftClassPtr<UObject> EmotesDataTable;
	struct TSoftClassPtr<UObject> CosmeticLibraryWeightRegionOverride;
	struct TSoftClassPtr<UObject> AISpawnerData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSettingsComponentBase : public UActorComponent
{
public:
	float MaxHealth;
	float StartingHealth;
	float MaxShield;
	float StartingShield;
	EDBNOMutatorType DBNOSetting;
	float RespawnHeight;
	float RespawnTime;
	EFortMinigamePlayerSpawnLocationSetting SpawnLocationSetting;
	float SpawnImmunityTime;
	EAthenaLootDropOverride DropAllItemsOverride;
	EAthenaLootDropOverride DropAllResourcesOverride;
	TArray<struct ItemAndCount> InventoryItems;
	struct FString CharacterOverride;
	struct FString PickaxeOverride;
	struct FString BackpackOverride;
	struct FString GliderOverride;
	int HealthSiphonValue;
	int WoodSiphonValue;
	int StoneSiphonValue;
	int MetalSiphonValue;
	int GoldSiphonValue;
	float DamageToDeal;
	bool bRequiresNonZeroDamage;
	int TargetQueryIndex;
	int WeaponQueryIndex;
	float FallDamageMultiplier;
	int GravityOverride;
	int PlayerLives;
	byte TeamToMoveToWhenOutOfSpawns;
	float EliminationsToScoreMultiplier;
	float AssistsToScoreMultiplier;
	float HarvestRateMutliplier;
	int ResourceRateOverrideIndex;
	EBuildingMode BuildingMode;
	bool bAimAssistAllowed;
	bool bIsPlayerTriggeredRespawnAllowed;
	byte OnlyAllowRespawningIfPlayerStartPadsFound;
	bool bInstantReload;
	bool bInfiniteAmmo;
	bool bInfiniteResources;
	bool bAllowItemDrop;
	bool bAllowItemPickUp;
	float MaxItemSlots;
	bool bWoodResourceWidgetVisible;
	bool bStoneResourceWidgetVisible;
	bool bMetalResourceWidgetVisible;
	bool bGoldCurrencyResourceWidgetVisible;
	bool bApplyJumpPenalty;
	bool bGliderRedeploy;
	bool bFlyEnabled;
	bool bAllowFlightSprint;
	int FlySpeedModifierIndex;
	bool bAllowFriendlyFire;
	bool bVehiclesDamageObjects;
	int MaximumResources;
	EIndicatorDisplayMode NameplateDisplayMode;
	EPlayerIndicatorDisplayMode PlayerHealthIndicatorDisplayMode;
	ECreativeBossDisplayMode CreativeBossHealthDisplayMode;
	struct PropertyOverrideData AbilitySetOptionData;
	TArray<struct FString> EnabledSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerClassSettingsComponent : public UFortPlayerSettingsComponentBase
{
public:
	byte ClassSlotIndex;
	struct FString ClassName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerSettingsBase : public AFortAthenaMutator
{
public:
	class UClass* AbilitySetToGrant;
	class UClass* AbilitySetOptions;
	class UClass* GravityPresets;
	TArray<class UClass*> ResourceRateOverrides;
	TArray<struct GameplayTagQuery> TargetQueries;
	TArray<struct GameplayTagQuery> WeaponQueries;
	class UClass* EliminationStat;
	struct StatEventFilter EliminationScoreStatEvent;
	class UClass* AssistStat;
	struct StatEventFilter AssistScoreStatEvent;
	class UClass* DefaultScopeSettings;
	class UClass* CurrentScopeSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerClassSettings : public AFortAthenaMutator_PlayerSettingsBase
{
public:
	byte NumClassSlots;
	class UClass* ClassSettingsClass;
	Unknown ClassSettingsDataMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerDamage : public AFortAthenaMutator
{
public:
	bool bIsUsingHitResult;
	struct GameplayTagQuery DamageTagQuery;
	float DamageMultiplier;
	TArray<struct BonePlayerDamageMultiplier> BoneDamageMultipliers;
	EPlayerDamageHeightRatioDetectionType DetectionType;
	struct ScalableFloat HeightRatio;
	struct ScalableFloat HeightRatioDamageMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerFly : public AFortAthenaMutator
{
public:
	bool bFlyEnabled;
	bool bAllowFlightSprint;
	int FlySpeedModifierIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerHealthIndicator : public AFortAthenaMutator
{
public:
	EPlayerIndicatorDisplayMode DisplayMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerMarker : public AFortAthenaMutator
{
public:
	class UClass* PlayerMarkerMarkerEffectClass;
	struct ScalableFloat MaxTeamAliveCountForMarker;
	TArray<struct PlayerMarkerMutatorEffectData> PlayerMarkerEffectDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerTeamSettingsComponent : public UFortPlayerSettingsComponentBase
{
public:
	byte TeamIndex;
	struct FString TeamName;
	int TeamColorIndex;
	bool bRunOutTimeToWin;
	byte DefaultClassSlot;
	ECreativeRespawnWaveType RespawnWaveType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerTeamSettings : public AFortAthenaMutator_PlayerSettingsBase
{
public:
	class UClass* TeamSettingsClass;
	Unknown TeamSettingsDataMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerZoneSettingsComponent : public UFortPlayerSettingsComponentBase
{
public:
	EAthenaTimeOfDayOverride TimeOfDayOverride;
	EAthenaTODPostProcess PostProcessOverride;
	EAthenaLightIntensityOverride LightIntensityOverride;
	EAthenaTODColor LightColorOverride;
	EAthenaFogDensityOverride FogDensityOverride;
	EAthenaTODColor FogColorOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlayerZoneSettings : public AFortAthenaMutator_PlayerSettingsBase
{
public:
	class UClass* ZoneSettingsClass;
	TArray<struct TSoftClassPtr<UObject>> PostProcessOverrideActors;
	struct MutatorPlayerSettingsData ZoneSettingsData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PlaySoundOnRespawn : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_POIOverride : public AFortAthenaMutator
{
public:
	TArray<struct MapLocation> MapLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Pow : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate TimeRemainingUpdated;
	struct FortRespawnLogicData_Teams RespawnSettings;
	TArray<struct AthenaGameMessageData> IntroMessages;
	struct AthenaGameMessageData RespawningOffMessage;
	struct AthenaGameMessageData RespawnsWillBeOffMessage;
	struct ScalableFloat RespawningTimeAllowed;
	struct ScalableFloat GrantMaxShieldAtRespawnsOff;
	struct ScalableFloat GrantMaxHealthAtRespawnsOff;
	struct PowPlayerDataArray PlayerData;
	bool bRespawningCurrentlyAllowed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_PreloadAssets : public AFortAthenaMutator
{
public:
	TArray<class UClass*> MaterialInstances;
	TArray<class UClass*> SkeletalMeshes;
	TArray<class UClass*> StaticMeshes;
	TArray<class UClass*> DataAssets;
	TArray<class UClass*> AnimBlueprints;
	TArray<class UClass*> ActorBlueprints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_QuickbarRestore : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ReroutePlayerEvent : public AFortAthenaMutator
{
public:
	TArray<struct ReroutePlayerEventDefinition> RerouteDefinitions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URespawnAndSpectateSelectManager : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_RespawnAndSpectateSelect : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpectateBeforeRespawn : public AFortAthenaMutator
{
public:
	struct ScalableFloat SpectateToRespawnTransitionTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_RespawnAndSpectateSelect : public AFortAthenaMutator_SpectateBeforeRespawn
{
public:
	struct ScalableFloat bShouldBeActive;
	struct ScalableFloat bShouldSetClientReadyOnRespawnPlayerFailSafe;
	struct ScalableFloat bCanPlayerSelectRespawnTargetBeforeTheyCanRespawn;
	struct ScalableFloat bAllowRespawnOnLivingTeammates;
	struct ScalableFloat bAllowRespawnOnLivingSquadmates;
	struct ScalableFloat bCreateDefaultSpawnLocation;
	struct ScalableFloat bShowDefaultSpawnLocation;
	class UClass* DefaultSpawnLocationCameraClass;
	struct FText DefaultRespawnLabelText;
	class UClass* DefaultRespawnTexture;
	struct ScalableFloat RandomRespawnRadius;
	struct ScalableFloat RespawnBaseRotationOffset;
	struct ScalableFloat RandomRespawnRotationDegrees;
	struct ScalableFloat RespawnHeightOffset;
	struct ScalableFloat MinRespawnHeightAboveGround;
	struct ScalableFloat ForceRespawnTime;
	struct ScalableFloat DeadTargetAvailabilityTime;
	int DisplayPriority_Teammate;
	class UClass* CameraModeOverrideForNonPlayers;
	TArray<struct RespawnAndSpectateTargetData> RespawnTargetDataArray;
	bool bAreAllRespawnTargetsAvailableToAllPlayersCheat;
	class UClass* ManagerObject;
	struct FScriptMulticastDelegate RespawnAndSpectateSelectSetVisibility;
	struct FScriptMulticastDelegate RespawnAndSpectateSelectSetSpectateId;
	struct FScriptMulticastDelegate RespawnAndSpectateSelectAvailableOptionsChanged;
	struct FScriptMulticastDelegate RespawnAndSpectateSelectPlayerRespawned;
	struct FScriptMulticastDelegate RespawnAndSpectateSelectRespawnBecameAvailable;
	float ScreenFadeOutDeathCamTime;
	float ScreenFadeInSpectateCamTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_RespawnLocation : public AFortAthenaMutator
{
public:
	bool bRespawnInAir;
	struct GameplayTagQuery LocationQuery;
	bool bRespawnAtDeath;
	float RespawnHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_RespawnTime : public AFortAthenaMutator
{
public:
	float RespawnTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_RespawnWave : public AFortAthenaMutator
{
public:
	struct ScalableFloat DefaultWaveTime;
	struct ScalableFloat WaveTeamImbalanceTimeMultiplier;
	struct FScriptMulticastDelegate OnWaveDataChanged;
	struct ScalableFloat MinRespawnWindowTimeReamining;
	TArray<struct FortAthenaMutator_RespawnWaveTeamData> WaveDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_RoundHelper : public AFortAthenaMutator
{
public:
	int NumOfRounds;
	int NumOfTeams;
	byte StartingTeamNum;
	TArray<struct POIRoundInfo> RoundInfos;
	TArray<struct POIRoundInfo> GeneratedRoundInfo;
	TArray<class UClass*> UsedSpawnSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_RoundsMutator : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Rounds : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate OnPhaseChanged;
	struct FScriptMulticastDelegate OnRoundAdvanced;
	struct FText HUDLoadingReasonText;
	struct ScalableFloat NextRoundFadeOutDuration;
	struct ScalableFloat RoundEndTimeDilationDuration;
	struct ScalableFloat RoundEndDuration;
	struct ScalableFloat TimeUntilRoundEndUICoversScreen;
	struct ScalableFloat RoundEndUIDuration;
	EAthenaRoundsMutatorPhase RoundPhase;
	int CurrentRoundNum;
	class UClass* MatchConditionManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SafezoneBlacklist : public AFortAthenaMutator
{
public:
	struct ScalableFloat MasterDisableSwitch;
	TArray<class UClass*> BlacklistEntries;
	TArray<struct GameplayTag> HotfixBlacklistPoiTags;
	TArray<struct HotfixableBlacklistLiteralLocations> HotfixBlacklistLocations;
	TArray<class UClass*> HotfixedEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlacklistEntryBase : public UObject
{
public:
	struct ScalableFloat IsEntryDisabled;
	struct ScalableFloat ConsiderSafeZoneRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlacklistEntry_PoiTagQuery : public UBlacklistEntryBase
{
public:
	struct GameplayTagQuery TagQuery;
	class UClass* WorldReference;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlacklistEntry_PoiVolume : public UBlacklistEntryBase
{
public:
	struct GameplayTag POITag;
	struct ScalableFloat CheckRadius;
	class UClass* RelevantVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlacklistEntry_Location : public UBlacklistEntryBase
{
public:
	struct Vector CheckLocation;
	struct ScalableFloat CheckRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_SafeZoneOrderOptimize : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SafeZoneOrderOptimize : public AFortAthenaMutator
{
public:
	struct ScalableFloat NumRouteOrdersToChooseFrom;
	struct ScalableFloat NumRouteOrdersPerFrame;
	struct ScalableFloat MaxPercentDeviationFromBestRoute;
	bool bInitialized;
	bool bPaused;
	TArray<struct SafeZoneOrderOptimizeMutatorRouteDefinition> Routes;
	int MaxRoutesPerOrder;
	TArray<int> LockedInRouteIDs;
	struct SafeZoneOrderOptimizeMutatorRouteOrder ChosenRouteOrder;
	float MapUILineThickness;
	struct SafeZoneOrderOptimizeMutatorRouteOrder DebugShortestRouteOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SafeZoneStartupHelper : public AFortAthenaMutator
{
public:
	struct FString EventName;
	ESafeZoneStartUp OverrideSafeZoneType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ShouldDestroyActorsOnPlacement : public AFortAthenaMutator
{
public:
	bool bShouldDestroyOnPlacement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_ShowSafeZoneCircle : public AFortAthenaMutator
{
public:
	bool bShowSafeZoneCircle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SiphonValues : public AFortAthenaMutator
{
public:
	float HealthSiphonValue;
	float WoodSiphonValue;
	float StoneSiphonValue;
	float MetalSiphonValue;
	float GoldSiphonValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SkinChangeOnWin : public AFortAthenaMutator
{
public:
	struct FortAthenaLoadout CosmeticLoadoutToApplyOnWin;
	struct GameplayTag GameplayCueTagToApplyOnWin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaSkyCap : public AActor
{
public:
	struct SkyCapTargetData TargetData;
	ESkyCapState SkyCapState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SkyCap : public AFortAthenaMutator
{
public:
	class UClass* SkyCapClass;
	class UClass* SkyCap;
	struct ScalableFloat SpawnHeight;
	struct ScalableFloat InitialDelay;
	TArray<struct SkyCapPositionData> PositionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SkydiveMusic : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawnInAir : public AFortAthenaMutator
{
public:
	struct FortRespawnLogicData InitialSpawnLogicData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutator_SpawningPolicyDataObjective : public UFortAthenaMutator_SpawningPolicyData
{
public:
	class UClass* ObjectiveClass;
	struct GameplayTagContainer ObjectiveTrackingTags;
	struct CollisionProfileName ObjectiveCollisionProfile;
	struct ScalableFloat ObjectiveMinTraceHeight;
	struct ScalableFloat ObjectiveMaxTraceHeight;
	struct ScalableFloat ObjectiveMinInitialDeliveryDelayTime;
	struct ScalableFloat ObjectiveMaxInitialDeliveryDelayTime;
	struct ScalableFloat ObjectiveMinTimeBetweenSpawn;
	struct ScalableFloat ObjectiveMaxTimeBetweenSpawn;
	bool bDisplayOnMapAndCompass;
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	class UClass* CachedGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawningPolicySafezone : public AFortAthenaMutator_SpawningPolicyEQS
{
public:
	TArray<class UClass*> ItemSpawningMutatorPerSafeZonePhase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawnInVehicle : public AFortAthenaMutator
{
public:
	class UClass* VehicleClass;
	bool bPlacePawnInVehicleOnLoad;
	struct ScalableFloat bSpawnInTeammateVehicle;
	struct ScalableFloat VehicleSpawnZOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpawnLocationQuery : public AFortAthenaMutator
{
public:
	struct GameplayTagQuery LocationQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TDM : public AFortAthenaMutator_GameModeBase
{
public:
	struct ScalableFloat NumKillsForVictory;
	struct ScalableFloat EnableGoalScoreScaling;
	struct ScalableFloat MinGoalScore;
	struct ScalableFloat GoalScoreBucketSize;
	struct ScalableFloat GoalScoreMinToWin;
	struct ScalableFloat AllowSpectatingAfterDeath;
	bool bIsTwoTeamTDM;
	bool bShouldGrantInventoryToNewPlayers;
	struct ScalableFloat bShouldCalculateRespawnLocation;
	struct FortRespawnLogicData RespawnLogicData;
	struct AthenaGameMessageData GameMsg_Intro;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpyRumble : public AFortAthenaMutator_TDM
{
public:
	struct ScalableFloat NumKillsForPerkUnlock;
	struct ScalableFloat ScoreToAddOnSupplyDropCollect;
	struct GameplayTag SupplyDropAccoladeTag;
	struct FText RoundResultsText_Win;
	struct FText RoundResultsText_Lost;
	int NumKillsForNextPerkUnlock;
	int KillCountCutOff;
	struct AthenaGameMessageData GameMsg_SupplyDropOpened_Friendly;
	struct AthenaGameMessageData GameMsg_SupplyDropOpened_Enemy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_StartingInventory : public AFortAthenaMutator
{
public:
	TArray<struct ItemAndCount> StartingInventory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Storm : public AFortAthenaMutator
{
public:
	struct ScalableFloat SafeZoneFinalDestinationX;
	struct ScalableFloat SafeZoneFinalDestinationY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_StormAlteration : public AFortAthenaMutator
{
public:
	struct ScalableFloat DisableStormAlterations;
	TArray<class UClass*> MaterialOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_StormVehicleHelper : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_StormVehicleHelper : public AFortAthenaMutator
{
public:
	struct FString EventName;
	float WallHeight;
	TArray<class UClass*> VehiclesToDestroy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_StreamDistanceOverride : public AFortAthenaMutator
{
public:
	struct ScalableFloat StreamDistanceScale;
	bool bApplyScalability;
	bool bApplyAfterWarmup;
	bool bForceOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SupplyDrop : public AFortAthenaMutator
{
public:
	struct ScalableFloat SpawnFailureLockoutTime;
	class UClass* BasePlacementQuery;
	float BaseQueryingAttemptIntervalTimeSeconds;
	TArray<struct FortSupplyDropMutatorData> SafeZoneMutatorData;
	TArray<struct Vector> BaseQueryResults;
	struct TSoftClassPtr<UObject> SupplyDropRemovalQuery;
	float SupplyDropRemovalQueryInterval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutator_SupplyDropSpawningPolicyData : public UFortAthenaMutator_SpawningPolicyData
{
public:
	struct TSoftClassPtr<UObject> SupplyDropInfo;
	class UClass* CachedGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SynchronizedTeleport : public AFortAthenaMutator
{
public:
	struct BeginGroupTeleportParams DefaultBeginGroupTeleportParams;
	struct ScalableFloat TeleportFailsafeTimeout;
	struct ScalableFloat TeleportFailsafeRetryTime;
	struct ScalableFloat RespawnLocationTolerance;
	struct GameplayTagContainer EventsToSendOnTeleport;
	class UClass* HidePawnGameplayEffectClass;
	struct ScalableFloat bHoldLoadingScreenUntilGroupTeleportIsComplete;
	struct ScalableFloat StreamInDistanceDuringLoadOverride;
	struct ScalableFloat bStillInvincibleAfterFailsafeTimer;
	class UClass* CustomTeleportPlayerComponentClass;
	TArray<int> InProgressTeleportPlayerIDs;
	bool bTeleportComplete;
	TArray<class UClass*> PlayersInStasis;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Tag : public AFortAthenaMutator_GameModeBase
{
public:
	struct ScalableFloat TimerLength;
	struct TeamPawnColor_VisualData RedTeamVisuals;
	struct TeamPawnColor_VisualData BlueTeamVisuals;
	struct SlateBrush BlueTeamMapBrush;
	struct Vector2D BlueTeamMapScale;
	float ServerEndTime;
	byte RedTeam;
	byte BlueTeam;
	byte RedTeamSquad;
	struct TagTeamInfoArray TagTeamInfo;
	TArray<class UClass*> SeenControllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Tank : public AFortAthenaMutator_GameModeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TeamPartSwapper : public AFortAthenaMutator
{
public:
	TArray<byte> TeamNums;
	TArray<struct PartSwapData> SwapData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TeamPawnColor : public AFortAthenaMutator
{
public:
	class UClass* TeamPawnColorControllerComponentClass;
	Unknown TeamVisualsMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TeamPlacement : public AFortAthenaMutator
{
public:
	TArray<struct TeamPlacementData> TeamsInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Thermometer : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TimedRespawnHelper : public AFortAthenaMutator
{
public:
	struct AthenaGameMessageData GameMsg_NoMoreRespawn;
	struct ScalableFloat RespawnAllowedTime;
	struct FortRespawnLogicData RespawnLogicData;
	float ServerTimeRespawnIsDisallowed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TimeStep : public AFortAthenaMutator
{
public:
	float TimeStep;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TODOverride : public AFortAthenaMutator
{
public:
	EAthenaTimeOfDayOverride TimeOfDayOverride;
	float TimeOverride;
	float SpeedOverride;
	EAthenaLightIntensityOverride LightIntensityOverride;
	EAthenaTODColor LightColorOverride;
	EAthenaFogDensityOverride FogDensityOverride;
	EAthenaTODColor FogColorOverride;
	EAthenaTODPostProcess PostProcessOverride;
	TArray<struct TimeOfDayPhase> TimeOfDayPhases;
	TArray<struct TimeOfDaySpeed> TimeOfDaySpeeds;
	TArray<struct TSoftClassPtr<UObject>> PostProcessOverrideActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TournamentKillStats : public AFortAthenaMutator
{
public:
	TArray<struct TournamentWeaponKillStat> KillStatList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Traverse : public AFortAthenaMutator_GameModeBase
{
public:
	TArray<class UClass*> TraversePoints;
	int CurrentPointIndex;
	struct ScalableFloat RaceStartIndex;
	struct ScalableFloat NumOfCheckpoints;
	struct ScalableFloat TraversePointSpawnZ;
	struct ScalableFloat InitialRadius;
	struct ScalableFloat RespawnRadius;
	struct ScalableFloat DelayBeforeFirstReveal;
	struct ScalableFloat MinDistanceAwayFromOtherPoints;
	struct FortRespawnLogicData RespawnData;
	class UClass* TraversePointClass;
	class UClass* BoundsXYSplineClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_TutorialCustomStartPosition : public AFortAthenaMutator
{
public:
	struct GameplayTag TutorialStartTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Uranium : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Uranium : public AFortAthenaMutator_GameModeBase
{
public:
	struct FScriptMulticastDelegate OnInitialized;
	struct FScriptMulticastDelegate OnTeleportOutComplete;
	struct FScriptMulticastDelegate OnUraniumChangeRoundEndVisibility;
	struct FScriptMulticastDelegate OnShowRoundIntro;
	struct FScriptMulticastDelegate OnUraniumChangeRoundProgressVisibility;
	struct ScalableFloat bPerkSelectBeforePOICamera;
	struct FText RoundResultsText_AttackersWin;
	struct FText RoundResultsText_AttackersLost;
	struct FText RoundResultsText_DefendersWin;
	struct FText RoundResultsText_DefendersLost;
	struct FText RoundIntroText_Attacking;
	struct FText RoundIntroText_Defending;
	class UClass* RoundIntroFactionSound_Attacking;
	class UClass* RoundIntroFactionSound_Defending;
	class UClass* MatchEndSound_Win_Attackers;
	class UClass* MatchEndSound_Win_Defenders;
	class UClass* MatchEndSound_Lose_Attackers;
	class UClass* MatchEndSound_Lose_Defenders;
	class UClass* PushCartClass;
	Unknown PushCart;
	class UClass* StormShieldClass;
	class UClass* StormShield;
	float RespawnRadius;
	struct ScalableFloat RespawnLocationOffset_PusherTeam;
	struct ScalableFloat RespawnLocationOffset_DefenderTeam;
	struct ScalableFloat StartMovingRespawnCheckPointPct_PusherTeam;
	struct ScalableFloat StartMovingRespawnCheckPointPct_DefenderTeam;
	struct ScalableFloat StopMovingRespawnCheckPointPct_PusherTeam;
	struct ScalableFloat StopMovingRespawnCheckPointPct_DefenderTeam;
	struct ScalableFloat MovingRespawnOffsetMultiplier_PusherTeam;
	struct ScalableFloat MovingRespawnOffsetMultiplier_DefenderTeam;
	struct ScalableFloat PercentToMoveRespawnTowardCartViaTeamSize_PusherTeam;
	struct ScalableFloat PercentToMoveRespawnTowardCartViaTeamSize_DefenderTeam;
	struct ScalableFloat bAlignMovingRespawnToCart;
	struct ScalableFloat MinRespawnHeightAboveGround;
	float CurrentMovingRespawnOffset_PusherTeam;
	float CurrentMovingRespawnOffset_DefenderTeam;
	struct Vector RespawnLocation_PusherTeam;
	struct Vector RespawnLocation_DefenderTeam;
	struct UraniumPOIData CurrentPOI;
	struct ScalableFloat SafeZoneRadius;
	struct ScalableFloat AircraftOffsetFromRadius;
	struct ScalableFloat SupplyDropRadius;
	int NumberOfRounds;
	EUraniumRoundEndCondition RoundEndCondition;
	EUraniumCartMovementRuleOnNewRound CartMovementRuleOnNewRound;
	struct ScalableFloat bOnRoundEndSwitchTeamRoles;
	struct ScalableFloat bOnRoundSetUpResetPlayerAbilities;
	float RoundPhaseDurations;
	float EndOfRoundCameraFadeOutTime;
	float EndOfRoundCameraFadeInTime;
	float EndOfRoundStasisDelay;
	struct UraniumRoundData RoundData;
	struct ScalableFloat EarlyEndGame_BlowOutRoundNumberMin;
	struct ScalableFloat EarlyEndGame_BlowOutPointSpread;
	struct ScalableFloat EarlyEndGame_OutNumberedPercent;
	EUraniumRoundPhase CurrentRoundPhase;
	bool bRoundTimerStarted;
	struct ScalableFloat MatchTimeAtStart;
	struct ScalableFloat MatchTimeAddedPerCheckpoint;
	struct ScalableFloat PushersAbandonedCartOvertime;
	int PushersAbandonedCartOvertimeInterval;
	struct ScalableFloat PushersAbandonedCartOvertimeDuration;
	bool bPushCartIsPushableAtStart;
	float PushersAbandonedCartStartTime;
	float PushersAbandonedCartDuration;
	bool bInOvertime;
	bool bPerkModeOn;
	bool bShouldPlayFactionIntro;
	struct ScalableFloat DestroyActorsOnNewRound;
	TArray<class UClass*> ActorClassesToDestroy;
	struct ScalableFloat PlayersImmediatelyReenterGameplayAfterSelectingAPerk;
	class UClass* MinimapMaterialParameterCollection;
	struct FScriptMulticastDelegate OnOvertimeChanged;
	struct FScriptMulticastDelegate OnRoundDataUpdated;
	struct FScriptMulticastDelegate OnRoundCompleted;
	struct FScriptMulticastDelegate OnTeamsRolesChanged;
	struct GameplayTag RoundCompleteAccoladeTag;
	struct GameplayTag RoundWinAccoladeTag;
	struct GameplayTag MatchWinAccoladeTag;
	bool bShowFullSplineOnMapUI;
	class UClass* CheckPointMarkerClass;
	struct GameplayTag SplineGameplayTag;
	struct GameplayTag CameraGameplayTag;
	struct GameplayTagContainer POIParentGameplayTags;
	bool bIsSafeToTurnOnCameraAfterRespawn;
	Unknown GameMessages_Pushers;
	Unknown GameMessages_Defenders;
	struct ScalableFloat EventTracking_TimeBetweenTicks;
	struct ScalableFloat EventTracking_TimeIsLowTime;
	struct ScalableFloat EventTracking_TimeIsExtraLowTime;
	struct ScalableFloat EventTracking_CheckPointIsNearDistance;
	struct FText TeleportingPlayersOutText;
	bool bForcePerkPickerOnCheckpoint;
	class UClass* TeleportMutator;
	class UClass* InventoryOverrideMutator;
	class UClass* RespawnWaveMutator;
	byte CheckpointTeleportPlayersReleased;
	byte CheckpointTeleportComplete;
	struct ScalableFloat TeleportHeight;
	bool bCheatDrawRespawnLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_UseCare : public AFortAthenaMutator_GameModeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Valkyrie : public AFortAthenaMutator
{
public:
	struct Vector DefaultSpawnRangeStart;
	struct Vector DefaultSpawnRangeEnd;
	struct GameplayTagContainer LobbySpawnTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_VehicleSwap : public AFortAthenaMutator
{
public:
	struct FString RequiredCalendarEvent;
	struct TSoftClassPtr<UObject> OldVehicleClass;
	struct TSoftClassPtr<UObject> NewVehicleClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_VehicleTrickScore : public AFortAthenaMutator
{
public:
	float ScoreMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_VoiceChat : public AFortAthenaMutator
{
public:
	EFortAthenaMutator_VoiceChatChannelType ChannelType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWarmupMovieComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_WarmupMovie : public AFortAthenaMutator
{
public:
	float MovieLengthSeconds;
	bool bServerMovieStart;
	class UClass* MovieWidget;
	class UClass* SkydiveTransitionMusic;
	class UClass* WarmupMovieMix;
	class UClass* WaitingScreen;
	class UClass* SpawnEffectClass;
	class UClass* MediaPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_WarmupTime : public AFortAthenaMutator
{
public:
	float WarmupTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_WaterBuild : public AFortAthenaMutator
{
public:
	float RequiredFloodHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Wax : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Wax : public AFortAthenaMutator_GameModeBase
{
public:
	TArray<class UClass*> TeamLeadersInOrder;
	TArray<class UClass*> PlayerLeadersInOrder;
	struct FScriptMulticastDelegate OnFlyingTokensApplied;
	struct FScriptMulticastDelegate OnTokensAwarded;
	struct FScriptMulticastDelegate OnTokensCollected;
	struct FScriptMulticastDelegate PodiumChanged;
	struct FScriptMulticastDelegate OnPendingFlashes;
	struct FScriptMulticastDelegate AnyTokenChange;
	class UClass* RespawnSound;
	class UClass* GameEndMusicSound;
	class UClass* GameEndMusicAudioComponent;
	struct GameplayTag LeaderSpecialActorCategoryTag;
	class UClass* TokenClass;
	class UClass* TokenPickupClass;
	class UClass* PickupItemDef;
	struct FName TokenSpawnBoneName;
	struct ScalableFloat TokensToWin;
	struct ScalableFloat TokensToStartWith;
	struct ScalableFloat TokenPercentDropOnElim_Podium;
	struct ScalableFloat TokenPercentDropOnElim_Commoner;
	struct ScalableFloat TokensAwardedPerEliminationOnKill;
	struct ScalableFloat ThresholdShowTeamFlashAt_One;
	struct ScalableFloat ThresholdShowTeamFlashAt_Two;
	struct ScalableFloat ThresholdShowTeamFlashAt_Three;
	struct ScalableFloat ThresholdShowEnemyFlashAt_One;
	struct ScalableFloat ThresholdShowEnemyFlashAt_Two;
	struct ScalableFloat ThresholdShowEnemyFlashAt_Three;
	struct ScalableFloat BigTokenAmountForSingleElim;
	struct ScalableFloat MediumTokenAmountForSingleElim;
	struct ScalableFloat UseLiteralTokenAward;
	struct ScalableFloat TokensToMarkPermanentlyMaxTier;
	struct ScalableFloat DrawSecondGenTokensOnCompass;
	struct ScalableFloat LivesToStartPlayerWith;
	struct ScalableFloat PodiumSize;
	TArray<struct WaxNoStormZone> NoStormZones;
	Unknown VisibilityModifiers;
	Unknown StateTokenCount;
	struct ScalableFloat DistanceConsideredNearbyForUI;
	struct ScalableFloat VelocityConsideredMovingForUI;
	struct ScalableFloat TimeConsideredRecentForUI;
	struct WaxRespawnLogicData RespawnSettings;
	struct ScalableFloat WaxStateAboveWhichLeadersDrawSpecialStyleOnUI;
	struct ScalableFloat WaxLeadersMaximumCompassDistance;
	struct ScalableFloat MapLeaderboard_TeamBased;
	struct ScalableFloat AboutToWinPopup_TeamBased;
	struct ScalableFloat PodiumIcons_TeamBased;
	TArray<struct SlateBrush> CompassBrushesByPlace;
	TArray<struct SlateBrush> SquadmateCompassBrushesByPlace;
	TArray<struct SlateBrush> MapBrushesByPlace;
	TArray<struct SlateBrush> SquadmateMapBrushesByPlace;
	struct ScalableFloat UseSquadPlacementIconsOnMap;
	struct ScalableFloat UseSquadPlacementIconsOnCompass;
	struct ScalableFloat SquadPlacementScaleOnMap;
	struct Vector2D SquadPlacementOffsetPct;
	struct ScalableFloat TokenThresholdAboveWhichToWarn;
	struct AthenaGameMessageData GameMsg_EnemyToWinSoon;
	struct AthenaGameMessageData GameMsg_PlayerToWinSoon;
	struct AthenaGameMessageData GameMsg_PlayerTookWaxLead;
	struct AthenaGameMessageData GameMsg_PlayerLostWaxLead;
	struct AthenaGameMessageData GameMsg_WaxLeaderChanged;
	TArray<struct AthenaGameMessageData> BusGameMessages;
	struct FText ShowTextOnEnteringSpecialBuilding;
	struct GameplayTagContainer SkinMetaTagsToSkip;
	TArray<struct WaxPartOverrideData> OverrideParts;
	struct ScalableFloat ShouldSwapSkins;
	struct WaxPlayerDataArray PlayerData;
	Unknown StatDataNumTokensCollectedByPlayerMap;
	TArray<class UClass*> NumTokensCollectedStatTrackingQuestItemDefinitions;
	struct GameplayTagContainer NumTokensCollectedStatTrackingTags;
	TArray<class UClass*> WaxPickupsToDraw;
	Unknown TimeSinceLastFireMap;
	class UClass* LastEligibleLeader;
	TArray<class UClass*> PlayersAboveThresholdByPlace;
	Unknown TopPlayerInSquadID;
	TArray<class UClass*> RegisteredWaxPickupActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponSettingsComponent : public UActorComponent
{
public:
	bool bPickAxe;
	class UClass* ItemDefinition;
	byte TeamIndex;
	byte ClassSlot;
	float RangeMultiplier;
	float ConeAngleMultiplier;
	byte Enabled;
	class UClass* DataSource;
	TArray<struct FName> OverriddenPropertyNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMutatorUtilities : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaNavArea_ShallowWater : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaNavArea_Water : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_Encampment : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct ScalableFloat EncampmentEnable;
	struct ScalableFloat EncampmentTentativeDelayMin;
	struct ScalableFloat EncampmentTentativeDelayMax;
	struct ScalableFloat EncampmentDurationMin;
	struct ScalableFloat EncampmentDurationMax;
	struct ScalableFloat BuilderPercentage;
	struct ScalableFloat BuilderMinDistance;
	struct ScalableFloat BuilderMaxDistance;
	struct ScalableFloat GuardMinDistance;
	struct ScalableFloat GuardMaxDistance;
	struct ScalableFloat AllowInSwimming;
	struct ScalableFloat AllowInFalling;
	struct ScalableFloat MinSquadMembersCountToBuild;
	struct FName EncampmentStatusKeyName;
	struct FName EncampmentMovementStateKeyName;
	struct FName EncampmentCenterLocationKeyName;
	struct FName EncampmentDestinationKeyName;
	struct FName EncampmentAroundCampFireLocationKeyName;
	struct FName EncampmentRoleKeyName;
	struct FName DefensiveBuildName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_FollowPatrolPath : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName FollowPatrolPathKeyName;
	struct FName FollowPatrolPathMovementStateKeyName;
	struct FName FollowPatrolPathDestinationKeyName;
	float ChanceToTakeABreak;
	float BreakDurationMin;
	float BreakDurationMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_FollowSquadLeader : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct ScalableFloat FormationOffsetRadiusMin;
	struct ScalableFloat FormationOffsetRadiusMax;
	struct ScalableFloat TooFarFromSquadLeaderDistance;
	struct ScalableFloat MaxNoiseRadius;
	struct ScalableFloat MinDurationNoiseEvaluate;
	struct ScalableFloat MaxDurationNoiseEvaluate;
	struct FName FollowSquadLeaderStatusKeyName;
	struct FName FollowSquadLeaderMovementStateKeyName;
	struct FName FollowSquadLeaderDestinationKeyName;
	struct FName TooFarFromLeaderKeyName;
	struct Vector CachedSquadFormationOffset;
	struct Vector CachedNoiseOffset;
	float CachedTooFarFromSquadLeaderDistanceSqr;
	float LastNoiseOffsetUpdateTime;
	float DurationNoiseEvaluate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_Leash : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName LeashKeyName;
	struct FName LeashMovementStateKeyName;
	struct FName LeashDestinationKeyName;
	struct FName LeashLocationKeyName;
	struct FName LeashOuterRadiusKeyName;
	class UClass* LeashRuntimeParameters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcGalileoComponent : public UActorComponent
{
public:
	class UClass* CachedBotController;
	class UClass* PossessedPawn;
	TArray<struct Vector> PatrolPath;
	TArray<class UClass*> CommunicationGroup;
	struct FScriptMulticastDelegate OnPatrollingStart;
	struct FScriptMulticastDelegate OnPatrollingStop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNPCLoopStateComponent : public UActorComponent
{
public:
	bool bSpawnOutsideTheLoop;
	class UClass* RuntimeLoopSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcPatrollingComponent : public UActorComponent
{
public:
	bool bCanPropagatePatrollingProgression;
	class UClass* CachedBotController;
	struct FScriptMulticastDelegate OnStartPatrollingEvent;
	struct FScriptMulticastDelegate OnStopPatrollingEvent;
	class UClass* PatrolPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNPCSpawnerData : public UFortAthenaAIBotSpawnerData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPatrolPathRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaPatrolPath : public AActor
{
public:
	EPatrollingMode Mode;
	TArray<class UClass*> PatrolPoints;
	bool bUseRandomStartupPatrolPoint;
	bool bUseRandomStartupDirection;
	struct GameplayTagContainer GameplayTags;
	class UClass* RadialLeashLocationActorOverride;
	float RadialLeashInnerRadiusOverride;
	float RadialLeashOuterRadiusOverride;
	bool bLeashEnabled;
	float LeashWidth;
	float LeashHeight;
	struct ScalableFloat WaterLevelIndexMax;
	struct ScalableFloat WaterLevelIndexMin;
	int MaxConcurrentUsage;
	int CurrentConcurrentUsage;
	float DebugLinkWidthSelected;
	float DebugLinkWidthNotSelected;
	struct LinearColor DebugNotSelectedColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPatrolPointRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaPatrolPoint : public AActor
{
public:
	class UClass* LocalGameplayBehavior;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaPlayerBotSpawnerData : public UFortAthenaAIBotSpawnerData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaRewardEventGraphPurchaseToken : public FortAccountItemDefinition
{
public:
	EItemProfileType ProfileType;
	struct TSoftClassPtr<UObject> RewardEventGraphDefinition;
	struct TSoftClassPtr<UObject> RepeatableDailiesCardItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaRiftPortal : public ABuildingGameplayActorConsumable
{
public:
	TArray<class UClass*> IgnoredActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSimpleCar : public AFortAthenaVehicle
{
public:
	class UClass* WheeledVehicleMovementComponent;
	class UClass* MeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSKPushVehicle : public AFortAthenaSKVehicle
{
public:
	float AntiGravityScalerWhenEmpty;
	float AntiGravityScalerWhenCoasting;
	float SpringCompressionRefireTime;
	float MovementAmountParam;
	float CurrentMaxSpringCompression;
	float SparksLeftParam;
	float SparksRightParam;
	float LeftSlowDustParam;
	float RightSlowDustParam;
	float LeftFastDustParam;
	float RightFastDustParam;
	float FastDustParam;
	float CoastingMovementParam;
	float SkiddingAmountParam;
	float InAirParam;
	float ScrapingAmountParam;
	float AudioWindParam;
	class UClass* SKPushVehicleConfigsClass;
	class UClass* SKPushVehicleConfigs;
	bool bConstrainedRotation;
	bool bIsCoastingOrDismounting;
	float ForwardForceTractionScale;
	ECoastState CurrentPhysicsCoastState;
	ECoastState CurrentAnimCoastState;
	bool bIsDriverTargetting;
	float StandingInPlaceSteerAngle;
	bool bPedalForceCooldown;
	struct Vector PushForceRelativeLocation;
	class UClass* CacheAudioMovement;
	class UClass* CacheAudioCoast;
	class UClass* CacheAudioSkid;
	class UClass* CacheAudioInAir;
	class UClass* CacheAudioScrape;
	class UClass* CacheAudioWind;
	class UClass* CacheWheelDustFX;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSKPushCannon : public AFortAthenaSKPushVehicle
{
public:
	struct FName MainPhysicsProfileName;
	float MovementParam;
	float BatteryParam;
	float RumbleIntensity;
	class UClass* DriverCameraShake;
	class UClass* PassengerCameraShake;
	struct Vector PlayerTorque;
	bool bPlayerTorquingRepped;
	bool bPlayerTorquing;
	int CannonBoneIdx;
	class UClass* PushCannonNoSleepPhysicsMaterial;
	class UClass* PushCannonPhysicsMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSMVehicle : public AFortAthenaVehicle
{
public:
	class UClass* Mesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSpawningPolicyManager : public AActor
{
public:
	TArray<class UClass*> SpawningPolicyMutatorList;
	class UClass* GameModeAthena;
	class UClass* GameStateAthena;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaZiplineBase : public ABuildingGameplayActor
{
public:
	Unknown CurrentInteractingPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaZipline : public AFortAthenaZiplineBase
{
public:
	struct ScalableFloat ZiplineVelocity;
	struct ScalableFloat ZiplineAcceleration;
	struct ScalableFloat ZiplineVariableSpeedEnabled;
	struct ScalableFloat DownhillAcceleration;
	struct ScalableFloat UphillAcceleration;
	struct ScalableFloat DownhillDeceleration;
	struct ScalableFloat UphillDeceleration;
	struct ScalableFloat ZiplineDownhillSpeed;
	struct ScalableFloat ZiplineUphillSpeed;
	struct ScalableFloat ZiplineUphillSpeedMin;
	struct Vector StartPosition;
	struct Vector EndPosition;
	bool bInitialized;
	Unknown InteractIconPlacementCapsule;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSplineZipline : public AFortAthenaZipline
{
public:
	class UClass* ZiplineSpline;
	struct ScalableFloat AttachLinesToPolesHotfix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaSupplyDropBalloon : public ABuildingSMActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaTrackableAIObjectComponent : public UActorComponent
{
public:
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaTrackableAIObjectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaTrackableAIObjectVehicleComponent : public UFortAthenaTrackableAIObjectComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorialBase : public AActor
{
public:
	struct GameplayTagContainer DefaultHUDElementTags;
	class UClass* CameraStartPositionActor;
	bool bExecuting;
	int CurrentStepIndex;
	class UClass* CurrentTrackedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Ambush : public AFortAthenaTutorialBase
{
public:
	class UClass* ReachAmbushLocationMarker;
	class UClass* AmbushTriggerBox;
	class UClass* HealItemSpawnerBlueprint;
	class UClass* ShieldItemSpawnerBlueprint;
	class UClass* BlockerAmbush;
	class UClass* AmbushDirectionArrows;
	class UClass* AmbushCameraPoint;
	class UClass* AISpawnerAttachedTo;
	class UClass* SpawnedAIPawn;
	struct GameplayTagContainer HealthHUDElementTags;
	float AiAccuracyRadius;
	float AiRateOfFire;
	float AiFirstShotDamage;
	float AiDamage;
	struct FName MaxLocationErrorKeyName;
	float MaxLocationErrorValue;
	struct FName MinLocationErrorKeyName;
	float MinLocationErrorValue;
	class UClass* BotController;
	float AmbushCameraInSpeed;
	float AmbushCameraOutSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Build : public AFortAthenaTutorialBase
{
public:
	class UClass* Chest;
	class UClass* ChestObjectiveMarker;
	class UClass* ChestLookMarker;
	class UClass* BuildMarker;
	class UClass* BuildMarker2;
	class UClass* ChestTriggerBox;
	class UClass* ChestDirectionArrows;
	class UClass* SecurityTape_Build;
	class UClass* Building_BlockingVolume;
	class UClass* StairsBuildingItemDef;
	class UClass* WoodItemDef;
	struct GameplayTagContainer BuildElementTag;
	struct GameplayTagContainer WoodTag;
	class UClass* SecondStairsNoBuildZone;
	class UClass* TriggerBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Chest : public AFortAthenaTutorialBase
{
public:
	class UClass* Chest;
	TArray<class UClass*> ItemsToCollect;
	struct GameplayTag InteractButtonTag;
	class UClass* ChestLookMarker;
	class UClass* InteractButtonHighlightType;
	class UClass* TriggerBox;
	float ShowEasyInteractIconDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Completed : public AFortAthenaTutorialBase
{
public:
	struct GameplayTag QuickbarTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_DefensiveBuild : public AFortAthenaTutorialBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_EliminateEnemies : public AFortAthenaTutorialBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Harvest : public AFortAthenaTutorialBase
{
public:
	class UClass* HarvestMarker;
	float DoorTargetAppearDelay;
	class UClass* DoorTargetVisual;
	class UClass* HarvestTriggerBox;
	class UClass* BlockerHarvest;
	struct GameplayTagContainer HarvestHUDElementTags;
	class UClass* BuildingToDestroy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Heal : public AFortAthenaTutorialBase
{
public:
	TArray<class UClass*> ItemsToCollect;
	class UClass* LootPositionMarker;
	class UClass* MedkitItem;
	class UClass* ShieldPotionItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Look : public AFortAthenaTutorialBase
{
public:
	class UClass* LookMarker;
	class UClass* StartArrowsActor;
	struct GameplayTagContainer HUDContainerTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Move : public AFortAthenaTutorialBase
{
public:
	class UClass* JumpMarker;
	class UClass* JumpArrows;
	class UClass* JumpTriggerBox;
	class UClass* JumpEndTriggerBox;
	class UClass* CrouchMarker;
	class UClass* CrouchArrows;
	class UClass* CrouchTriggerBox;
	class UClass* CrouchEndTriggerBox;
	class UClass* BlockerJump;
	class UClass* BlockerCrouch;
	struct GameplayTagContainer JumpHUDElementTags;
	struct GameplayTagContainer CrouchHUDElementTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Pickup : public AFortAthenaTutorialBase
{
public:
	class UClass* GunsMarker;
	class UClass* BlockerCollect;
	struct GameplayTag GunToPickUpTag;
	struct GameplayTag QuickbarTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Scoping : public AFortAthenaTutorialBase
{
public:
	TArray<struct FortAthenaTutorial_TargetInfo> ShootTargets;
	class UClass* GunToEquipItemDef;
	class UClass* ScopingCameraPoint;
	float ScopingCameraInSpeed;
	float ScopingCameraOutSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorial_Shoot : public AFortAthenaTutorialBase
{
public:
	TArray<struct FortAthenaTutorial_TargetInfo> FirstShootTargets;
	class UClass* ShootCameraPoint;
	class UClass* TargetCounterScreen;
	int AmmoCountToTriggerReload;
	float ShootMarkerAppearDelay;
	float CameraInSpeed;
	float CameraInDuration;
	float CameraWaitTime;
	float CameraOutSpeed;
	float CameraOutDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorialManager : public AActor
{
public:
	bool bPlayTutorials;
	TArray<class UClass*> TutorialsToExecute;
	TArray<class UClass*> TutorialsToExecute_DefensiveBuildingFlow;
	class UClass* InitialTutorial;
	struct GameplayTag TutorialHUDTag;
	struct GameplayTag TopResourceTag;
	struct Vector2D TopResourceNewPosition;
	class UClass* Athena_Tutorial_Spawn_Point;
	bool ForceEnableDefensiveBuildingFlow;
	int CurrentTutorialIndex;
	float GuidedTutorialTimeStart;
	float CurrentTutorialStepTimeStart;
	struct GameplayTagContainer InitialHUDTagsToDisable;
	class UClass* TutorialHUD;
	TArray<class UClass*> CurrentTutorialList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortStaticMeshActor : public AStaticMeshActor
{
public:
	int LinkCompCount;
	bool bUseAutoNavmeshFlags;
	struct Guid SavedActorGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorialMarker : public AFortStaticMeshActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorialShootingAutofireTarget : public AFortStaticMeshActor
{
public:
	bool bIsAimAssistingTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaTutorialShootingTarget : public ABuildingProp
{
public:
	bool bIsAimAssistingTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaVehicleFuelComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnFuelChanged;
	struct FScriptMulticastDelegate OnRefueledFromEmpty;
	struct FScriptMulticastDelegate OnOutOfFuel;
	struct FScriptMulticastDelegate OnLowFuel;
	bool bShouldInitializeWithStartingFuel;
	class UClass* OwnerVehicle;
	float ServerFuel;
	class UClass* OutOfFuelSound;
	class UClass* LowFuelSound;
	class UClass* LowFuelRepeatingPing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaVehicleSpawner : public AActor
{
public:
	class UClass* DummyRoot;
	struct TSoftClassPtr<UObject> FortVehicleItemDef;
	TArray<struct VehicleWeightedDef> FortVehicleItemDefVariants;
	bool bForceSpawnAlways;
	class UClass* CachedFortVehicleItemDef;
	bool bIsVehicleItemDefCached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortStaticReplicatedActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaWater : public AFortStaticReplicatedActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaWaterJackal : public AFortAthenaJackalVehicle
{
public:
	class UClass* FortWaterJackalVehicleConfigsClass;
	class UClass* FortWaterJackalVehicleConfigs;
	struct NetTowhookAttachState ReplicatedAttachState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaWaterJackalConfigs : public UFortAthenaJackalVehicleConfigs
{
public:
	float RopeAccelRangeMin;
	float RopeAccelRangeMax;
	float RopeAccelRangeDefault;
	float RopeAccel;
	float ReverseCorrectionRopeAccelMultiplier;
	float MaxSpeedForAccel;
	float YawAngularDrag;
	float LinearDrag;
	float CustomLateralFriction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaHoverCarMovementComponent : public SimpleWheeledVehicleMovementComponent
{
public:
	struct ReplicatedAthenaVehicleState ReplicatedAthenaState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaSimpleCarMovementComponent : public WheeledVehicleMovementComponent4W
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectileBase : public AFortGameplayEffectDeliveryActor
{
public:
	struct CurveTableRowHandle VerticleFireOffset;
	struct CurveTableRowHandle InitialSpeed;
	struct CurveTableRowHandle ChargeUpInitialSpeed;
	struct CurveTableRowHandle MaxSpeed;
	struct CurveTableRowHandle InitialGravityScaleOverride;
	float ReplicatedMaxSpeed;
	float GravityScale;
	Unknown OriginalTarget;
	float ChargePercent;
	float MomentumTransfer;
	bool bAddOwnerVelocity;
	bool bSpawnPointCanBeUsedByOtherPlayers;
	float PlayerSpawnOffset;
	bool bRegisterInPerceptionSystem;
	bool bCanBePickedUpWhenStopped;
	class UClass* CapsuleComponent;
	class UClass* ProjectileMovementComponent;
	class UClass* WaterInteractionComponent;
	bool bDummyProjectile;
	bool bStopSimulatingOnHit;
	EProjectileWaterHitBehavior TouchWaterBehavior;
	bool bDisableCollisionOnStop;
	bool bStoppedSimulatingDueToHit;
	bool bReplicateStopSimulationLocation;
	bool bReplicateStopSimulationLocationOptimized;
	bool bClientInterpMovement;
	bool bClientInterpRotation;
	bool bUseClientsidePrediction;
	bool bIsPredictedProjectile;
	bool bAutoSelectAttachedForInterp;
	struct HitResult SimulationStoppingHit;
	bool bFiredWhileTargeting;
	int ResumeSimulationCount;
	uint16_t SyncId;
	EFortBaseWeaponDamage WeaponResponseType;
	struct GameplayTagContainer DefaultTags;
	struct FortProjectileCues ProjectileGameplayCues;
	class UClass* CachedPassByPawn;
	float SkyTubeForceMultiplier;
	class UClass* CurrentSkyTube;
	struct HitResult CachedImpactResult;
	class UClass* BulletWhipTrackerComponentClass;
	bool bResetOverlapRestrictionsOnBounce;
	float MaxLifespanOnStop;
	float LifespanOnHitDoNotExplode;
	class UClass* BulletWhipTrackerComponent;
	TArray<struct FName> ProjectileThrownStatCategoryNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAttachableProjectileBase : public AFortProjectileBase
{
public:
	struct AttachedInfo AttachedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAttachToActorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAttributeCategory : public UDataAsset
{
public:
	TArray<struct MyFortCategoryData> Categories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAttributeFuelInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAttributeLookupTable : public UDataAsset
{
public:
	TArray<struct FortAttributeInfo> AttributeInfoList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAttributeSet_VehicleFuel : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData Fuel;
	struct FortGameplayAttributeData FuelTankCapacity;
	struct FortGameplayAttributeData FuelPerSecondIdle;
	struct FortGameplayAttributeData FuelPerSecondDriving;
	struct FortGameplayAttributeData FuelPerSecondBoosting;
	struct FortGameplayAttributeData FuelPerSecondLeaking;
	struct FortGameplayAttributeData MinFuelAtSpawn;
	struct FortGameplayAttributeData MaxFuelAtSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAudioAnalysisController : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAudioAnalysisDebugWidget : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioAnalysisSettings : public UPrimaryDataAsset
{
public:
	class UClass* DefaultAnalysisSubmix;
	struct FortSubmixAnalyzerData DefaultAnalysisData;
	class UClass* DebugWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioAnalysisSubmixAnalyzer : public UObject
{
public:
	struct FDelegate OnSubmixEnvelopeDelegate;
	struct FDelegate OnSubmixSpectralAnalysisDelegate;
	class UClass* Submix;
	struct FortSubmixAnalyzerData AnalyzerData;
	class UClass* OwningSubsystem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioAnalysisSubsystem : public UWorldSubsystem
{
public:
	struct SoftObjectPath AudioAnalysisSettingsPath;
	class UClass* AudioAnalysisSettings;
	struct FScriptMulticastDelegate OnEnvelopeFollowerUpdated;
	struct FScriptMulticastDelegate OnSpectralAnalysisUpdated;
	class UClass* DebugWidget;
	Unknown SubmixAnalyzers;
	Unknown SubmixRefCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioCurveVector : public UCurveVector
{
public:
	class UClass* ExternalCurves;
	TArray<struct AudioCurveInfo> AudioCurves;
	TArray<struct AudioCurveInfo> OriginalAudioCurves;
	TArray<struct AudioCurveInfo> ModifiedAudioCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLocalPlayerSubsystem : public ULocalPlayerSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioLocalPlayerSubsystem : public UFortLocalPlayerSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioShapePrimitiveComponent : public UFortAudioShapeComponent
{
public:
	class UClass* SoundOnEdge;
	class UClass* SoundOnInside;
	struct FScriptMulticastDelegate OnInsideStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioShapeBoxComponent : public UFortAudioShapePrimitiveComponent
{
public:
	struct Transform BoxTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioShapeCylinderComponent : public UFortAudioShapePrimitiveComponent
{
public:
	float HalfHeight;
	float Radius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioShapeLineComponent : public UFortAudioShapePrimitiveComponent
{
public:
	struct Vector StartPoint;
	struct Vector EndPoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAudioToMPCComponent : public UActorComponent
{
public:
	bool bPushDataToMPC;
	bool bCacheDataForBlueprintUse;
	class UClass* MaterialParameterCollection;
	TArray<struct ChannelData> ChannelDataArray;
	TArray<struct SoundWaveSpectralDataPerSound> FFTDataArray;
	bool bWasPlaying;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAutoFireTargetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAwardDetector : public UObject
{
public:
	class UClass* AwardDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAwardDetectorFirstKill : public UFortAwardDetector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAwardDetectorKillDeveloper : public UFortAwardDetector
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAwardDetectorKillStreak : public UFortAwardDetector
{
public:
	int NeededKills;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAwardItemDefinition : public FortAccountItemDefinition
{
public:
	bool bSingleSharedDetector;
	bool bCanEarnMultipleTimes;
	class UClass* DetectorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAwardManager : public UObject
{
public:
	class UClass* PlayerController;
	TArray<class UClass*> ActiveAwards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBackpackItemDefinition : public FortWorldItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBadgeItemDefinition : public FortWorldItemDefinition
{
public:
	struct FText DisplayText;
	struct FText FailedDisplayText;
	struct LinearColor BadgeColor;
	int UIMissionPointsOffset;
	struct DataTableRowHandle BadgeScoringValuesHandle;
	struct TSoftClassPtr<UObject> BadgeCardPackReward;
	TArray<struct FortItemQuantityPair> ItemRewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBallSpawner : public AActor
{
public:
	class UClass* BallToSpawn;
	class UClass* SphereComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventLevelNavigationBangCheckComponent : public UActorComponent
{
public:
	struct GameplayTag BangTrackerTag;
	class UClass* OwningNavigationActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangCheckComponent_Customization : public UFortEventLevelNavigationBangCheckComponent
{
public:
	class UClass* CustomizationRewardGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangCheckComponent_Donut : public UFortEventLevelNavigationBangCheckComponent
{
public:
	TArray<class UClass*> DonutBundles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangCheckComponent_Elevator : public UFortEventLevelNavigationBangCheckComponent
{
public:
	TArray<struct BangCheckData> ABChoiceQuests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangCheckComponent_Faction : public UFortEventLevelNavigationBangCheckComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangCheckComponent_Map : public UFortEventLevelNavigationBangCheckComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangCheckComponent_PunchCard : public UFortEventLevelNavigationBangCheckComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBannerTokenType : public FortAccountItemDefinition
{
public:
	EItemProfileType ProfileType;
	struct FString BannerIconTemplateName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBannerUtilities : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattleLabDeviceAccountItemDefinition : public FortAccountItemDefinition
{
public:
	class UClass* BattleLabDeviceItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattleLabDeviceItemDefinition : public FortWorldItemDefinition
{
public:
	struct TSoftClassPtr<UObject> BattleLabDeviceActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBenchManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBlendBehaviorAnimMetaData : public UAnimMetaData
{
public:
	bool bShouldHidePropsDuringBlendInFrontEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBlueprintAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOnboardingAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOutpostAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeployableBaseAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortExpeditionAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionBookAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSurvivorAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTwitchAnalytics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBlueprintContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBluGloManager : public AActor
{
public:
	float BluGloPerMinute;
	struct SlateBrush BluGloIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBodyPartOverridePreviewActor : public AActor
{
public:
	class UClass* MyCosmeticItem;
	struct FDelegate OnSettingsChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBotController : public FortAIController
{
public:
	class UClass* CurrentMissionLogic;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBotMissionLogic : public UObject
{
public:
	class UClass* Mission;
	TArray<class UClass*> Goals;
	TArray<class UClass*> Builders;
	class UClass* CurrentBehaviorAsset;
	TArray<class UClass*> AssignedAI;
	TArray<byte> GoalHasLocator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBotMissionManager : public UObject
{
public:
	struct TSoftClassPtr<UObject> BotPawnClass;
	TArray<class UClass*> BotPawns;
	TArray<class UClass*> ActiveMissionsLogicData;
	class UClass* PrimaryMissionLogicData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBotPawn : public AFortAIPawn
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBotStructureBuilder : public AActor
{
public:
	class UClass* BuildingInstructions;
	TArray<class UClass*> BuiltActors;
	class UClass* CachedGoal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBowWeaponAnimInstance : public UFortAnimInstance
{
public:
	float ChargeBlendSpaceCrouchSpeed;
	float ChargePlayRate;
	float OutOfAmmoAlpha;
	float BowAimYaw;
	float BowAimPitch;
	EFortCustomGender OwnerGender;
	bool bIsBowCharging;
	bool bEnterChargingNormalTransition;
	bool bEnterChargingFastTransition;
	bool bShouldPlayDefaultPose;
	bool bIsBowAtMaxCharge;
	bool bIsCrouchMoving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBroadcastRemoteClientInfo : public AActor
{
public:
	bool bActive;
	bool bRemoteIsInteracting;
	class UClass* RemoteEditActor;
	TArray<int> RemoteEditTileData;
	class UClass* RemoteBuildableClass;
	EFortResourceType RemoteBuildingMaterial;
	bool bRemoteIsFullScreenMapActive;
	bool bRemoteIsInventoryActive;
	bool bRemoteCanDBNORevive;
	struct AthenaQuickChatActiveEntry RemoteChatEntry;
	struct BuildingWeakSpotData RemoteWeakspotData;
	float RemoteRespawnTime;
	int16_t RemotePoiTagID;
	int RemoteEventScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBroadcastSpectatorInfo : public AInfo
{
public:
	int TotalNumPlayers;
	int TotalNumTeams;
	TArray<class UClass*> TeamPrivateInfos;
	TArray<struct FortBroadcastInfoPerPlayer> PerPlayerInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTContext_MoveUrgency : public UFortBTService_ContextOverride
{
public:
	EFortMovementUrgency MoveUrgency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTContext_SkipNotPerceivedGoals : public UFortBTService_ContextOverride
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTContext_SuppressGoalUpdate : public UFortBTService_ContextOverride
{
public:
	bool bUnregisterFromGoalManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_CanBeConsideredAirborne : public UBTDecorator_BlackboardBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_DistanceBetween : public UBTDecorator
{
public:
	EArithmeticKeyOperation Operator;
	struct BlackboardKeySelector BlackboardKeyA;
	struct BlackboardKeySelector BlackboardKeyB;
	float SpecifiedDistance;
	bool bUseSelf;
	bool bCalculateAs2D;
	float DistanceCalculationUpdateRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_QueryGameplayAbility : public UBTDecorator
{
public:
	struct GameplayTagContainer GameplayAbilityTag;
	struct BlackboardKeySelector Target;
	struct GameplayTagContainer ActiveAbilityTagsToSkipTesting;
	bool bUseTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_CanActivate : public UFortBTDecorator_QueryGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_CanHitTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:
	bool UseIdealYawRotationToTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_CompareDistance : public UFortBTDecorator_QueryGameplayAbility
{
public:
	TArray<struct DistanceToTargetComparison> DistanceComparisons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags : public UFortBTDecorator_QueryGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_HasGameplayAbility : public UBTDecorator
{
public:
	struct GameplayTagContainer GameplayAbilityTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_IsOnCooldown : public UFortBTDecorator_QueryGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_IsRotatedToAttackTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange : public UFortBTDecorator_QueryGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_IsGoalPawn : public UBTDecorator_BlackboardBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_IsTakerAirborne : public UBTDecorator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTDecorator_WeaponStatus : public UBTDecorator
{
public:
	float WeaponStatusUpdateRate;
	bool bTestIfCurrentWeaponIsValid;
	bool bCurrentWeaponShouldBeValid;
	bool bTestAllowedCurrentWeaponTags;
	struct GameplayTagContainer AllowedCurrentWeaponTags;
	bool bTestIfCurrentWeaponIsReloading;
	bool bCurrentWeaponShouldBeReloading;
	bool bTestIfCurrentWeaponHasAmmoInMagazine;
	bool bCurrentWeaponShouldHaveAmmoInMagazine;
	bool bTestIfCurrentWeaponHasExtraAmmo;
	bool bCurrentWeaponShouldHaveExtraAmmo;
	bool bAllInterestedTestsMustPass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTService_ActivateAbility : public UBTService
{
public:
	struct GameplayTagContainer AbilityTags;
	bool bRequireCanHitTargetWithAbility;
	bool bPawnTargetsOnly;
	struct GameplayTagContainer ProhibitedTargetTags;
	TArray<struct DistanceToTargetComparison> DistanceChecks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTService_UpdateBotMissionBuilding : public UBTService
{
public:
	struct BlackboardKeySelector InterestLocationKey;
	struct BlackboardKeySelector BuildOrderKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTService_UpdateBotMissionGoal : public UBTService_BlackboardBase
{
public:
	bool bRequireInteraction;
	bool bRequireInteractionOrLocator;
	bool bRequireEncounter;
	bool bPickClosest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_BotMissionBuild : public UBTTask_BlackboardBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_BotMissionInteract : public UBTTask_BlackboardBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_ExecuteGameplayAbility : public UBTTask_GameplayTaskBase
{
public:
	struct GameplayTagContainer GameplayAbilityTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_GameMoveTo : public UBTTask_MoveTo
{
public:
	struct BlackboardKeySelector FocalPointWhileMoving;
	EPathObstacleAction PathObstacleAction;
	class UClass* PushBumpedPawnClass;
	bool bDetectUnexpectedPathBlockingObstacles;
	bool bEnableSlowdownAtGoal;
	bool bStopAtGoal;
	bool bFinishMoveOnOverlap;
	bool bDeimosFlavor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_GameMoveDirectlyToward : public UFortBTTask_GameMoveTo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_RequestUndermining : public UBTTaskNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_SetFrustrationDiscouragement : public UBTTaskNode
{
public:
	float DiscouragementDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_Sleep : public UBTTaskNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_TakerMoveToNavmesh : public UBTTask_MoveTo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBTTask_TriggerVOEvent : public UBTTaskNode
{
public:
	bool bUseFeedbackBank;
	struct FString CustomEventName;
	struct FString SelectedEvent;
	class UClass* FeedbackBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHealthSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData Health;
	struct FortGameplayAttributeData MaxHealth;
	struct FortGameplayAttributeData Shield;
	struct FortGameplayAttributeData CurrentShield;
	struct FortGameplayAttributeData SignalInStorm;
	struct FortGameplayAttributeData MaxSignalInStorm;
	struct FortGameplayAttributeData Armor;
	struct FortGameplayAttributeData DamageResistance;
	struct FortGameplayAttributeData DamageVulnerability;
	struct FortGameplayAttributeData ReflectDamageAbsolute;
	struct FortGameplayAttributeData ReflectDamageFromSource;
	struct FortGameplayAttributeData HealingSourceBaseMultiplier;
	struct FortGameplayAttributeData Damage;
	struct FortGameplayAttributeData ShieldDamage;
	struct FortGameplayAttributeData HealingSource;
	struct FortGameplayAttributeData HealingBonusTarget;
	struct FortGameplayAttributeData Healing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuildingActorSet : public FortHealthSet
{
public:
	struct FortGameplayAttributeData BuildTime;
	struct FortGameplayAttributeData RepairTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortBuildingActorSpawner : public AActor
{
public:
	class UClass* ActorClassToSpawn;
	class UClass* QueryTemplate;
	TArray<struct AIDynamicParam> QueryConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingAddStructuralSupportComponent : public UActorComponent
{
public:
	TArray<class UClass*> AddedStructuralBuildingActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingAddStructuralSupportMarkerComponent : public USceneComponent
{
public:
	class UClass* BuildingClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingAudioBank : public UDataAsset
{
public:
	struct FortBuildingSoundsPerResourceType Sounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuildingEnergyComponentAttrSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData CurrentEnergyLevel;
	struct FortGameplayAttributeData RegenRate;
	struct FortGameplayAttributeData EnergyCost;
	struct FortGameplayAttributeData EnergyRechargeDelay;
	struct FortGameplayAttributeData EnergyCapacity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingEnergyComponent : public UActorComponent
{
public:
	class UClass* EnergyComponentAttrSet;
	class UClass* EnergyComponentRechargeAbility;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingInstructions : public UDataAsset
{
public:
	TArray<struct FortBuildingInstruction> Instructions;
	struct BoxSphereBounds Bounds;
	int NumOfPiecesToSpawnAtOnce;
	float TimeBetweenSpawns;
	bool bSetOwnerID;
	bool bUsePlayerBuildAnimations;
	struct FString MapName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponItemDefinition : public FortWorldItemDefinition
{
public:
	struct TSoftClassPtr<UObject> WeaponActorClass;
	struct TSoftClassPtr<UObject> WeaponMeshOverride;
	struct TSoftClassPtr<UObject> IntrinsicOverrideWrap;
	struct DataTableRowHandle WeaponStatHandle;
	bool bRechargeAmmoToClip;
	struct ScalableFloat WeaponRechargeAmmoRate;
	struct ScalableFloat WeaponRechargeAmmoQuantity;
	struct TSoftClassPtr<UObject> AbilitySet;
	struct FName AlterationSlotsLoadoutRow;
	struct FName BaselineAlterationSlotsLoadoutRow;
	struct TSoftClassPtr<UObject> BaseAlteration;
	struct TSoftClassPtr<UObject> BaseCosmeticAlteration;
	TArray<struct FortWeaponModSlot> WeaponModSlots;
	struct TSoftClassPtr<UObject> PrimaryFireAbility;
	struct TSoftClassPtr<UObject> SecondaryFireAbility;
	struct TSoftClassPtr<UObject> ReloadAbility;
	struct TSoftClassPtr<UObject> OnHitAbility;
	TArray<struct TSoftClassPtr<UObject>> EquippedAbilities;
	struct TSoftClassPtr<UObject> EquippedAbilitySet;
	TArray<class UClass*> EquippedCharacterParts;
	struct TSoftClassPtr<UObject> AmmoData;
	TArray<class UClass*> AdditionalDataFields;
	float LowAmmoPercentage;
	EFortWeaponTriggerType TriggerType;
	EFortWeaponTriggerType SecondaryTriggerType;
	EFortDisplayTier DisplayTier;
	bool bUsesPhantomReserveAmmo;
	bool bUsesCustomAmmoType;
	bool bAllowSecondaryFireToInterruptPrimary;
	bool bAllowTargetingDuringReload;
	bool bTargetingPreventsReload;
	bool bCanFireWhileInstigatorTethered;
	bool bCanFireWhileNotTargetedInVehicle;
	bool bAlwaysChargeUpToMin;
	bool bNoFireOnReleaseBeforeMinChargeTime;
	bool bEndAbilityOnChargeEnd;
	bool bUpdateLastFireTimeOnDischarge;
	bool bReticleCornerOutsideSpreadRadius;
	bool bValidForLastEquipped;
	bool bPreventDefaultPreload;
	bool bRequestClientPreload;
	float HitNotifyDuration;
	struct TSoftClassPtr<UObject> ReticleImage;
	TArray<float> ReticleCornerAngles;
	struct TSoftClassPtr<UObject> ReticleCenterImage;
	struct TSoftClassPtr<UObject> ReticleCenterPerfectAimImage;
	struct Vector2D ReticleCenterImageOffset;
	struct TSoftClassPtr<UObject> ReticleInvalidTargetImage;
	struct GameplayTagContainer AnalyticTags;
	struct GameplayTagContainer PlayerGrantedGameplayTags;
	TArray<struct FName> ActualAnalyticFNames;
	struct TSoftClassPtr<UObject> RequiredWeaponParent;
	struct FortCreativeTagsHelper CreativeTagsHelper;
	class UClass* AdditionalData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuildingItemDefinition : public FortWeaponItemDefinition
{
public:
	struct TSoftClassPtr<UObject> BuildingMetaData;
	struct TSoftClassPtr<UObject> InactivePreviewImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSmartBuildingItemDefinition : public FortBuildingItemDefinition
{
public:
	ESmartBuildMode SmartBuildMode;
	TArray<struct SmartBuildSelection> BoxModeSelections;
	TArray<struct SmartBuildSelection> BridgeModeSelections;
	TArray<struct SmartBuildSelection> TowerModeSelections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingOctreeManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuildingTrapSet : public FortBuildingActorSet
{
public:
	struct FortGameplayAttributeData Durability;
	struct FortGameplayAttributeData MaxDurability;
	struct FortGameplayAttributeData DurabilityCostPerFire;
	struct FortGameplayAttributeData ArmTime;
	struct FortGameplayAttributeData ReloadTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCameraBase : public ACameraActor
{
public:
	float MinDistanceToDrag;
	float DefaultFieldOfView;
	struct Rotator DefaultRotation;
	struct Vector DefaultLocation;
	class UClass* ExhibitActor;
	bool bExhibitActorChanged;
	bool CheckForDragBegin;
	struct Vector2D DownDelta;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUICameraFrameInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemPreviewBoundsInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUICameraFrameTargetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUICameraPositionTargetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUICameraFramingFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_AthenaAircraft : public UFortCameraMode_ThirdPerson
{
public:
	struct Vector CameraOriginInterpSpeedToPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_FocalPoint : public UFortCameraMode_ThirdPerson
{
public:
	float InterpolatedFOV;
	float FOVInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_PropSelector : public UFortCameraMode_ThirdPerson
{
public:
	struct Vector PropOffsetScale_ViewTargetSpace;
	struct Vector MinPropOffset_ViewTargetSpace;
	struct Vector MaxPropOffset_ViewTargetSpace;
	struct Vector PropOffsetScale_CameraSpace;
	struct Vector MinPropOffset_CameraSpace;
	struct Vector MaxPropOffset_CameraSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_RespawnedAir : public UFortCameraMode_ThirdPerson
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_Tethered : public UFortCameraMode_ThirdPerson
{
public:
	struct Vector OriginOffset;
	struct Vector2D TetherOffsetRangeX;
	struct Vector2D TetherDistanceRange;
	float TetherJumpOffset;
	float TetherJumpOffsetTime;
	float TetheredBoostFOV;
	float FOVInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraModeOverrideComponent : public UActorComponent
{
public:
	class UClass* CameraModeOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraModifier_DebugCameraLock : public UCameraModifier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProfileItem : public UFortPersistableItem
{
public:
	bool item_seen;
	bool favorite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCampaignHeroLoadoutItem : public UFortProfileItem
{
public:
	struct FString loadout_name;
	int loadout_index;
	Unknown crew_members;
	TArray<struct FilledGadgetSlot> Gadgets;
	struct FString team_perk;
	Unknown CrewMembers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProfileItemDefinition : public FortPersistableItemDefinition
{
public:
	bool bCanBeFavorite;
	bool bCanBeMarkedSeen;
	struct FString GrantToProfileType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignHeroLoadoutItemDefinition : public FortProfileItemDefinition
{
public:
	TArray<struct FortCrewSlotInformation> CrewSlots;
	struct GameplayTagQuery CommanderSlotQuery;
	struct GameplayTagQuery SupportHeroSlotQuery;
	int GadgetSlotsAllowed;
	struct FName SlotUnlockSquadName;
	struct TSoftClassPtr<UObject> TeamPerkUnlockNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCampaignJackalVehicle : public AFortAthenaJackalVehicle
{
public:
	bool bVehicleLeftAnalogStrafing;
	float VehicleLeftAnalogStrafingMultiplier;
	float MinSpeedToWallRun;
	float AggroRangeOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCardPackItem : public UFortAccountItem
{
public:
	TArray<struct McpLootEntry> Options;
	struct FString pack_source;
	bool is_loot_tier_overridden;
	int override_loot_tier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCardPackItemDefinition : public FortAccountItemDefinition
{
public:
	bool bIsLlama;
	bool bIsChoicePack;
	bool bAutoOpenAsReward;
	int LootTier;
	struct FString LootTierGroup;
	int DisplayRarityLevel;
	struct TSoftClassPtr<UObject> PackImage;
	struct TSoftClassPtr<UObject> XRayTexture;
	struct LinearColor PackColor;
	struct TSoftClassPtr<UObject> PackPersonality;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCarriedObject : public AActor
{
public:
	class UClass* ProjectileComp;
	struct CarriedObjectAttachmentInfo HolderInfo;
	struct Vector IndicatorRelativeOffset;
	struct SlateBrush Indicator;
	struct SlateColor DefaultIndicatorColor;
	struct Vector RelativeTranslation;
	struct Rotator RelativeRotation;
	bool bPickupOnTouch;
	byte Team;
	class UClass* SpawnPointActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCarriedObjectHolderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCarriedObjectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortChallengeBundleItem : public UFortAccountItem
{
public:
	int num_quests_completed;
	int num_progress_quests_completed;
	TArray<struct FString> GrantedQuestInstanceIds;
	int max_allowed_bundle_level;
	struct FString challenge_bundle_schedule_id;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChallengeBundleItemDefinition : public FortAccountItemDefinition
{
public:
	TArray<struct FortChallengeBundleQuestEntry> QuestInfos;
	TArray<struct TSoftClassPtr<UObject>> SuppressedQuestDefs;
	struct FString CalendarEventTag;
	struct FString CalendarEventName;
	TArray<struct FortChallengeBundleRewards> BundleCompletionRewards;
	TArray<struct FortChallengeBundleLevel> BundleLevelRewards;
	TArray<struct FortChallengeBundleSpecialOffer> SpecialOffers;
	TArray<struct TSoftClassPtr<UObject>> CareerQuestBitShifts;
	struct FortChallengeSetStyle DisplayStyle;
	struct AthenaRewardItemReference OverrideRewardItem;
	class UClass* CharacterOverrideForRewardPreviews;
	int MaxChainDepth;
	struct TSoftClassPtr<UObject> BundleHidenImageMaterial;
	struct FText UniqueLockedMessage;
	bool bHideFromMapChallenges;
	bool bHideFromMapChallengeUntilBundleExists;
	bool bHideRewardFromMapChallenges;
	bool bHideTimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortChallengeBundleProgressToken : public UFortAccountItem
{
public:
	struct FString bundle_template;
	class UClass* BundleItemDef;
	TArray<int> completion_bits;
	TArray<int> completion_times;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChallengeBundleProgressTrackerToken : public FortAccountItemDefinition
{
public:
	EItemProfileType ProfileType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChallengeBundleScheduleDefinition : public FortAccountItemDefinition
{
public:
	TArray<struct FortChallengeBundleScheduleEntry> ScheduleEntries;
	struct FString CalendarEventTag;
	struct FString CalendarEventName;
	struct GameplayTag RequiredMcpContextTags;
	struct ChallengeGiftBoxData GrantedBundleGiftBox;
	bool CleanUpOnBundleCompletion;
	struct GameplayTag CategoryTag;
	struct GameplayTag ChallengeDetailsTag;
	bool bHideInLegacyAllChallengesEscapeMenu;
	struct GameplayTag SourceTag;
	bool bSeperateEachBundleForDisplay;
	int SortPriority;
	struct FText UnlockTextOverride;
	TArray<struct TSoftClassPtr<UObject>> CustomChallengeHeaderExtensions;
	bool bHideCountdownFromMapChallenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortChallengeBundleScheduleItem : public UFortAccountItem
{
public:
	TArray<struct FString> Granted_Bundles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortChallengeSetStyleAsset : public UDataAsset
{
public:
	struct FortChallengeSetStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacter : public UFortAccountItem
{
public:
	struct FString squad_id;
	int squad_slot_idx;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterCosmeticManager : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterCustomizationData : public UPrimaryDataAsset
{
public:
	TArray<struct TSoftClassPtr<UObject>> CharacterPartOverrides;
	struct TSoftClassPtr<UObject> AnimBPOverride;
	struct TSoftClassPtr<UObject> AnimSetOverride;
	TArray<struct TSoftClassPtr<UObject>> AnimLayersOverride;
	struct TSoftClassPtr<UObject> FootstepBankOverride;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerStateComponent : public PlayerStateComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCharacterCustomizationManagerComponent : public FortPlayerStateComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterLayerAnimInstance_STWPlayer : public UFortBaseLayerAnimInstance
{
public:
	struct FortAnimInput_STWHoverBoard HoverBoardInput;
	float LeanAdditiveAlpha;
	float LeanAngle;
	float Speed2D;
	float LocalVelocityYawAngle;
	EFortCustomGender Gender;
	bool bIsSlopeSliding;
	bool bIsOnGround;
	bool bLandingPredicted;
	bool bIsFalling;
	bool bIsJumping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterPartsComponent : public UActorComponent
{
public:
	class UClass* CustomizationAssetLoader;
	TArray<class UClass*> CharacterPartList;
	TArray<class UClass*> SkeletalMeshComponents;
	TArray<struct PartStackEntry> CharacterPartStack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterPartSyncedSequenceMetaData : public UAnimMetaData
{
public:
	class UClass* SyncedSequence;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterTooltip : public UFortAccountItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCharacterType : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharacterTypeTooltip : public UFortItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerPawn : public AFortPawn
{
public:
	struct FortAthenaVehicleInputStateReliable VehicleInputStateReliable;
	bool bIsNearSafeZoneEdge;
	bool bPlayingSafeZoneEffects;
	bool bDoSafeZoneCleanup;
	bool bIsSwimmingAnimLayerLinked;
	bool bIsSprintJump;
	bool bHasDisableSprintTag;
	bool bDisableSwimSprintCancel;
	bool bIsWaterJump;
	bool bIsWaterSprintBoost;
	bool bIsWaterSprintBoostPending;
	bool bPlayingPassengerToPassengerAnimation;
	bool bPlayingDriverToPassengerAnimation;
	bool bIsTargeting;
	bool bIsTargetingConsumableThrow;
	bool bIsSwappingCharacterParts;
	bool bBalloonMovementActivated;
	bool bIsScriptedBot;
	bool bBuildHotfix;
	struct LightingChannels FortPlayerPawnLightingChannels;
	EFortPawnStasisMode StasisMode;
	EFortBuildingState BuildingState;
	int8_t AccelerationZPack;
	class UClass* ParachuteDirectionalSpeedMultiplierCurve;
	class UClass* SkydivingDirectionalSpeedMultiplierCurve;
	class UClass* BallooningDirectionalSpeedMultiplierCurve;
	class UClass* DirectionalSpeedMultiplierCurve;
	float MinimumTimeBetweenSteps;
	float LastStepTime;
	struct FScriptMulticastDelegate OnFootstepEvent;
	struct FScriptMulticastDelegate OnPawnEnterWater;
	bool bIsInWaterVolume;
	bool bNotifyBlueprintWhenLandscapeTeleporting;
	byte CachedTeamControllingRC;
	byte BalloonActiveCount;
	bool bParachuteDeployFixedVerticalDistance;
	bool bIsSkydiving;
	bool bIsParachuteOpen;
	bool bLocalIsSkydiving;
	bool bLocalIsParachuteForcedOpen;
	bool bIsParachuteForcedOpen;
	bool bIsSkydivingFromBus;
	bool bIsSkydivingFromLaunchPad;
	bool bPendingSkydiveLaunch;
	bool bIsInVortex;
	bool bReplicatedIsInVortex;
	bool bIsInSlipperyMovement;
	bool bReplicatedIsInSlipperyMovement;
	bool bIsBelowAutoDeployTestHeight;
	bool bIsSlopeSliding;
	bool bIsProxySimulationTimedOut;
	bool bIsPedestalHero;
	bool bInGliderRedeploy;
	bool bLocalInGliderRedeploy;
	bool bBeingRepossessed;
	bool bInitAbilitySystemComponentFromPlayerState;
	bool bStartedInteractSearch;
	bool bPawnLODDirty;
	bool bIsUsingJetpack;
	bool bIsPlayingEmote;
	bool bShowingOverdriveEffect;
	bool bIsRespawning;
	bool bIsRespawningInAir;
	bool bInitializedPostRepPlayerState;
	bool bHasWaterParticleSystem;
	bool bCanShowDefaultSkin;
	bool bDisabledTetheringSupport;
	bool bIsInFrontEndHologram;
	Unknown HeldObject;
	bool bForceMoveRelativeToCameraRotation;
	bool bIsWaitingForEmoteInteraction;
	bool bIsEmoteLeader;
	bool bShouldSyncAnimationWithEmoteLeader;
	bool bShouldJitterAnimationSyncWithEmoteLeader;
	bool bDoubleFileEmoteSecondLine;
	bool bEmoteUsesSecondaryFire;
	bool bLockGroupEmoteLeaderRotation;
	class UClass* GroupEmoteLookTarget;
	class UClass* GroupEmoteTailTarget;
	TArray<class UClass*> GroupEmoteFollowers;
	float GroupEmoteAnimOffset;
	float GroupEmoteLeaderRotationYawOffset;
	struct Rotator GroupEmoteLookTargetRotationLeader;
	float GroupEmoteMaximumZDifference;
	struct FScriptMulticastDelegate OnGroupEmoteSyncValueChanged;
	struct FScriptMulticastDelegate OnGroupEmoteFollowerJoined;
	struct FScriptMulticastDelegate OnGroupEmoteFollowerLeft;
	struct FScriptMulticastDelegate OnGroupEmoteSecondaryFirePressed;
	byte GroupEmoteSyncValue;
	byte GroupEmoteSoundValue;
	byte GroupEmoteParticleValue;
	class UClass* TransformationMontage;
	float TransformationMontageStartTime;
	class UClass* CurrentMontagerLeader;
	class UClass* CurrentSyncedMontage;
	bool bCharacterPartsCastIndirectShadows;
	EFortCustomGender CharacterGender;
	EFortCustomBodyType CharacterBodyType;
	float JumpLastActivatedTime;
	struct Vector PreviousPosition;
	struct Vector PreviousVelocity;
	uint16_t ReplicatedCustomMeshHeightAdjustTarget;
	float UnburrowLaunchXYSpeed;
	float UnburrowLaunchZSpeed;
	struct FortAthenaVehicleInputStateUnreliable VehicleInputStateUnreliable;
	bool bIsInAnyStorm;
	bool bIsInsideSafeZone;
	class UClass* SafeZoneAppliedGE;
	class UClass* SelfReviveGameplayEffect;
	class UClass* TeammateReviveGameplayEffect;
	struct ScalableFloat SetByCallerReviveHealth;
	struct FName DBNOInteractionCollisionProfile;
	struct Vector DBNOInteractionBoxExtent;
	float DBNODeferTime;
	class UClass* DBNOInteractCollisionComponent;
	struct GameplayTag EventReviveTag;
	float AggroRangeOverride;
	float SetByCallerReviveSignalInStorm;
	Unknown ArmoredInterface;
	class UClass* LastBuildingMetadata;
	float SprintCancelTime;
	float WaterSprintBoostAllowedTimer;
	bool bHasStartedFloating;
	struct ZiplinePawnState ZiplineState;
	struct CurveTableRowHandle ZiplineJumpDampening;
	struct CurveTableRowHandle ZiplineJumpStrength;
	struct ScalableFloat ZiplineJumpActivateDelay;
	struct ScalableFloat ZiplineRentryProtectionDelay;
	float ZiplineSocketZOffset;
	struct FScriptMulticastDelegate ZiplineStateChanged;
	float ZiplineSpeedFactorTarget;
	float ZiplineSpeedFactor;
	struct ScalableFloat EnableSwimSprintDiveCooldown;
	struct ScalableFloat SwimSprintDiveCooldown;
	struct ScalableFloat SwimDiveBoostTimeThreshold;
	float ClientSwimDiveInputTime;
	bool bCanPredictJumpApex;
	TArray<class UClass*> AbilityAITargets;
	class UClass* UnableToPerformActionMontage;
	class UClass* UnableToPerformActionSound;
	float MoveSoundStimulusBroadcastInterval;
	float EmoteStartTime;
	float EmoteRandomNum;
	bool bPlayingPassengerToDriverAnimation;
	float VehicleSpeedAtTimeOfJump;
	struct VehiclePawnState VehicleStateRep;
	class UClass* InteractingPCRep;
	struct VehiclePawnState VehicleStateLocal;
	class UClass* VehicleLastTick;
	struct FScriptMulticastDelegate OnVehicleStateChangedEvent;
	class UClass* TetherComponent;
	float PendingTetherLaunch;
	float TetherJumpLastTime;
	bool bSupportsTetheredMovement;
	class UClass* BalloonRope;
	struct FScriptMulticastDelegate OnPossessedProp;
	class UClass* PossessedProp;
	int64_t SlopeCameraOffsetFrameCounter;
	struct VectorRK4SpringInterpolator SlopeCameraOffsetInterpolator;
	struct Vector LargeBodyTypeTargetingOffset;
	class UClass* VehicleInputComponent;
	class UClass* BluePrintPlaceAnimation;
	class UClass* BluePrintEditAnimation;
	struct FScriptMulticastDelegate OnStartedInteractSearch;
	struct FScriptMulticastDelegate OnEndedInteractSearch;
	struct FScriptMulticastDelegate OnAttemptedInstantInteractSearch;
	struct FName EmoteInteractionCollisionProfile;
	struct Vector EmoteInteractionBoxExtent;
	class UClass* EmoteInteractCollisionComponent;
	struct FScriptMulticastDelegate OnPartChanged;
	class UClass* BlueprintPaperMID;
	struct Timeline BlueprintPaperPulseTimeline;
	class UClass* AccessoryColorSwatchHandler;
	class UClass* Hero;
	Unknown OvrHeroType;
	EFortPawnDisplayContext DisplayContext;
	class UClass* HACK_CustomPRIComponent;
	class UClass* CharacterParts;
	class UClass* CharacterColorSwatches;
	class UClass* CharacterPartColorSwatches;
	class UClass* CharacterCharms;
	TArray<class UClass*> RequiredVariantParts;
	class UClass* CharacterPartSkeletalMeshComponents;
	TArray<class UClass*> CharacterCharmActors;
	int8_t CharacterPartSMHiddenRefCount;
	struct FortAthenaLoadout BaseCosmeticLoadout;
	struct FortAthenaLoadout AppliedCosmeticLoadout;
	TArray<struct FortAppliedSwapItemAndVariantData> AppliedSwaps;
	struct FortAthenaLoadout CosmeticLoadout;
	uint32_t ServerLoadoutChangeSync;
	bool bAllowClientLoadoutChangeSync;
	struct FScriptMulticastDelegate OnMaterialOverrideApplied;
	struct FScriptMulticastDelegate OnMaterialOverrideCleared;
	TArray<struct FortPawnMaterialOverride> MaterialOverrides;
	TArray<struct FortPawnMaterialOverride> LocalMaterialOverrides;
	Unknown MaterialOverrideStateMap;
	class UClass* PreviousCharacterParts;
	class UClass* CharacterPartModifiers;
	struct FortCharacterPartsRepMontageInfo RepCharPartAnimMontageInfo;
	struct FortClientObservedStatArray ClientObservedStats;
	class UClass* AnimBPOverride;
	class UClass* OriginalAnimBP;
	class UClass* OnCrouchStartSound;
	class UClass* OnCrouchEndSound;
	class UClass* FootstepBankOverride;
	class UClass* OriginalFootstepBank;
	class UClass* AnimSetOverride;
	TArray<class UClass*> AnimLayersOverride;
	TArray<class UClass*> PreviousAnimLayersOverride;
	TArray<class UClass*> QueuedAutoPickups;
	TArray<struct IgnoreCollisionActor> IgnoreActors;
	struct ScalableFloat AutoPickupDropRepickupDelay;
	struct FName CarriedObjectAttachmentSocket;
	float PickupSpeedMultiplier;
	struct SlateBrush MiniMapIconBrush;
	struct SlateBrush AboveBelowMiniMapIconBrush;
	struct SlateBrush FarOffMiniMapIconBrush;
	struct SlateBrush DBNOMiniMapIconBrush;
	struct LinearColor MinimapIconColorSelf;
	struct LinearColor MinimapIconColorTeammate;
	struct LinearColor MinimapIconColorEnemy;
	float MaxIndicatorVisibilityDistForEnemies;
	float MaxIndicatorVisibilityDistForAllies;
	struct FortDBNOCarryHoisterData DBNOHoisterData;
	class UClass* DBNOHoistee;
	class UClass* DBNOHoisterAnimSet;
	class UClass* DBNOHoisteeAnimClass;
	float ThrowCarriedPlayerStrengthXY;
	float ThrowCarriedPlayerStrengthZ;
	float DropCarriedPlayerForwardOffset;
	float DropCarriedPlayerHeightOffset;
	float DropCarriedPlayerTraceHeight;
	bool bAllowDBNOCarry;
	bool bAllowDBNOCarryEnemies;
	bool bIsBeingDBNOCarried;
	bool bIsDBNOCarrying;
	bool bRequestedThrowCarriedPlayer;
	uint16_t PackedReplicatedSlopeAngles;
	struct FScriptMulticastDelegate OnDBNOHoisterChangedDelegate;
	struct FScriptMulticastDelegate OnRevivedFromDBNODelegate;
	struct FScriptMulticastDelegate OnNewPlayerState;
	struct FScriptMulticastDelegate OnAbilitySystemComponentInitialized;
	struct FScriptMulticastDelegate OnFinishedCharacterCustomization;
	class UClass* CustomizationAssetLoader;
	class UClass* SpawnParticles;
	class UClass* SpawnSound;
	bool bIsLocalPlayer;
	bool bDamagedEnemy;
	struct FScriptMulticastDelegate OnDamageComboIncrement;
	struct FScriptMulticastDelegate OnDamageComboReset;
	uint32_t PlayerStatus;
	uint16_t AccelerationPack;
	struct GameplayAbilityRepAnimMontage RepAnimMontageInfo;
	int RepAnimMontageStartSection;
	bool bNetMovementPrioritized;
	struct ReplicatedMontagePair LandingMontagePair;
	struct PreviouslyAppliedVariantData PriorVariantData;
	TArray<class UClass*> TempWeaponsStack;
	TArray<class UClass*> RootMotionInterruptNotifyStack;
	TArray<class UClass*> RootMotionInterruptMontageStack;
	class UClass* VisibilityComponent;
	class UClass* BlendablesPostProcessComp;
	bool bUseControllerRotationYawToRestore;
	struct FScriptMulticastDelegate OnBeginSkydivingEvent;
	struct FScriptMulticastDelegate OnEndSkydivingEvent;
	struct FScriptMulticastDelegate OnBeginParachuteMovementEvent;
	struct FScriptMulticastDelegate OnEndParachuteMovementEvent;
	struct FScriptMulticastDelegate OnBallooningGravityCeilingChanged;
	struct FScriptMulticastDelegate OnEnteredAircraft;
	struct FScriptMulticastDelegate OnPawnPossessed;
	struct FScriptMulticastDelegate OnPawnUnpossessed;
	struct FScriptMulticastDelegate OnEmoteInteracted;
	struct FScriptMulticastDelegate OnSafeZoneOccupancyChangedEvent;
	struct FScriptMulticastDelegate OnHeldObjectPickedUp;
	struct FScriptMulticastDelegate OnHeldObjectDropped;
	Unknown CustomMovementIndicators;
	class UClass* CurrentGliderOpenSound;
	Unknown CurrentGliderOpenAudioComponent;
	class UClass* CurrentGliderCloseSound;
	Unknown CurrentGliderCloseAudioComponent;
	bool bParachuteLockedOpen;
	bool bLocalParachuteLockedOpen;
	struct RepFortMeshAttachment AttachmentMesh;
	class UClass* AttachmentMeshComponent;
	class UClass* BotScriptedBehavior;
	struct VortexParams VortexParams;
	class UClass* ReplicatedSkyTube;
	class UClass* CurrentSkyTube;
	TArray<class UClass*> IgnoredWaterBodies;
	class UClass* UnderwaterDamageComponent;
	struct SlipperySlopeParams SlipperySlopeParams;
	class UClass* GliderClass;
	class UClass* PetState;
	class UClass* CosmeticPetInstance;
	class UClass* ParachuteAttachment;
	TArray<class UClass*> GliderOverrideStack;
	bool bResetGliderOverrideOnLanding;
	struct ScalableFloat ParachuteDeployTraceForGroundDistance;
	struct ScalableFloat LaunchPadParachuteDeployTraceForGroundDistance;
	struct ScalableFloat LaunchPadParachuteDeployTraceForDownwardSpeed;
	struct ScalableFloat ParachuteDeployVelocityBlend;
	float ParachuteCooldownToOpen;
	float ParachuteCooldownToClose;
	struct ScalableFloat GliderRedeployAllowedRow;
	struct ScalableFloat GliderRedeployLateralVelocityMultiplierRow;
	struct ScalableFloat GliderRedeployHeighLimitRow;
	struct ScalableFloat BalloonFallDamageThresholdVelocityZ;
	class UClass* PreDrivingAnimBP;
	class UClass* CurrentVehicleAnimLayerOverlayClass;
	class UClass* CurrentSwimmingAnimLayerOverlayClass;
	class UClass* DefaultSwimmingAnimLayerOverlayClass;
	float TimeBeforeSwimmingLayerDeactivated;
	class UClass* ParachuteAudioLoop;
	float ParachuteAndSkydiveAudioFadeInTime;
	float ParachuteAndSkydiveAudioFadeOutTime;
	class UClass* SkydiveAudioLoop;
	class UClass* SoundOnParachuteForcedOpen;
	class UClass* SkydivingLoop1P;
	class UClass* SkydivingLoop3P;
	class UClass* ParachuteOpenLoop1P;
	class UClass* ParachuteOpenLoop3P;
	class UClass* SwimmingAudioLoop;
	float SwimmingAudioFadeOutTime;
	float SwimmingAudioInterpSpeed;
	class UClass* SoundOnSwimmingLoop;
	uint32_t RemoteViewData32;
	float LastQuickBarSwitchRequestTime;
	float CrouchStartTime;
	float CrouchEndTime;
	float CrouchLerpTime;
	float MeleeAbilityCooldown;
	bool bDisallowInterrogation;
	bool bDisallowInterrogationOnNPC;
	bool bHideBodyOnDeathRequested;
	Unknown ControlledRCPawn;
	struct Rotator StoredControlRotation;
	EFortFacialAnimTypes FacialTypeOverride;
	float GhostModeExitStartTime;
	float GhostModeExitDuration;
	Unknown CachedReferencesByName;
	class UClass* PSC_PlayerInWater;
	class UClass* PSC_PlayerInWaterSurfaceSwimming;
	class UClass* NiagaraPlayerInWaterBasicAsset;
	class UClass* NiagaraPlayerInWaterSwimmingAsset;
	class UClass* NiagaraPlayerWaterHandSplashAsset;
	class UClass* NiagaraPlayerWaterFootSplashAsset;
	class UClass* NiagaraPlayerWaterLargePlayerSplashAsset;
	class UClass* NiagaraPlayerWaterBoostAsset;
	struct FName FootSplashLeftSocketName;
	struct FName FootSplashRightSocketName;
	class UClass* NiagaraPlayerStandingInWater;
	class UClass* NiagaraPlayerSwimmingInWater;
	class UClass* NiagaraPlayerHandSplashInWater;
	class UClass* NiagaraPlayerFootSplashInWaterLeft;
	class UClass* NiagaraPlayerFootSplashInWaterRight;
	class UClass* NiagaraPlayerJumpSplashInWater;
	class UClass* NiagaraPlayerWaterBoost;
	bool bWaterFootSplashActive;
	bool bEnableWaterInteractionEffects;
	struct FScriptMulticastDelegate OnActivateAbility;
	struct FScriptMulticastDelegate OnFiringRangedWeapon;
	struct ScalableFloat ConsecutiveWeakSpotResourceBonus;
	struct ScalableFloat LastHitWeakSpotResourceBonus;
	class UClass* CustomInteractionWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerPawnAthena : public AFortPlayerPawn
{
public:
	struct FScriptMulticastDelegate OnInteractionFailedCallback;
	class UClass* ItemInteractionActor;
	float CurrentPawnSquaredSpeed;
	float CurrentPawnSquaredSpeedXY;
	struct Rotator CurrentPawnVelXYRot;
	struct Vector PreviousVelocityXY;
	class UClass* OnReviveSound;
	float ReviveFromDBNOTime;
	float DBNOStartTime;
	float DBNOInvulnerableTime;
	float ConvertFromDBNOTime;
	byte DBNORevivalStacking;
	float ServerWorldTimeRevivalTime;
	bool bWasCrouchedBeforeDBNO;
	struct FName ItemSpecialActorID;
	struct GameplayTag ItemSpecialActorCategoryTag;
	float BecameSpecialActorTime;
	struct FScriptMulticastDelegate OnUIGameplayCue;
	bool bPlaytestWithNoMouse;
	float CapsuleRadiusAthena;
	float CapsuleHalfHeightAthena;
	float MeshHeightAdjustAthena;
	bool bShouldPawnInstantDie;
	bool bShouldPawnDBNODisplayOnKillFeed;
	bool bShouldPawnDeathDisplayOnKillFeed;
	bool bShouldPawnLeaveEliminationIndicator;
	bool bShouldPawnAwardPoints;
	bool bShouldTriggerDeathAnalytics;
	bool bShouldDropItemsOnDeath;
	bool bShouldSkipMovementFullSimulation;
	bool bEnableRenderCustomDepth;
	bool bEnableGroundInteractionEffects;
	struct FortPlayerAthenaAttributeReplicationProxy AttributeReplicationProxy;
	struct FortPlayerAthenaGravityAttributeReplicationProxy GravityAttributeReplicationProxy;
	struct GameplayAbilityRepAnimMontage ReplayRepAnimMontageInfo;
	struct MinimalGameplayCueReplicationProxy SimulatedProxyActiveGameplayCues;
	struct MinimalGameplayCueReplicationProxy SimulatedProxyMinimalReplicationGameplayCues;
	struct MinimalReplicationTagCountMap FastReplicationMinimalReplicationTags;
	class UClass* CurrentQuickChatIcon;
	bool bADSWhileNotOnGround;
	class UClass* DefaultCrouchedFootstepSound;
	class UClass* DefaultCrouchSprintFootstepSound;
	struct FScriptMulticastDelegate OnFortPlayerDied;
	class UClass* KillerForSpectatorRotation;
	bool bDelaySimProxyCollisionInAircraftPhase;
	float TimeToDelaySkydiveCollision;
	float PositionCaptureIntervalForDistanceTraveledAccumulation;
	float SkydiveAudioMovementVolumeInterpSpeed;
	float SkydiveAudioForwardDotInterpSpeed;
	float SkydiveAudioRightDotInterpSpeed;
	struct FortEffectDistanceQuality DamageFXSignificance;
	class UClass* ScreenEffectHealthDamage;
	class UClass* ScreenEffectShieldDamage;
	class UClass* AdditiveHitReactsMontage;
	struct GameplayTagContainer DamageTagsToNotDisplayDirectionDamage;
	struct GameplayTagContainer DamageTagsToNotAddCameraShake;
	struct GameplayTagContainer WeaponTagsToNotPlayCircleAndStreakFX;
	struct FScriptMulticastDelegate OnPlayerLootedContainer;
	bool bIsPlayerPawnReady;
	struct Vector LastFiredLocation;
	struct Vector LastFiredDirection;
	float LastFiredTime;
	class UClass* PrototypeShootingModel;
	class UClass* FallInstigator;
	struct GameplayTagContainer FallDamageTags;
	class UClass* LastFloorBeforeFalling;
	float LastFallDistance;
	float SkydiveDebugTimer;
	float MeleeCombatSlowSpeedMultiplier;
	float MeleeCombatSlowDuration;
	struct AthenaPawnReplayData EncryptedPawnReplayData;
	class UClass* InAirAudioComp;
	class UClass* PSC_PlayerWalkLand;
	class UClass* PSC_PlayerRunLand;
	class UClass* PSC_PlayerSlideLand;
	class UClass* PSC_HitDamage;
	class UClass* SlidingAudioComp;
	TArray<class UClass*> MobileInteractionComponents;
	struct LinearColor MinimapIconColorFiftyFiftyPlayer;
	float MaxIndicatorVisibilityDistForReplays;
	class UClass* ConsumableUseAudio;
	float InAirAudioParameterValue;
	float InAirAudioFallDistanceThreshold;
	bool bFXPlayDustOnMovement;
	float WalkDustActivateSpeed;
	float WalkDustResetSpeed;
	float RunParticleActivateSpeed;
	class UClass* SlidingIntensitySound3P;
	class UClass* SlidingIntensitySound1P;
	float SlideAudioIntensity;
	float LastHealthPostProcessWeight;
	float HealthPostProcessStartTime;
	float HealthPostProcessMuteTime;
	bool bIsCreativeGhostModeActivated;
	bool bIsCreativeModeratorModeActivated;
	class UClass* SkinWeightManager;
	struct GameplayTagContainer InvulnerabilityTags;
	class UClass* UnicornPawnSampler;
	struct MarkedActorDisplayInfo MarkerDisplay;
	class UClass* DamageForceFeedback;
	class UClass* DamageCameraShakeClass;
	struct GameplayTagContainer DamageTagsExcludedFromCameraShake;
	class UClass* ConvertComponent;
	class UClass* AffiliationComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCharacterVehicle : public AFortPlayerPawnAthena
{
public:
	bool bDestroyBuildingSMActorOnForceExit;
	bool bDestroyOnLastExit;
	byte VTDMode;
	struct TSoftClassPtr<UObject> SoftOverrideItemWrap;
	class UClass* OverrideItemWrap;
	struct VehicleCosmeticInfo VehicleCosmeticInfo;
	bool bForcedToAlwaysSpawn;
	bool bAllowInteractBetweenFortVolumes;
	class UClass* EmoteMesh;
	TArray<class UClass*> SpecialVehicleEmotes;
	float SpawnPropOnEmoteScalar;
	class UClass* EmoteFoleyAudioComponent;
	float SeatSwitchCooldown;
	struct FScriptMulticastDelegate OnMountedWeaponFiredEvent;
	class UClass* VehicleSeatComponent;
	class UClass* OverrideAbilitySystemComponent;
	struct FortAttributeInitializationKey AttributeInitKey;
	class UClass* DriverAnimClass;
	class UClass* PassengerAnimClass;
	class UClass* OstrichSet;
	struct GameplayTagContainer VehicleTags;
	class UClass* StartupAbilitySet;
	struct FScriptMulticastDelegate OnHealthChanged;
	class UClass* CameraModeClass;
	class UClass* PassengerCameraModeClass;
	float MinBoostDuration;
	float MaxBoostDuration;
	float FullyChargedJumpTime;
	float MinHoldDuration;
	float DriverExitLaunchScale;
	float PassengerExitLaunchScale;
	float ExtraInteractTraceRange;
	float MinDistForInteract;
	float DashMovementLockDuration;
	float SeatTransitionDuration;
	float ClearMoveIgnoreActorsDelay;
	float HealthIndicatorVerticalOffset;
	float SplashDamageMinPercent;
	float SplashDamageFalloffRange;
	struct GameplayTagContainer BlockEntry;
	struct GameplayTagContainer IgnoreDamage;
	struct GameplayTagContainer IgnoreRiderDamageFalloff;
	float JumpPressTime;
	bool bDidChargeJump;
	Unknown LastController;
	class UClass* OstrichAnimInstance;
	struct FScriptMulticastDelegate OnPawnEnteredVehicleAtSeat;
	struct FScriptMulticastDelegate OnPawnEnteredVehicleSeat;
	struct FScriptMulticastDelegate OnPawnExitedVehicleSeat;
	struct FScriptMulticastDelegate OnPawnExitedVehicleFromSeat;
	struct FScriptMulticastDelegate OnSleepStateChangedDelegate;
	float IndicatorAudibleDistance;
	class UClass* IndicatorIcon;
	struct LinearColor IndicatorTint;
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct FName SpecialActorID;
	struct ScalableFloat ReregisterSpecialActorIconDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCharacterVehicle_Ostrich : public AFortCharacterVehicle
{
public:
	bool bExplodeOnDetonate;
	struct Vector GunnerAimPoint;
	Unknown ShieldActor;
	Unknown SelfDestructAbilityComp;
	struct TimerHandle DriverPrimaryCooldownHandle;
	struct TimerHandle DriverSecondaryCooldownHandle;
	TArray<class UClass*> KillExplosions;
	TArray<class UClass*> StopMontagesOnGunnerExit;
	TArray<struct VehicleSpecificUIDetails> CustomUI;
	TArray<struct ActiveVehicleUI> ActiveUI;
	struct Vector ApproxGunnerCameraOffset;
	float LandingMovementLockDurationMin;
	float LandingMovementLockDurationMax;
	float KneelingGunnerSeatVerticalOffset;
	float KneelingDriverSeatVerticalOffset;
	struct FName PassengerCameraSocket;
	struct FName PassengerRootSocket;
	struct FName BeamScaleName;
	struct FName BeamLifeName;
	struct FName BeamAttachName;
	struct FName OstrichShieldBoostStatName;
	float PassengerCameraFixedVerticalOffset;
	float PassengerCameraFixedVerticalOffsetNoDriver;
	float DriverPrimaryCooldownTime;
	float DriverSecondaryCooldownTime;
	float DetonateDelay;
	float DetonateDelaySelfDestruct;
	float DetonateRange;
	float DriverKickMoveLockDuration;
	float KickRootMotionDelay;
	float KickRootMotionDuration;
	float ShieldBoostCooldown;
	float ShieldRadius;
	float SelfDestructInteractDuration;
	float AccelFromIdle;
	float AccelFromIdleDuration;
	float IdleTimeThreshold;
	float LockoutDurationAfterRequestSeatChange;
	float MaxBeamLen;
	class UClass* DriverToGunnerTransition;
	class UClass* GunnerToDriverTransition;
	bool bChargingJump;
	bool bDriverLocalChargingJump;
	bool bChargingRockets;
	bool bAutomaticallyFiringShotgun;
	EOstrichDetonationState DetonationState;
	bool bLocalSimulatedChargingJump;
	bool bDashing;
	bool bKickRep;
	bool bLoadingRockets;
	bool bKickActive;
	bool bLocalJumpButtonDown;
	bool bAllowEnter;
	bool bAcceleratingFromIdle;
	float IdleTime;
	float MovingTime;
	float RequestSeatChangeTime;
	float ChargeJumpStartTime;
	float GroundDashStartTime;
	float ShieldBoostStartTime;
	float KickStartTime;
	class UClass* SpawnedBeam;
	class UClass* SpawnedImpact;
	class UClass* SpawnedImpactEnemy;
	class UClass* SpawnedSource;
	float BlendedPassengerVerticalCamOffset;
	float OverrideLandingMoveLockDuration;
	int ShieldBoostResourceCost;
	float KickAnimationDuration;
	float DestroyDelayAfterExplosion;
	float PawnRotationRate;
	float AirDashOverrideAngle;
	float GunnerAimPointUpdateRate;
	float GunnerAimPointTraceRange;
	float GroundDashAnimationDuration;
	float GunnerAimPointUpdateDelay;
	float MechMissileDamageToGunnerShield;
	float SimulatedProxyFixupRange;
	bool bEnableTargetingLaser;
	bool bEnableSimulatedProxyFixup;
	struct GameplayTag RocketSettleCue;
	struct GameplayTag RocketFireCue;
	struct GameplayTag RocketLoadingCue;
	struct GameplayTag ReloadShotgunTag;
	struct GameplayTag FireShotgunTag;
	struct GameplayTag MissilesTag;
	struct GameplayTagContainer KickStompTag;
	struct GameplayTag IndividualRocketFired;
	struct GameplayTag IndividualRocketLoaded;
	struct GameplayTag LocalSelfDestructPrimeUnderway;
	class UClass* DriverChargeJumpCamera;
	class UClass* BeamTemplate;
	class UClass* BeamHitTemplate;
	class UClass* BeamHitEnemyTemplate;
	class UClass* BeamSourceTemplate;
	float PassengerCamBlendTarget;
	float GunnerAimpointUpdateTimer;
	bool bDriverPrimaryCooldownReady;
	bool bDriverSecondaryCooldownReady;
	bool bBufferedDriverExit;
	bool bHoldingSelfDestruct;
	bool bLocalDriverRequestedExit;
	bool bLocalPrimaryFireButtonDown;
	bool bLocalSecondaryFireButtonDown;
	bool bEmoteAudioForceStopped;
	bool bAimedAtEnemy;
	bool bAimedAtSky;
	class UClass* NativeLinearMovementAudio;
	class UClass* NativeRotationalMovementAudio;
	class UClass* NativeTargetingLaserAudio;
	class UClass* FortOstrichVehicleConfigsClass;
	class UClass* FortOstrichVehicleConfigs;
	struct OstrichWeapon_RetainedData CachedWeaponState;
	class UClass* PickupCapsuleComponent;
	class UClass* OstrichCustomStats;
	struct ScalableFloat SelfDestructInStormDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_Base : public FortAttributeSet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_AirbagSuit : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_Banner : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_CardboardBox : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_Disguise : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_HealGun : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_Kaboom : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_Scanner : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargingSet_SneakySnow : public FortChargingSet_Base
{
public:
	struct FortGameplayAttributeData Charge;
	struct FortGameplayAttributeData MaxCharge;
	struct FortGameplayAttributeData ChargeRate;
	struct FortGameplayAttributeData ServerTimeChargeIncrements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCharmPreviewActor : public AActor
{
public:
	class UClass* MyCosmeticItem;
	EFortCustomCharmType CharmSlot;
	struct FDelegate OnSettingsChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCharmsMappingData : public UDataAsset
{
public:
	TArray<struct CharmSlotMetadata> SlotMetadata;
	TArray<struct CharmPreviewEntry> NonSlotPreviewList;
	struct GameplayTag DoNotApplyCharmsTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChat : public Chatroom
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChatManager : public SocialChatManager
{
public:
	class UClass* GlobalChatJoinHelper;
	class UClass* FoundersChatJoinHelper;
	bool bShouldJoinGlobalChat;
	bool bShouldRequestGeneralChatRooms;
	bool bShouldJoinFounderChat;
	bool bIsAthenaGlobalChatEnabled;
	int RecommendChatFailureDelay;
	float RecommendChatBackoffMultiplier;
	float RecommendChatRandomWindow;
	int RecommendChatFailureCountCap;
	struct FString ReserveChatURL;
	struct FString GlobalChatName;
	struct FString FounderChatName;
	struct FString ProfileTokenVerifyURL;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortChatRoomJoinHelper : public UObject
{
public:
	class UClass* JoinedChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Affiliation : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Quests : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManagerAthena : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManagerCurie : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManagerMissions : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionTrackerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManagerMissionsInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManagerSTW : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCheckPointCosmeticActor : public ABuildingProp
{
public:
	TArray<class UClass*> MidPointMeshes;
	TArray<class UClass*> EndPointMeshes;
	int CheckPointIndex;
	bool bIsEndPoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCheckPointSplineActor : public AActor
{
public:
	bool bSmoothSplineMesh;
	float SplineMeshTension;
	bool bShowSplineMeshAtStartup;
	TArray<class UClass*> SplineMeshComponents;
	bool bDrawSplineMapUI;
	Unknown SplineMapUITeamColors;
	int NumSplineMapUISegments;
	float SplineMapUIThickness;
	bool bSplineMapUIAntialias;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCinematicCamera : public UFortCameraMode
{
public:
	class UClass* SpectatorPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClassSettingsBuildingPropInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement : public AActor
{
public:
	struct Guid AnnouncementID;
	class UClass* DisplayWidget;
	float TimeToLive;
	bool bRetrigger;
	bool bDestroyOnAllClientsStopped;
	EFortAnnouncementChannel Channel;
	int Priority;
	bool bInterrupt;
	EFortAnnouncementDelivery ClientDeliveryStatus;
	float ClientDeliveryTime;
	struct FScriptMulticastDelegate OnUpdateAnnouncementData;
	struct FScriptMulticastDelegate OnAnnouncementStopped;
	TArray<class UClass*> RecipientControllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_Basic : public AFortClientAnnouncement
{
public:
	struct FortClientAnnouncementData_Basic BasicData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_Cinematic : public AFortClientAnnouncement
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_Conversation : public AFortClientAnnouncement
{
public:
	struct FortClientAnnouncementData_Conversation ConversationData;
	struct FScriptMulticastDelegate OnConversationStarted;
	struct FScriptMulticastDelegate OnConversationStopped;
	class UClass* SpeechComponent;
	bool bAutoPlayConversation;
	bool bCurrentlyPlaying;
	int CurrentSentenceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientAnnouncement_ConversationCodeInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientAnnouncement_ConversationInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_Keybinding : public AFortClientAnnouncement
{
public:
	struct FortClientAnnouncementData_Keybinding KeybindingData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_Tutorial : public AFortClientAnnouncement
{
public:
	struct FortClientAnnouncementData_Tutorial TutorialData;
	float AutoContinueDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_TutorialConversation : public AFortClientAnnouncement_Conversation
{
public:
	struct FortClientAnnouncementData_Tutorial TutorialData;
	float AutoContinueDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientAnnouncement_TutorialInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncement_ZoneModifiers : public AFortClientAnnouncement
{
public:
	float DisplayTime;
	struct FortClientAnnouncementData_ZoneModifiers ModifiersData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientAnnouncementManager : public AActor
{
public:
	TArray<class UClass*> ClientAnnouncements;
	TArray<class UClass*> LocalClientAnnouncements;
	TArray<struct Guid> CancelledAnnouncements;
	struct FortClientAnnouncementQueue Channels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManager : public UObject
{
public:
	struct TimerHandle MissionEndTimerHandle;
	bool bHasAttemptedAbandon;
	bool bIsMatchmaking;
	bool bShouldPickRandomMap;
	bool bShouldRecordFPSCharts;
	bool bShouldRecordMemoryReports;
	bool bFPSRecordingStarted;
	bool bWatchingForCallStack;
	int iSelectedTheater;
	int iSelectedTile;
	TArray<int> SelectedTileList;
	float RandomZoneDifficultyMinimum;
	float RandomZoneDifficultyMaximum;
	int NumSkillPurchasesAttempted;
	int MaxSkillPurchaseAttempts;
	int NumWorkerSlotsAttempted;
	int MaxWorkerSlotAttempts;
	float LobbyActionTimer;
	float TimeBetweenLobbyActions;
	bool bWaitingForSkillTreePurchase;
	bool bWaitingForWorkerSlot;
	int LoopsSpentWaitingForFrontend;
	float TimeBetweenStartButtonClicks;
	float TimeSinceFriendInvitesSent;
	float LastMatchmakeTime;
	float LastLoginCycleTime;
	float MatchmakingStartTime;
	float LastChangedStateTime;
	float LastRandomTurnTime;
	float LastPickLootTime;
	float LastPickEnemyTime;
	float LastEnemyKilledTime;
	float LastBuildingKilledTime;
	float LastGoodInteraction;
	float LastCheckGoodTarget;
	class UClass* EnemyTarget;
	class UClass* PickupTarget;
	class UClass* BuildingTarget;
	class UClass* MissionTarget;
	class UClass* PrimaryMissionTarget;
	TArray<class UClass*> AllMissionTargets;
	TArray<class UClass*> ActiveMissionTargets;
	struct Vector ViewLocation;
	class UClass* MyPawn;
	TArray<class UClass*> ItemsToCheckForMaxStackSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManager_Smoke : public UFortClientBotManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManagerAthena : public UFortClientBotManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManagerAthena_Smoke : public UFortClientBotManagerAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManagerAthena_SanityCheck : public UFortClientBotManagerAthena_Smoke
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManagerAthena_Teleporter : public UFortClientBotManagerAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientBotManagerMemoryReport : public UFortClientBotManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDynamicBuilder : public ABuildingActor
{
public:
	class UClass* BuildingInstructions;
	bool bSelectiveDestruction;
	bool bDestroyOverlapping;
	bool bDestroyMatchingPiece;
	bool bNoCollisionFail;
	bool bIgnoreMissionActors;
	bool bShrinkAndDestroyEffect;
	bool bDebugDrawBounds;
	bool bUsePlayerBuildAnimations;
	float BuildingConstructionTime;
	EFDynamicBuildOrder BuildOrder;
	bool bReverseBuild;
	int OverrideOwnerPersistentId;
	int CurrentIndex;
	TArray<class UClass*> AllBuiltActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortClientDynamicBuilder : public AFortDynamicBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientEventData : public UDataAsset
{
public:
	TArray<struct FortClientEventName> ClientEventNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientEventInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotActionBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotActionInput : public UFortClientPilotActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotActionUIInput : public UFortClientPilotActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotActionConsoleCommand : public UFortClientPilotActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotArbitraryAction : public UObject
{
public:
	TArray<class UClass*> ActionSteps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_Base : public UClientPilotComponent
{
public:
	TArray<class UClass*> AvailableAAs;
	TArray<class UClass*> AAQueue;
	class UClass* EnemyTarget;
	class UClass* PickupTarget;
	class UClass* BuildingTarget;
	class UClass* EditTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayBase : public UFortClientPilot_Base
{
public:
	float LastRandomTurnTime;
	float LastPickLootTime;
	float LastPickEnemyTime;
	float LastEnemyKilledTime;
	float LastBuildingKilledTime;
	float LastGoodInteraction;
	float LastCheckGoodTarget;
	float LastPickEditTime;
	struct Vector ViewLocation;
	class UClass* MyPawn;
	TArray<class UClass*> ItemsToCheckForMaxStackSize;
	TArray<class UClass*> BuildingScripts;
	struct TimerHandle MissionEndTimerHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayAthena : public UFortClientPilot_GameplayBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_BaseSmokeAthena : public UFortClientPilot_GameplayAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_FrontendBase : public UFortClientPilot_Base
{
public:
	bool bWaitingForSkillTreePurchase;
	bool bWaitingForWorkerSlot;
	int NumSkillPurchasesAttempted;
	int MaxSkillPurchaseAttempts;
	int NumWorkerSlotsAttempted;
	int MaxWorkerSlotAttempts;
	int LoopsSpentWaitingForFrontend;
	float LobbyActionTimer;
	float TimeBetweenLobbyActions;
	bool bHasAttemptedAbandon;
	float LastMatchmakeTime;
	float LastLoginCycleTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_FrontendAthena : public UFortClientPilot_FrontendBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_FrontendCampaign : public UFortClientPilot_FrontendBase
{
public:
	bool bShouldPickRandomMap;
	int iSelectedTheater;
	TArray<int> SelectedTheaterList;
	int iSelectedTile;
	TArray<int> SelectedTileList;
	float RandomZoneDifficultyMinimum;
	float RandomZoneDifficultyMaximum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_FrontendCreative : public UFortClientPilot_FrontendBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_FrontendCreativeInspector : public UFortClientPilot_FrontendCreative
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayAnticheat : public UFortClientPilot_GameplayAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayAutomationTest : public UFortClientPilot_GameplayBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_ExplicitBuildingStep : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_BuildingScript : public UObject
{
public:
	TArray<class UClass*> BuildingSteps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayNone : public UFortClientPilot_GameplayBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayCampaign : public UFortClientPilot_GameplayBase
{
public:
	class UClass* MissionTarget;
	class UClass* PrimaryMissionTarget;
	TArray<class UClass*> AllMissionTargets;
	TArray<class UClass*> ActiveMissionTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_GameplayCreative : public UFortClientPilot_GameplayBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_HermesSmoke : public UFortClientPilot_BaseSmokeAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_LongSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_NiagaraRegressions : public UFortClientPilot_BaseSmokeAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_QuickSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_ScenarioAthena : public UFortClientPilot_GameplayAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilot_TeleporterAthena : public UFortClientPilot_GameplayAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotBlackboard : public UClientPilotBlackboard
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientPilotScenarioConditional : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLocalPlayer : public ULocalPlayer
{
public:
	class UClass* FortOnlineAccount;
	struct FortRewardReport CachedRewardReport;
	TArray<struct FortPlayerScoreReport> CachedScoreReports;
	class UClass* ClientSettingsRecord;
	class UClass* ContentControlsManager;
	bool bControllerAttached;
	struct UniqueNetIdRepl PlatformUID;
	struct PlayerReportingInfoContainer PlayerReportingInfoContainer;
	class UClass* PoiTracker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGenericRecord : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortClientSettingsRecord : public UFortGenericRecord
{
public:
	struct FortGamepadUserOptions LocalGamepadUserOptions;
	bool bHighResTexturesReminderEnabled;
	float HUDScale;
	float InitialHUDScale;
	bool bAutoHideBuildingMaterials;
	EFortRarity ShowPickupDotsOnMapByRarity;
	struct FortGamepadUserOptions GamepadUserOptions;
	struct Vector2D GamepadLookSensitivity;
	float GamepadMoveStickDeadZone;
	float GamepadLookStickDeadZone;
	float TargetingSlow;
	float ScopedSlow;
	float GamepadTargetingSlow;
	float GamepadScopedSlow;
	float GamepadBuildingMultiplier;
	float GamepadEditModeMultiplier;
	float MotionTargetingSlow;
	float MotionScopedSlow;
	float MotionHarvestingToolSlow;
	float MouseSensitivity;
	float MouseSensitivityX;
	float MouseSensitivityY;
	float MouseSensitivityMultiplierForAircraftValue;
	float InitialMouseSensitivityMultiplierForAircraft;
	float TouchLookAccelerationMultiplier;
	float TouchLookSensitivitySetting;
	float TouchTargetingSlow;
	float TouchScopedSlow;
	float TouchBuildingMultiplier;
	float TouchEditModeMultiplier;
	float TouchVerticalMultiplier;
	bool bMotionControlsEnabled;
	EFortMotionYawAxis MotionYawAxis;
	EFortMotionYawAxis MotionYawAxisMobile;
	float GyroSensitivity;
	struct FString ControllerPlatform;
	struct FString InputKBMPresetNameForCampaign;
	struct FString InputKBMPresetNameForAthena;
	struct FString InputPresetNameForCampaign;
	struct FString InputPresetNameForAthena;
	struct FString InputPresetNameForAthenaMobile;
	struct FString InputTemplatePresetNameForCampaign;
	struct FString InputTemplatePresetNameForAthena;
	float XboxSafeZone;
	struct FString PendingCulture;
	TArray<struct FortActionKeyMapping> UserActionBindings;
	Unknown UserBindingsPerSubGame;
	TArray<struct FortActionKeyMapping> DisabledActionBindings;
	TArray<struct FortActionKeyMapping> CustomGamepadActionBindings;
	bool bInvertedLook;
	bool bInvertedLookMobile;
	bool bInvertedPitchForMotion;
	bool bInvertedPitchForAircraftPrimary;
	bool bInvertedPitchForAircraftSecondary;
	bool bInvertedYaw;
	bool bInvertedYawMobile;
	bool bInvertedYawForMotion;
	bool bToggleSprint;
	bool bSprintByDefault;
	bool bSprintByDefaultMobile;
	bool bSprintCancelsReload;
	bool bTapInteractEnabled;
	ETouchInteractMode TouchInteractionMode;
	bool bTargetingToggleable;
	bool bTargetingToggleableMobile;
	bool bAutoEquipBetterItems;
	bool bAimAssistEnabled;
	bool bTouchAimAssistEnabled;
	bool bTouchEditEnabled;
	bool bEditConfirmOnReleaseEnabled;
	bool bQuickEditEnabled;
	bool bForceFeedbackEnabled;
	bool bTriggerHapticsEnabled;
	bool bTriggerPullUsesHapticThreshold;
	byte TriggerHapticStrength;
	byte TriggerHapticStartPosition;
	bool bDeviceFeedbackBlockedWithAttachedController;
	bool bContextTutorialEnabled;
	bool bBuildingPossessionShown;
	bool bLocalNotificationsEnabled;
	bool bUseFirstPersonCamera;
	bool bUseGamepadEditModeAimAssist;
	bool bUseHoldToSwapPickup;
	bool bUseGamepadAutoRun;
	bool bFocusOnFirstBuildingPieceWhenQuickbarSwapped;
	bool bNewFocusOnFirstBuildingPieceWhenQuickbarSwapped;
	bool bFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena;
	bool bNewFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena;
	bool bDisablePreEditsWhenPlacingBuilding;
	bool bTurboBuild;
	bool bTurboBuildMobile;
	bool bCreativeTurboDelete;
	bool bAutoChangeMaterial;
	bool bAutoChangeMaterialMobile;
	bool bAutoOpenDoors;
	bool bAutoOpenDoorsNonMobile;
	bool bAutoPickupWeapons;
	bool bAutoPickupWeaponsConsolePC;
	bool bEnablePreferredItemSlots;
	bool bAutoSortConsumablesToRight;
	bool bEnableTryBuildOnFocus;
	float EditButtonHoldTime;
	bool bUnlockConsoleFPS;
	bool bConsoleFPS60;
	Unknown UserHUDVisibiltyMappings;
	Unknown UserHUDDefaultMappings;
	Unknown UserHUDQuickbarSlotPreferredItemTypes;
	EPartyType LastPartyType;
	bool bLastLeaderInvitesOnly;
	bool bLastLeaderFriendsOnly;
	bool bAudioVolumesInitialized;
	float MusicVolume;
	float SoundFXVolume;
	float PIPVolume;
	float DialogVolume;
	float ChatVolume;
	float CinematicsVolume;
	bool bEnableSubtitles;
	ESubtitleDisplayTextSize SubtitleTextSize;
	ESubtitleDisplayTextColor SubtitleTextColor;
	ESubtitleDisplayTextBorder SubtitleTextBorder;
	ESubtitleDisplayBackgroundOpacity SubtitleBackgroundOpacity;
	bool bEnableVoiceChat;
	bool bEnableVoiceChat3D;
	bool bEnableVoiceChatPTT;
	bool bCanVoiceChatWithUnknowns;
	bool bEnableHousepartyCasting;
	bool bEnablePeripheralLighting;
	bool bShowViewerCount;
	bool bAnonymousMode;
	bool bAnonymousCharacterMode;
	bool bShowSeasonLevel;
	bool bHideOtherPlayerNames;
	int HiddenMatchmakingDelayMaxSeconds;
	bool bReplayRecordingEnabled;
	bool bLargeTeamReplayRecordingEnabled;
	bool bCreativeModeReplayRecordingEnabled;
	bool bShadowPlayHighlightsEnabled;
	bool bPlaceDangerMarkerWhenTargeting;
	bool bShowGlobalChatEnabled;
	float InitialGammaValue;
	bool bInitialUseTapToShoot;
	bool bInitialAutoOpenDoors;
	bool bInitialAutoPickupWeapons;
	bool bInitialAutoPickupWeaponsConsolePC;
	bool bInitialEnablePreferredItemSlots;
	bool bInitialAutoSortConsumablesToRight;
	bool bInitialEnableTryBuildOnFocus;
	float InitialEditButtonHoldTime;
	bool bStWQuickbarUpdated;
	bool bShouldShowBothQuickbars;
	ELicensedAudioTreatment LicensedAudioTreatment;
	EColorBlindMode ColorBlindMode;
	float ColorBlindStrength;
	bool bVisualizeAudioSources;
	EColorBlindMode InitialColorBlindMode;
	float InitialColorBlindStrength;
	bool bIgnoreGamepadInput;
	bool bInitialIgnoreGamepadInput;
	bool bLockPrimaryInputMethodToMouse;
	bool bLockPrimaryInputMethodToMouseInitial;
	bool bEnableRudderControl;
	float RudderDeadZone;
	float RudderMaxThrottle;
	struct FString SelectedRegionId;
	struct FString PrevSavedRegion;
	struct FString LastKnownBestRegionId;
	int CrossplayPreference;
	Unknown CustomInventoryFilterSet;
	TArray<struct FName> WatchedVideoIDs;
	bool bAllowAudioInBackground;
	EFortAllowBackgroundAudioSetting AllowAudioInBackground;
	bool bUsePowerSavingMode;
	bool bHidePerkRecombobulatorHelp;
	bool bHideStwItemRefundHelp;
	EAndroidAppStoreTypes SelectedAndroidAppStore;
	int AndroidStoreSelectionRevision;
	bool bHasDisabledAutoSlottingOfSurvivorSquadsAfterQuest;
	bool bHasEnabledAutoSlottingOfSurvivorSquadsDuringOnboarding;
	bool bWantsAutoSlottingOfSurvivorSquads;
	TArray<struct HUDLayoutData> CustomHUDLayoutData;
	bool bRequiresHUDConversion;
	struct FortMobileHUDProfileContainer HUDProfileContainer;
	EQuestMapScreenMode QuestMapMode;
	struct FString QuestMapEventName;
	bool bAutoJoinGameServerChannel;
	bool bEnablePartyVoiceChannel;
	bool bEnableGameVoiceChannel;
	bool bAllowSidekickFeature1;
	bool bShowVoiceIndicatorsNotifications;
	Unknown SeenEventFlags;
	Unknown ContextTutorialSeenCount;
	Unknown ContextTutorialSeenCountGameplayTag;
	bool bHasCompletedGuidedTutorial;
	int CapMipsExperimentVersion;
	bool bHasCompletedHUDLayoutToolV2Tutorial;
	bool FortClientSettingRecord;
	bool bShowTemperature;
	bool bNotifyUsersWhenPlaying;
	bool bAllowFriendSubscriptionNudges;
	bool bPlayerSurveysAllowed;
	struct DateTime FlagSelectionLastUpdated;
	bool bUseSmallInventoryTiles;
	Unknown LastSeenHashByShopSection;
	Unknown LastSeenHashByShopSectionId;
	bool HasSeenCommunityVotingTutorial;
	int LastSeenCommunityVotingTutorialVersion;
	struct FString LastSeenCommunityVotingVersion;
	int LastSeenReloadMtxIntroVersion;
	struct FString LastSeenStandaloneOfferId;
	Unknown AutoMulchModeMap;
	TArray<struct PlayerLastSelectedPreferredProvider> LastPlayerSelectedPreferredProvider;
	byte QuestListSortType;
	struct GameplayTag QuestScreenTabGameplayTag;
	byte InZoneMapScreenTab;
	Unknown AttendingRTTimeSlotIds;
	bool bAutoExposureEnabled;
	float ManualExposureBias;
	float FocalLength;
	float Aperture;
	bool bAutoFocusEnabled;
	float ManualFocusDistance;
	bool bPlayerOutlinesEnabled;
	bool bStormEffectsEnabled;
	float SafeZoneOpacity;
	bool bRelevancyZoneVisible;
	bool bHighQualityFxEnabled;
	bool bDamageFxEnabled;
	EThirdPersonAutoFollowMode ThirdPersonAutoFollowMode;
	float ThirdPersonDistanceToSubject;
	bool bThirdPersonCameraCollision;
	bool bShareLensSettings;
	bool bDroneIgnoreJump;
	bool bShowSessionIDWatermark;
	bool bBattleMapShowTimeIndicator;
	bool bBattleMapShowNearbyChests;
	bool bBattleMapShowAllSquadMembers;
	bool bBattleMapAutomaticCameraPlacement;
	bool bNamePlatesEnabled;
	bool bShowTeamColor;
	float ViewDistance;
	float LowDetailDistance;
	float ArrowDistance;
	bool bScalingOptionsEnabled;
	float HighDetailScaleMin;
	float HighDetailScaleMax;
	float LowDetailScaleMin;
	float LowDetailScaleMax;
	float ArrowScaleMin;
	float ArrowScaleMax;
	bool bArrowColorEnabled;
	ESpectatorSquadIdMode SquadIdMode;
	bool bDirty;
	bool bSaveToCloud;
	ECloudFileState CloudFileState;
	uint32_t bDisableCloudSave;
	int LastRequestSaveCount;
	int LastAttemptedSaveCount;
	double LastSaveAttemptTime;
	double NextCloudSaveTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMetadataItem : public UFortItem
{
public:
	int Level;
	struct FString InstanceID;
	struct FString TemplateId;
	int Quantity;
	class UClass* ItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCloudSaveItem : public UFortMetadataItem
{
public:
	struct FortCloudSaveInfo cloud_save_info;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMetadataItemDefinition : public FortItemDefinition
{
public:
	int MinLevel;
	int MaxLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCloudSaveItemDefinition : public FortMetadataItemDefinition
{
public:
	int ContentVersion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCodeTokenItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCodeTokenItemDefinition : public FortAccountItemDefinition
{
public:
	struct FString RedemptionCodeRule;
	struct FString RedemptionCodeGroup;
	TArray<ECodeTokenPlatform> AllowedPlatforms;
	EItemProfileType ProfileType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectedResourceItem : public UFortAccountItem
{
public:
	double stored_value;
	struct FString last_updated;
	class UClass* PayoutResource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectedResourceItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionBookCategory : public UObject
{
public:
	bool bIsCategoryUIExpanded;
	struct FName CategoryDataRowName;
	int SortPriority;
	TArray<struct FName> ChildrenPageIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionBookData : public UDataAsset
{
public:
	class UClass* PageCategoryData;
	class UClass* PageData;
	class UClass* SectionData;
	class UClass* SlotData;
	class UClass* SlotSourceData;
	class UClass* XPWeightData;
	class UClass* SlotRarityFactorData;
	class UClass* BookXPData;
	TArray<struct FortItemQuantityPair> UnslotCost;
	struct GameplayTagContainer UnslotCatalysts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionBookManager : public UObject
{
public:
	struct FScriptMulticastDelegate OnPagesChanged;
	struct FScriptMulticastDelegate OnSlottedItemOperationComplete;
	struct FScriptMulticastDelegate OnSlotItemComplete;
	struct FScriptMulticastDelegate OnInventoryUpdated;
	struct FScriptMulticastDelegate OnRewardClaimed;
	struct FScriptMulticastDelegate OnUnslotItemComplete;
	struct FScriptMulticastDelegate OnResearchItemComplete;
	TArray<struct FortPendingSlottedItemOperation> PendingSlottedItems;
	TArray<struct FortPendingSlottedItemOperation> PendingUpdatedItems;
	Unknown ProfileTable;
	Unknown PageTable;
	Unknown TemporaryPageTemplateIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionBookPage : public UObject
{
public:
	struct FString TemplateId;
	struct FString InstanceID;
	struct FName PageRowName;
	EFortCollectionBookState State;
	TArray<struct FortCollectionBookSectionState> SectionStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionBookSection : public UObject
{
public:
	struct FName SectionDataRowName;
	class UClass* OwningPage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionDataEntry : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionData : public UDataAsset
{
public:
	TArray<class UClass*> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionsDataTable : public UDataAsset
{
public:
	TArray<struct FortCollectionDataMapping> Collections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionDataEntryCharacter : public UFortCollectionDataEntry
{
public:
	struct TSoftClassPtr<UObject> CharacterData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionDataCharacter : public UFortCollectionData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionDataEntryFish : public UFortCollectionDataEntry
{
public:
	struct GameplayTag EntryTag;
	struct FText EntryName;
	struct FText EntryDescription;
	struct FText AdditionalEntryDescription;
	struct TSoftClassPtr<UObject> SmallIcon;
	struct TSoftClassPtr<UObject> LargeIcon;
	struct ScalableFloat Size;
	bool bNeedsProFishingRod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionDataFishing : public UFortCollectionData
{
public:
	float TwoStarRating;
	float ThreeStarRating;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollectionsTaskManager : public UObject
{
public:
	float DefaultTimeoutSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollisionAudioComponent : public UActorComponent
{
public:
	TArray<struct FortCollisionAudioTriggerData> CollisionSounds;
	float CheckCollisionLeashInterval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCollisionResponseSwapperComponent : public UActorComponent
{
public:
	class UClass* CollisionPrimitiveComponent;
	class UClass* OverlapPrimitiveComponent;
	TArray<class UClass*> PawnsListenedTo;
	struct ScalableFloat VisibilityModifiedTime;
	ECollisionResponse NewCollisionResponse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode : public UConversationTaskNode
{
public:
	struct GameplayTagContainer NodeTags;
	struct FString NodeType;
	struct TSoftClassPtr<UObject> DefaultDisplayAsset;
	struct TSoftClassPtr<UObject> SoftTaskIcon;
	struct TSoftClassPtr<UObject> ChoiceSound;
	struct TSoftClassPtr<UObject> HoverChoiceSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCompleteQuestConversationTaskNode : public UFortConversationTaskNode
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct TSoftClassPtr<UObject> SoftQuestToGrant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPersistentResourceItemDefinition : public FortAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ItemPreviewActorClass;
	bool bIsEventItem;
	struct FString StatName;
	struct FText ExclusiveDesciption;
	struct TSoftClassPtr<UObject> ExclusiveIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConditionalResourceItemDefinition : public FortPersistentResourceItemDefinition
{
public:
	EFortConditionalResourceItemTest Condition;
	struct TSoftClassPtr<UObject> PassedConditionItem;
	struct TSoftClassPtr<UObject> FailedConditionItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConsole : public UConsole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConstructionSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData BuildSpeed;
	struct FortGameplayAttributeData RepairSpeed;
	struct FortGameplayAttributeData BuildCost;
	struct FortGameplayAttributeData RepairCost;
	struct FortGameplayAttributeData MaxBuildLevel;
	struct FortGameplayAttributeData BuildingSkill;
	struct FortGameplayAttributeData TrapArmSpeed;
	struct FortGameplayAttributeData TrapReloadSpeed;
	struct FortGameplayAttributeData TrapBaseDamage;
	struct FortGameplayAttributeData TrapMaxDurability;
	struct FortGameplayAttributeData TrapDiceCritChance;
	struct FortGameplayAttributeData TrapDiceCritMultiplier;
	struct FortGameplayAttributeData TrapHealingSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortConstructorBASE : public ABuildingProp
{
public:
	TArray<struct BASEGameplayEffect> BASEBuildingApplicationEffects;
	TArray<struct BASEGameplayEffect> BASEFriendlyApplicationEffects;
	TArray<struct BASEGameplayEffect> BASEFriendlyApplicationTrapEffects;
	TArray<struct BASEGameplayEffect> BASEEnemyApplicationEffects;
	struct GameplayTag InBASETag;
	int NodesToAffect;
	int BaseLevel;
	TArray<struct PatternBASEEffect> BASEEffectPatterns;
	struct FortBaseWeaponStats DamageStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConsumableAccountItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConsumableItemDefinition : public FortWorldItemDefinition
{
public:
	TArray<struct ConsumeEffectData> ConsumeEffects;
	struct TSoftClassPtr<UObject> UseAnimation;
	float UseTime;
	bool bRequiresMissingHealth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConsumableItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldItemTooltip : public UFortItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConsumableItemTooltip : public UFortWorldItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContentControlsManager : public UObject
{
public:
	class UClass* OwningPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContentEncryptionSettings : public UDeveloperSettings
{
public:
	TArray<struct FortContentEncryptionCollection> Collections;
	TArray<struct FName> EncryptedGameFeaturePluginNames;
	TArray<struct FString> BackendURLs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDecoItemDefinition : public FortWeaponItemDefinition
{
public:
	bool bReplacesEditedSurfaces;
	struct TSoftClassPtr<UObject> BlueprintClass;
	struct TSoftClassPtr<UObject> PlacementPreviewClass;
	bool bCanBePlacedOnEnemyBuildings;
	float GridSnapSizeOverride;
	float RotationAngleIncrement;
	float GridPlacementOffset;
	EPlacementType PlacementTypeOverride;
	bool bForceIgnoreOverlapTest;
	bool bIgnoreCollisionWithVehicles;
	bool bForceIgnoreBuildingOverlaps;
	bool bIgnoreCollisionWithCriticalActors;
	bool bIgnoreCollisionWithStructuralGridActors;
	bool bIgnoreCollisionWithFortStaticMeshActors;
	bool bIgnoreCollisionWithPlayers;
	bool bDisableLocationLerpWhilePlacing;
	bool bDisableRotationLerpWhilePlacing;
	bool bDisableScaleLerpWhilePlacing;
	bool bAttachWhenPlacing;
	bool bAllowPlacementOnWorldGeometry;
	bool bAllowPlacementOnBuildings;
	bool bDestroySmallObjectsWhenPlaced;
	bool bSetOwningPlayerForSpawnedDeco;
	bool bSetSpawnedDecoOnPlayerTeam;
	bool bConsumeWhenPlaced;
	bool bCancelToolWhenPlaced;
	bool bCancelAbilityOnUnequip;
	bool bRequiresPlayerPlaceableAttachmentActors;
	bool bUseRelativeCameraRotation;
	bool bAllowStairsWhenAttachingToFloors;
	bool bSnapYawToHorizontalAxes;
	bool bAllowAnyFloorPlacement;
	bool bRequiresPermissionToEditWorld;
	bool bAutoCreateAttachmentBuilding;
	EFortResourceType AutoCreateAttachmentBuildingResourceType;
	int MaxPlacementDistance;
	TArray<struct TSoftClassPtr<UObject>> AutoCreateAttachmentBuildingShapes;
	TArray<struct TSoftClassPtr<UObject>> AllowedShapes;
	TArray<struct TSoftClassPtr<UObject>> AllowedPlayerBuiltShapes;
	bool bReplacesDecoOnAttachment;
	bool bShowPreviewOnPressHeld;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrapItemDefinition : public FortDecoItemDefinition
{
public:
	struct Rotator KnockbackDirOverride;
	bool bKnockBackUsingPawnDir;
	struct TSoftClassPtr<UObject> EquipSound;
	struct GameplayTagContainer OverrideAutoEquipTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortContextTrapItemDefinition : public FortTrapItemDefinition
{
public:
	class UClass* FloorTrap;
	class UClass* CeilingTrap;
	class UClass* WallTrap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_AbilityActivatedInformative : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_AbilityCancelledInformative : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_ActivatableItem : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_BattleBus : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Consumable : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_ConsumableInformative : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_EquipWeapon : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Fly : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_GameplayEvent : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Harvest : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Interaction : public UFortContextualTutorial
{
public:
	class UClass* InstigatingActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_ItemPickupInformative : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Landing : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_MarkLocation : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_NearChest : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_NearHideableObject : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_NearObjectInformative : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_NearObjectInventory : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_PreferredItemSlots : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Skydiving : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_StormForming : public UFortContextualTutorial
{
public:
	bool bPreviousMapOpen;
	struct TimerHandle UpdateMapHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_Vehicle : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_WeakSpot : public UFortContextualTutorial
{
public:
	int NumberOfWeakSpotHit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_WeaponAbility : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialController : public UObject
{
public:
	TArray<class UClass*> ActiveContextualTutorials;
	TArray<class UClass*> PendingContextualTutorials;
	TArray<class UClass*> CompletedContextualTutorials;
	TArray<class UClass*> PendingCompletedContextualTutorials;
	class UClass* OwnerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition : public UDataAsset
{
public:
	class UClass* ContextualTutorialClass;
	struct GameplayTag TutorialType;
	int Priority;
	int AmountOfRecallMatches;
	TArray<struct DirectiveInput> DirectiveMessages;
	struct FText InformativeMessage;
	float TriggerActivationDelay;
	float MessageDisplayTime;
	float SuccesMessageDisplayTime;
	float ReminderDelay;
	int ReminderAmount;
	float InformativeMessageDelay;
	float LockedDelay;
	float QueuedActivateDelay;
	bool bQueueActivation;
	int AccountLevelLimit;
	bool bCanBeShownInCombat;
	bool bIsCompletionSilent;
	bool bAlwaysSendSuccess;
	bool bCanSetMessagingSystemOnCooldown;
	bool bCanBeShownWhileDBNO;
	EFortContextualTutorialPlatform Platform;
	struct GameplayTag ContextualTutorialDependency;
	struct GameplayTagContainer AdditionalTutorialsToComplete;
	TArray<struct HUDElementToHighlight> HudElementsToHighlight;
	bool bRequireSquad;
	bool bRequireSolo;
	bool bActivateInBR;
	bool bActivateInCreative;
	bool bIsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_Consumable : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTag ConsumableItemTag;
	struct GameplayTag BlockedTag;
	float RequirementsCheckDelay;
	bool bUseHealthRequirements;
	float HealthRequirements;
	bool bUseShieldRequirements;
	float ShieldRequirements;
	bool bUseCommitedCallback;
	bool bUseActivatedCallback;
	struct GameplayTag CommitedAbilityTag;
	struct GameplayTagContainer BlockedByTags;
	bool bOnlyInterruptibleHealingItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_EquipWeapon : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTag WeaponItemTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_Harvest : public UFortContextualTutorialDefinition
{
public:
	float HarvestiblesCheckRayCastDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_Interaction : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTag AbilityTagToTrigger;
	struct GameplayTag ActorGamePlayTag;
	bool bFireOnSuccess;
	bool bFireOnFail;
	struct GameplayTag RessourceTag;
	int RessourceNeeded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_ItemTag : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTag ItemTag;
	struct GameplayTag BlockedTag;
	float RequirementsCheckDelay;
	bool bUseCommitedCallback;
	bool bUseActivatedCallback;
	bool bRequireItemEquipped;
	struct GameplayTag CommitedAbilityTag;
	struct GameplayTagContainer BlockedByTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_ItemTags : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTagContainer ItemTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_MarkLocation : public UFortContextualTutorialDefinition
{
public:
	EFortWorldMarkerType MarkerType;
	struct Vector2D MobilePosition;
	EHorizontalAlignment MobileHorizontalAlignment;
	EVerticalAlignment MobileVerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_NearChest : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTag ContainerTag;
	float ChestCheckRayCastDistance;
	struct FText MarkerText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_NearObjects : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTagContainer ContainerTags;
	float RayCastFarDistance;
	float RayCastNearDistance;
	bool bInventoryRequirement;
	bool bInventoryCanInteract;
	struct FText MarkerText;
	float MarkerTextOffset;
	struct GameplayTagContainer BlockedByTags;
	struct GameplayTag GamePlayEventTag;
	bool bMustBeInteractable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_Vehicle : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTag VehicleTag;
	struct GameplayTag VehicleActionTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_WeakSpot : public UFortContextualTutorialDefinition
{
public:
	int NumerOfWeakSpotHitRequired;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialDefinition_WeaponAbility : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTagContainer WeaponTags;
	struct GameplayTag AbilityTag;
	bool bTriggerOnAmmoCount;
	int TriggerAmmoCount;
	bool bSuccessOnAmmoCount;
	int SuccessAmmoCount;
	struct GameplayTagContainer BlockedByTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorialGameplayTagConversion : public UDataAsset
{
public:
	Unknown ContextualTutorialIndexToGameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContrailsComponent : public UActorComponent
{
public:
	bool bAlwaysShowContrails;
	bool bIsFrontend;
	class UClass* ContrailsDefinition;
	class UClass* ContrailFXAsset;
	class UClass* VaporEmitterTemplate;
	class UClass* ContrailFXComp;
	class UClass* VaporFXComp;
	EPSCPoolMethod PoolingMethod;
	float VelocityInRangeMin;
	float VelocityInRangeMax;
	float NiagaraParamsOutRangeMin;
	float NiagaraParamsOutRangeMax;
	float TrailAlphaOutRangeMin;
	float TrailAlphaOutRangeMax;
	float TrailWidthOutRangeMin;
	float TrailWidthOutRangeMax;
	struct FScriptMulticastDelegate OnContrailsLoadFinished;
	struct FScriptMulticastDelegate OnContrailsActivated;
	struct FScriptMulticastDelegate OnContrailsDeactivated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Telemetry : public FortControllerComponent
{
public:
	TArray<struct FortBotTeleportInfo> Teleports;
	int TotalTeleports;
	int TotalAmmoCheats;
	float SpawnTime;
	struct PlayerFishingTelemetryData PlayerFishingTelemetryData;
	TArray<struct FortItemsConsumedInfo> ItemsConsumed;
	int TotalItemsConsumed;
	TArray<struct FortRevivedInfo> Revived;
	int TotalTimesRevived;
	bool bHasLandedFromSkyDiving;
	struct Vector SkyDiveJumpLocation;
	struct Vector SkyDiveLandLocation;
	int SkyDiveLandAsyncQueue;
	struct FString SkyDiveLandPOITags;
	struct GameplayTagContainer IgnoreTelemetryCapForConsumedItems;
	TArray<struct PawnConvertedInfos> PawnsConverted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerAIBotComponent_Telemetry : public FortControllerComponent_Telemetry
{
public:
	struct FortControllerAIBotComponentTelemetryData_Disguise TelemetryDataDisguise;
	struct FortControllerAIBotComponentTelemetryData_PassiveHealer TelemetryDataPassiveHealer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_AdHocSquads : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate DelegateOwningPlayerJoinedSquad;
	struct FScriptMulticastDelegate DelegateOtherPlayerJoinedSquad;
	struct FScriptMulticastDelegate DelegateFailedToJoinSquad;
	struct FScriptMulticastDelegate DelegateOwningPlayerLeftSquad;
	struct FScriptMulticastDelegate DelegateOtherPlayerLeftSquad;
	struct FScriptMulticastDelegate DelegatePlayerInitiatedSquadInvite;
	struct FScriptMulticastDelegate DelegatePlayerEndedSquadInvite;
	struct FScriptMulticastDelegate DelegateSquadInviteInitiationFailed;
	struct FScriptMulticastDelegate DelegatePlayerHasNearedSquadInvitingPlayer;
	struct FScriptMulticastDelegate DelegatePlayerIsNoLongerNearSquadInvitingPlayer;
	class UClass* AdHocSquadsMutator;
	class UClass* AdHocSquadData;
	TArray<class UClass*> NearbySquadInvitingPlayers;
	class UClass* ClosestNearbySquadInvitingPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Aircraft : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate OnAircraftStateChange;
	class UClass* CurrentAircraft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Autofire : public FortControllerComponent
{
public:
	Unknown AutoFireReticleTarget;
	struct TimerHandle AutofireTimerHandle;
	struct TimerHandle DelayedStopAutofireTimerHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_BattleLabDeviceManager : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate ForwardOnBattleLabDevicesUpdated;
	TArray<class UClass*> CachedDeviceDefinitions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_ClientsideLeaderboardLogic : public FortControllerComponent
{
public:
	TArray<struct FortInGameLeaderboardPlacementData> LeaderBoard;
	class UClass* CachedGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Collections : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_ContextualChallenges : public FortControllerComponent
{
public:
	TArray<class UClass*> SortedContextualObjectives;
	TArray<class UClass*> ContextualObjectivesToProcess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_ConversationHistory : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerComponent_EndMatchPersistence : public UActorComponent
{
public:
	TArray<struct FortItemEntry> FriendChestInstancedLoot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_ExternalEmote : public FortControllerComponent
{
public:
	TArray<struct ExternalEmoteCategory> ExternalEmotes;
	TArray<struct EmoteActionBinding> UncategorizedEmotes;
	TArray<struct FName> PlayedActions;
	class UClass* InputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Ghost : public FortControllerComponent
{
public:
	class UClass* ItemProvidingGhostMode;
	struct GameplayTagContainer AbilitiesToBlockWhenGhosted;
	struct GameplayTagContainer GhostModeTags;
	bool bBecomeInvulnerableWhenGhosted;
	bool bBecomeAIIgnoredWhenGhosted;
	bool bSetHealthAndShieldsToZeroWhenGhosted;
	bool bBecomeGhostOnDBNO;
	bool bOverrideInteractionComponent;
	class UClass* DBNOToGhostReviveGameplayEffect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_HasCoupledWidgets : public FortControllerComponent
{
public:
	TArray<struct ComponentWidgetPairings> SpawnableWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_HeldDeviceUsage : public FortControllerComponent
{
public:
	class UClass* LastBattleLabDeviceItemDefinition;
	class UClass* LastHeldObjectComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_IndicatedActorManagement : public FortControllerComponent
{
public:
	struct IndicatedActorInfoArray IndicatedActorList;
	struct StenciledActorInfoArray StenciledActorList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_InputContextTracker : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Inspector : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Interaction : public FortControllerComponent
{
public:
	Unknown ActorPendingNonInteraction;
	float ClearActorPendingNonInteractionTime;
	class UClass* LongInteractAudioComponent;
	class UClass* PossibleInteractContextInfo;
	class UClass* InteractResponse;
	class UClass* InteractActor;
	bool bInteractTraceStartsAtClosestPointDistance;
	bool bFilterInteractTracesBehindMyFortPawn;
	bool bFilterInteractTracesBehindMyFortPawnOtherThanBuildingActors;
	bool bDoNotFilterBuildingActorsThatAreAttachedToPawn;
	bool bFilterInteractTracesBehindMyFortPawnOnlyWithMultipleResults;
	bool bInteractTracesWithStartPenetratingBlock;
	bool bUseReticleAimingIfInitialBlockingInteractTraceBehindMyFortPawn;
	float InteractTracesCapsuleReductionPct;
	float MobileUpdateCachedInteractActorsCooldown;
	float MobileUpdateCachedInteractActorsCooldownLength;
	bool bTapInteractEnabled;
	ETouchInteractMode TouchInteractMode;
	bool bAllowRetryUse;
	bool bAthena;
	bool bUsePlayerInsteadOfCameraForTraces;
	bool bShouldBlockInteractionsForAllVehiclePassengers;
	class UClass* AutoDoorInteractResponse;
	TArray<class UClass*> CurrentlyHighlightedActors;
	Unknown InteractionTagHistory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_InventoryNetworkManagement : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_InventoryService : public FortControllerComponent
{
public:
	bool bBoundToRegisteredPlayerInfo;
	struct RepGlobalCurrencyStash GlobalCurrencyData;
	struct ScalableFloat ShouldDropCurrencyOnDeath;
	struct ScalableFloat NumDeathsThatDropCurrency;
	struct ScalableFloat InventoryServiceEnabled;
	struct GlobalCurrencyTrackedData TotalCurrencyEarnedData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_ItemAttachedActor : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerComponent_LocalizationService : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_MapDiscoverability : public FortControllerComponent_HasCoupledWidgets
{
public:
	class UClass* DiscoverabilityMPC;
	struct ScalableFloat DiscoveryUnmaskDuration;
	bool bFlipYInput;
	float DiscoveryUnmaskUpdateRate;
	struct TSoftClassPtr<UObject> DiscoveryRenderTarget;
	struct TSoftClassPtr<UObject> StencilMaterial;
	struct PoiDiscoverabilityDataArray DiscoveredData;
	class UClass* StencilMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_MarkActorsInRadius : public FortControllerComponent
{
public:
	struct ScalableFloat bClampIndicatorToScreen;
	struct GameplayTagQuery AITagQuery;
	struct GameplayTagContainer VendettaAITags;
	struct ScalableFloat AIIndicatorRadius;
	struct Vector IndicatorOffset;
	EIndicatorStateImage MarkedAIIndicatorImageType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_MinigameActivity : public FortControllerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_MiniMapDiscoverable : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate OnSquadAlliesSharedMiniMapVisibility;
	struct FScriptMulticastDelegate OnClientVisibilitiesMapUpdated;
	struct ScalableFloat bShareMiniMapComponentVisibilityWithAllySquadmates;
	struct FortControllerMiniMapComponentVisibilitiesArray FortControllerMiniMapComponentVisibilities;
	Unknown FortControllerMiniMapComponentVisibilitiesMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_PluginHUDContent : public FortControllerComponent
{
public:
	Unknown PluginHUDElements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_Portal : public FortControllerComponent
{
public:
	bool bAllowRequeueToLinks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_QuickHeal : public FortControllerComponent
{
public:
	class UClass* QuickHealItemPicker;
	class UClass* QuickHealInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_RadiusTracker : public FortControllerComponent
{
public:
	struct RadiusTrackingDisplayInfoArray TrackingDisplayInfos;
	class UClass* RadiusTrackerIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_RechargeWeapons : public FortControllerComponent
{
public:
	Unknown WeaponToRechargeDataMap;
	Unknown PendingGuidToServerStartTimeMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_SkydiveFeedback : public FortControllerComponent_HasCoupledWidgets
{
public:
	class UClass* SkydiveCamShake;
	class UClass* SkydiveCamShakeClass;
	float DropSpeedForMinShakeMultiplier;
	float DropSpeedForMaxShakeMultiplier;
	float DropSpeedBlendExponent;
	float CachedSkydiveDropSpeedMin;
	float CachedSkydiveDropSpeedMax;
	struct ScalableFloat RotOscPitchMinAmplitude;
	struct ScalableFloat RotOscPitchMaxAmplitude;
	struct ScalableFloat RotOscYawMinAmplitude;
	struct ScalableFloat RotOscYawMaxAmplitude;
	struct ScalableFloat RotOscRollMinAmplitude;
	struct ScalableFloat RotOscRollMaxAmplitude;
	struct ScalableFloat RotOscPitchMinFreq;
	struct ScalableFloat RotOscPitchMaxFreq;
	struct ScalableFloat RotOscYawMinFreq;
	struct ScalableFloat RotOscYawMaxFreq;
	struct ScalableFloat RotOscRollMinFreq;
	struct ScalableFloat RotOscRollMaxFreq;
	struct ScalableFloat TransOscXMinAmplitude;
	struct ScalableFloat TransOscXMaxAmplitude;
	struct ScalableFloat TransOscYMinAmplitude;
	struct ScalableFloat TransOscYMaxAmplitude;
	struct ScalableFloat TransOscZMinAmplitude;
	struct ScalableFloat TransOscZMaxAmplitude;
	struct ScalableFloat TransOscXMinFreq;
	struct ScalableFloat TransOscXMaxFreq;
	struct ScalableFloat TransOscYMinFreq;
	struct ScalableFloat TransOscYMaxFreq;
	struct ScalableFloat TransOscZMinFreq;
	struct ScalableFloat TransOscZMaxFreq;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_SocialInspector : public FortControllerComponent
{
public:
	class UClass* CurrentSocialInspectTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_SpawnedVehicle : public FortControllerComponent
{
public:
	class UClass* SpawnedVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_TeamPawnColor : public FortControllerComponent
{
public:
	class UClass* TeamPawnColorMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerComponent_ToxicityService : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_TransientQuests : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate OnUrgentQuestTimeExpired;
	class UClass* TrackedHunterBountyTarget;
	int TrackedHunterBountyTargetDistance;
	int TrackedHunterBountyTargetPrice;
	class UClass* TrackedProtectorBountyTarget;
	class UClass* TrackedPrimaryHunter;
	TArray<class UClass*> TrackedBountyHunters;
	class UClass* ProtectorQuestToGrant;
	class UClass* TargetQuestToGrant;
	TArray<struct UrgentQuestData> ActiveUrgentQuests;
	Unknown AbilityHandleQuestDefinitions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_TriggerHaptics : public ControllerComponent
{
public:
	bool bTriggerHapticsAvailable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_ApplyGameplayEffectBase : public UFortControllerEffect
{
public:
	class UClass* GameplayEffect;
	float EffectLevel;
	bool bSetMagnitudeFromParameter;
	struct GameplayTag ParameterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_HealPlayer : public UFortControllerEffect_ApplyGameplayEffectBase
{
public:
	struct ScalableFloat HealthRestoreQuantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_ShieldPlayer : public UFortControllerEffect_ApplyGameplayEffectBase
{
public:
	struct ScalableFloat ShieldRestoreQuantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_ApplyGameplayEffect : public UFortControllerEffect_ApplyGameplayEffectBase
{
public:
	struct ScalableFloat ParameterQuantity;
	struct FString AnalyticsEventAttributeName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_GiveResource : public UFortControllerEffect
{
public:
	class UClass* ResourceItemDefinition;
	struct ScalableFloat Quantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_ModifyGameplayTags : public UFortControllerEffect
{
public:
	struct TagModificationRequest TagModificationRequest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_NPCGiveGift : public UFortControllerEffect
{
public:
	bool bShowUINotifications;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_NPCGiveItem : public UFortControllerEffect
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_SendQuestStatEvent : public UFortControllerEffect
{
public:
	EFortQuestObjectiveStatEvent StatEventType;
	struct GameplayTagContainer AdditionalSourceTags;
	struct GameplayTagContainer AdditionalContextTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_SpawnActor : public UFortControllerEffect
{
public:
	bool bUseWeightedActorList;
	class UClass* ActorClass;
	struct FortWeightedActorTypeList WeightedActorClassList;
	float SpawnDelay;
	bool bSpawnRelativeToServiceProvider;
	struct Vector LocalSpaceSpawnOffset;
	bool bLocalSpaceOffsetIgnorePitchAndRoll;
	struct Rotator AdditionalRelativeRotationOffset;
	class UClass* TransformGenerator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_SpawnAI : public UFortControllerEffect
{
public:
	class UClass* AISpawnerData;
	struct Vector LocalSpaceSpawnOffset;
	bool bLocalSpaceOffsetIgnorePitchAndRoll;
	struct Rotator AdditionalRelativeRotationOffset;
	float SpawnDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerEffect_TriggerCustomFeedMessage : public UFortControllerEffect
{
public:
	struct GameplayTag CustomFeedMessageTag;
	struct Vector AdditionalLocalSpaceContextOriginOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement : public UObject
{
public:
	bool bInverseCondition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_CheckNPCMatchConversationCount : public UFortControllerRequirement
{
public:
	struct ThresholdTestConfig RequiredConversationCountConfig;
	struct GameplayTag NPCUniqueIDTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_CheckPitchYawRoll : public UFortControllerRequirement
{
public:
	struct RotatorErrorCheck PitchErrorCheck;
	struct RotatorErrorCheck YawErrorCheck;
	struct RotatorErrorCheck RollErrorCheck;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_CheckTimeSinceLastPlayedMatch : public UFortControllerRequirement
{
public:
	int days;
	int Hours;
	int Minutes;
	int Seconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasBars : public UFortControllerRequirement
{
public:
	struct ThresholdTestConfig ThresholdTestConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasEarnedAccolade : public UFortControllerRequirement
{
public:
	struct TSoftClassPtr<UObject> AccoladeDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasQuestToTurnIn : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct TSoftClassPtr<UObject> SoftQuestToTurnIn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasRecordedConversationEventWithNPC : public UFortControllerRequirement
{
public:
	struct GameplayTag QueryEventTag;
	bool bRequireExactEventTagMatch;
	EConversationEventQueryMethod QueryMethod;
	struct GameplayTag ConversationEntryTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasResource : public UFortControllerRequirement
{
public:
	struct ThresholdTestConfig ThresholdTestConfig;
	class UClass* ResourceItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasVisitedPOI : public UFortControllerRequirement
{
public:
	struct GameplayTag POITag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasWeaponTypeQuantity : public UFortControllerRequirement
{
public:
	struct ThresholdTestConfig ThresholdTestConfig;
	EFortWeaponType WeaponTypeFilter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_IsFirstEverConversationWithNPC : public UFortControllerRequirement
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_NPCHasConversationEntryTag : public UFortControllerRequirement
{
public:
	struct GameplayTag QueryTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_NPCHasServiceProviderTag : public UFortControllerRequirement
{
public:
	struct GameplayTag QueryTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControlResistanceSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData ControlResistance;
	struct FortGameplayAttributeData MaxControlResistance;
	struct FortGameplayAttributeData ControlResistanceRegenRate;
	struct FortGameplayAttributeData ControlResistanceRegenDelay;
	struct FortGameplayAttributeData ControlResistanceRegenThreshold;
	struct FortGameplayAttributeData KnockbackThreshold;
	struct FortGameplayAttributeData KnockbackMultiplier;
	struct FortGameplayAttributeData ImpactDamageResistance;
	struct FortGameplayAttributeData ImpactDamageMultiplier;
	struct FortGameplayAttributeData ImpactDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversation : public UDataAsset
{
public:
	TArray<struct FortConversationSentence> Sentences;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationChoiceWithPreviewNode : public UConversationChoiceNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationContextLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasCID : public UFortControllerRequirement
{
public:
	TArray<struct SoftObjectPath> AllowedCIDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasMetaTag : public UFortControllerRequirement
{
public:
	struct GameplayTag MetaTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasOwnedTag : public UFortControllerRequirement
{
public:
	struct GameplayTag OwnedTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasCompletedQuest : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_IsQuestActive : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasCompletedQuestObjective : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;
	struct FName ObjectiveBackendName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasAchievedObjectiveCount : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;
	struct FName ObjectiveBackendName;
	struct ThresholdTestConfig RequiredCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_HasCompletedNumQuestObjectives : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;
	struct ThresholdTestConfig RequiredCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_IsQuestObjectiveActive : public UFortControllerRequirement
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;
	struct DataTableRowHandle ObjectiveStatHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_AttributeThresholdCheck : public UFortControllerRequirement
{
public:
	struct GameplayAttribute QueryAttribute;
	struct ThresholdTestConfig ThresholdTestConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortControllerRequirement_IsCompetitivePlaylist : public UFortControllerRequirement
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationGiftTypeDefinitions : public UDataAsset
{
public:
	Unknown GiftDefinitionsByGiftTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationInstance : public UConversationInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_AllSlottedQuestPrerequisitesCompleted : public UConversationRequirementNode
{
public:
	int QuestSlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_ChildRequirements : public UConversationRequirementNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_ControllerRequirement : public UConversationRequirementNode
{
public:
	struct GameplayTag ParticipantID;
	class UClass* Requirement;
	bool bAutoUpdateNodeDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_HasNoActiveQuests : public UConversationRequirementNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_HasNoActiveQuestsFromSlottedQuestProvider : public UConversationRequirementNode
{
public:
	int QuestSlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_HasService : public UConversationRequirementNode
{
public:
	struct GameplayTag ServiceTag;
	bool bRequireExactMatch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirement_SlottedQuestNotCompletedThisMatch : public UConversationRequirementNode
{
public:
	int QuestSlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationRequirementUtils : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationSubsystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_Service : public UFortConversationTaskNode
{
public:
	class UClass* ResourceCurrency;
	TArray<class UClass*> PricingTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_ApplyAbility : public UFortConversationTaskNode_Service
{
public:
	class UClass* GrantedAbility;
	int Level;
	bool bPreventUseIfAbilityAlreadyActive;
	struct GameplayTagContainer ActiveAbilityGameplayTags;
	bool bActivateImmediatelyOnGranting;
	struct GameplayTag ServiceGameplayTag;
	struct FString AnalyticsEventName;
	struct FName PricingKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_ApplyDataDrivenEffect : public UFortConversationTaskNode
{
public:
	struct GameplayTag ParticipantID;
	TArray<class UClass*> EffectsToApply;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_Back : public UFortConversationTaskNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_CompleteQuestObjectiveByBackendName : public UFortConversationTaskNode
{
public:
	bool bResolveQuestDetailsFromServiceProvider;
	struct SoftObjectPath QuestDefinition;
	struct FName ObjectiveBackendName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_DataDrivenService : public UFortConversationTaskNode_Service
{
public:
	ERequirementMatchPolicy RequirementMatchPolicy;
	TArray<struct ConversationParticipantRequirement> Requirements;
	TArray<struct EffectRecipientConfig> EffectRecipientConfigs;
	struct GameplayTag ServiceGameplayTag;
	struct FString AnalyticsEventName;
	struct FName PricingKey;
	int PricingColumn;
	struct ScalableFloat LimitedStockCount;
	class UClass* ServiceBriefConfigCollection;
	struct FName ServiceBriefCollectionKeyOveride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_DuelNPC : public UFortConversationTaskNode_Service
{
public:
	struct TSoftClassPtr<UObject> DuelObserverAbility;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_FindActorByClass : public UFortConversationTaskNode_Service
{
public:
	TArray<struct FindActorByClassData> FilterDatas;
	struct GameplayTag AnalyticsTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_GiveGift : public UFortConversationTaskNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_GrantQuest : public UFortConversationTaskNode_Service
{
public:
	bool bShouldOverrideSpeakerText;
	bool bShouldDisplayQuestProviderImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_GrantStaticQuest : public UFortConversationTaskNode_GrantQuest
{
public:
	struct TSoftClassPtr<UObject> QuestToGrantPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_GrantPlayerBounty : public UFortConversationTaskNode_GrantStaticQuest
{
public:
	struct TSoftClassPtr<UObject> TargetQuestToGrantPtr;
	struct GameplayTagQuery TargetFilter;
	struct ScalableFloat Price;
	struct ScalableFloat Rarity;
	struct ScalableFloat NumberOfPlayersToSelectFrom;
	struct ScalableFloat MediumThreatRange;
	struct ScalableFloat HighThreatRange;
	struct ScalableFloat ThreatRefreshRate;
	struct ScalableFloat AllowPoaching;
	struct TSoftClassPtr<UObject> ProtectorQuestToGrantPtr;
	struct TSoftClassPtr<UObject> PoachedQuestToGrantPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_GrantServiceProviderQuest : public UFortConversationTaskNode_GrantQuest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_GrantSlottedQuest : public UFortConversationTaskNode_GrantQuest
{
public:
	int QuestSlot;
	bool bGrantQuestToSquad;
	bool bNotifyQuestProvider;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_HireNPC : public UFortConversationTaskNode_Service
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_PropDisguise : public UFortConversationTaskNode_ApplyAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_RevealDisguise : public UFortConversationTaskNode_Service
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_RiftToGo : public UFortConversationTaskNode_ApplyAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_SellItem : public UFortConversationTaskNode_Service
{
public:
	int SellSlot;
	struct FText BuyTextFormat;
	struct FText SoldOutTextFormat;
	class UClass* ExpensivePurchaseEmote;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_ShowFutureStormCircle : public UFortConversationTaskNode_Service
{
public:
	class UClass* GrantedAbility;
	int Level;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_Speech : public UFortConversationTaskNode
{
public:
	bool bUsePerNPC_ContextualMessageLookup;
	bool bLookupViaServiceProviderTag;
	Unknown SpeakerEntryTagToConfig;
	struct ContextualMessageConfig GeneralConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_SupplyDrop : public UFortConversationTaskNode_Service
{
public:
	struct TSoftClassPtr<UObject> SupplyDropInfo;
	struct ScalableFloat SupplyDropCount;
	struct ScalableFloat ProcessPendingSupplyDropInterval;
	struct ScalableFloat GuaranteedCloseRangeSupplyDropCount;
	struct GameplayTag ServiceUsedTag;
	struct ScalableFloat GuaranteedCloseRangeRadiusAroundNPC;
	ESupplyDropSpawnLocationPolicy SupplyDropLocationPolicy;
	struct ScalableFloat RadiusAroundNPC;
	struct ScalableFloat SpawnInPreviousSafeAreaChanceZeroToOne;
	bool bLimitedStock;
	struct ScalableFloat LimitedStockCount;
	struct GameplayTag CustomFeedMessageTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_TurnInQuest : public UFortConversationTaskNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConversationTaskNode_UpgradeItem : public UFortConversationTaskNode_Service
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConversionControlItemDefinition : public FortAccountItemDefinition
{
public:
	struct FString LootTierGroup;
	struct DataTableRowHandle ConversionPointsToTierCosts;
	bool bConsumedOnConversion;
	struct FText RewardName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticVariant : public UObject
{
public:
	struct GameplayTag VariantChannelTag;
	struct FText VariantChannelName;
	struct GameplayTag ActiveVariantTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticVariantBackedByArray : public UFortCosmeticVariant
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticCharacterPartVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct PartVariantDef> PartOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticCheats : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCosmeticDisplayActor : public AActor
{
public:
	class UClass* CustomizationCosmeticDefinition;
	class UClass* PreviewActorComponent;
	class UClass* SkeletalMeshComponent;
	TArray<struct McpVariantChannelInfo> OverrideVariants;
	bool bApplyLightingOverrideToChildren;
	struct LightingChannels LightingChannelsOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticDynamicVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct DynamicVariantDef> DynamicOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticEmoteMontageVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct EmoteMontageVariantDef> EmoteOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticFloatSliderVariant : public UFortCosmeticVariant
{
public:
	float DefaultStartingValue;
	float MinParamValue;
	float MaxParamValue;
	struct TSoftClassPtr<UObject> UnlockChallengeBundle;
	struct FName MaterialParamName;
	struct FName ParticleParamName;
	TArray<struct TSoftClassPtr<UObject>> MaterialsToAlter;
	TArray<struct TSoftClassPtr<UObject>> ParticleSystemsToAlter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticGameplayTagVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct GameplayTagVariantDef> GenericTagOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticItemFilterTable : public UDataAsset
{
public:
	TArray<class UClass*> FilterTagTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticItemMarkupTable : public UDataAsset
{
public:
	TArray<class UClass*> SetDescriptions;
	TArray<class UClass*> MarkupTagDescriptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticItemTexture : public UFortCosmeticVariantBackedByArray
{
public:
	struct ItemTextureVariantDef ItemTextureVar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCosmeticLoadoutOwner : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticLoadoutTagDrivenVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct TagDrivenVariantDef> Variants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticLockerItem : public UFortProfileItem
{
public:
	struct FString locker_name;
	struct FString banner_icon_template;
	struct FString banner_color_template;
	int use_count;
	struct FortCosmeticLockerSlotData locker_slots_data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticLockerItemDefinition : public FortProfileItemDefinition
{
public:
	TArray<struct FortCosmeticLockerSlotInformation> LockerSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticMaterialVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct MaterialVariantDef> MaterialOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticMeshVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct MeshVariantDef> MeshOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticNumericalVariant : public UFortCosmeticVariant
{
public:
	int DefaultStartingNumeric;
	int MinNumericalValue;
	int MaxNumbericalValue;
	struct FName ZerosDigitParamName;
	struct FName TensDigitParamName;
	TArray<struct TSoftClassPtr<UObject>> MaterialsToAlter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticParticleVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct ParticlVariantDef> ParticleOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticManagedParticleVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct ManagedParticleVariantDef> ParticleOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticProfileBannerVariant : public UFortCosmeticVariant
{
public:
	TArray<struct TSoftClassPtr<UObject>> MaterialsToAlter;
	struct FName BannerIconParamName;
	struct FName BannerPrimaryColorParamName;
	struct FName BannerSecondaryColorParamName;
	struct FName CC_PrimaryColorParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticProfileLoadoutVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct LoadoutVariantDef> LoadoutAugmentations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCosmeticReactivePreview : public AActor
{
public:
	TArray<class UClass*> PotentiallyResponsiveObjects;
	TArray<struct FCRP_LoopingUpdate> ActiveLoops;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReactivePreviewSupportInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCosmeticReactivePreview_InterfaceWrapper : public AFortCosmeticReactivePreview
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticRichColorVariant : public UFortCosmeticVariant
{
public:
	int AntiConflictChannel;
	EFortRichColorConflictResolutionRules AntiConflictRules;
	struct RichColorVariantDef InlineVariant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URespondsToVariantAction : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticScriptedActionVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct ScriptedActionVariantDef> ActionOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticVariantApplyWrap : public UFortCosmeticVariantBackedByArray
{
public:
	struct ApplyWrapVariantDef WrapVariant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantScriptedAction : public UVariantTypeBase
{
public:
	TArray<struct ScriptedActionVariant> VariantActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeEmoteMontage : public UVariantTypeBase
{
public:
	TArray<struct EmoteMontageVariantDef> VariantEmotes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeMeshes : public UVariantTypeBase
{
public:
	TArray<struct MeshVariant> VariantMeshes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeSounds : public UVariantTypeBase
{
public:
	TArray<struct SoundVariant> VariantSounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeMaterials : public UVariantTypeBase
{
public:
	TArray<struct MaterialVariants> VariantMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeMaterialParams : public UVariantTypeBase
{
public:
	TArray<struct MaterialParamterDef> VariantMaterialParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeItemTexture : public UVariantTypeBase
{
public:
	struct ItemTextureVariant VariantItemTextures;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeRichColor : public UVariantTypeBase
{
public:
	struct RichColorVariant RichColorDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeInitialParticleSystemData : public UVariantTypeBase
{
public:
	TArray<struct VariantParticleSystemInitializerData> VariantInitialParticleSystemData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeParticles : public UVariantTypeBase
{
public:
	TArray<struct ParticleVariant> VariantParticles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeParticleParams : public UVariantTypeBase
{
public:
	TArray<struct ParticleParamterVariant> VariantParticleParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeSocketTransforms : public UVariantTypeBase
{
public:
	TArray<struct SocketTransformVariant> VariantSocketTransforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantTypeCharacterParts : public UVariantTypeBase
{
public:
	TArray<struct TSoftClassPtr<UObject>> VariantParts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSphericalVehicle : public AFortAthenaSKVehicle
{
public:
	struct SphericalDriveParams BaseSphericalDriveParams;
	class UClass* FortSphericalVehicleConfigsClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCowVehicle : public AFortSphericalVehicle
{
public:
	class UClass* PhysicsAudioComponent;
	class UClass* SpeedLinesNSComponent;
	struct FName AudioParamOnGroundName;
	struct FName AudioParamSpeedName;
	struct FName AudioParamInWaterName;
	struct CowVehicleMapRangeClamped SpeedMapRangeClamped;
	bool bIsSquashing;
	float SquashTime;
	float MaxSquashTime;
	float CurrentSquash;
	float TargetSquash;
	float ErrorToleranceImpactComparison;
	float SquashSpeed;
	float CurrentSquashSpeed;
	float ImpactPointInterp;
	struct CowVehicleImpactPointInterp ImpactPointInterpData;
	float ForceNormalized;
	float ErrorToleranceSpringComparison;
	float PreviousSpeed;
	struct CowVehicleMapRangeClamped PreviousSpeedMapRangeClamped;
	struct CowVehicleFloatSpringInterp SquashFloatSpringInterp;
	class UClass* SquashMID;
	struct FName NSParamSpeedLinesThresholdName;
	struct FName NSParamSquashAmountName;
	struct FName NSRippleStartName;
	struct FName NSRippleLengthInterpName;
	struct FName NSUseWorldImpactPointName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCowVehicleSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData MaxFuel;
	struct FortGameplayAttributeData Fuel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeBudgeterData : public UObject
{
public:
	TArray<struct FortCreativeBudgetOverride> CostOverrides;
	TArray<struct FortCreativeBudgetClassInstanceLimit> TransientClassLimits;
	TArray<struct FortCreativeBudgetPickupInstanceLimit> TransientPickupLimits;
	TArray<struct FortCreativeBudgetClassInstanceLimit> SavedClassLimits;
	TArray<struct FortCreativeBudgetComponentSimulationCost> ComponentSimulationCosts;
	TArray<struct FortCreativeBudget> Budgets;
	TArray<struct FortCreativeBudgetPlotBudgetOverride> PlotBudgetOverrides;
	TArray<struct FortCreativeBudget> BattleLabBudgets;
	bool bEnableInstanceTracking;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeAssetCostDirectory : public UDataAsset
{
public:
	struct FortCreativeAssetCostData CostDirectory;
	Unknown ComponentSimulationCostDirectory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeBudgetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeCostComponent : public UActorComponent
{
public:
	bool bShowCostInInteractionIndicator;
	TArray<int> ItemCosts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameLogicComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate MinigameStateChangedDelegate;
	struct FScriptMulticastDelegate MinigameStartedDelegate;
	struct FScriptMulticastDelegate MinigameEndedDelegate;
	struct FScriptMulticastDelegate OnPlayspaceEditModeChanged;
	struct FScriptMulticastDelegate OnAddedToMinigame;
	struct FScriptMulticastDelegate OnRemovedFromMinigame;
	struct GameplayTagContainer MinigameTags;
	TArray<class UClass*> DesiredStats;
	bool bIsRelevantForMinigameInitialization;
	bool bAlwaysTryHandleDelayedStateChange;
	class UClass* CurrentMinigame;
	class UClass* CachedMinigame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeCreatureManagerInfoComponent : public UFortMinigameLogicComponent
{
public:
	struct TSoftClassPtr<UObject> CreatureBlueprintClass;
	int MaxHealth;
	float HearingAggroRange;
	int ScorePoints;
	float DamageCaused;
	float EnvironmentalDamageOverride;
	float MovementSpeedMultiplier;
	class UClass* CreatureManagerComponent;
	class UClass* DamageOverrideEffect;
	class UClass* EnvironmentalDamageOverrideEffect;
	class UClass* MovementSpeedOverrideEffect;
	EScoreDistributionType ScoreDistribution;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeCreatureManagerComponent : public UActorComponent
{
public:
	TArray<class UClass*> CreatureManagerInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeDeviceButtonComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnDeviceButtonClickedDelegate;
	struct FScriptMulticastDelegate OnDeviceButtonLabelChangedDelegate;
	struct FText ButtonName;
	struct FText ButtonDescription;
	struct FText ButtonLabel;
	int WeightOffset;
	class UClass* EditWidget;
	struct GameplayTagContainer Tags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeDeviceProp : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameActivityProvider : public UObject
{
public:
	TArray<class UClass*> Activities;
	class UClass* OwningPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeIslandHistoryProvider : public UFortGameActivityProvider
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeDiscoveryActivityProvider : public UFortCreativeIslandHistoryProvider
{
public:
	class UClass* Manager;
	class UClass* Surface;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeDiscoverySurface : public UPrimaryDataAsset
{
public:
	struct FName SurfaceName;
	TArray<struct FortCreativeDiscoveryTestCohort> TestCohorts;
	TArray<struct FString> GlobalLinkCodeBlacklist;
	TArray<struct FString> GlobalLinkCodeWhitelist;
	bool bIsResolvedDataDirty;
	bool bHasResolvedData;
	int ResolvedRevision;
	TArray<struct FName> ResolvedTestCohortNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeDiscoverySurfaceManager : public UObject
{
public:
	TArray<class UClass*> Surfaces;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeExplosiveBarrelDevice : public ABuildingGameplayActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeGadgetItemDefinition : public AthenaGadgetItemDefinition
{
public:
	class UClass* ItemOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeGeneralThrottleManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeHeatmapThermometerPreview : public AActor
{
public:
	Unknown PreviewDataMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeInteractVisualizationComponent : public UActorComponent
{
public:
	class UClass* CollisionComponentClass;
	class UClass* CollisionComponentAreaClass;
	class UClass* FloatCurve;
	class UClass* StaticMesh;
	class UClass* StaticMeshMaterial;
	struct Vector ComponentRelativeOffset;
	float TransitionInterval;
	float CurrentTime;
	float VisualizationDiameterStart;
	float VisualizationDiameterDesired;
	float InteractRadius;
	bool bPendingShow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeIslandFavoriteProvider : public UFortCreativeIslandHistoryProvider
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameItemContainerComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeKeyLockComponent : public UFortMinigameItemContainerComponent
{
public:
	ECreativeKeyLockState InitialState;
	struct FScriptMulticastDelegate OnKeyDefinitionUpdated;
	struct FScriptMulticastDelegate OnUnLocked;
	struct FScriptMulticastDelegate OnLocked;
	struct FScriptMulticastDelegate OnLockStateChanged;
	struct FScriptMulticastDelegate OnRemainingKeysUpdated;
	ECreativeKeyLockState CurrentState;
	int RequiredKeysToUnlockAmount;
	int RemainingKeysToUnlockAmount;
	bool bRequireAllKeysAtOnce;
	struct TSoftClassPtr<UObject> UnlockKeyDefinitionSoftPointer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeLockDevice : public ABuildingProp
{
public:
	struct FScriptMulticastDelegate OnLocalPawnInventoryChanged;
	class UClass* CachedLocalController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIndicator : public UObject
{
public:
	struct Vector RelativeLocation;
	float MaxDistance;
	bool bMoveWithPawnState;
	struct FName AttachedSocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapIndicator : public UFortIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeMiniMapIndicator : public UFortMiniMapIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeMoveTool : public AFortWeapon
{
public:
	class UClass* CreativeMoveToolInputComponent;
	TArray<struct OriginalAndSpawnedPair> SpawnHelperNewlyPlacedActors;
	TArray<struct ActorAndTransformPair> ToDuplicateActors;
	struct FScriptMulticastDelegate OnFinishedSpawningSelectedActors;
	struct FScriptMulticastDelegate OnFinishedSpawningPreviewActors;
	struct FScriptMulticastDelegate OnFinishedSpawningForCut;
	float MaxRange;
	class UClass* ActiveMovementMode;
	bool bIsPreviewingMove;
	TArray<class UClass*> InteractionBehaviors;
	class UClass* DeleteObjectsInteractionBehavior;
	class UClass* PlaysetPreviewInteractionBehavior;
	struct FScriptMulticastDelegate OnMoveToolInteractionStarted;
	struct FScriptMulticastDelegate OnMoveToolInteractionStopped;
	struct FScriptMulticastDelegate OnMoveToolRotationAxisChanged;
	struct FScriptMulticastDelegate OnMoveToolScaleAxisChanged;
	struct FScriptMulticastDelegate OnMoveToolLineOfSightBlockingChanged;
	struct FScriptMulticastDelegate OnMoveToolDropToFloorChanged;
	struct FScriptMulticastDelegate OnMoveToolPrecisionChanged;
	struct FScriptMulticastDelegate OnMoveToolTransformationModeChanged;
	struct FScriptMulticastDelegate OnMoveToolScaleInsteadOfRotateChanged;
	struct FScriptMulticastDelegate OnAddedSelectedActor;
	struct FScriptMulticastDelegate OnCouldNotAddReachedSelectionLimit;
	struct FScriptMulticastDelegate OnRemovedSelectedActor;
	struct FScriptMulticastDelegate OnSelectedActorsCleared;
	struct FScriptMulticastDelegate OnSelectionPropertyChanged;
	struct FScriptMulticastDelegate OnMoveToolScaleModified;
	struct FScriptMulticastDelegate OnMoveToolRotationModified;
	struct FScriptMulticastDelegate OnMoveToolBuildingAsPropSettingChanged;
	struct FScriptMulticastDelegate OnMoveToolFocusChanged;
	ETransformationType CurrentTransformationType;
	TArray<struct CreativeSelectedActorInfo> SelectedActors;
	TArray<struct LogicalConnectionChain> ServerSelectedActorLogicalConnections;
	TArray<struct ValidPlacementPair> ConnectedActorStates;
	struct Vector ScaleModifier;
	struct Transform SelectionToWorld;
	struct Box SelectionSpaceActorsBounds;
	bool bIsScaleUpPressed;
	bool bIsMultiselectEnabled;
	bool bIsQuickbarSupported;
	ESelectionProperty SelectionProperty;
	bool bIsScaleDownPressed;
	bool bIsPushPressed;
	bool bIsPullPressed;
	bool bIsAutoTractorBeamRunning;
	bool bIsRotateClockwisePressed;
	bool bIsRotateCounterclockwisePressed;
	bool bIsScalingInsteadOfRotating;
	struct Quat TargetRotationOffset;
	struct Quat RotationOffset;
	TArray<struct Rotator> RotationAxes;
	byte RotationAxisIndex;
	EScaleAxis SelectedScaleAxis;
	Unknown HoveredComponents;
	Unknown ComponentsToReclaimMIDsFrom;
	TArray<struct CreativePooledMID> AllMIDs;
	float MaxUnhoverAnimationTime;
	TArray<struct OriginalAndSpawnedPair> NewlyPlacedActors;
	struct FlashCountedActorInfo CutActors;
	Unknown AlreadyProcessedNewlyPlacedActorsOnClient;
	struct AgingActorArray RecentlyPlacedAgingActors;
	bool bShouldDestroyPropsWhenPlacing;
	bool bAllowGravityOnPlace;
	struct CreativeOptionVariableBase WantsGravityOnPlace;
	bool bShouldUsePrecisionGridSnapping;
	byte GridSnapIndex;
	struct CreativeOptionVariableBase WantsPrecisionGridSnapping;
	TArray<struct Vector> GridSnapRatios;
	bool bDoesRequireCreatePermission;
	EHitTraceType TraceType;
	bool bClientNeedsToProcessNewlyPlacedActors;
	struct CreativeOptionVariableBase WantedHitTraceRule;
	struct GameplayTagContainer MoveToolActivatedTags;
	class UClass* ActiveRecordSpawner;
	struct CreativeOptionVariableBase WantedIgnoreRecentlyPlacedTime;
	bool bAlwaysMoveFreely;
	bool bBuildingsAsPropsSnapToCenter;
	struct CreativeOptionVariableBase WantedAlwaysMoveFreely;
	struct CreativeOptionVariableBase WantedCameraSpacePositioning;
	class UClass* HoveredActor;
	class UClass* CreativeHeatmapThermometerPreview;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectInteractionBehavior : public UActorComponent
{
public:
	struct Color HoverReticleColor;
	struct Color ActiveReticleColor;
	struct DataTableRowHandle InteractionClasses;
	TArray<struct TSoftClassPtr<UObject>> ValidAllowedClasses;
	TArray<struct TSoftClassPtr<UObject>> ValidForbiddenClasses;
	class UClass* StartInteractionAbility;
	class UClass* EndInteractionAbility;
	class UClass* TriggerInteractionAbility;
	class UClass* RotateClockwiseAbility;
	class UClass* RotateCounterclockwiseAbility;
	class UClass* MirrorAbility;
	class UClass* ExitAbility;
	class UClass* FailAbility;
	bool bShouldAddToParent;
	bool bShouldUseActorToSelection;
	int Priority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMoveBuildingsOnGrid : public UObjectInteractionBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMoveObjectsFreely : public UObjectInteractionBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDeleteObjects : public UObjectInteractionBehavior
{
public:
	TArray<class UClass*> DeleteActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPossessPropInteraction : public UObjectInteractionBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaysetPreview : public UObjectInteractionBehavior
{
public:
	class UClass* PreviewPlaysetStaticMeshActor;
	class UClass* PlaysetMesh;
	class UClass* PlaysetMaterial;
	struct PlaysetInfo PlaysetToPlace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeObjectTrackingComponent : public UActorComponent
{
public:
	bool bUpdatePreviewLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeOption : public UDataAsset
{
public:
	struct FText OptionText;
	struct FText OptionToolTip;
	struct FName CategoryTag;
	struct SlateBrush DisplayIcon;
	struct FScriptMulticastDelegate OnCreativeOptionChanged;
	TArray<struct CreativeOptionData> Options;
	struct GameplayTag VariableTag;
	EUFortMatchmakingKnobsDataSource MenuListType;
	int CurrentIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeOptionsBundle : public UDataAsset
{
public:
	TArray<class UClass*> CreativeOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativePersistenceComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnPlayerDataLoaded;
	struct FortInventory_SaveEntrySettings SaveEntrySettings;
	TArray<class UClass*> StatsToSave;
	TArray<class UClass*> ItemClassesNotToSave;
	TArray<struct TSoftClassPtr<UObject>> ConfigurableItemClassesNotToSave;
	TArray<struct PendingToApplyData> PendingToApplyData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativePersonalIslandsProvider : public UFortGameActivityProvider
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativePortalManager : public AInfo
{
public:
	TArray<class UClass*> AllPortals;
	TArray<Unknown> PendingPortalReservations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeRealEstatePlotItem : public UFortAccountItem
{
public:
	int IslandIndex;
	struct FString IslandInfoLocale;
	struct FString IslandTitle;
	struct FString IslandTagline;
	TArray<struct FString> DescriptionTags;
	struct FString YoutubeVideoId;
	struct FString IslandCode;
	struct FString VkProjectId;
	struct FString VkModuleId;
	bool bIsPromoted;
	struct FString IslandIntroduction;
	struct DateTime LastPublishedDate;
	struct DateTime LastUsedDate;
	int LastPublishedVersion;
	struct FortCreativePlotPermissionData PermissionData;
	struct DateTime DeletedAt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeRealEstatePlotItemDefinition : public FortAccountItemDefinition
{
public:
	struct FText UIDisplayName;
	struct FText UIDisplayDescription;
	struct TSoftClassPtr<UObject> BasePlayset;
	struct FString InitialSaveFileName;
	int SizeX;
	int SizeY;
	struct Vector LocationOffset;
	struct Rotator DefaultRotation;
	ERealEstateOffsetType OffsetType;
	struct SlateBrush MapImage;
	int SortIndex;
	bool bIsAvailableToUsers;
	TArray<struct FortCreativeBudget> CreativeBudgetOverrides;
	bool bCreativeHeatmapThermometerEnabled;
	float CreativeHeatmapThermometerInfluenceDistanceMultiplier;
	int CreativeHeatmapThermometerCellSizeMultiplier;
	TArray<struct FortCreativeGridCellBudget> CreativeHeatmapThermometerBudgetOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeRealEstatePlotManager : public AInfo
{
public:
	TArray<struct ActiveRealEstatePlotInfo> ActiveCreativeRealEstatePlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeRoundSettings : public ABuildingProp
{
public:
	int RoundIndex;
	int KeepItemsBetweenRounds;
	float PercentageOfResourcesKeptBetweenRounds;
	int ReloadAndRestockWeaponsEachRound;
	bool bIsRelevantThisRound;
	int Active;
	bool bActiveDuringMinigame;
	int WinningTeamOnMessageReceived;
	int LastTeamStandingWins;
	Unknown RestockAmmoAmounts;
	int DefaultRestockAmmoAmount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeSourDropperRoundStatusColorDataAsset : public UPrimaryDataAsset
{
public:
	Unknown AffiliationColors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeStormShield : public AFortMissionStormShield
{
public:
	struct Vector ViewTargetLocation;
	bool bIsViewTargetPawnOutside;
	EAthenaGamePhaseStep GamePhaseStep;
	float NextTargetRadius;
	struct Vector NextTargetLocation;
	float NextNextTargetRadius;
	struct Vector NextNextTargetLocation;
	float InstancedServerTime;
	float StartWaitTime;
	float StartShrinkTime;
	float FinishShrinkTime;
	float FinishDestroyTime;
	float AudioLowPassValue;
	float AudioPitchMod;
	float AudioCrossfade;
	class UClass* MovementAudioCrossfadeCurve;
	class UClass* MovementAudioPitchModCurve;
	class UClass* ClockTickingAudioVolumeCurve;
	class UClass* ClockTickingAudioPitchCurve;
	class UClass* ShieldBoundaryAudio;
	class UClass* HoldingAudio;
	class UClass* HoldingTickAudio;
	class UClass* SpawnVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeTagsManager : public UObject
{
public:
	class UClass* CreativeTagsTable;
	class UClass* CreativeTagCategoriesTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeTagsBearer : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeTeleporter : public ABuildingProp
{
public:
	class UClass* TeleporterAbility;
	EFortCreativeTeleporterGroup Knob_TeleporterGroup;
	EFortCreativeTeleporterGroup Knob_TargetTeleporterGroup;
	class UClass* TeleportToWhenReceived;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeTeleporterManagerComponent : public UActorComponent
{
public:
	TArray<struct TeleporterGroup> TeleporterGroupList;
	Unknown TeleporterListedByTeleportToWhenReceived;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCreativeTimerObjective : public ABuildingProp
{
public:
	struct TimerObjectiveHUDData HUDData;
	class UClass* Volume;
	bool MaintainInteractionWhileLookingAround;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeToyOptionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeUserPrefabItemDefinition : public FortWorldItemDefinition
{
public:
	struct FName UserSaveContentName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeVolumeLinkComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnLinkedVolumeSet;
	class UClass* LinkedVolume;
	bool bShouldFindVolumeAtStart;
	struct PropertyOverrideData LinkedVolumeProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldItem : public UFortItem
{
public:
	bool bIsTemporaryItem;
	bool bNeedsPersistentUpdate;
	bool bPendingPersistentDelete;
	class UClass* OwnerInventory;
	struct FortItemEntry ItemEntry;
	float BaseRegenCooldown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeWorldItem : public UFortWorldItem
{
public:
	int MaxRegenStacks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCrossplayPromptContext : public UFortLocalPlayerSubsystem
{
public:
	struct FScriptMulticastDelegate CrossplayPreferenceChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCrowdManager : public CrowdManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCurieBGA : public ABuildingGameplayActor
{
public:
	class UClass* CurieComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_OnCurieActivated : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnCurieActive;
	class UClass* ContextObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieCableBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieManagerComponentConfig : public UPrimaryDataAsset
{
public:
	struct FName ConfigName;
	struct GameplayTag ConfigTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieCableSignalManagerConfig : public UFortCurieManagerComponentConfig
{
public:
	int SignalsProcessedPerTick;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieManagerComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieCableSignalManager : public UFortCurieManagerComponent
{
public:
	struct FortCurieCableSignalManagerTickFunction PrimaryManagerTick;
	class UClass* InternalManagerConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieCableSocketComponent : public UShapeComponent
{
public:
	struct FScriptMulticastDelegate OnCurieCableSignalReceived;
	TArray<struct FortCurieCableSocket> CableSockets;
	float CableSocketRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieComponent : public CurieComponent
{
public:
	class UClass* LastElectricityPropagationParent;
	float LastElectrifiedTime;
	float LastFireFXRelatedStateTime;
	uint16_t ActiveStateBitfield;
	class UClass* CableSocketComponent;
	EFortCurieNativeFXType TrackedNativeGlowFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieDADAssetManager : public UGameInstanceSubsystem
{
public:
	TArray<class UClass*> DADAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementBehavior : public UCurieElementBehavior
{
public:
	bool bActAsDmgSrcDirectly;
	struct DataTableRowHandle DamageDataTableRowHandle;
	struct CurveTableRowHandle ElementMagnitudeToIntensityInitializationCurve;
	struct CurveTableRowHandle ElementMagnitudeToIntensityCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementBehavior_Electricity : public UFortCurieElementBehavior
{
public:
	class UClass* NovaActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementBehavior_Fire : public UFortCurieElementBehavior
{
public:
	float BurningRate;
	struct CurveTableRowHandle FireMagnitudeToWaterContentDecreaseCurve;
	struct CurveTableRowHandle FireMagnitudeToWaterIntensityDecreaseCurve;
	struct CurveTableRowHandle FireMagnitudeToIceIntensityDecreaseCurve;
	struct CurveTableRowHandle FireMagnitudeToWaterIntensityDecayRateCurve;
	struct CurveTableRowHandle FireMagnitudeToIceIntensityDecayRateCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementBehavior_Ice : public UFortCurieElementBehavior
{
public:
	class UClass* IceBlockActorClass;
	struct CurveTableRowHandle IceMagnitudeToFireIntensityDecreaseCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementBehavior_Water : public UFortCurieElementBehavior
{
public:
	struct CurveTableRowHandle WaterMagnitudeToWaterContentIncreaseCurve;
	struct CurveTableRowHandle WaterMagnitudeToFireIntensityDecreaseCurve;
	struct CurveTableRowHandle WaterMagnitudeToWaterContentIncreaseRateCurve;
	struct CurveTableRowHandle WaterMagnitudeToFireIntensityDecayRateCurve;
	struct ScalableFloat WaterBodyInteractionMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDamageSourceInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementDamageSourceInterface : public UFortDamageSourceInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieElementExecution : public FortGameplayEffectExecutionCalculation
{
public:
	struct GameplayTag ElementToApply;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementInteractWithElementHandler : public UCurieElementInteractWithElementHandler
{
public:
	struct GameplayTag InteractingElementTag;
	struct ScalableFloat InteractMagnitudeThreshold;
	struct CurveTableRowHandle ElementMagnitudeToIntensityDecreaseCurve;
	struct CurveTableRowHandle ElementMagnitudeToIntensityDecayRateCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementInteractWithSameElementHandler : public UCurieElementInteractWithElementHandler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementInteractWithMaterialHandler : public UCurieElementInteractWithMaterialHandler
{
public:
	struct ScalableFloat InteractMagnitudeThreshold;
	bool bShouldSuggestElement;
	bool bShouldDisableElementDecay;
	TArray<struct FortCurieInteractStateSuggestionData> OnInstantInteractionStateSuggestions;
	TArray<struct FortCurieInteractStateSuggestionData> OnBeginInteractionStateSuggestions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementInteractWithContainerHandler : public UCurieElementInteractWithContainerHandler
{
public:
	bool bActAsDmgSrcDirectly;
	struct DataTableRowHandle DamageDataTableRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementAttachHandler : public UCurieElementAttachHandler
{
public:
	TArray<struct FortCurieStateSuggestionData> AttachmentSuggestedStates;
	bool bActAsDmgSrcDirectly;
	struct DataTableRowHandle DamageDataTableRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementAttachConditionHandler : public UCurieElementAttachConditionHandler
{
public:
	struct CurveTableRowHandle ElementMagnitudeToIntensityCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementInteractWithMaterialHandlerFire : public UFortCurieElementInteractWithMaterialHandler
{
public:
	struct CurveTableRowHandle FireMagnitudeToWaterContentDecreaseCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementAttachHandlerFire : public UFortCurieElementAttachHandler
{
public:
	struct ScalableFloat BurningRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementAttachConditionHandlerFire : public UFortCurieElementAttachConditionHandler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementAttachConditionHandlerWater : public UFortCurieElementAttachConditionHandler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieElementInteractWithMaterialHandlerWater : public UFortCurieElementInteractWithMaterialHandler
{
public:
	struct CurveTableRowHandle WaterMagnitudeToWaterContentIncreaseCurve;
	struct CurveTableRowHandle WaterMagnitudeToWaterContentIncreaseRateCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior : public UCurieEntityStateBehavior
{
public:
	bool bActAsDmgSrcDirectly;
	struct DataTableRowHandle DamageDataTableRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior_Burning : public UFortCurieEntityStateBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior_Drying : public UFortCurieEntityStateBehavior
{
public:
	float DryingRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior_Electrocution : public UFortCurieEntityStateBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior_WasFireAttached : public UFortCurieEntityStateBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior_WasNearFire : public UFortCurieEntityStateBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieEntityStateBehavior_Wet : public UFortCurieEntityStateBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieFireNiagaraDataInterface : public NiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieFirePropagationManagerConfig : public UFortCurieManagerComponentConfig
{
public:
	float TickInterval;
	float FirePropagationDelay;
	float MinPropagationFuel;
	float DefaultPropagationFuel;
	float MaxPropagationFuel;
	float DefaultPropagationFuelCost;
	float IncompletePropagationRefundFuelMultiplier;
	float InactiveFireFailsafeRemovalTime;
	float MaximumPendingInteractTimePerTick;
	float PropagationApplicationMagnitude;
	float HalfAngleForUpwardMobilityCalculation;
	int PropagationLimit;
	int MinimumPendingInteractsToProcessPerTick;
	int DefaultConnectivityPoints;
	struct ScalableFloat PropagationRate;
	struct Vector2D PropagationApplicationMagnitudeRandomizationRange;
	struct Vector DefaultFireBoundsExpansion;
	bool bAllowPropagationFuelOverrides;
	float FireElementSubgridOverlapThreshold;
	float BuildingFirePropagationTickInterval;
	float GrassFirePropagationInterval;
	float GrassFireBurnoutInterval;
	float GrassFireInitialPropagationDelay;
	float GrassFireMinPropagationDelay;
	float GrassFireMaxPropagationDelay;
	float GrassFireBurnoutTime;
	float GrassMaxWaterContent;
	float GrassWaterContentChangeOnFireApplication;
	float GrassWaterContentChangeOnWaterApplication;
	float GrassFirePropagationCostPerLocation;
	float GrassTraceLandscapeOffset;
	float FireFoundationGrassDefaultExpansion;
	int GrassFirePropagationRate;
	int GrassGridCellsPerAxisManagedByGrassFireReplicator;
	int GrassGridFireMinimumTraceOptimization;
	int GrassFirePropagationFuelConsumptionLimit;
	bool bUseLandscapeMapForGrassGrid;
	bool bUseIFACacheForGrassGrid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieFirePropagationManager : public UFortCurieManagerComponent
{
public:
	struct FortCurieFirePropagationManagerTickFunction PrimaryTickFunction;
	TArray<struct FortCurieActorFireEntry> ActiveActorFires;
	class UClass* InternalManagerConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieFXManager : public UObject
{
public:
	struct FortCurieFXManagerTickFunction PrimaryManagerTick;
	class UClass* FXSettings;
	TArray<class UClass*> ValidElectricityArcMeshes;
	class UClass* ElectricityArcImpactSystem;
	class UClass* ElectricityArcSound;
	class UClass* ElectricityAmbientSound;
	class UClass* FireSystem;
	class UClass* PlayerWorldFireSystem;
	class UClass* FireAmbientSound;
	Unknown ActiveAmbientAudioMap;
	TArray<class UClass*> AvailablePooledAmbientAudioComponents;
	struct TimerHandle AudioComponentCleanupTimerHandle;
	Unknown ActiveElectricityArcImpactFX;
	TArray<class UClass*> AvailablePooledNiagaraComponents;
	TArray<struct FortCurieGlowFadeRequest> GlowFadeRequests;
	TArray<class UClass*> AvailablePooledElectricityMeshComponents;
	TArray<struct FortCurieActiveElectricityArc> ActiveElectricityArcs;
	TArray<struct FortCuriePendingElectricityArcRequest> PendingElectricityArcRequestHeap;
	TArray<struct FortCurieFireParticleActorData> CachedFireParticleActorData;
	TArray<struct FortCurieFireParticleGrassData> CachedFireParticleGrassData;
	Unknown CachedBurningGrassGridCells;
	TArray<class UClass*> CharredEffectInterpComponents;
	TArray<struct FortCurieWorldFirePlayerSystem> WorldFireNiagaraSystems;
	TArray<class UClass*> PrematureComponents;
	struct TimerHandle PrematureComponentTimerHandle;
	TArray<class UClass*> GrassFireReplicators;
	class UClass* LandscapeCharRenderTarget;
	float LandscapeCharInterpSpeed;
	struct Box GrassFireBounds;
	struct RandomStream RandomStream;
	int NumActiveNativeFireStates;
	float ElectricityArcFXSignificanceRequirement;
	float ElectricityImpactFXSignificanceRequirement;
	float ElectricityArcSoundSignificanceRequirement;
	float AmbientAudioSignificanceRequirement;
	float AmbientAudioSurroundSignificanceRequirement;
	float GlowInterpolationSignificanceRequirement;
	float WorldSystemFireParticleSignificanceRequirement;
	float WorldSystemIgnitionParticleSignificanceRequirement;
	float CharredEffectInterpolationSignificanceRequirement;
	float MinLandscapeFireSphericalBounds;
	float MaxLandscapeFireSphericalBounds;
	float LandscapeFireRandomLocationRadius;
	float TimeSinceAudioUpdate;
	bool bNiagaraImpactFXActive;
	bool bNiagaraPlayerWorldFireFXActive;
	bool bFireElementEnabled;
	bool bElectricityElementEnabled;
	bool bShutdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieFXSettings : public UDataAsset
{
public:
	struct NativeCurieFXTypeSettings ElectricityNativeFXTypeSettings;
	struct NativeCurieFXTypeSettings FireNativeFXTypeSettings;
	struct NativeCurieFXTypeSettings CharredNativeFXTypeSettings;
	TArray<class UClass*> ElectricityArcMeshes;
	class UClass* ElectricityArcImpactSystem;
	class UClass* ElectricityArcSound;
	class UClass* ElectricityAmbientSound;
	class UClass* PlayerWorldFireSystem;
	class UClass* FireAmbientSound;
	class UClass* LandscapeCharRenderTarget;
	struct FName PlayerWorldFireSystemLightScalabilityParamName;
	int GlowElementIdxPrimitiveDataIdx;
	int GlowLerpDataIdx;
	int CharredEffectPrimitiveDataIdx;
	int ElectricityArcTilingDivisorPrimitiveDataIdx;
	int ElectricityArcStartTimestampPrimitiveDataIdx;
	int ElectricityArcJumpDurationPrimitiveDataIdx;
	int ElectricityArcDurationBeforeFadeoutPrimitiveDataIdx;
	int ElectricityArcWPONoisePrimitiveDataIdx;
	int ElectricityArcWPONoiseWorldTileScalePrimitiveDataIdx;
	int ElectricityArcWPONoiseScalePrimitiveDataIdx;
	int ElectricityArcSplineWidthPrimitiveDataIdx;
	int ElectricityArcColorScalePrimitiveDataIdx;
	float ElectricityArcMaxPropagationLength;
	struct Vector ElectricityArcRandScaleMin;
	struct Vector ElectricityArcRandScaleMax;
	struct Vector2D ElectricityArcTilingDivisorRand;
	float ElectricityArcJumpDuration;
	float ElectricityArcLifetime;
	float ElectricityArcFadeoutDuration;
	struct Vector ElectricityArcWPONoiseRandMin;
	struct Vector ElectricityArcWPONoiseRandMax;
	struct Vector2D ElectricityArcWPONoiseWorldTileScaleRand;
	struct Vector2D ElectricityArcWPONoiseScaleRand;
	float ElectricityArcSplineWidthFirstIteration;
	float ElectricityArcSplineWidthSubsequentIteration;
	float ElectricityArcColorScaleFirstIteration;
	float ElectricityArcColorScaleSubsequentIteration;
	float ElectricityArcRetriggerDelay;
	float ElectricityArcImpactFXDelay;
	float CharredStateInterpSpeed;
	float CharredStateFireAttachedFinalAlpha;
	float CharredStateNearFireFinalAlpha;
	float LandscapeCharredStateInterpSpeed;
	float MinLandscapeFireSphericalBounds;
	float MaxLandscapeFireSphericalBounds;
	float LandscapeFireRandomLocationRadius;
	float AmbientAudioFadeTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCurieGrassFireReplicator : public AFortStaticReplicatedActor
{
public:
	struct FortCuriePackedGrassDataArray PackedDataArray;
	struct FortSpatialCellIndex MinGrassGridIndex;
	struct FortSpatialCellIndex MaxGrassGridIndex;
	struct Vector GrassGridOrigin;
	struct Vector GrassGridCellSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieInteractionComponent : public UActorComponent
{
public:
	class UClass* CollisionComponent;
	TArray<struct FortCurieExecutionEntry> ExecutionEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieInterface : public UCurieInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieManager : public CurieManager
{
public:
	struct FName CurieManagerRegistryName;
	TArray<class UClass*> CurieManagerComponents;
	Unknown ToggleComponentGroups;
	class UClass* FXManager;
	TArray<struct GameplayTag> ValidStateIdentifiers;
	Unknown StateIdentifierToIdxMap;
	class UClass* CurieSettings;
	TArray<class UClass*> ConfigOverrides;
	bool bAllowCurieApplicationViaDamageFormulaTags;
	bool bCurieElementsBlockBuildingEdit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieSettings : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> CurieManagerClass;
	struct TSoftClassPtr<UObject> CurieFXSettings;
	struct ScalableFloat WaterBodyInteractionMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieSpatialManagerConfig : public UFortCurieManagerComponentConfig
{
public:
	float TickInterval;
	float OverlapFireApplicationMagnitude;
	float OverlapElectricityApplicationMagnitude;
	int ElementOverlapMaximumTestActorsPerFrame;
	float ElementOverlapMaximumDelayBetweenChecks;
	float ElementOverlapDefaultExpansion;
	float GrassWaterContentDecayRate;
	float FireLandscapePropagationApplicationMagnitude;
	float ElementSubgridVoxelOverlapThreshold;
	float ElementGridOverlapVolumeThreshold;
	struct GameplayTagContainer DangerousNavRelevantElements;
	int NavRelevantObjectPoolCap;
	int AccurateCollisionGridCellMinimum;
	struct GameplayTagContainer ElementsToVoxelize;
	int MaxNumStormFireConsiderationsPerFrame;
	int StormFireInteractionTickCheckFreq;
	float MaxTimeForStormFireInteractionsPerFrame;
	float StormFireInteractionConsiderationDelay;
	float StormFireInteractionMagnitude;
	float MovableActorFireInteractionMagnitude;
	float AccurateActorOverlapVolumeThreshold;
	float AccurateActorBoxOverlapVolumeThreshold;
	TArray<struct TSoftClassPtr<UObject>> GrassFoliageTypes;
	TArray<struct TSoftClassPtr<UObject>> IgnitablePhysicalMaterials;
	struct GameplayTagContainer DisallowedElementInteractsWhileInVehicle;
	struct GameplayTagContainer DisallowedElementInteractsWhileDBNO;
	bool bUseAccurateCollisionVoxelization;
	bool bAllowStormFireInteractions;
	bool bCreateFireInteractsForMovableActors;
	bool bAllowBuildingsToInterruptElementGridOverlaps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieDangerousNavRelevantObject : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieSpatialManager : public UFortCurieManagerComponent
{
public:
	TArray<class UClass*> GrassFoliageTypePtrs;
	struct FortCurieSpatialManagerTickFunction PrimaryTickFunction;
	struct FortCurieBuildingGrid CurieBuildingGrid;
	struct FortCurieElementSpatialGrid ElementSpatialGrid;
	struct FortCurieGrassGrid GrassGrid;
	class UClass* InternalManagerConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurieToggleComponent : public UActorComponent
{
public:
	struct GameplayTagContainer ActivationElements;
	EFortCurieToggleComponentActivationBehavior ActivationBehavior;
	EFortCurieToggleComponentDeactivationBehavior DeactivationBehavior;
	float DeactivationTime;
	struct GameplayTag ToggleGroup;
	struct TimerHandle TimedDeactivationHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCurieUpdraftActor : public ABuildingGameplayActor
{
public:
	class UClass* CapsuleComponent;
	float PlayerPawnVortexLaunchMagnitude;
	float PlayerPawnVortexGravityFloorScalar;
	float VehicleGravityMultiplier;
	float ProjectileGravityMultiplier;
	float ProjectileZLaunchMagnitude;
	bool bGlanceProjectiles;
	class UClass* ProjectileGlanceCurve;
	Unknown ActorToPreexistingGravityMultiplierMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurieWorldNiagaraComponent : public NiagaraComponent
{
public:
	int AssociatedControllerId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCurrencyItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCurrencyItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCustomizableAbilityDecoTool : public AFortAbilityDecoTool
{
public:
	bool bExecuteToolAbilityOnPress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomizationAssetLoader : public UObject
{
public:
	struct FortCustomizationAssetsToLoad CurrentAssetsToLoad;
	struct FortCustomizationAssetsToLoad PendingAssetsToLoad;
	TArray<class UClass*> CurrentContentOnDemandItemDefs;
	TArray<class UClass*> AllLoadedAssets;
	class UClass* PawnForOnDemandContentRelevance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomizationsPreloader : public UObject
{
public:
	Unknown PrioritizedCharacterPartsNPCBudget;
	Unknown PrioritizedCharacterPartsPlayerBudget;
	TArray<class UClass*> PrioritizedAIPawnCustomizations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_Custom : public ReplicationGraphNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomSpawnCollectionManager : public UObject
{
public:
	TArray<struct PrimaryAssetId> PrimaryAssetIds;
	Unknown SpawnAmountMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDailyRewardScheduleDefinitions : public UDataAsset
{
public:
	TArray<struct FortDailyRewardScheduleDefinition> Schedules;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTokenType : public FortAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ScriptedAction;
	struct SlateColor NodeTintColour;
	bool bPercentageRepresentation;
	EItemProfileType ProfileType;
	struct TSoftClassPtr<UObject> ItemPreviewActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDailyRewardScheduleTokenDefinition : public FortTokenType
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDamageableActorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDamageFormulaExecutionCalculation : public FortGameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapPingIndicator : public UFortMiniMapIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDamageMiniMapIndicator : public UFortMiniMapPingIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDamageNumbersActor : public AFortClientOnlyActor
{
public:
	float ComponentLifespan;
	class UClass* MeshesByElement;
	class UClass* CritBuildingImpactMesh;
	class UClass* MeshesByScoreCategory;
	struct FName PlayerMaterialParameterName;
	float PlayerMaterialParameterValue;
	struct FName ColorParameterName;
	struct LinearColor HitPlayerColor;
	struct LinearColor CriticalHitPlayerColor;
	struct LinearColor HitEnemyColor;
	struct LinearColor CriticalHitEnemyColor;
	struct LinearColor HitBuildingColor;
	struct LinearColor CriticalHitBuildingColor;
	struct LinearColor ShieldHitColor;
	struct LinearColor CriticalHitShieldColor;
	TArray<struct FortDamageNumberColorInfo> DamageNumberColorInfos;
	struct FName AnimationLifespanParameterName;
	struct FName IsCriticalHitParameterName;
	float SpacingPercentageForOnes;
	TArray<struct FName> PositionParameterNames;
	float DistanceFromCameraBeforeDoublingSize;
	float CriticalHitSizeMultiplier;
	float FontXSize;
	float FontYSize;
	struct Vector WorldLocationOffset;
	float NumberOfNumberRotations;
	TArray<struct FName> ScaleRotationAngleParameterNames;
	TArray<struct FName> DurationParameterNames;
	float MaxScoreNumberDistance;
	struct FName MoveToCameraParameterName;
	TArray<struct LinearColor> PercentDamageColors;
	TArray<int> PercentDamageThresholds;
	struct PooledDamageNumberComponents PooledComponentsByElement;
	struct PooledDamageNumberComponents PooledComponentsCritBuildingImpact;
	struct PooledDamageNumberComponents PooledComponentsByScoreCategory;
	TArray<struct LiveDamageNumberComponent> LiveComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDamageSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData OutgoingBaseDamage;
	struct FortGameplayAttributeData OutgoingBaseEnvironmentalDamage;
	struct FortGameplayAttributeData OutgoingBaseImpactDamage;
	struct FortGameplayAttributeData OutgoingAbilityDamage;
	struct FortGameplayAttributeData OutgoingBaseAbilityDamageMultiplier;
	struct FortGameplayAttributeData ZoneCritMultiplier;
	struct FortGameplayAttributeData DiceCritChance;
	struct FortGameplayAttributeData DiceCritMultiplier;
	struct FortGameplayAttributeData KnockbackMagnitude;
	struct FortGameplayAttributeData KnockbackZAngle;
	struct FortGameplayAttributeData StunTime;
	struct FortGameplayAttributeData WeaponSkill;
	struct FortGameplayAttributeData CritRating;
	struct FortGameplayAttributeData MaxMeleeComboLevel;
	struct FortGameplayAttributeData ShieldDamageScale;
	struct FortGameplayAttributeData HealthDamageScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDataAssetDirectoryManager : public UDataAssetDirectoryManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDataStore_AudioComponentParameters : public UObject
{
public:
	Unknown NamedParameterGroupMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDataStore_EliminationDependent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDataStore_HightowerMangoDataStore : public UFortDataStore_EliminationDependent
{
public:
	TArray<struct FortSwapItemAndVariantData> LastVictimRelevantLoadout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDateTimeLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDayPhaseInfoOverride : public UObject
{
public:
	struct DayPhaseInfo DayPhaseInfo;
	bool bUseAltitudeAdjustmentsOverride;
	TArray<struct CameraAltitudeAdjustments> AltitudeAdjustments;
	bool bUseAltitudeAdjustmentsForSecondFogOverride;
	TArray<struct CameraAltitudeAdjustments> AltitudeAdjustmentsForSecondFog;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeathCameraMode : public UFortCameraMode
{
public:
	float FOV;
	float TimeToTrackTarget;
	float TrackToTargetSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeathCauseData : public UDataAsset
{
public:
	TArray<struct FortDeathCauseInfo> DeathCauseInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeathCauseFromTagMapping : public UDataAsset
{
public:
	TArray<struct FortTagToDeathCause> TagToDeathCauseArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDebugCameraController : public ADebugCameraController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoHelper : public AActor
{
public:
	class UClass* DecoPreview;
	class UClass* PlacementActorClass;
	Unknown DecoTool;
	float DecoToolReach;
	EBuildingAttachmentType CurrentAttachmentType;
	EPlacementType CurrentPlacementType;
	class UClass* DecoItemDefinition;
	struct Vector LocationData;
	struct Rotator RelativeRotationData;
	struct Rotator AbsoluteRotationData;
	float ScaleData;
	struct DecoPlacementState PlacementInfo;
	bool bInFallbackPosition;
	float FallbackTinyScale;
	EFortDecoPlacementQueryResults CanPlaceState;
	struct FText CustomPlacementText;
	float DesiredRelativeRotation;
	struct Vector DirectionChange;
	float GridSnapSize;
	struct Rotator FreeFloorPlacementRelativeRotationOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview : public AActor
{
public:
	EBuildingAttachmentType FallbackAttachmentType;
	EPlacementType FallbackPlacementType;
	struct TSoftClassPtr<UObject> PreviewPlacementMaterial;
	struct TSoftClassPtr<UObject> MotionBounceCurve;
	struct FName CanBePlacedMaterialScalarParam;
	float ValidPlacementScalarParam;
	float InvalidPlacementScalarParam;
	struct FName InverseMovementVectorMaterialParam;
	float MovementEffectScale;
	struct FName InverseOuterScaleVectorParam;
	struct FName InverseInnerScaleVectorParam;
	struct FName WorldSpacePivotVectorParam;
	struct FName DiffuseTextureParam;
	float FreePlacementOffset;
	struct Timeline BounceTimeline;
	TArray<class UClass*> PreviewMIDs;
	struct Vector DirectionChange;
	struct Vector WorldSpacePivot;
	class UClass* ParentDecoHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview_ComponentHarvester : public AFortDecoPreview
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview_GenericBuildingSMActor : public AFortDecoPreview
{
public:
	class UClass* PrimaryMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview_GenericTrap : public AFortDecoPreview_GenericBuildingSMActor
{
public:
	class UClass* TrapRangeMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview_GenericTrapSkeletalMesh : public AFortDecoPreview_GenericTrap
{
public:
	class UClass* SkelMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview_MeshHarvester : public AFortDecoPreview_ComponentHarvester
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoPreview_StaticMesh : public AFortDecoPreview
{
public:
	class UClass* PrimaryMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTrapTool : public AFortDecoTool
{
public:
	bool bRecalculateTrapPositionOnServer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDecoTool_ContextTrap : public AFortTrapTool
{
public:
	class UClass* ContextTrapItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDefenderAnimInstance : public UFortAIAnimInstance
{
public:
	EFortCustomGender Gender;
	bool bShouldWalkRightFootForward;
	bool bIsChargingWeapon;
	float SpeedAdjustedPlayrate;
	float AuthoredJogSpeed;
	float AuthoredWalkSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDefenderItem : public UFortCharacter
{
public:
	TArray<struct FString> alterations;
	TArray<class UClass*> AlterationInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderItemDefinition : public FortCharacterType
{
public:
	TArray<struct GameplayEffectApplicationInfo> CombinedStatGEs;
	struct FName AppearanceOverrideName;
	struct FortAttributeInitializationKey AttributeInitKey;
	struct TSoftClassPtr<UObject> PawnClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeployableBaseCloudSaveItem : public UFortCloudSaveItem
{
public:
	struct FortTierProgression tier_progression;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDeployableBaseCloudSaveItemDefinition : public FortCloudSaveItemDefinition
{
public:
	struct Guid SaveFilenameGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeployableBaseLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDeployableBaseManager : public AInfo
{
public:
	bool bRestrictedBuildingActive;
	bool bBusyWithPlotActions;
	bool bDestroyAllBuildingPiecesOnReload;
	int NumPiecesDestroyedOnZoneCleanupPerUpdate;
	int NumEnvPiecesRestoredPerUpdate;
	bool bDeployableBasesReadOnly;
	EDeployableBaseUseType DeployableBaseUseType;
	struct ActiveTieredCollectionLayoutArray ActiveTieredCollectionLayouts;
	struct FScriptMulticastDelegate OnDeployableBasePlotsSpawned;
	struct FScriptMulticastDelegate OnLocalPlayerEntersDeployablePlotEvent;
	struct FScriptMulticastDelegate OnLocalPlayerLeavesDeployablePlotEvent;
	struct FScriptMulticastDelegate OnLocalDeployablePlotInventoryChangedEvent;
	struct DeployableBaseArray DeployableBaseArray;
	class UClass* DeployableBaseItemDefinition;
	class UClass* DeployableBasePlotClass;
	class UClass* SupportedSkillTreeBasedUnlocks;
	int NumExpectedPlots;
	TArray<struct PendingDeployableBaseUser> PendingUsers;
	TArray<struct PendingDeployableManagerAction> PendingDeployableManagerActions;
	TArray<struct EnvironmentBuildingRestorationRecord> EnvironmentActorsRequiringRestoration;
	bool bCaptureEnvironmentActorsForRestoration;
	bool bWorldInitialized;
	bool bKeepBasesOnLogout;
	TArray<struct UniqueNetIdRepl> PlayersPendingPlotReset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickup : public AActor
{
public:
	bool bUsePickupWidget;
	bool bSuppressInteractionWidget;
	bool bWeaponsCanBeAutoPickups;
	bool bAutoUpgradeWeapons;
	bool bDoServerHandlePickupTrace;
	float SimulatingTooLongLength;
	struct FScriptMulticastDelegate OnPickup;
	struct FScriptMulticastDelegate OnPickupAttempted;
	struct FScriptMulticastDelegate OnPickupDespawned;
	struct FScriptMulticastDelegate OnPickupDestroyed;
	struct FScriptMulticastDelegate OnPickupCombined;
	struct FScriptMulticastDelegate OnSetPawnWhoDroppedPickup;
	struct FortItemEntry PrimaryPickupItemEntry;
	TArray<struct FortItemEntry> MultiItemPickupEntries;
	struct FortPickupLocationData PickupLocationData;
	EFortPickupSourceTypeFlag PickupSourceTypeFlags;
	EFortPickupSpawnSource PickupSpawnSource;
	int16_t OptionalOwnerID;
	struct Guid OptionalMissionGuid;
	class UClass* PrimaryPickupDummyItem;
	Unknown PickupEffectBlueprint;
	class UClass* TouchCapsule;
	class UClass* MovementComponent;
	class UClass* WaterInteractionComponent;
	class UClass* LinkToActorComponent;
	bool bPickedUp;
	bool bSplitOnPickup;
	bool bTossedFromContainer;
	bool bForceHideMinimapIndicator;
	bool bCombinePickupsWhenTossCompletes;
	bool bServerStoppedSimulation;
	bool bClientUseInterpolationOnly;
	byte ServerImpactSoundFlash;
	float LastLandedSoundPlayTime;
	float OverrideInteractAimRadius;
	float LandSoundZForceThreshold;
	float DefaultFlyTime;
	bool bForceDefaultFlyTime;
	class UClass* DroppedLoopingSoundComp;
	class UClass* LandedSoundOverride;
	class UClass* PawnWhoDroppedPickup;
	int CachedSpecialActorIdx;
	struct FName SpecialActorID;
	class UClass* MinimapIndicator;
	class UClass* HUDLabel;
	bool bRandomRotation;
	float DespawnTime;
	float StormDespawnTime;
	float StartSimulatingTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDeployableBasePickup : public AFortPickup
{
public:
	struct UniqueNetIdRepl AssociatedPlotOccupant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeployableBaseRecord : public UFortGenericRecord
{
public:
	TArray<struct FortActorRecord> Actors;
	bool bNeedsFullActorSave;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeployableBaseSkillTreeUnlocks : public UDataAsset
{
public:
	TArray<struct FortTaggedDeployableBasePlotExpansionUnlock> PlotSizeUnlocks;
	TArray<struct FortTaggedDeployableBaseLootUnlock> NeighborhoodLootGrantUnlocks;
	TArray<struct FortTaggedDeployableBaseLootUnlock> CombatZoneStartLootGrantUnlocks;
	TArray<struct FortTaggedDeployableBaseLootUnlock> CombatZoneWaveCompleteLootGrantUnlocks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDeveloperSettings : public UDeveloperSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNotificationHandler : public UObject
{
public:
	struct FScriptMulticastDelegate OnNotificationCleared;
	bool bNotificationCleared;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDialogNotificationHandler : public UFortNotificationHandler
{
public:
	struct FScriptMulticastDelegate OnAccepted;
	struct FScriptMulticastDelegate OnDeclined;
	struct FScriptMulticastDelegate OnTimedOut;
	struct FortDialogDescription DialogDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyEncounterSettings : public UPrimaryDataAsset
{
public:
	TArray<class UClass*> DifficultyOptions;
	struct EncounterEnvironmentQueryInfo OverrideEncounterEnvironmentQueryInfo;
	struct FortEncounterSettings EncounterSettings;
	EFortEncounterSpawnLimitType SpawnLimitMode;
	EFortEncounterPacingMode PacingMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOption : public UObject
{
public:
	struct DataTableRowHandle CostAndAvailability;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategory : public UDataAsset
{
public:
	bool bIsRequired;
	bool bIsStatic;
	bool bHasValueRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter : public UFortDifficultyOptionCategory
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_Breathers : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_DirectionChange : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_DirectionNumber : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_Distance : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_ModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_PawnNumberCap : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression : public UFortDifficultyOptionCategoryEncounter
{
public:
	class UClass* SpawnGroupProgression;
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_SpawnTiming : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_Time : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_TimedModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_UtilitiesFree : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*> Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionCategoryMission : public UFortDifficultyOptionCategory
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter : public UFortDifficultyOption
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_Breathers : public UFortDifficultyOptionEncounter
{
public:
	bool bUseBreathers;
	struct CurveTableRowHandle LowPlayerPerformanceBreatherTimeSecondsCurve;
	struct CurveTableRowHandle NormalPlayerPerformanceBreatherTimeSecondsCurve;
	struct CurveTableRowHandle HighPlayerPerformanceBreatherTimeSecondsCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_DirectionChange : public UFortDifficultyOptionEncounter
{
public:
	bool bChangeDirectionsOnRest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_DirectionNumber : public UFortDifficultyOptionEncounter
{
public:
	int NumberOfDirections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_Distance : public UFortDifficultyOptionEncounter
{
public:
	float MinSpawnDistance;
	float MaxSpawnDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_FixedPace : public UFortDifficultyOptionEncounter
{
public:
	struct ScalableFloat RiftSpawnInterval;
	struct ScalableFloat RiftSpawnCount;
	struct ScalableFloat AIMaxCount;
	struct ScalableFloat SpawnAIMaxCountPlayerMultiplier;
	struct ScalableFloat SpawnAIMaxCountDifficultyMultiplier;
	struct ScalableFloat SpawnAIIntervalTime;
	struct ScalableFloat SpawnAIIntervalTimePlayerMultiplier;
	struct ScalableFloat SpawnAIIntervalTimeDifficultyMultiplier;
	struct ScalableFloat SpawnAIIntervalCount;
	struct ScalableFloat SpawnAIIntervalCountPlayerMultiplier;
	struct ScalableFloat SpawnAIIntervalCountDifficultyMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_IntensityCurveSequence : public UFortDifficultyOptionEncounter
{
public:
	class UClass* CurveSequence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_ModifierTags : public UFortDifficultyOptionEncounter
{
public:
	struct GameplayTagContainer ModifierTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_PawnNumberCap : public UFortDifficultyOptionEncounter
{
public:
	struct FortEncounterPawnNumberCaps PawnCapsPerPlayerCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnGroupProgression : public UFortDifficultyOptionEncounter
{
public:
	class UClass* SpawnGroupProgression;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnGroups : public UFortDifficultyOptionEncounter
{
public:
	class UClass* SpawnGroupProgression;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnLimitPawns : public UFortDifficultyOptionEncounter
{
public:
	int PawnNumberLimit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnLimitPoints : public UFortDifficultyOptionEncounter
{
public:
	float SpawnPointsPercentageLimit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnPointsBurst : public UFortDifficultyOptionEncounter
{
public:
	struct ScalableFloat BurstSpawnPointsPercentage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnPointsCurve : public UFortDifficultyOptionEncounter
{
public:
	class UClass* CurveSequence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionEncounter
{
public:
	struct ScalableFloat Multiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_SpawnTiming : public UFortDifficultyOptionEncounter
{
public:
	struct ScalableFloat SpawnIntervalSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_Time : public UFortDifficultyOptionEncounter
{
public:
	float EncounterTimeSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_TimedModifierTags : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FortAIEncounterTimedModifierTags> TimedModifierTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_UtilitiesAdjustment : public UFortDifficultyOptionEncounter
{
public:
	float UtilitiesAdjustmentIntervalSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_UtilitiesFree : public UFortDifficultyOptionEncounter
{
public:
	int NumFreeUtilitySlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionEncounter_UtilitiesLocked : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FortEncounterLockedUtility> LockedUtilities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionMission : public UFortDifficultyOption
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionSetEncounter : public UDataAsset
{
public:
	EFortEncounterPacingMode PacingMode;
	class UClass* IntensityCurveSequenceCategory;
	class UClass* SpawnPointsPercentageCurveSequenceCategory;
	class UClass* SpawnPointsBurstCategory;
	class UClass* BreathersCategory;
	class UClass* SpawnPointsMultiplierCategory;
	class UClass* PawnNumberCapCategory;
	class UClass* OptionalSpawnTimingCategory;
	EFortEncounterSpawnLimitType SpawnLimitMode;
	class UClass* SpawnPointsLimitCategory;
	class UClass* PawnLimitCategory;
	EFortEncounterUtilitiesMode UtilitiesMode;
	class UClass* LockedUtilitiesCategory;
	class UClass* FreeUtilitiesCategory;
	class UClass* UtilitiesAdjustmentCategory;
	EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode;
	EFortEncounterSpawnLocationPlacementMode SpawnLocationPlacementMode;
	class UClass* DirectionNumberCategory;
	class UClass* DirectionChangeCategory;
	class UClass* DistanceCategory;
	class UClass* SpawnGroupProgressionCategory;
	class UClass* TimeCategory;
	class UClass* OptionalModifierTagsCategory;
	class UClass* OptionalMiniBossStartTimedTagsCategory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDifficultyOptionSetMission : public UDataAsset
{
public:
	TArray<class UClass*> MissionOptionsCategories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDirectionCameraLensInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDisconnectedAIController : public AIController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDoghouseVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float WheelRotationRange;
	float VehicleFrontLowLateralFrictionMultiplier;
	float VehicleRearLowLateralFrictionMultiplier;
	float VehicleFrontHighLateralFrictionMultiplier;
	float VehicleRearHighLateralFrictionMultiplier;
	float LowToHighFrictionDuration;
	float UphillIncline;
	float ReverseToForwardFrontFriction;
	float ReverseToForwardRearFriction;
	float ReverseToForwardMaxSpeed;
	float PropSpeedPerLinearSpeed;
	float PropSpeedPerLinearSpeedPassive;
	float PropSpeedAccelLerpPerSecond;
	float PropSpeedDecelLerpPerSecond;
	float TaxiPitchProjTarget;
	float MaxAltitudeZ;
	float StallAltitudeZ;
	float StallTime;
	float StuckTimeBeforeStall;
	float MinSkipShocksAltitudeZ;
	float AltitudeUpdateFrequency;
	float ControlStateNetUpdateFrequency;
	float ForceHeadingUpdateFrequency;
	struct FlightParams BaseFlightParams;
	float AileronRollMatchRate;
	float AileronRollRotationalDampingCoefficient;
	float AileronRollMaxRotationalDampingTorque;
	float DivebombSpeedMinKmh;
	float DivebombSpeedMaxKmh;
	float DivebombSteerPitchRate;
	float DivebombHeadingMatchRate;
	float HardRollHeadingMatchRate;
	float HardRollHeadingSteerRate;
	float HardRollOffsetPercent;
	float TimeBeforeStallWithNoPassengersInAir;
	float TimeBeforeStallWithNoPassengersOnGround;
	float BoostTopSpeedKmh;
	float BoostThrust;
	float AileronRollDoubleClickSpeed;
	struct FortRechargingActionTimerConfig BoostConfig;
	struct FortRechargingActionTimerConfig AileronRollConfig;
	float PitchBiasOnGround;
	float HeadingAutoCenterRate;
	float RollAutoCenterRate;
	float AirbrakeDragCoefficient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDoorLinkComponent : public NavLinkCustomComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDownloadLocalizedOverlays : public LocalizedOverlays
{
public:
	class UClass* MediaPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDynamicBuildingDeconstructor : public AActor
{
public:
	struct BoxSphereBounds Bounds;
	bool bDebugDrawBounds;
	bool bSelectiveDestruction;
	bool bIgnoreMissionActors;
	bool bShrinkAndDestroyEffect;
	int NumOfPiecesToDestroyAtOnce;
	float TimeBetweenChunks;
	TArray<Unknown> SortedBuildingActors;
	int CurrentIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEditToolItemDefinition : public FortWeaponItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEmitterCameraLensEffectDirectional : public AEmitterCameraLensEffectBase
{
public:
	class UClass* DamageDealer;
	struct Vector DamageDealerLocation;
	struct FName RotationParameterName;
	bool bRotateActor;
	float Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNiagaraCameraLensEffectDirectional : public NiagaraLensEffectBase
{
public:
	class UClass* DamageDealer;
	struct Vector DamageDealerLocation;
	struct FName RotationParameterName;
	bool bRotateActor;
	float Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEmojiPreviewComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEmoteItemDefinition : public FortMontageItemDefinitionBase
{
public:
	struct FText CommandName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEmotePreviewActor : public AActor
{
public:
	class UClass* PreviewingEmote;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEmoteVolume : public AVolume
{
public:
	class UClass* RequiredQuest;
	struct FName RequiredObjective;
	TArray<struct EmoteActionBinding> GrantedEmotes;
	bool bAllowGrantingUnownedEmotes;
	bool bUseEmoteCategory;
	bool bDisplayExclusive;
	struct FName EmoteCategoryName;
	struct FText EmoteCategoryTitle;
	Unknown TrackedPlayers;
	Unknown PlayersWithEmotes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEnemySpawn : public ABuildingActor
{
public:
	float ClusterRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEngine : public UGameEngine
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEntryMusicController : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEnvQueryManager : public UEnvQueryManager
{
public:
	TArray<struct EnvQueryManagerConfig> EnvManagerConfigPerGamePhase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEQSPrevisActor : public AActor
{
public:
	class UClass* SceneRoot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventCurrencyItemDefinitionRedir : public FortPersistentResourceItemDefinition
{
public:
	class UClass* CurrentCurrencyItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventDependentItemDefinition : public FortAccountItemDefinition
{
public:
	struct FString CalendarChannelName;
	struct FName RequiredEventTag;
	class UClass* TargetReplacementItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEventLevelCamera : public AFortCameraBase
{
public:
	struct GameplayTag CameraTag;
	struct GameplayTag PreviousCamera;
	struct GameplayTag BackOutCamera;
	struct TSoftClassPtr<UObject> DefaultSelectedObject;
	bool bRestorLastSelected;
	struct TSoftClassPtr<UObject> LastSelectedObject;
	struct ViewTargetTransitionParams FallbackTransitionParams;
	Unknown CameraTransitionParams;
	struct TSoftClassPtr<UObject> LightswitchToActivate;
	struct TSoftClassPtr<UObject> SpatialScreenClass;
	TArray<Unknown> NavigationActorsToTurnOn;
	Unknown WeakDynamicLevelComp;
	struct Vector DefaultCameraLocation;
	struct Rotator DefaultCameraRotation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortEventLevelNavigationActor : public AActor
{
public:
	struct FText NavDisplayName;
	TArray<struct NavWidgetSettingContainer> NavWidgetSettings;
	struct NavWidgetSettings DefaultNavWidgetSettings;
	class UClass* WidgetComponent_NavigationWidget;
	class UClass* WidgetComponent_CursorTargetPosition;
	class UClass* IndicatorWidgetClass;
	class UClass* CursorTargetWidgetClass;
	class UClass* DisplayMesh;
	struct GameplayTag NavigationActorTag;
	struct GameplayTagContainer CamerasThisNavObjectIsActiveFrom;
	Unknown CameraToNavigateTo;
	Unknown AdditionalHighlightObjects;
	Unknown SpecialInteractionTags;
	bool bAutoClick;
	TArray<struct NavOptions> CameraNavOptions;
	struct FString CalendarEventName;
	bool bAlwaysHighliteOnMobile;
	int MobileHighlightStencilValue;
	bool bOverrideMobileMeshSize;
	float MeshSizeOverrideScale;
	int CursorHoverHighlightStencilValue;
	Unknown LevelController;
	Unknown GSC_StreamingLevelOwner;
	struct FScriptMulticastDelegate OnInventoryUpdated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventLevelNavigationBangVisualComponent : public UActorComponent
{
public:
	struct GameplayTag BangTrackerTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLevelNavigationDetails : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLevelNavigationWidget : public CommonUserWidget
{
public:
	class UClass* Button_Navigation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventPurchaseTrackerItem : public UFortAccountItem
{
public:
	struct FString event_instance_id;
	Unknown event_purchases;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventPurchaseTrackerItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortExhibitActor : public AActor
{
public:
	struct Transform CameraOffset;
	float CameraFOV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortExpeditionItem : public UFortAccountItem
{
public:
	int expedition_max_target_power;
	int expedition_min_target_power;
	struct DateTime expedition_start_time;
	struct DateTime expedition_end_time;
	struct DateTime expedition_expiration_start_time;
	struct DateTime expedition_expiration_end_time;
	struct FString expedition_squad_id;
	struct FString expedition_slot_id;
	TArray<struct FString> expedition_criteria;
	float expedition_success_chance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionItemDefinition : public FortAccountItemDefinition
{
public:
	struct FString CriteriaRequirementsLootTier;
	float ExpeditionDuration_Minutes;
	float ExpeditionExpirationDuration_Minutes;
	int BaseTargetPowerRating;
	int TierFactor;
	int MaxTargetPowerClamp;
	struct DataTableRowHandle ExpeditionRules;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortExpeditionManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExperimentContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortExternalContentManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFactionMapping : public UDataAsset
{
public:
	struct GameplayTagContainer BlockResetSpecificRelationTags;
	TArray<struct FactionData> FactionDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFallbackCameraFrameTargetProxy : public UObject
{
public:
	struct FDelegate OnSettingsChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFastLoadConfig : public UObject
{
public:
	bool bDisableStreamInBuildings;
	bool bDisableStartupAIDirector;
	bool bDisableUpgradePlayerBuildingClasses;
	bool bUseMinimalPlayerBuildingClasses;
	bool bDisableStartingMissions;
	bool bUseFastLoadDefaultInventory;
	bool bDisableThreatVisualsManager;
	bool bDisablePreLoadAssets;
	bool bDisablePreLoadLootAssets;
	bool bDisableLoadStateClientAthena;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFeatItemDefinition : public FortQuestItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFeedbackBank : public UPrimaryDataAsset
{
public:
	TArray<struct FortFeedbackActionBankDefined> BankDefinedFeedbackEvents;
	TArray<struct FortFeedbackAction> FeedbackEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortFeedbackManager : public AActor
{
public:
	TArray<struct FortFeedbackEventData> FeedbackEvents;
	bool bUsesStWFeedbackEvents;
	TArray<struct FortFeedbackEventData> BankDefinedFeedbackEvents;
	class UClass* AnnouncerPawnClass;
	class UClass* Announcer;
	TArray<Unknown> SuppressedControllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFerretVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* FerretVehicle;
	struct Rotator FerretVehicleSpeed;
	bool bForwardSpeedIsNearlyZero;
	bool bForwardSpeedIsGreaterThanOne;
	bool bReverseSpeedIsGreaterThanOne;
	bool bSpeedIsGreaterThanFiveAndPlayerHitSpace;
	bool bIsBraking;
	bool bIsBoosting;
	bool bIsBoostReady;
	bool bPlayerHitSpaceBar;
	bool bOnGround;
	struct Vector ControlTorque;
	struct Rotator RudderAngle;
	struct Rotator AileronAngle;
	struct Rotator ElevatorAngle;
	struct Rotator FlapAngle;
	struct Rotator Altitude;
	float SteerPitchAngle;
	struct Rotator PropellorAngle;
	struct Rotator BoostPercent;
	EPlaneDirection FerretCardinalDirection;
	float ElevatorDeadZone;
	float RudderDeadZone;
	bool bFerretShouldPlayStartTransition;
	bool bFerretShouldPlayStopTransition;
	EPlaneDirection FerretStopCardinalDirection;
	EPlaneDirection FerretPrePivotCardinalDirection;
	bool bFerretShouldPlayPivotTransition;
	float AbsSteerAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFerretVehicleConfigs : public UFortDoghouseVehicleConfigs
{
public:
	float BounceCrouchTime;
	float BounceCrouchTimeDeadzone;
	float BounceRecoilTime;
	float BounceForcePerMass;
	float PassengerLeanMagnitude;
	float PassengerLeanMinMagnitude;
	float PassengerLeanLeftRightInterpolationPerSecond;
	float PassengerLeanUpInterpolationPerSecond;
	float PassengerLeanDownInterpolationPerSecond;
	float PassengerLeanResetInterpolationPerSecond;
	float PassengerLeanDeadzone;
	float BoostSteeringMultiplier;
	float BoostCooldown;
	float BoostSteeringMultiplierRampTime;
	float BoostSlowExtraStrength;
	float MinForwardSpeedBoostExtraStrength;
	float BoostTopSpeedForceMultiplier;
	float MinSpeedForWingTrails;
	float CameraShakeAmplitudeMin;
	float CameraShakeAmplitudeMax;
	float SpringFudgeFactor;
	float CameraShakeNormalizedSpeed;
	float CameraShakeSpeedCurvePow;
	float BoostingCameraShakeAmount;
	float BoostCameraShakeFrequency;
	float SmoothedSpringCompressionMin;
	float SmoothedSpringCompressionMax;
	float ScreenShakeFrequencyMin;
	float ScreenShakeFrequencyMax;
	float PassengerCameraShakeMultiplier;
	float ScreenShakeYawFrequencyMultiplier;
	struct LinearColor WheelSlideBoostColorWhenNotPowerSliding;
	float TreadWidth;
	float RumbleMultiplier;
	float SparksRumbleMultiplier;
	float BoostCameraOffset;
	float ADSCameraDistance;
	float PassengerCameraOffset;
	float ADSInterpSpeed;
	struct FName LeftMuzzleSocketName;
	struct FName RightMuzzleSocketName;
	float MaxHealthToDestroyPropWithDirectHit;
	float ImpactScaleWhenBoosting;
	float MaxAltitudeForWaterTest;
	bool bUseBiplaneComponentsForProjectileOrigins;
	bool bUseLTMBiplaneForReplayWeaponFX;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFishingInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortFlag : public AFortCarriedObject
{
public:
	class UClass* FlagMeshComp;
	class UClass* CollisionComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFoleyFootstepContext : public SoundLibraryContext
{
public:
	EFortFootstepAudioType StepType;
	EFortFootstepSurfaceType SurfaceType;
	EFortFootstepPosition RelativePosition;
	bool bIs1P;
	bool bIsThreat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFoleyHitContext : public SoundLibraryContext
{
public:
	EFortFoleyHitAudioType HitType;
	bool bIs3D;
	bool bIsReceiver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFoliageSpawnerSet : public UDataAsset
{
public:
	TArray<class UClass*> FoliageSpawners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFootstepSurfaceData : public UDataAsset
{
public:
	struct FortFootstepSurfaceAudioData Surface1P;
	struct FortFootstepSurfaceAudioData Surface3P;
	float VerticalPitchMaxBelow;
	float VerticalPitchMaxAbove;
	float VerticalPitchTileRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFootstepAudioBank : public UDataAsset
{
public:
	EFortFootstepSurfaceType PhysicalSurfaceMappings;
	float TeammateVolumeMultiplier;
	float MaxFootstepDistance;
	float VerticalPitchMaxBelow;
	float VerticalPitchMaxAbove;
	float VerticalPitchTileRange;
	struct FortFootstepSurfaceAudioData SurfaceData1P;
	struct FortFootstepSurfaceAudioData SurfaceData3P;
	struct FortFootstepAttenuationData AttenuationData1P;
	struct FortFootstepAttenuationData AttenuationData3P;
	int VersionNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFootstepSurfaceInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortForcedLODZone : public AActor
{
public:
	EFortAILODLevel ForcedLODLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFriendChestItem : public UFortAccountItem
{
public:
	int granted_this_period;
	int granted_this_season;
	struct DateTime period_reset_time;
	int catchup_bank;
	int GrantedThisSession;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFriendChestInstancedDetail : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFriendChestInstancedDetail_FreshDripCounter : public UFriendChestInstancedDetail
{
public:
	struct GameplayTag FreshTag;
	struct GameplayTag DripTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFriendChestInstancedDetail_ItemDefinition : public UFriendChestInstancedDetail
{
public:
	struct TSoftClassPtr<UObject> InstancedItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFriendChestInstancedDetail_GrantXp : public UFriendChestInstancedDetail
{
public:
	struct TSoftClassPtr<UObject> Accolade;
	EFortQuestObjectiveStatEvent AccoladeEvent;
	struct GameplayTagContainer TargetTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFriendChestItemDefinition : public FortAccountItemDefinition
{
public:
	class UClass* InstancedDetail;
	EFriendChestTimePeriod TimePeriod;
	int GrantsPerPeriod;
	int GrantsPerSeason;
	int CatchupBankSize;
	bool bAllowSeasonCatchup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFrontendItemViewSettingsManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortFrontEndMiniMapManager : public AActor
{
public:
	struct Vector ApolloMapMinLoc;
	struct Vector ApolloMapMaxLoc;
	TArray<struct FortChallengeMapPoiData> PoiDataConfigOverrides;
	TArray<struct FString> ExcludedFromMapNameDisplayPOIs;
	int MapLocationFontSizeOverride;
	struct LinearColor DefaultMapLocationFontColor;
	struct SlateFontInfo DefaultMapLocationFont;
	uint32_t MobileMapLocationFontSizeOverride;
	struct GameplayTag SpybaseTag;
	class UClass* NamedLocationQuestItemDefinition;
	class UClass* POIQuestItemDefinition;
	int MapLayerSize;
	struct Margin MapMargin;
	class UClass* MapMaterial;
	float MapWorldScale;
	struct Vector2D CaptureResolution;
	Unknown MinimapLocationRenderData_Player1;
	Unknown MinimapLocationRenderData_Player2;
	struct SlateFontInfo MapLocationFont;
	class UClass* MapMaskMaterial;
	class UClass* MapMaskMaterialMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortFXManager : public AFortClientOnlyActor
{
public:
	TArray<struct FortSplineMeshAnimSet> SplineAnimSets;
	TArray<struct FortMIDAnimSet> MIDAnimSets;
	TArray<struct FortParticleAnimSet> ParticleAnimSets;
	TArray<struct FortLightAnimSet> LightAnimSets;
	TArray<class UClass*> PendingWeaponFX;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFXSkeletonMeshComponent : public USkeletalMeshComponent
{
public:
	float AwakenFadeInTime;
	float AwakenDuration;
	float AwakenFadeOutTime;
	float BuildingHitFadeInTime;
	float BuildingHitDuration;
	float BuildingHitFadeOutTime;
	class UClass* SourceMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFXStaticMeshComponent : public UStaticMeshComponent
{
public:
	float AwakenFadeInTime;
	float AwakenDuration;
	float AwakenFadeOutTime;
	float BuildingHitFadeInTime;
	float BuildingHitDuration;
	float BuildingHitFadeOutTime;
	class UClass* SourceMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGadgetItemTooltip : public UFortWorldItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameActivity : public UPrimaryDataAsset
{
public:
	struct FString Mnemonic;
	struct FString SupportCode;
	EFortGameActivityType Type;
	struct FString Title;
	struct FString Creator;
	struct FString CreatorAccountId;
	struct FString Tagline;
	bool bIsFavorite;
	class UClass* Preview;
	struct FString PreviewPath;
	int Version;
	TArray<struct FString> DescriptionTags;
	int Matchmaking_MaximumNumberOfPlayers;
	int Matchmaking_PlayersPerTeam;
	EMMSRulePreset Matchmaking_MMSType;
	EMMSPrivacy Matchmaking_MMSPrivacy;
	struct DateTime SortDate;
	class UClass* StoredInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameData : public UPrimaryDataAsset
{
public:
	float PickupSplineOffsetRange;
	float PickupSplineRandomMax;
	float PickupSplineDropToGroundLength;
	float PickupMaxCollectionTime;
	float PickupMaxDelayPerItem;
	struct GameplayTagContainer AutoEquipTagContainer;
	struct LinearColor BuildingFullHealthFlashColor;
	struct LinearColor InvalidEditPatternColor;
	TArray<struct FortHighlightParamProfile> HighlightParamProfiles;
	struct FortHighlightColorsContainer HighlightColors;
	struct Vector MobileInteractionIconScale;
	struct LinearColor MobileRarityColor;
	struct CurveTableRowHandle CritRatingTable;
	struct CurveTableRowHandle ArmorToDamageResistanceTable;
	float DefaultLootInstancingRange;
	TArray<struct FortQuestPackInfo> QuestPackInfos;
	struct GameplayTagContainer DamageDoneTargetQuest_AllowedTags;
	struct GameplayTagContainer DamageDoneQuest_AllowedTags;
	TArray<struct DamageDistanceTagEval> DamageDoneQuest_DistanceTags;
	class UClass* QuestIndicatorData;
	struct OnlineAccountTexts OnlineAccountTexts;
	TArray<struct FName> ServerOnlyAssetTypes;
	struct TSoftClassPtr<UObject> LoadingConfig;
	struct TSoftClassPtr<UObject> DefaultCameraManager;
	struct TSoftClassPtr<UObject> AnalyticsData;
	struct TSoftClassPtr<UObject> GameplayTagData;
	struct TSoftClassPtr<UObject> GameplayEffectData;
	struct TSoftClassPtr<UObject> ObjClassToTooltipClassMap;
	struct TSoftClassPtr<UObject> TooltipTokenToTextTable;
	struct TSoftClassPtr<UObject> TooltipTokenToAttributeTable;
	struct TSoftClassPtr<UObject> PickupSplineCurve;
	struct TSoftClassPtr<UObject> PickupLandedSound;
	struct TSoftClassPtr<UObject> RarityData;
	struct TSoftClassPtr<UObject> ItemCategories;
	struct TSoftClassPtr<UObject> AppActivationSoundMixManager;
	struct TSoftClassPtr<UObject> LoadingScreenSoundMix;
	struct TSoftClassPtr<UObject> BaseSoundMix;
	struct TSoftClassPtr<UObject> AbilityTargetingActorBlueprintClass;
	struct TSoftClassPtr<UObject> DefaultCooldownGameplayEffect;
	struct TSoftClassPtr<UObject> MobileInteractionMaterial;
	struct TSoftClassPtr<UObject> MobileInteractionMesh;
	struct TSoftClassPtr<UObject> MobileInteractionIcons;
	struct SubGameInfo SubGameInfo;
	struct GameplayTagContainer PlacementActorUsedTags;
	float QueuedAnnouncementPauseTimes;
	struct CurveTableRowHandle WeakSpotEnabledTimeoutHandle;
	float BuildingRetestSupportedByWorldDelay;
	float BuildingStructuralCollapseDelay;
	float BuildingStructuralCollapseDelayVariance;
	float BuildingStructuralCollapseCellDistAdditiveDelay;
	float BuildingStructuralCollapseCellDistAdditiveDelayVariance;
	float EditModeCancelDistance;
	struct CurveTableRowHandle BuildingCostHandles;
	struct CurveTableRowHandle BuildingDeconCostMultHandles;
	struct CurveTableRowHandle PlayerBuildingDeconCostMultHandles;
	struct CurveTableRowHandle BuildingInitialHealthPercentHandles;
	struct CurveTableRowHandle AthenaBuildingInitialHealthPercentHandles;
	struct CurveTableRowHandle AthenaBuildingDropPercentHandles;
	struct CurveTableRowHandle BuildingRepairCostMultiplierHandles;
	struct CurveTableRowHandle BuildingBreakAnimDurationHandles;
	struct CurveTableRowHandle BuildingDestroyAnimDurationHandles;
	struct CurveTableRowHandle BuildingPlacementAnimDurationHandles;
	struct CurveTableRowHandle BuildingCritDamagePctHandles;
	struct CurveTableRowHandle BuildingCritDestroyAnimScaleCapHandles;
	struct TSoftClassPtr<UObject> BuildingAudioBank;
	struct TSoftClassPtr<UObject> StencilDefinitionCollection;
	struct FText ResourceNames;
	struct FText BuildingTypeNames;
	struct TSoftClassPtr<UObject> StoneItemDefinition;
	struct TSoftClassPtr<UObject> WoodItemDefinition;
	struct TSoftClassPtr<UObject> MetalItemDefinition;
	struct TSoftClassPtr<UObject> GoldCurrencyItemDefinition;
	struct TSoftClassPtr<UObject> PistolAmmoItemDefinition;
	struct TSoftClassPtr<UObject> PermaniteItemDefinition;
	struct TSoftClassPtr<UObject> ShotgunAmmoItemDefinition;
	struct TSoftClassPtr<UObject> RifleAmmoItemDefinition;
	struct TSoftClassPtr<UObject> AssaultAmmoItemDefinition;
	struct TSoftClassPtr<UObject> EnergyAmmoItemDefinition;
	struct TSoftClassPtr<UObject> FortInputData;
	struct TSoftClassPtr<UObject> MissionGenerationData;
	struct TSoftClassPtr<UObject> MissionCSVEventMap;
	struct TSoftClassPtr<UObject> PreferredItemSlotSettings;
	struct TSoftClassPtr<UObject> GamepadSettingsDefault;
	struct TSoftClassPtr<UObject> GamepadSettingsSony;
	struct TSoftClassPtr<UObject> GamepadSettingsXboxOne;
	struct TSoftClassPtr<UObject> GamepadSettingsSwitch;
	struct TSoftClassPtr<UObject> GamepadSettingsV2;
	struct TSoftClassPtr<UObject> TouchInputSettings;
	Unknown InputTypeIcons;
	struct TSoftClassPtr<UObject> LootQuotaData;
	struct TSoftClassPtr<UObject> LootLevelData;
	struct TSoftClassPtr<UObject> SurfaceRatioBySurfaceCategoryData;
	class UClass* CachedSurfaceRatioBySurfaceCategoryData;
	struct TSoftClassPtr<UObject> SurfaceRatioByAffiliationData;
	class UClass* CachedSurfaceRatioByAffiliationData;
	struct TSoftClassPtr<UObject> TeamIdentifications;
	TArray<struct TSoftClassPtr<UObject>> MinigameTeamIdentifications;
	TArray<struct PartnerPcbInfo> PartnerCafeBundleMapping;
	struct TSoftClassPtr<UObject> StatNamesToTrackTable;
	struct TSoftClassPtr<UObject> AttributeLookupTable;
	struct TSoftClassPtr<UObject> AttributeCategories;
	struct TSoftClassPtr<UObject> DamageNumbersActorClass;
	struct TSoftClassPtr<UObject> WeakSpotBlueprintClass;
	struct TSoftClassPtr<UObject> WeakSpotWoodPhysicalMaterial;
	struct TSoftClassPtr<UObject> WeakSpotStonePhysicalMaterial;
	struct TSoftClassPtr<UObject> WeakSpotMetalPhysicalMaterial;
	struct TSoftClassPtr<UObject> UITagDataTable;
	struct TSoftClassPtr<UObject> PickupEffectBlueprintClass;
	struct TSoftClassPtr<UObject> TagTableManager;
	struct TSoftClassPtr<UObject> EditToolItem;
	struct TSoftClassPtr<UObject> BuildingToolClass;
	struct TSoftClassPtr<UObject> EditToolClass;
	struct TSoftClassPtr<UObject> GenericTrapAbilitySet;
	struct TSoftClassPtr<UObject> GenericVehicleAbilitySet;
	struct TSoftClassPtr<UObject> AbilityTagRelationshipMapping;
	struct TSoftClassPtr<UObject> WeaponRechargeAmmoItemMapping;
	struct TSoftClassPtr<UObject> FortDeathCauseFromTagMapping;
	struct TSoftClassPtr<UObject> FortDeathCauseData;
	class UClass* CompositeDeathCauseData;
	struct TSoftClassPtr<UObject> SurfaceTypeToSurfaceTypeTagMapping;
	struct TSoftClassPtr<UObject> EnvironmentDamageTemplateGE;
	struct TSoftClassPtr<UObject> FallingDamageTemplateGE;
	struct TSoftClassPtr<UObject> VehicleImpactDamageTemplateGE;
	struct TSoftClassPtr<UObject> HealingTemplateGE;
	struct TSoftClassPtr<UObject> FatalDamageTemplateGE;
	struct TSoftClassPtr<UObject> BasicNotificationClass;
	struct TSoftClassPtr<UObject> FriendNotificationClass;
	struct TSoftClassPtr<UObject> BattlePassPageUnlockNotificationClass;
	struct TSoftClassPtr<UObject> TwitchNotificationClass;
	struct TSoftClassPtr<UObject> ZoneModifiersAnnouncementClass;
	struct TSoftClassPtr<UObject> HealthScreenDamagePostProcessMat;
	struct TSoftClassPtr<UObject> FallbackDeathParticles;
	struct TSoftClassPtr<UObject> MobileOverrideDeathParticles;
	struct TSoftClassPtr<UObject> WallFallbackDeathParticles;
	struct TSoftClassPtr<UObject> FallbackConstructedEffect;
	struct TSoftClassPtr<UObject> RepairEffect;
	struct TSoftClassPtr<UObject> ConstructionCompleteSound;
	struct TSoftClassPtr<UObject> DamageMaterial;
	struct TSoftClassPtr<UObject> BounceCurve;
	struct TSoftClassPtr<UObject> BlueprintParentMaterial;
	struct TSoftClassPtr<UObject> EditCurve;
	struct TSoftClassPtr<UObject> BlueprintDamageCurve;
	struct TSoftClassPtr<UObject> FullHealthAnimCurve;
	struct TSoftClassPtr<UObject> RepairAnimCurve;
	struct TSoftClassPtr<UObject> DynamicLODEffectCurve;
	struct TSoftClassPtr<UObject> InteractFullBounceCurve;
	struct TSoftClassPtr<UObject> InteractFullBounceNormalCurve;
	struct TSoftClassPtr<UObject> InteractEmptyBounceCurve;
	struct TSoftClassPtr<UObject> InteractEmptyBounceNormalCurve;
	float ConversationSoundRange;
	struct TSoftClassPtr<UObject> DefaultLobbyBackgroundLevel;
	struct TSoftClassPtr<UObject> PhysicsObjectAssetSetupData;
	struct TSoftClassPtr<UObject> PhysicsObjectImpactDamageTemplateGE;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameDeathPenalty : public UDataAsset
{
public:
	float PercentResourcesToDrop;
	float PercentWeaponsToDrop;
	float PercentCraftingIngredientsToDrop;
	float PercentConsumablesToDrop;
	float PercentAmmoToDrop;
	float PercentResourcesToRecover;
	float PercentWeaponsToRecover;
	float PercentCraftingIngredientsToRecover;
	float PercentConsumablesToRecover;
	float PercentAmmoToRecover;
	int MinResourcesToKeep;
	int MinWeaponsToKeep;
	int MinCraftingIngredientsToKeep;
	int MinConsumablesToKeep;
	int MinAmmoToKeep;
	struct CurveTableRowHandle RespawnDelays;
	class UClass* RespawnDelayOverTime;
	float MaxRespawnDelay;
	float MinSelfResurrectDelay;
	bool bUseRegenHealthOnRespawn;
	float PercentHealthOnRespawn;
	float PercentShieldOnRespawn;
	float PercentStaminaOnRespawn;
	float RespawnDurabilityPenalty;
	float SelfResurrectDurabilityPenalty;
	float TeammateResurrectDurabilityPenalty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeatureAction_DefaultBRMapOverride : public GameFeatureAction
{
public:
	struct TSoftClassPtr<UObject> OverrideMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeatureAction_PhysicsObjectSetupData : public GameFeatureAction
{
public:
	class UClass* PhysicsObjectSetupAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeatureAction_PrimaryAssetBehaviors : public GameFeatureAction
{
public:
	TArray<struct FName> AdditionalPrimaryAssetTypesToLoad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeaturePluginManager : public GameFeaturesProjectPolicies
{
public:
	TArray<class UClass*> FortObservers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_GameplayCueObserver : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_PlaylistObserver : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_LevelOverlayObserver : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_ExternalContent : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_AIGoals : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_PreloadItemDefsInAthena : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_EquipAbilitySet : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_HotfixManager : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameFeature_RefreshProfileWhenFeatureActivated : public GameFeatureStateChangeObserver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeBase : public PlayspaceGameMode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameMode : public FortGameModeBase
{
public:
	bool bDisableCloudStorage;
	bool bTravelInitiated;
	struct FString CurrentWUID;
	struct FString CurrentBucketId;
	int CurrentPlaylistId;
	struct FName CurrentPlaylistName;
	struct FString MatchmakingRegionId;
	struct FString MatchmakingLinkCode;
	struct FString CurrentZoneInstanceId;
	int ZoneIndex;
	bool bPlayersInvincible;
	bool bKickIdlers;
	float MaxIdleTime;
	float NoScoreKickTime;
	bool bEnableNotifications;
	bool bEnableReplicationGraph;
	struct TSoftClassPtr<UObject> DefaultDeathPenaltyData;
	class UClass* DeathPenaltyData;
	class UClass* DeathPenaltyDataOverride;
	class UClass* FortGameSession;
	struct FString GameModeSessionString;
	bool bIsAutomatedTest;
	struct TSoftClassPtr<UObject> DefaultPawnClassStringRef;
	class UClass* MissionManagerClass;
	struct GameplayTagContainer GameModeGameplayTags;
	bool bContainersForceTossLoot;
	bool bOverrideRotationOnRestartPlayer;
	EFortGameplayState PendingTimerState;
	bool bDBNOEnabled;
	bool bWorldIsReady;
	bool bTheaterDataIsReady;
	int TheaterSlot;
	float GameplayServerHitchThreshold;
	float MovementTimeDiscrepancyHitchCooldown;
	float AbilityRefireHitchCooldown;
	bool bCheckWeaponTracesForPlayerBuiltWalls;
	class UClass* MatchHeartbeatManager;
	TArray<class UClass*> ActiveAwards;
	struct GameplayTagContainer GameContextTags;
	class UClass* SharedMissionLists;
	class UClass* TeamInfoClass;
	TArray<double> FrameTimeWithoutSleepHistogramBucketsMs;
	TArray<struct CumulativeFrameTimeWithoutSleepLimits> CumulativeFrameTimeWithoutSleepLimits;
	TArray<double> GameNetDriverTickFlushCostPerClientBucketsMicroSec;
	TArray<double> DemoNetDriverTickFlushTimeHistogramBucketsMs;
	TArray<double> CPUTimeBuckets;
	TArray<double> CPUPercentPerCoreBuckets;
	TArray<double> ActorsStarvedByClassTimeHistogramBuckets;
	TArray<struct FString> StarvedActorClassList;
	class UClass* MissionGenerationManager;
	class UClass* FlushManager;
	bool bAlwaysFlushMMREndZoneEvents;
	bool bOverrideQuickBars;
	struct QuickBarData QuickBarDefinitions;
	TArray<class UClass*> ConnectedPlayerControllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeArtAutomation : public FortGameModeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameMode_InGame : public FortGameMode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeZone : public FortGameMode_InGame
{
public:
	struct FScriptMulticastDelegate OnPlayerLogin;
	bool bSpawnAllStuff;
	bool bDisableAI;
	bool bInitBeaconAtInitGame;
	int OverrideAIDirectorIndex;
	class UClass* ActiveSpawnPad;
	bool bDisableVoiceChat;
	struct FString ReplayStreamerOverride;
	class UClass* AIDirector;
	class UClass* AIGoalManager;
	int EndOfZoneRemainTime;
	class UClass* TaggedActorsManager;
	class UClass* BuildingOctreeManager;
	bool bUseAllSocketsInSpawnPad;
	bool bAllowSpectateAfterDeath;
	bool bForceSpectateAfterDeathRegardlessOfRespawnTime;
	struct ScalableFloat SpectateAfterDeath_DelayFirst;
	float SpectateAfterDeath_DelayRepeating;
	TArray<struct HotfixVolumePlacement> HotfixBehaviorVolumes;
	class UClass* VisibilityManagerClass;
	bool bCriticalMissionEligible;
	Unknown ZoneLootNamedWeightsMapOverride;
	TArray<struct FName> XboxSubsystemNames;
	class UClass* PetManager;
	TArray<struct ItemAndCount> StartingItems;
	bool bAllowEnemyAIWorldItemLootDrops;
	bool bAllowEnemyAIItemCacheLootDrops;
	bool bAllowContainerItemCacheLootDrops;
	struct FScriptMulticastDelegate OnHandleZonePeriodicReport;
	struct FScriptMulticastDelegate OnHandleMatchHasStarted;
	bool bTrustXboxPlatformId;
	ESubGame AssociatedSubGame;
	struct SlateBrush BluGloMiniMapIconBrushOverride;
	bool bTryToSpawnWithinStormShield;
	bool bSupportOneHitBuildingActorRecycling;
	bool bOneHitResourcesGoToOwner;
	float StormWindInactiveMagnitudeScalar;
	float StormWindActiveMagnitudeScalar;
	TArray<struct Vector> PlayerStartLocationOverrides;
	bool bEnableLongRangeAutoPickup;
	float LongRangeAutoPickupInterval;
	float LongRangeAutoPickupRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGamePvPBase : public FortGameModeZone
{
public:
	byte NumTeams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeAthena : public FortGamePvPBase
{
public:
	TArray<class UClass*> SortedStormCapPrivateTeams;
	float DelayForStormCapWarning;
	float DelayForStormCapDamage;
	struct ScalableFloat TimeBetweenStormCapDamage;
	struct ScalableFloat StormCapDamagePerTick;
	struct FScriptMulticastDelegate OnMapInfoInitialized;
	bool bMapInfoInitialized;
	struct FScriptMulticastDelegate OnSafeZoneUpdated;
	bool bAllGameplayModifiersRegistered;
	bool bAlwaysDBNO;
	struct ScalableFloat KillStreakTime;
	TArray<class UClass*> ActorsToClear;
	TArray<class UClass*> ClearAreaIgnoreActors;
	bool bNeverSpawnPickupsOnPawnDeath;
	bool bLoadTestCosmetics;
	bool bDisable3DVoiceChat;
	bool bAllowDamageInWarmup;
	TArray<struct FName> ExcludedDefaultSupplyDrops;
	TArray<struct FName> ExcludedLTMSupplyDrops;
	TArray<struct FName> ExcludedLTMSpawnActors;
	TArray<struct TimeOfDayOverride> TimeOfDayOverrideList;
	bool bDisableGCOnServerDuringMatch;
	TArray<struct GCSettingsOverride> GCSettingsOverrideList;
	bool bPlaylistHotfixChangedGCDisabling;
	float PlaylistHotfixOriginalGCFrequency;
	bool bUseSkydiveLeader;
	bool bUseSkydiveLeaderInSplitScreen;
	float OverloadedInitialConnectTimeout;
	float FailedToStartMatchTimeout;
	float OrphanedServerCheckTime;
	bool bEnableRecentPlayersUpdates;
	float DefaultWarmupEarlyRequiredPlayerPercent;
	bool bDisableStormCapSystem;
	struct ScalableFloat PlaylistSupportsStormCapSystem;
	bool bStormCapSystemEnabled;
	struct ScalableFloat PlaylistEnableBots;
	struct ScalableFloat PlaylistEnableBotSpectate;
	struct ScalableFloat PlaylistEnableBotDynamicELO;
	struct TSoftClassPtr<UObject> BattleLabTeleporterManagerClass;
	class UClass* BattleLabTeleporterManager;
	bool bAlwaysIncludeDisconnectedTeammates;
	bool bIncludeDisconnectedTeammatesFromAircraftPhase;
	EForceKickAfterDeathMode ForceKickAfterDeathMode;
	float ForceKickAfterDeathTime;
	bool bIgnoreCanSpectateAfterDeathToken;
	int CreativeModeGracefulShutdownTime;
	TArray<struct HotfixVolumePlacement> HotfixKillVolumes;
	TArray<struct HotfixVolumePlacement> HotfixBlockingVolumes;
	TArray<struct HotfixVolumePlacement> HotfixUndergroundVolumes;
	TArray<struct FName> DisableMatchStatsReportingPlaylists;
	TArray<struct FName> DisableProgressionReportingPlaylists;
	TArray<class UClass*> Aircrafts;
	int MaxPlayerCount;
	TArray<class UClass*> AlivePlayers;
	TArray<class UClass*> AliveBots;
	TArray<int> TeamAlivePlayers;
	int WarmupRequiredPlayerCount;
	float WarmupCountdownDuration;
	float WarmupEarlyCountdownDuration;
	bool bSafeZoneActive;
	bool bSafeZonePaused;
	class UClass* GE_OutsideSafeZone;
	class UClass* GE_OutsideSafeZoneCN;
	class UClass* SafeZoneIndicatorClass;
	class UClass* MegaStormManagerClass;
	struct ScalableFloat SkyTubeDisablePhase;
	int SafeZonePhase;
	class UClass* SafeZoneIndicator;
	TArray<struct Vector> SafeZoneLocations;
	bool bSafeZoneLocationsInitialized;
	float EndGameKickPlayersDelay_NoIGMM;
	float EndGameKickPlayersDelay_IGMM;
	int EventStatSubmitAttempts;
	class UClass* MegaStormManager;
	struct FString VoiceChatChannelPositional;
	bool bUseRandomTimeOfDay;
	class UClass* AISettings;
	class UClass* ServerBotManagerClass;
	TArray<class UClass*> LiveSpectators;
	class UClass* SpectateAFriendPlayerControllerClass;
	class UClass* LiveBroadcastPlayerControllerClass;
	TArray<struct FName> PlatformOSSNamesToUploadStatsV2;
	Unknown LeaderboardStatsDefaultOssInputTypes;
	TArray<struct FName> BlacklistedMatchmakingBackfillPlaylists;
	TArray<struct FName> PlaylistsToRemoveSquadMappingOnLogout;
	bool bEnableMatchmakingRatingUpdateV2;
	bool bFlightPathInitialized;
	float ScorePerMinuteAlive;
	float ScoreMaxMinutesAliveCounted;
	float ScoreForGettingAtLeastOneKill;
	float ScorePerScaledTeamKill;
	float ScoreForFirstRevive;
	float ScoreForSubsequentRevives;
	int MaxAdditionalRevivesToScore;
	struct ScorePlacementTable ScorePlacementTables;
	float ScoreMultiplier;
	int MaxActiveAIActors;
	bool bLockMobilePlayersToTouchInSwitchPool;
	bool bAllCosmeticsLoaded;
	TArray<class UClass*> SkyDiveContrailCosmetics;
	int SkyDiveContrailLoadTestIndex;
	TArray<class UClass*> GliderCosmetics;
	int GliderLoadTestIndex;
	TArray<class UClass*> PickaxeCosmetics;
	int PickaxeLoadTestIndex;
	TArray<class UClass*> CharacterCosmetics;
	int CharacterLoadTestIndex;
	TArray<class UClass*> HatCosmetics;
	int HatLoadTestIndex;
	TArray<class UClass*> BackpackCosmetics;
	int BackpackLoadTestIndex;
	TArray<class UClass*> DanceCosmetics;
	int DanceLoadTestIndex;
	TArray<class UClass*> VictoryPoseCosmetics;
	int VictoryPoseLoadTestIndex;
	TArray<class UClass*> MapMarkerCosmetics;
	int MapMarkerLoadTestIndex;
	int PetLoadTestIndex;
	TArray<class UClass*> ConsumableEmoteCosmetics;
	TArray<class UClass*> LoadingScreenCosmetics;
	TArray<class UClass*> BattleBusCosmetics;
	TArray<struct SupplyDropSpawnData> SupplyDropSpawnDataList;
	TArray<struct BuildingGameplayActorSpawnData> BuildingGameplayActorSpawnData;
	struct ExitCraftSpawnData ExitCraftSpawnData;
	int LastSpawnedSupplyDropType;
	class UClass* SpawningPolicyManager;
	class UClass* ServerBotManager;
	TArray<struct AthenaVehicleOverride> AthenaVehicleOverrides;
	TArray<class UClass*> ItemWrapCosmetics;
	TArray<class UClass*> MusicPacks;
	TArray<class UClass*> CharmCosmetics;
	class UClass* TimeOfDayManagerGameplayOverride;
	TArray<struct FortSpawnActorData> SpawnActorDataList;
	TArray<struct FortCustomRepNodeClassMapping> GlobalRepGraphNodeClassesToAdd;
	class UClass* MutatorListComponent;
	TArray<class UClass*> CoreGameModeModifiers;
	TArray<struct FName> SupportedAthenaLootTierGroups;
	Unknown RedirectAthenaLootTierGroups;
	struct ScalableFloat StormCampingInitialDelayTime;
	struct ScalableFloat StormCampingIncrementTimeAfterDelay;
	struct ScalableFloat StormCampingDamageMultiplier;
	bool bEnableCompetitiveMissingPlayerMatchInvalidation;
	float StartAircraftPhaseRequiredAlivePlayersPercent;
	float EndAircraftPhaseRequiredAlivePlayersPercent;
	bool bEnableCompetitiveDDoSDetectionMatchInvalidation;
	struct FString DDoSDetectionMatchInvalidationSeverity;
	int DDoSDetectionMatchInvalidationCount;
	float DDoSDetectionMatchInvalidationEvalDurationSeconds;
	TArray<struct FString> ReticulatedSplineDefinitions;
	bool bReticulateSplineKeysOnStart;
	TArray<struct AthenaStreamIdOverride> ReticulatedSplineIds;
	TArray<struct TSoftClassPtr<UObject>> GameFeatureLootTierData;
	TArray<struct TSoftClassPtr<UObject>> GameFeatureLootPackageData;
	TArray<Unknown> GameFeaturesStreamingRangedWeaponData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModePvE : public FortGameModeZone
{
public:
	bool bIdleKickEnabledByConfig;
	bool bIdleKickEnabledByBlueprint;
	bool bOnlyIdleKickPublicMatches;
	bool bResetDefaultIdleTimeWhenNoLongerSolo;
	bool bAnyMovementNotIdleWhilePrivate;
	bool bRestrictMaxIdleTime;
	float RestrictedMaxIdleTime;
	bool bSendIdleAnalytics;
	bool bWaitForAircraft;
	bool bBuildingContainersStartAlreadySearched;
	bool bSpawnLootForBuildingContainersThatStartAlreadySearched;
	TArray<class UClass*> BuildingContainersThatRequireSearching;
	bool bSpawnWeaponsWithMaxPerks;
	bool bSpawnTrapsWithMaxPerks;
	bool bUseHighPerkSlotValues;
	bool bEnableBigBenPvE;
	struct DateTime BigBenPvE;
	float BigBenPvEAdjust;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeBoss : public FortGameModePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeBR : public FortGameModeAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeDeployableBase : public FortGameModePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeEmptyDedicated : public FortGameMode
{
public:
	class UClass* FortGameSessionDedicated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeEndless : public FortGameModePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeFrontEnd : public FortGameMode
{
public:
	class UClass* TheaterMapViewer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameModeMinimal : public AGameModeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeOutpost : public FortGameModePvE
{
public:
	TArray<struct FortItemEntry> OwnerItemRefundCache;
	struct FortOutpostCoreInfo CurrentCoreInfo;
	bool bSavePlayerBuiltStructuresAtAllTimes;
	int MinTotalContinuousOneHitResourcesDistributedForForcedSave;
	int MaxContinuousOneHitResourcesDistributedBeforeForcedSave;
	bool bEnableLargeScaleDisassemblyForcedSaves;
	bool bEnableUnsupportedStructureDisassembly;
	bool bCheckNavMeshAvailability;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickupAthena : public AFortPickup
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameModePickup : public AFortPickupAthena
{
public:
	struct ScalableFloat InteractionTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameModePickup_Wax : public AFortGameModePickup
{
public:
	bool bIsFirstGeneration;
	int AmountOfTokens;
	struct ScalableFloat HeightAboveTerrianDropPickupAt;
	struct ScalableFloat HeightAboveTerrainPickupLandAt;
	struct ScalableFloat RandomTossAngleTowardsCenter;
	struct ScalableFloat TimeUntilDespawn_OutsideStorm;
	struct ScalableFloat TimeUntilDespawn_InsideStorm;
	struct ScalableFloat DrawOnCompassDistance;
	struct SlateBrush DrawOnCompassBrush;
	struct SlateBrush DrawOnMapBrush;
	struct FText UseInteractText_SingleCoin;
	struct FText UseInteractText_MultipleCoins;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameModeSpecialLocation : public AActor
{
public:
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeStarlight : public FortGameModePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameModeSurvival : public FortGameModePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameMode_InGame_Custom : public FortGameMode_InGame
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGamepadSettingsV2 : public UDataAsset
{
public:
	class UClass* LookInputCurve;
	struct ScalableFloat LookAdsEnterEaseTime;
	struct ScalableFloat LookAdsExitEaseTime;
	struct ScalableFloat LookAdsEaseExponent;
	struct ScalableFloat LookBoostDeflection;
	struct ScalableFloat LookBoostAccelerationTime;
	struct ScalableFloat LookBoostAccelerationTimeAds;
	struct ScalableFloat LookEaseTime;
	struct ScalableFloat LookBuildModeMultiplier;
	struct ScalableFloat LookEditModeMultiplier;
	struct ScalableFloat LookHorizontalSpeed;
	struct ScalableFloat LookVerticalSpeed;
	struct ScalableFloat LookHorizontalSpeedAds;
	struct ScalableFloat LookVerticalSpeedAds;
	struct ScalableFloat LookHorizontalBoostSpeed;
	struct ScalableFloat LookVerticalBoostSpeed;
	struct ScalableFloat LookHorizontalBoostSpeedAds;
	struct ScalableFloat LookVerticalBoostSpeedAds;
	struct FortAimAssist2D_Settings AimAssistSettings;
	struct FortFollowCam_Settings FollowCamSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGamepadSettings : public UDataAsset
{
public:
	class UClass* GamepadLookCurve;
	class UClass* GamepadLookSensitivityCurve;
	struct Vector2D GamepadLookScale;
	float GamepadLookScaleDownsights;
	float GamepadLookScaleScope;
	float GamepadLookScaleDownsightsDecayTime;
	float AimAssistStrength;
	float AimAssistStrengthDownsights;
	float AimAssistStrengthDBNO;
	float GamepadLookAccelTime;
	float GamepadLookDecelTime;
	float AimAssistPullStrength;
	float AimAssistPullMaxRate;
	float AimAssistPullRampUpTime;
	float AimAssistPullDecayTime;
	float AimAssistInitialDownsightStrength;
	float AimAssistInitialDownsightTime;
	float SlowMinDistance;
	float SlowMinStrength;
	float SlowMaxDistance;
	float SlowMaxStrength;
	float SlowDecayTime;
	float EditModePullStrengthStationary;
	float EditModePullStrengthMovingNewTile;
	float EditModePullStrengthMovingWithinTile;
	float EditModePullMinDistance;
	float EditModePullMaxDistance;
	float EditModePullScaleFlat;
	float EditModePullMaxRate;
	float EditModeSlowMinDistance;
	float EditModeSlowMinStrength;
	float EditModeSlowMaxDistance;
	float EditModeSlowMaxStrength;
	struct FortAbilityTargetSelection AimAssistTargetSelection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Action : public FortGameplayAbility
{
public:
	struct FName ActionName;
	TArray<struct FName> ExtraActionNames;
	bool bActivateOnInputPress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_AIPortal : public FortGameplayAbility_Action
{
public:
	struct Vector PortalDirection;
	float PortalLifespan;
	TArray<class UClass*> NoCollisionBuildings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_AITurnTransition : public FortGameplayAbility
{
public:
	struct GameplayTagContainer RequiredWeaponTags;
	float MinTurnTransitionYawAngle;
	TArray<struct TurnTransitionData> TransitionPriorityList;
	bool bPickedTurnTransitionUsesMontage;
	struct FName PickedMontageSectionName;
	float PickedTurnYawRotationRate;
	float StartingDesiredRotationYawDelta;
	float PickedTurnTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_CarryPlayer : public FortGameplayAbility_Action
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_CeilingFallingTrap : public FortGameplayAbility
{
public:
	class UClass* TrapProjectileClass;
	class UClass* TrapCostClass;
	struct GameplayTag ActivateTrapTag;
	struct GameplayTag DelayBeginTag;
	struct GameplayTag ReloadBeginTag;
	float ProjectileSpawnDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Crouch : public FortGameplayAbility_Action
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_EyeOfTheStorm : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Jump : public FortGameplayAbility_Action
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_JumpBoostPack : public FortGameplayAbility
{
public:
	EJumpBoostPackState ServerCurrentState;
	EJumpBoostPackState CurrentState;
	float DelayRegenStartTime;
	bool bAbilityMarkedForPendingKill;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Land : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_LeadingTeam : public FortGameplayAbility
{
public:
	struct ScalableFloat MinLeadToApplyAbilities;
	struct ScalableFloat MaxLeadToRemoveAbilities;
	class UClass* LeaderAbilitySetToApply;
	struct ScalableFloat bApplyAbilitiesOnLand;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_MedicPack : public FortGameplayAbility
{
public:
	EMedicPackState ServerCurrentState;
	EMedicPackState CurrentState;
	float DelayRegenStartTime;
	bool bAbilityMarkedForPendingKill;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_MissileBattery : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_ObserveDuels : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_OstrichJump : public FortGameplayAbility_Jump
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_PlayConversation : public FortGameplayAbility
{
public:
	class UClass* ConversationToPlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_PossessProp : public FortGameplayAbility_Action
{
public:
	class UClass* DefaultAllowedPropTable;
	class UClass* AllowedPropTable;
	TArray<struct TSoftClassPtr<UObject>> AllowedPropClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_RangedWeapon : public FortGameplayAbility
{
public:
	float FiringNoiseRange;
	float FlyByNoiseRange;
	class UClass* CurrentWeapon;
	struct GameplayTagContainer WeaponFireCue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Reload : public FortGameplayAbility
{
public:
	int NumTimesReloaded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_ShowFutureStormCircle : public FortGameplayAbility
{
public:
	struct ScalableFloat NumCirclesToShowBeforeEnding;
	struct ScalableFloat TrackShownCirclesDelay;
	struct ScalableFloat MaximumDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPawnSpinParamsObj : public UObject
{
public:
	bool bReplicatedFlag;
	struct FortPawnSpinParams SpinParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Spin : public FortGameplayAbility_Action
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Sprint : public FortGameplayAbility_Action
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_SpyTech : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_SpyTech_GrantItem : public FortGameplayAbility_SpyTech
{
public:
	struct PrimaryAssetId ItemToGrantAssetID;
	struct ScalableFloat NumberOfItemToGrant;
	bool bSkipUpgradeCheck;
	bool bRechargeStackOnGrant;
	class UClass* FortPlayerController;
	class UClass* FortPlayerPawn;
	TArray<struct SpyTechUpgradeData> UpgradeData;
	struct SpyTechLevelUpgradeData LevelUpgradeData;
	struct FString TextItemSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_SpyTech_GrantItemMulti : public FortGameplayAbility_SpyTech_GrantItem
{
public:
	struct TSoftClassPtr<UObject> GrantableItemListTable;
	struct ScalableFloat ActivationUpdateTime;
	struct TimerHandle ActivationUpdateTimeHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_SpyTech_MysteryGun : public FortGameplayAbility_SpyTech_GrantItem
{
public:
	class UClass* LastGrantedItem;
	struct GameplayTag StarterPistolTag;
	struct GameplayTag WeaponTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_SurfaceChange_Sand : public FortGameplayAbility
{
public:
	struct ActiveGameplayEffectHandle SnareGEHandle;
	class UClass* SnareGameplayEffectClass;
	bool bIsPawnOnGround;
	struct ScalableFloat RequiresSandEnabled;
	struct GameplayTag SandEnabledTag;
	struct GameplayTagContainer TagsThatBlockSnare;
	struct ScalableFloat MinAccelerationToPreventSnareStack;
	struct ScalableFloat MaxWaterDepthToApplySnare;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_TractorBeam : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_ZiplineSmashBase : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbilityAthena_HeldObjectComponentPassive : public FortGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbilityAthena_PeriodicItemGrant : public FortGameplayAbility
{
public:
	Unknown ItemsToGrant;
	TArray<struct TimerHandle> ActiveTimers;
	class UClass* OwnerControllerCachedValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayAbilityTooltip : public UFortTooltip
{
public:
	struct GameplayAbilitySpec CachedSpec;
	class UClass* CachedAbilityInstance;
	class UClass* CachedContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueManager : public GameplayCueManager
{
public:
	TArray<struct FString> BROnlyGameplayCueNotifyPaths;
	TArray<struct FName> AdditionalAlwaysLoadedCueTags;
	Unknown PreloadedCues;
	Unknown AlwaysLoadedCues;
	bool bClientDelayLoadGameplayCues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotify_Burst : public GameplayCueNotify_Static
{
public:
	struct FortGameplayCueSpawnCondition DefaultCondition;
	struct FortGameplayCueAttachInfo DefaultAttachment;
	struct FortBurstEffectData BurstEffectData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotify_BurstLatent : public FortGameplayCueNotify_Actor
{
public:
	struct FortBurstEffectData BurstEffectData;
	struct FortGameplayCueSpawnResult BurstResult;
	float MaxBurstLatentLifetime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotify_Looping : public GameplayCueNotify_Actor
{
public:
	class UClass* StartSound;
	class UClass* StopSound;
	class UClass* StartParticleSystem;
	struct FortParticleSystemParamBucket StartParticleSystemParameters;
	class UClass* StopParticleSystem;
	struct FortParticleSystemParamBucket StopParticleSystemParameters;
	struct FName AttachPoint;
	bool bStayAttached;
	bool bSnapToAttachPointAndPreserveWorldRotation;
	bool bUseHitResult;
	bool bUseWeapon;
	bool bIgnoreRotation;
	struct GameplayTagContainer HUDElementTag;
	EPSCPoolMethod PoolingMethod;
	bool bIsValid;
	class UClass* AudioComponent;
	class UClass* ParticleSystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotify_Simple : public GameplayCueNotify_Static
{
public:
	class UClass* StartSound;
	class UClass* StartParticleSystem;
	struct FortParticleSystemParamBucket StartParticleSystemParameters;
	struct FName AttachPoint;
	bool bStayAttached;
	bool bUseHitResult;
	bool bUseWeapon;
	bool bIgnoreRotation;
	bool bUseUnsmoothedNetworkPosition;
	EPSCPoolMethod PoolingMethod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyAthena_AIAlertState : public FortGameplayCueNotify_Loop
{
public:
	class UClass* SpriteMeshComponent;
	struct FName SpriteMeshAttachSocketName;
	struct Transform SpriteMeshRelativeTransform;
	int FillIconDataFloatIndex;
	float StealthMeterStartValue;
	int CurrentGameplayEffectLevel;
	float CurrentStealthMeterPctFilled;
	class UClass* CurrentAlertStateComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyLoop_AbductionWarning : public FortGameplayCueNotify_Loop
{
public:
	float MaxDistance;
	struct FName VariableName;
	struct FName PlayerSocket;
	class UClass* TargetActor;
	class UClass* WarningFXSystemComponent;
	class UClass* WarningFXNiagaraComponent;
	struct Vector WarningFXOriginLocation;
	class UClass* WarningAudioComponent;
	class UClass* RadialForceLoop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyLoop_LowGravity : public FortGameplayCueNotify_Looping
{
public:
	float InterpDelta;
	float TargetDelta;
	class UClass* PlayerPawn;
	float StartTime;
	float Duration;
	float ExpirationTellDuration;
	float TargetDelta_FallingRangeInput_Start;
	float TargetDelta_FallingRangeInput_End;
	float TargetDelta_FallingRangeOutput_Start;
	float TargetDelta_FallingRangeOutput_End;
	float InterpSpeedHigh;
	float InterpSpeedLow;
	float SoundMultiplier_RangeOutput_Start;
	float SoundMultiplier_RangeOutput_End;
	struct FName SoundParam_FallSpeed;
	struct FName SoundParam_FallSpeedInv;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyLoop_PhysicsObjectRolling : public FortGameplayCueNotify_Loop
{
public:
	class UClass* LayeredAudioComp;
	float MaxRollSpeed;
	class UClass* PhysicsObject;
	struct HitResult CachedHitResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyLoop_SandBurrow : public FortGameplayCueNotify_Loop
{
public:
	class UClass* LayeredAudioComp;
	struct GameplayCueParameters CachedGCParameters;
	class UClass* FXSpeedLinesComp;
	class UClass* PlayerPawn;
	float CurrentSpeed;
	bool bShouldShowTrailFX;
	bool bShouldShowSpeedLines;
	struct ScalableFloat MinimumSpeedToDamageBuildings;
	struct ScalableFloat MinimumSpeedToShowTrailFX;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyLoop_SoundIndicator : public FortGameplayCueNotify_Loop
{
public:
	EFortSoundIndicatorTypes SoundIndicatorType;
	float SoundIndicatorMaxDistance;
	TArray<EFortTeamAffiliation> ShowAffiliations;
	class UClass* SoundIndicatorIconOverride;
	struct LinearColor SoundIndicatorTintOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCueNotifyLoop_ZiplineTravel : public FortGameplayCueNotify_Loop
{
public:
	class UClass* LayeredAudioComp;
	struct GameplayCueParameters CachedGCParameters;
	class UClass* PlayerPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayCueFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayDataTrackerComponent : public GameFrameworkComponent
{
public:
	bool bShouldReplicateEvents;
	struct FScriptMulticastDelegate OnChangedHasAnyEventValue;
	struct ScalableFloat TrackerEnabled;
	bool bUseFirstPlayerControllerViewTargetAsAvatarActor;
	TArray<struct FortGameplayDataTrackerEventConfiguration> EventsToTrack;
	TArray<struct FortGameplayDataTrackerActorStateGroupConfig> ActorStateGroupsToTrack;
	TArray<struct FortGameplayDataTrackerAccumulation> AccumulationsToTrack;
	TArray<struct FortGameplayDataTrackerEventConfiguration> FullEventsToTrackList;
	TArray<struct FortGameplayDataTrackerEventValue> ReplicatedEventValues;
	TArray<struct FortGameplayDataTrackerEventValue> EventValues;
	TArray<struct FortGameplayDataTrackerAccumulation> DataAccumulations;
	TArray<struct FortGameplayDataTrackerAccumulation> PendingDataAccumulationRegistrations;
	class UClass* CachedGameState;
	float VislogFrequencySeconds;
	float LastVislogTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayDataTrackerComponentManager : public GameStateComponent
{
public:
	struct FScriptMulticastDelegate OnDataTrackerComponentRegistered;
	struct FScriptMulticastDelegate OnDataTrackerComponentUnRegistered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayEffectData : public UDataAsset
{
public:
	class UClass* PawnHideGameplayEffectDefault;
	struct GameplayTag GameplayCueDamagePhysicalExplosionTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayEffectUIData : public GameplayEffectUIData
{
public:
	struct FText DisplayName;
	struct FText Description;
	struct FString TooltipName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayFeedbackEventData : public UDataAsset
{
public:
	TArray<struct GameplayFeedbackEventInfo> FeedbackEventInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayMessageComponentBase : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnChannelIdsReplicated;
	struct GameplayTagContainer FilterTags;
	struct FText MessageName;
	struct FText MessageDescription;
	struct GameplayTagContainer ChannelIds;
	int WeightOffset;
	class UClass* EditWidget;
	struct GameplayTagContainer Tags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayMessageDispatcherComponent : public UActorComponent
{
public:
	int NumBoundReceivers;
	Unknown ReceiverChannelList;
	int NumBoundTriggers;
	Unknown TriggersChannelList;
	TArray<struct FortTriggeredGameplayMessage> EnqueuedMessages;
	struct FortTriggeredGameplayMessage ActiveMessage;
	struct FortGameplayMessageReceiverList ActiveMessageReceivers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayModifierItemDefinition : public FortAccountItemDefinition
{
public:
	TArray<struct FortGameplayEffectDeliveryInfo> PersistentGameplayEffects;
	TArray<struct FortAbilitySetDeliveryInfo> PersistentAbilitySets;
	TArray<struct TSoftClassPtr<UObject>> Mutators;
	bool bHiddenInUI;
	struct GameplayTagContainer DisallowedPlaylistNameTags;
	struct GameplayTagContainer DynamicPlaylistNameTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayModMagnitudeCalculation : public GameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayMutator_AIEncounterModifierTags : public AFortGameplayMutator
{
public:
	struct GameplayTagContainer GameplayTags;
	TArray<struct FortEncounterMutatorReplacedTag> TagsToReplace;
	EFortMissionType RequiredEncounterAssociatedMissionType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayMutator_AILevelVariance : public AFortGameplayMutator
{
public:
	float MinVariance;
	float MaxVariance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayMutator_DestroyMapActors : public AFortGameplayMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayMutator_SetCVars : public AFortGameplayMutator
{
public:
	TArray<struct SetCVarParams> CVarsToSet;
	TArray<struct SetCVarParams> CVarsToSet_ClientOnly;
	TArray<struct SetCVarParams> CVarsToSet_ServerOnly;
	TArray<struct SetCVarParams> CVarsToSetBack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayReceiverMessageComponent : public UFortGameplayMessageComponentBase
{
public:
	struct FScriptMulticastDelegate OnGameplayMessageReceived;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayTagBuildingActor : public ABuildingActor
{
public:
	struct GameplayTagContainer TagsToApplyOnSave;
	int XGridCells;
	int YGridCells;
	int ZGridCells;
	class UClass* BoxComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayTagContainer : public UDataAsset
{
public:
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayTagData : public UDataAsset
{
public:
	struct GameplayTag EnergyDamageTag;
	struct GameplayTag AllowHarvestingTools;
	struct GameplayTag EditingBuildingPermissionForcedTrue;
	struct GameplayTag DamageDoesNotInterruptInteractionTag;
	struct GameplayTagQuery PreventDamageFromInterruptingInteractionsTagQuery;
	struct GameplayTag MainStWCampaignTheaterTag;
	struct GameplayTag AIRangeToAutomaticallyAddEnemyPawnGoalsTag;
	struct GameplayTagContainer QuickbarUnslottableItemTags;
	struct GameplayTagContainer IgnoreMovementCancellableActionTags;
	struct GameplayTag FakePawnTag;
	struct GameplayTag StarlightTheaterTag;
	struct GameplayTag NativeActionEmote;
	struct GameplayTag PawnHideTagCategory;
	struct GameplayTag ForceAutoRunOnTag;
	struct GameplayTag DropHeldObjectOnPlacementInputTag;
	struct TierTags CosmeticUnlockRequirementTagsForRarityAndTier;
	struct GameplayTag CosmeticSubGameExclusionTags;
	struct GameplayTagQuery AllowShadowStanceMaterialsTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameplayTagVolume : public AVolume
{
public:
	struct GameplayTagContainer TagsToApplyOnSave;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayTagVolumeInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameplayTriggerMessageComponent : public UFortGameplayMessageComponentBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameSession : public AGameSession
{
public:
	struct FortHostSessionParams CurrentSessionParams;
	class UClass* ReservationBeaconHostClass;
	class UClass* SpectatorBeaconHostClass;
	class UClass* ReservationBeaconHost;
	class UClass* LobbyBeaconHost;
	class UClass* SpectatorBeaconHost;
	TArray<struct FortDisconnectedPlayerReservation> DisconnectedPlayerReservations;
	class UClass* ContentBeaconHost;
	TArray<struct PlayerReservation> PlayersToRegister;
	float BulkUnregisterTimerDelay;
	int MaxBroadcasters;
	float DisconnectedReservationTimeout;
	bool bShouldServerForcePartnerId;
	struct FString ServerForcePartnerId;
	bool bEnableMeshNetwork;
	TArray<struct FString> DisabledMeshNodeTypes;
	TArray<struct FString> DisabledMeshRegions;
	class UClass* MeshBeaconHost;
	class UClass* MeshBeaconHostObject;
	class UClass* MeshBeaconClient;
	float RetryMeshConnectDelay;
	float MaxMeshConnectDelay;
	float MeshNetworkServerStatusEventRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameSessionDedicated : public AFortGameSession
{
public:
	bool bEnforceCrossplayRestrictions;
	bool bAllowPS4InMixedConsole;
	TArray<struct FName> XboxSubsystemNames;
	float HotfixCheckTimer;
	float HotfixCheckVariance;
	float DataAssetDirectoryUpdateCheckTimer;
	float DataAssetDirectoryUpdateCheckVariance;
	float ReservationAbandonmentTime;
	float ConsoleSessionRetryWaitSeconds;
	EServerManifestOutputFormat ServerManifestOutputFormat;
	struct FString ServerManifestDestination;
	float IdleResetShortTimer;
	TArray<struct ClientIdRestrictions> ClientIdRestrictions;
	TArray<struct FString> CalendarEventsRequiringNewForkedMasterProcess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameSessionDedicatedAthena : public AFortGameSessionDedicated
{
public:
	bool bDownloadEventsAfterHotfixCheck;
	float ReconnectToMMSDelay;
	float MaxReconnectToMMSDelay;
	struct FString MMSVersionCompatability;
	struct FString MMSTicketURLServer;
	float MMSPingInterval;
	int QueryUserMode;
	bool bAutoConnectToMMS;
	bool bEnableMMSBackfill;
	bool bDisableBackfillDuringGracefulShutdown;
	TArray<struct FName> DisabledPlaylistsDuringGracefulShutdown;
	float PostBackfillAssignmentUpdateDelay;
	bool bEnableWaitingForMatchAssignmentTimeout;
	float WaitingForMatchAssignmentRestartDelay;
	float FullMeshRetryDelay;
	float MeshNetworkGCTimerRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGameSessionDedicatedAthenaInspector : public AFortGameSessionDedicatedAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateBase : public PlayspaceGameState
{
public:
	class UClass* FortTimeOfDayManager;
	class UClass* StormShield;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameState : public FortGameStateBase
{
public:
	struct FString CurrentWUID;
	int ParTime;
	int WorldLevel;
	int CraftingBonus;
	float CurrentReadyToContinueTimer;
	int TeamCount;
	uint32_t GameFlagData;
	class UClass* PoiManager;
	bool bDBNOEnabledForGameMode;
	bool bPlayersAlwaysVisible;
	bool bSkipWorldSave;
	bool bShowLoadingScreenUntilAllLevelAreLoaded;
	bool bFishingCollectionEnabled;
	bool bCharacterCollectionEnabled;
	bool bPlayerRespawningBlocked_Temporarily;
	TArray<struct AdditionalLevelStreamed> AdditionalPlaylistLevelsStreamed;
	int WorldDaysElapsed;
	class UClass* FeedbackManager;
	class UClass* MissionManager;
	class UClass* AnnouncementManager;
	class UClass* ScriptedActionManager;
	class UClass* LobbyGameState;
	class UClass* WorldManager;
	EFortGameplayState GameplayState;
	class UClass* MusicManagerSubclass;
	class UClass* MusicManagerBank;
	class UClass* FortAmbientAudioControllerClass;
	struct FString GameSessionId;
	TArray<class UClass*> ManagedCharMovementComponents;
	TArray<class UClass*> ManagedAnimPawns;
	class UClass* PawnForReplayRelevancy;
	class UClass* RecorderPlayerState;
	TArray<class UClass*> ManagedCharMovementComponentsCopy;
	TArray<struct OnTimeHitInfo> TimeOfDayCallbacks;
	class UClass* VisibilityManager;
	class UClass* FXManager;
	class UClass* WindManager;
	TArray<class UClass*> Teams;
	bool bSkipTeamReplication;
	TArray<struct TeamChangeRequest> PendingTeamChangeRequests;
	bool bAllowPendingTeamChangeRequests;
	struct FScriptMulticastDelegate OnPoiManagerReplicatedEvent;
	class UClass* GlobalAbilityTargetingActor;
	TArray<struct AppliedHomebaseData> AppliedHomebaseDataArray;
	struct GameStateLootInfo LootInfo;
	TArray<struct BuildingContainerDebugInfo> TreasureChestInfos;
	TArray<struct BuildingContainerDebugInfo> AmmoBoxInfos;
	float UnplayableHitchThresholdInMs;
	int MaxUnplayableHitchesToTolerate;
	class UClass* CreativeQuestManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameState_InGame : public FortGameState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateZone : public FortGameState_InGame
{
public:
	int PawnIDCount;
	int WaitingToLeaveZoneTimeLeft;
	float HostilityMeterPercent;
	float IntensityPercent;
	int SpawnPointsCap;
	int SpawnPointsAllocated;
	int MaxTotalAI;
	int MaxEncounterAI;
	int MaxEncounterSP;
	struct ReplicatedMontageMap ReplicatedMontageMap;
	TArray<class UClass*> AllSpawnGroupUpgradeModifierDefs;
	EFortCompletionResult CompletionResult;
	float PlayerBuildingSkillLevel;
	TArray<float> PlayerSharedMaxTrapAttributes;
	TArray<class UClass*> GameplayMutatorObservers;
	struct GameplayTagContainer ExplicitGloballyBlockedAbilityTags;
	bool bInvitesRestricted;
	bool bDBNODeathEnabled;
	uint32_t ServerGameplayTagIndexHash;
	bool bDisconnectOnServerGameplayTagIndexHashMismatch;
	struct FScriptMulticastDelegate OnCompletionResultEvent;
	int TotalPlayerStructures;
	int MaxPlayerStructures;
	bool bGlobalCeaseFire;
	class UClass* GlobalEnvironmentAbilityActor;
	TArray<class UClass*> GlobalGameplayEventListeners;
	struct ActiveGameplayModifierArray ActiveGameplayModifiers;
	bool bSupportRuntimeShutdownOfGameplayModifiers;
	class UClass* StructuralSupportSystem;
	struct DataTableRowHandle ZoneDifficultyInfoRow;
	class UClass* ZoneTheme;
	struct TSoftClassPtr<UObject> MissionGeneratorClass;
	TArray<struct FortItemQuantityPair> MissionRewards;
	TArray<struct FortZoneDifficultyIncreaseRewardData> DifficultyIncreaseRewards;
	struct FortZoneMissionAlertData MissionAlertData;
	TArray<struct SoftObjectPath> ClientPreloadMissionClasses;
	class UClass* ThreatVisualsManager;
	class UClass* ThreatParticleActor;
	bool bDrawRunVariationDebug;
	TArray<class UClass*> PawnVariationList;
	int VariationIndex;
	float GameDifficulty;
	bool bIsGroupContent;
	int DifficultyIncreaseRewardTier;
	bool bAllowedToUpdateBackendDifficulty;
	bool bAllowedToOverrideBackendRewards;
	TArray<class UClass*> AllPlayerBuildableClasses;
	Unknown AllPlayerBuildableClassesIndexLookup;
	struct PlayerBuildableClassContainer PlayerBuildableClasses;
	class UClass* UIMapManager;
	class UClass* CharacterCosmeticManager;
	class UClass* SkinWeightManager;
	struct FScriptMulticastDelegate OnScoreTotalsChanged;
	struct FName ScoringTableRowName;
	int TotalCombatScore;
	int TotalBuildingScore;
	int TotalUtilityScore;
	struct FString TheaterUniqueId;
	struct FString MissionLogDebugString;
	bool bAllowBuildingCostMods;
	bool bFreeBuildingRepairs;
	bool bAllowBuildingAtLayoutRequirements;
	bool bAllowBuildingWithoutLayoutRequirements;
	bool bAllowLayoutRequirementsFeature;
	bool bAllowBuildingThroughBlockingObjects;
	int NumSurvivorsSpawned;
	int NumSurvivorsDead;
	int NumSurvivorsRescued;
	struct FScriptMulticastDelegate OnNumSurvivorsRescuedChangedDelegate;
	EServerStability ServerStability;
	TArray<struct VoteData> GameplayVotesArray;
	class UClass* CreativePortalManager;
	class UClass* CreativeRealEstatePlotManager;
	bool bUseMaxBackpackSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateAthena : public FortGameStateZone
{
public:
	bool bCanBuildOnWaterGlobal;
	bool bBlockBuildOnWaterGlobal;
	struct FScriptMulticastDelegate OnNewContentUpdateMessageRecieved;
	class UClass* AthenaGameDataTable;
	struct FScriptMulticastDelegate OnCurrentPlaylistLoaded;
	bool bPlaylistDataIsLoaded;
	bool bPlaylistDataIsActivelyLoading;
	struct FScriptMulticastDelegate AllWinnersAnnounced;
	struct FScriptMulticastDelegate WinnerInfoDisplayReadyCN;
	struct FScriptMulticastDelegate CountdownTick;
	struct FScriptMulticastDelegate CountdownStarted;
	struct FScriptMulticastDelegate CountdownFinished;
	struct FScriptMulticastDelegate CountdownStopped;
	struct FScriptMulticastDelegate FinalCountdownTick;
	struct FScriptMulticastDelegate FinalCountdownStarted;
	struct FScriptMulticastDelegate FinalCountdownFinished;
	struct FScriptMulticastDelegate CurrentHighScoreUpdated;
	struct FScriptMulticastDelegate OnPickupSpawnedAndReady;
	struct FScriptMulticastDelegate OnPickupDestroy;
	struct FScriptMulticastDelegate GameModeMessageRequest;
	struct FScriptMulticastDelegate ContextTutorialGameModeMessageRequest;
	struct FScriptMulticastDelegate HideGameModeMessageRequest;
	struct FScriptMulticastDelegate GameModeMessageSuccess;
	struct FScriptMulticastDelegate ShowGameModeMessage;
	struct FScriptMulticastDelegate HideGameModeMessage;
	struct FScriptMulticastDelegate ShowMarkerGameMode;
	struct FScriptMulticastDelegate HideMarkerGameMode;
	struct FScriptMulticastDelegate RepositionGameModeMessage;
	struct FScriptMulticastDelegate SetDefaultPositionGameModeMessage;
	struct FScriptMulticastDelegate OnPlayerLeftCreativeIsland;
	struct FScriptMulticastDelegate OnPlayerJoinedCreativeIsland;
	struct FScriptMulticastDelegate MutatorGenericIntegerUpdated;
	struct FScriptMulticastDelegate MutatorGameplayEvent;
	struct FScriptMulticastDelegate OnSafeZoneIndicatorChanged;
	float PlaylistEndTime;
	float SafeZonePauseTime;
	int TotalFinalCountdownTime;
	bool bForceTeamScorePlacementOnDeath;
	bool bPlaylistStoppedSafeZonePhases;
	bool bSkyTubesShuttingDown;
	bool bSkyTubesDisabled;
	int ServerChangelistNumber;
	class UClass* SpecialActorData;
	class UClass* ReplOverrideData;
	TArray<class UClass*> BuildingActorClasses;
	struct FScriptMulticastDelegate WinnerAnnounced;
	struct FScriptMulticastDelegate WinningTeamAnnounced;
	struct FScriptMulticastDelegate GamePhaseChanged;
	struct FScriptMulticastDelegate WinningScoreDetermined;
	struct FScriptMulticastDelegate GamePhaseStepChanged;
	struct FScriptMulticastDelegate StormCapStateChanged;
	struct FScriptMulticastDelegate StormProgressStopped;
	struct FScriptMulticastDelegate ActiveTeamArrayBuiltEvent;
	struct FScriptMulticastDelegate OnPlayersLeftChanged;
	struct FScriptMulticastDelegate OnTeamsLeftChanged;
	struct FScriptMulticastDelegate OnWinConditionMetCN;
	struct FScriptMulticastDelegate UpdateNamedPoiColorDelegate;
	struct FScriptMulticastDelegate OnWarmupCountdownEndTimeUpdated;
	bool bSkipWinnerAnnounced;
	bool bStopBuildingHealingOnDamage;
	bool bIsInCountdown;
	bool bIsInFinalCountdown;
	float WarmupCountdownStartTime;
	float WarmupCountdownEndTime;
	float AircraftStartTime;
	float SafeZonesStartTime;
	float EndGameStartTime;
	float EndGameKickPlayerTime;
	int TotalPlayers;
	int PlayersLeft;
	TArray<class UClass*> ClientVehicleClassesToLoad;
	TArray<class UClass*> ClientItemDefsToLoad;
	TArray<class UClass*> PredictedProjectiles;
	float RemainingFocalPointActorDuration;
	class UClass* FocalPointActor;
	struct Vector_NetQuantize FocalPointOffset;
	float FocalPointFOV;
	bool bCheatRespawnEnabled;
	EAthenaStormCapState StormCapState;
	int CurrentPlayerCap;
	struct StormCapDamageThresholdInfo DamageForStormCapMarking;
	TArray<int> TeamXPlayersLeft;
	TArray<struct FortWinnerPlayerData> WinningPlayerList;
	int TeamsLeft;
	TArray<byte> WinningTeamsCN;
	TArray<class UClass*> ServerToClientPreloadList;
	class UClass* DefaultBattleBus;
	bool bAllowUserPickedCosmeticBattleBus;
	TArray<struct AircraftFlightInfo> TeamFlightPaths;
	struct AircraftFlightInfo FlightPathMidLine;
	struct Vector2D DropZoneCenter;
	struct Vector2D FlightPathSelectionCenter;
	struct DateTime UtcTimeStartedMatch;
	bool bIsLargeTeamGame;
	class UClass* WinningPlayerState;
	int WinningTeam;
	int WinningScore;
	int CurrentHighScore;
	int CurrentHighScoreTeam;
	class UClass* SupplyDropWaveStartedSoundCue;
	TArray<struct FText> KillFeedEntry;
	struct FScriptMulticastDelegate KillFeedUpdated;
	TArray<class UClass*> SpectatorArray;
	TArray<class UClass*> PartyMemberSpectatorArray;
	TArray<class UClass*> MeshPlayerStateArray;
	EAirCraftBehavior AirCraftBehavior;
	bool bStormReachedFinalPosition;
	EFriendlyFireType FriendlyFireType;
	bool SpectateAPartyMemberAvailable;
	struct GameMemberInfoArray GameMemberInfoArray;
	TArray<byte> ActiveTeamNums;
	int CurrentPlaylistId;
	class UClass* SafeZoneIndicator;
	class UClass* MinimapBackgroundMID;
	class UClass* MinimapCircleMID;
	class UClass* MinimapNextCircleMID;
	class UClass* FullmapCircleMID;
	class UClass* FullmapNextCircleMID;
	struct SlateBrush MinimapSafeZoneBrush;
	struct SlateBrush MinimapCircleBrush;
	struct SlateBrush MinimapNextCircleBrush;
	struct SlateBrush FullMapCircleBrush;
	struct SlateBrush FullMapNextCircleBrush;
	struct SlateBrush MinimapSafeZoneFinalPosBrush;
	struct SlateBrush AircraftPathBrush;
	struct SlateBrush AircraftMidlinePathBrush;
	struct SlateBrush AircraftPathTeamIndicatorBrush;
	class UClass* MiniMapBackgroundDrawingMaterial;
	class UClass* MiniMapCircleDrawingMaterial;
	class UClass* MiniMapNextCircleDrawingMaterial;
	class UClass* MiniMapRadiusTrackerCircleDrawingMaterial;
	struct FName RadiusTrackerCircleCenterAndRadiusParameterName;
	struct FName RadiusTrackerCircleColorParameterName;
	TArray<struct DynamicLandData> DynamicShadows;
	TArray<struct DynamicLandData> DynamicLands;
	class UClass* MapInfo;
	class UClass* MinimapMPC;
	class UClass* BroadcastSpectatorInfo;
	class UClass* SplatterGridSystem;
	class UClass* CustomizationsPreloader;
	TArray<struct AICharacterPartsPreloadData> AICharacterPartsPreloadData;
	TArray<struct AIPawnCustomizationPreloadData> AIPawnCustomizationPreloadData;
	EAthenaGamePhase GamePhase;
	struct FString ReasonWereInSetupPhase;
	EEventTournamentRound EventTournamentRound;
	bool bIsCustomMatch;
	struct PlaylistPropertyArray CurrentPlaylistInfo;
	bool bGameModeWillSkipAircraft;
	float SafeZoneDamage;
	byte SafeZonePhase;
	EAthenaGamePhaseStep GamePhaseStep;
	float GamePhaseStepTimeRemaining;
	class UClass* LobbySoundMix;
	int TotalPlayersBots;
	int PlayerBotsLeft;
	TArray<class UClass*> Aircrafts;
	bool bAircraftIsLocked;
	ESafeZoneStartUp CachedSafeZoneStartUp;
	int LobbyAction;
	struct GameplayMutatorEventData MutatorEventData;
	struct GameplayMutatorObjectDataArray MutatorObjectDataArray;
	int MutatorGenericInt_0;
	int MutatorGenericInt_1;
	int MutatorGenericInt_2;
	class UClass* GameplayMutator_AI;
	class UClass* MutatorListComponent;
	class UClass* FortGameStateComponent_Telemetry;
	class UClass* ActiveEventManager;
	class UClass* FortGameStateComponent_Quests;
	class UClass* FortGameStateComponent_RadiusTracker;
	class UClass* AffiliationManager;
	class UClass* FortGameStateComponent_TimeDilation;
	float DefaultGliderRedeployCanRedeploy;
	float DefaultRedeployGliderLateralVelocityMult;
	float DefaultRedeployGliderHeightLimit;
	float DefaultParachuteDeployTraceForGroundDistance;
	float DefaultAllowNeutralWallEditing;
	float DefaultRebootMachineHotfix;
	float SignalInStormRegenSpeed;
	float SignalInStormLostSpeed;
	float StormCNDamageVulnerabilityLevel0;
	float StormCNDamageVulnerabilityLevel1;
	float StormCNDamageVulnerabilityLevel2;
	float StormCNDamageVulnerabilityLevel3;
	struct MeshNetworkStatus MeshNetworkStatus;
	struct FScriptMulticastDelegate OnClientVolumeManagerReplicated;
	class UClass* VolumeManagerToUse;
	class UClass* VolumeManager;
	class UClass* LocalizationService;
	class UClass* SanitizationService;
	class UClass* HermesLoadContext;
	struct ScalableFloat ResurrectionEnabledRow;
	struct SlateBrush SpawnMachineIconBrush;
	struct SlateBrush SpawnCardIconBrush;
	struct SpawnMachineRepDataArray SpawnMachineRepData;
	struct ScalableFloat SafeZoneDamageAttribute;
	struct SlateBrush EliminationSelfIconBrush;
	struct SlateBrush EliminationSelfClampedIconBrush;
	struct SlateBrush EliminationSquadmateIconBrush;
	struct SlateBrush EliminationSquadmateClampedIconBrush;
	struct SlateBrush EliminationTeammateIconBrush;
	struct SlateBrush EliminationTeammateClampedIconBrush;
	struct SlateBrush EliminationEnemyIconBrush;
	struct SlateBrush EliminationEnemyClampedIconBrush;
	struct TSoftClassPtr<UObject> EliminationFadeInCurve;
	struct TSoftClassPtr<UObject> EliminationFadeOutCurve;
	struct TSoftClassPtr<UObject> EliminationScaleInCurve;
	struct TSoftClassPtr<UObject> EliminationScaleOutCurve;
	float EliminationMarkerHUDMaxDistance;
	float EliminationMarkerHUDZOffset;
	struct GameplayTagContainer GoldenPoiLocationTags;
	class UClass* UnicornDriver;
	TArray<struct FString> ActiveEventNamesAtPlaylistLoad;
	struct ScalableFloat NewItemDuringWarmupWeightAddMod;
	float SmoothedWorldTimeSeconds;
	float SmoothedWorldTimeSecondsDrift;
	struct GameplayTagContainer RolledLootGroupTags;
	struct CosmeticUsageReport CosmeticUsageReport;
	bool bEnvironmentDamageBlocked;
	TArray<struct FString> ReticulatedSplineDefinitions;
	TArray<struct AthenaStreamIdOverride> ReticulatedSplineIds;
	TArray<class UClass*> StormShields;
	bool bDamageComboHUDEnabled;
	int DamageComboHUDMinHits;
	bool bEnableMatchesProxy;
	struct FString MatchesProxyMatchId;
	struct FScriptMulticastDelegate EndGameTimeDilationCompleteDelegate;
	struct ScalableFloat DelayMovementInput;
	float DelayMovementInputReplicated;
	bool bCraftingEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStatePvE : public FortGameStateZone
{
public:
	bool bAllowMulching;
	TArray<class UClass*> DeployedDefenders;
	class UClass* Aircraft;
	bool bUseMoonbeamHUD;
	uint32_t PickupsAllowedMax;
	uint32_t PickupsDesiredSlack;
	float PickupDespawnDelaySeconds;
	bool bDebugPickupManagement;
	bool bEnablePickupManagement;
	EFortRarity ImportantPickupThreshold;
	bool bWeaponSwappingEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateBoss : public FortGameStatePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateBR : public FortGameStateAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_ActiveEventManager : public FortGameStateComponent
{
public:
	TArray<struct FString> EventsAlreadyApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_AffiliationManager : public FortGameStateComponent
{
public:
	struct FactionData GameParticipantFaction;
	TArray<struct FactionData> CachedFactionData;
	struct GameplayTagContainer CachedFactionTags;
	struct GameplayTagContainer BlockResetSpecificRelationTags;
	TArray<class UClass*> AffiliationComponents;
	TArray<struct FortFactionInfo> FactionInfos;
	TArray<class UClass*> AffiliationComponentsToRegister;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_DynamicStreamingLevel : public GameStateComponent
{
public:
	TArray<struct DynamicCompositeWorld> DynamicWorlds;
	bool bDisableDynamicStreamingLevels;
	bool bAlwaysLoadDynamicAsyncStreamingLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_EventLevel : public FortGameStateComponent_DynamicStreamingLevel
{
public:
	struct FScriptMulticastDelegate OnSpecialInterationTriggered;
	struct FScriptMulticastDelegate OnRestedXpDripStopped;
	struct FScriptMulticastDelegate RoomOwnerChanged;
	struct FScriptMulticastDelegate ActiveCameraChanged;
	Unknown BangStateTracker;
	TArray<Unknown> SceneCameras;
	Unknown RoomOwner;
	struct TSoftClassPtr<UObject> AssignedRewardGraph;
	class UClass* RewardGraph;
	struct GameplayTagContainer RewardGraphNodesVisuallyDisplayed;
	TArray<Unknown> ClickableActors;
	TArray<struct HiddenActors> HiddenActorsToShowOnceClaimed;
	Unknown CurrentSelectedNavObj;
	class UClass* EventLevelCinematicOverrideClass;
	struct GameplayTag ActiveCamera;
	struct GameplayTag CameraToTurnLightSwitchOff;
	struct TSoftClassPtr<UObject> TransitionSequencer;
	struct GameplayTag SelectedCamera;
	struct GameplayTag LastSelectedNavObj;
	TArray<Unknown> CamerasPendingRegistration;
	TArray<Unknown> NavigationActorsPendingRegistration;
	TArray<struct AnalyticsNavActorClickedData> NavigationActorClickedData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFrontendPendingAsyncLevel : public UObject
{
public:
	class UClass* SubgameStreamingLevel;
	class UClass* FrontEndFlow;
	struct FName PackageName;
	EFrontEndCamera CameraOverride;
	struct FName CameraName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_FrontEndFlow : public GameStateComponent
{
public:
	TArray<struct FortFrontendCompositeLevel> CurrentCompositeLevels;
	TArray<class UClass*> AsyncStreamingLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_FrontEndFlowSTW : public GameStateComponent
{
public:
	class UClass* NameHomebaseAnnouncement;
	class UClass* SatelliteCinematicAnnouncement;
	class UClass* BannerWidgetClass;
	struct TSoftClassPtr<UObject> CompositeWorld;
	struct DataTableRowHandle OnboardingCompleteZoneStatHandle;
	struct DataTableRowHandle OnboardingWatchSatelliteCineStatHandle;
	struct DataTableRowHandle OnboardingNameHomebaseStatHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_MiniMapDataOverride : public GameStateComponent
{
public:
	TArray<struct MiniMapDataOverride> MiniMapDataOverrides;
	TArray<struct MiniMapDataOverrideRepData> MiniMapDataOverrideRepDatas;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_PickupManagement : public GameStateComponent
{
public:
	struct PickupManagementSettings DefaultPickupManagementSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_Quests : public FortGameStateComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_RadiusTracker : public GameStateComponent
{
public:
	TArray<class UClass*> UpdateQueue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_Telemetry : public GameStateComponent
{
public:
	TArray<int> MatchCounts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_TimeDilation : public FortGameStateComponent
{
public:
	class UClass* EndGameTimeDilationCurve;
	struct ScalableFloat EndGameTimeDilationDuration;
	class UClass* TimeDilationManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateDeployableBase : public FortGameStatePvE
{
public:
	class UClass* DeployableBaseManager;
	struct FScriptMulticastDelegate OnDeployableBaseManagerCreated;
	bool bFireEndOfDayDelegate;
	TArray<struct HordeDifficultyTierInfo> TierDifficultyConfig;
	TArray<struct HordeDifficultyTierInfo> PrestigeTierDifficultyConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateEndless : public FortGameStatePvE
{
public:
	int WaveNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateFrontEnd : public FortGameState
{
public:
	Unknown MiniMapInterface;
	class UClass* MiniMapManagerClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateOutpost : public FortGameStatePvE
{
public:
	bool bOutpostDefenseActive;
	bool bWargameActive;
	EStormShieldDefense StormShieldDefenseType;
	bool bOutpostStatusAllowsMissionStart;
	TArray<class UClass*> IronCityEarlyPlayerInfos;
	int IronCityLowestPlayerAccountLevel;
	float IronCityMinPowerLevel;
	float IronCityMaxPowerLevel;
	struct IronCityDifficultyInfo IronCityDifficultyInfo;
	float PlayerWeaponSkillLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateSurvival : public FortGameStatePvE
{
public:
	bool bFireEndOfDayDelegate;
	float TimeToDelayEndOfDayZoneScoreWidgetDisplay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameState_InGame_Custom : public FortGameState_InGame
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameUserSettings : public UGameUserSettings
{
public:
	float MouseSensitivity;
	int FortVersion;
	bool UnlockConsoleFPS;
	bool LastAppliedUnlockConsoleFPS;
	struct FString CurrentFpsModeString;
	struct FString CurrentDeviceProfileOverrideSuffix;
	int SubGameSelectCount_Athena;
	struct DateTime SubGameLastSelectedTime_Athena;
	int SubGameSelectCount_Campaign;
	struct DateTime SubGameLastSelectedTime_Campaign;
	struct DateTime LastTimeSettingsSnapshotUploaded;
	struct DateTime FirstLoginOnDevice;
	float SafeZone;
	bool bIsSafeZoneSet;
	int CachedPlayerLevel;
	int CachedBattleStars;
	int CachedAlienStylePoints;
	int CachedHighestBattlePassUnlockedPage;
	bool bShowCareerTabBang;
	struct FString CustomVoiceChatInputDevice;
	struct FString CustomVoiceChatOutputDevice;
	struct FString CustomVoiceChatInputDeviceId;
	struct FString CustomVoiceChatOutputDeviceId;
	bool bMotionBlur;
	bool bShowGrass;
	bool bShowFPS;
	bool bUseGPUCrashDebugging;
	bool bLatencyTweak1;
	int LatencyTweak2;
	bool bLatencyFlash;
	int DLSSQuality;
	bool bRayTracing;
	bool RayTracingShadowsQuality;
	int RayTracingReflectionsQuality;
	bool RayTracingAmbientOcclusionQuality;
	int RayTracingAOQuality;
	int RayTracingGIQuality;
	bool b120FpsMode;
	float DisplayGamma;
	float UserInterfaceContrast;
	Unknown NamedTimes;
	Unknown NamedCounts;
	int BattlePassOverrideTracker;
	bool bHasSeenDonutShopSequence;
	float DonutIdleGameHighScore;
	Unknown DisplayAssetPathToOfferSeenLevel;
	struct PlaylistData LastSelectedPlaylist;
	bool LastSelectedFillOption;
	Unknown CustomMatchOptions;
	Unknown CreativeOptions;
	bool bHasSeenCreativePhoneTutorial;
	bool bHasSeenCreativeHeatmapTutorial;
	int CreativeOptionLastUsedCategory;
	int CreativeOptionLastUsedIndexInCategory;
	struct FortPortalOriginInfo LastPortalOrigin;
	struct FString LastNewsVersionViewedBR;
	struct FString LastNewsVersionViewedCreative;
	struct FString LastNewsVersionViewedSTW;
	struct FString LastPRMEtag;
	struct FString LastPlaylistInfoVersionViewedBR;
	struct FString LastFrontEndBackPlateStageUsed;
	bool bEulaAccepted;
	struct FString EulaAcceptedUserId;
	struct DateTime LastEulaCheckTime;
	struct HUDLayoutData HUDLayoutData;
	struct FortMobileHUDProfileIdentifier ActiveHUDProfileIdentifier;
	int bTimesSeenBacchusLoadTutorial;
	bool bHasSeenTapToShoot;
	int NumTimesSeeingPanningTip;
	struct FireModeData FireModeData;
	struct FortSimpleGameStats SimpleMobileStats;
	bool bDesiredHeadphoneMode;
	struct FString AudioOutputDeviceId;
	bool bUseHeadphoneMode;
	int InitialBenchmarkState;
	bool bDisableMouseAcceleration;
	ESavedAccountType ChosenLoginType;
	struct FScriptMulticastDelegate OnViewDistanceQualityChanged;
	struct FScriptMulticastDelegate OnShadowQualityChanged;
	struct FScriptMulticastDelegate OnAntiAliasingQualityChanged;
	struct FScriptMulticastDelegate OnTextureQualityChanged;
	struct FScriptMulticastDelegate OnEffectsQualityChanged;
	struct FScriptMulticastDelegate OnPostProcessQualityChanged;
	TArray<struct SavedCredentials> Credentials;
	int SocialImportOptedOutVersion;
	int VKImportOptedOutVersion;
	bool bHasSeenErebusSocialImport;
	bool bHasSeenFriendImportToast;
	struct DateTime LastSocialImportPromptTime;
	bool bAutoImportFriendEnabled;
	bool bSeenLetoSellModal;
	int SocialImportPromptCountCurrentVersion;
	int SocialImportPromptCountAllVersions;
	int VKImportPromptCountCurrentVersion;
	int VKImportPromptCountAllVersions;
	bool bSocialImportDisplayed;
	bool bAccountItemWarningShownThisLaunch;
	struct DateTime LastAccountItemWarningTime;
	bool bMultiFactorAuthModalOpOut;
	struct DateTime LastEnableMFAModalPromptTime;
	struct DateTime LastVKImportPromptTime;
	struct DateTime LastAffiliateToastTime;
	Unknown FailedInviteMap;
	int MobileRecommendationDismissedVersion;
	EShowInGamePictureInPicture ShowLiveStreamPictureInPictureInMatchV2;
	int64_t CurrentLivePiPStreamOverrideCounter;
	struct FString SelectedFrontEnd;
	bool bNeverShowMobileLink;
	bool bHasShownMobileLink;
	bool bDesiredAllowLowPowerMode;
	struct FScriptMulticastDelegate OnAllowVideoPlaybackChanged;
	bool bDesiredAllowMultithreadedRendering;
	bool bHasMigratedDownloadSettings;
	bool bSendAppsFlyerEventOnInstallation;
	bool bAllowFullGameDownload;
	bool bAllowFullGameDownloadOverride;
	bool bAllowElectraPlayerDownload;
	bool bAllowElectraPlayerDownloadOverride;
	bool bAllowCellularDownload;
	bool bAutoDownloadHighResTextures;
	int64_t LastAutoDownloadHighResTextureReminder;
	bool bResumeUserCanceledOrPausedDownload;
	bool bForceNoPatchingForDownloads;
	bool bAutoLaunchFullGame;
	bool bAllowDownloadHighResMips;
	bool bAllowLowPowerMode;
	bool bAllowVideoPlayback;
	bool bAllowMultithreadedRendering;
	EFortMobileFPSMode MobileFPSMode;
	struct FString MobileQualitySettingsResetDefaultsGUID;
	bool bHasSeenSamsungPressureSensorWarning;
	bool bNeverDisplaySamsungPressureSensorWarning;
	bool bHasRecentlySeenBadMatchPopup;
	int MatchesSinceLastBadMatchPopup;
	bool bHasAlreadyRatedOnGooglePlay;
	int DaysToSnoozeBeforeNextGooglePlayRating;
	int GooglePlayRatingDelayedOccurences;
	bool bShowTemperature;
	struct DateTime LastGameStartNotificationSentTime;
	TArray<int> ScheduledNotifications;
	int LastYearForcedDisplayWinterfestInfoButton;
	TArray<struct RecentPlayerEncounterSerialized> RecentPlayerEncounters;
	TArray<struct SocialStatusSerialized> FriendSocialStatuses;
	bool bHasSeenSidekickWelcomePopup;
	bool bPCMigratedToNextGenScalability;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameViewportClient : public CommonGameViewportClient
{
public:
	struct FText NetworkFailureMessage;
	struct FString NetworkFailureMessageAdditionalAnalyticsString;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGenericDataStoreManagerComponent : public UActorComponent
{
public:
	Unknown ClassToNameMapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGiftBoxItem : public UFortAccountItem
{
public:
	struct GiftBoxInfo GiftBoxInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftBoxItemDefinition : public FortAccountItemDefinition
{
public:
	ESubGame RestrictToSubgame;
	EFortGiftWrapType GiftWrapType;
	struct FText ViolatorText;
	struct FText DefaultHeaderText;
	struct FText SubHeaderText;
	struct FText DefaultBodyText;
	struct TSoftClassPtr<UObject> ItemDisplayAsset;
	int SortPriority;
	bool bReuseExistingBoxIfPossible;
	bool bOverrideBackgroundMessage;
	struct FText BackgroundMessageText;
	struct TSoftClassPtr<UObject> GiftBoxPreMessageWidgetRef;
	struct TSoftClassPtr<UObject> GiftBoxHeaderSubWidgetRef;
	struct TSoftClassPtr<UObject> CustomLeftsideContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGiftBoxUnlockItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftBoxUnlockItemDefinition : public FortAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> UnlockedGiftBox;
	struct DateTime CreationDate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGiftUINotificationHandler : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGliderAnimInstance : public UFortBaseAnimInstance
{
public:
	float DeltaTime;
	class UClass* OwnerGlider;
	class UClass* OwnerFortPawn;
	struct FortAnimInput_Skydiving SkydivingState;
	bool bIsAccelerating2D;
	bool bForceOpen;
	bool bForceOpen_SkipInto;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLayeredAudioComponent : public UAudioComponent
{
public:
	bool bFadeWhenOwnerDestroyed;
	float FadeTimeWhenOwnerDestroyed;
	TArray<struct FortLayeredAudioFloatParam> FloatParameters;
	struct FScriptMulticastDelegate OnOneshotEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGliderAudioComponent : public UFortLayeredAudioComponent
{
public:
	bool bDebugIgnoreFullyDeployed;
	class UClass* PlayerParachute;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGliderPackSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData MaxCharges;
	struct FortGameplayAttributeData CurrentCharges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGlobalAbilityTargetingActor : public AInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGlobalEnvironmentAbilityActor : public AInfo
{
public:
	class UClass* AbilitySystemComponent;
	class UClass* DamageSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGlobalEnvironmentAbilityActorAthena : public AFortGlobalEnvironmentAbilityActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGlobals : public UObject
{
public:
	struct FString LobbyMap;
	struct FString BRMap;
	struct FString BRMapFullName;
	int MinTheaterListRefreshDelay;
	int MaxTheaterListRefreshDelay;
	float MinCullObjectSize;
	float MinCullDistance;
	float MaxCullObjectSize;
	float MaxCullDistance;
	float MinRespawnHeightForEnvironmentDeath;
	float MaxRespawnInAirHeight;
	bool bEnablePlayerTriggeredRespawn;
	bool bEnableNewCustomizationPanel;
	bool bEnableInfluenceMap;
	bool bEnableAIDespawning;
	bool bEnableDBNO;
	bool bEnableIronCity;
	bool bEnableForceBuildingActorRecordUpdates;
	TArray<struct FName> IronCityWargameTagList;
	bool bEnableIronCityCoast;
	TArray<struct ChallengeObjectiveHotfix> ChallengeObjectiveHotfixes;
	TArray<struct ChallengeSuppressedHotfix> ChallengeSuppressedHotfixes;
	TArray<struct XPEventEntryHotfix> XPEventEntryHotfixes;
	bool bEnableMaydayStrangeLands;
	bool bForceMaydayStrangeLands;
	bool bEnableHestia;
	bool bEnableIronCityAutoAmplifierPlacement;
	bool bEnableWargameDebug;
	bool bEnableEnduranceDebug;
	bool bEnableTrapScoringCrafting;
	bool bEnableTrapScoringPlacement;
	bool bEnableTrapScoringActivation;
	bool bEnableInWorldScoreNumbers;
	bool bMustUseToggleJetpackExecute;
	bool bEnableNewRewardFlow;
	bool bEnableWIFE;
	bool bEnableFrontendCrafting;
	bool bEnableFrontendStorage;
	bool bEnableLazyASC;
	bool bEnableFriendCodes;
	bool bEnableCreativeMode;
	bool bEnableCreativeModeLimitedAccess;
	bool bEnableCreativeModeLimitedAccessForFounders;
	float FlyVerificationInterval;
	float InvulnerableVerificationInterval;
	float ModeratorModeVerificationInterval;
	struct FString CreativeModeLimitedAccessEndTime;
	bool bEnableCreativeModeTutorials;
	float CreativeTutorialSkydivingDelay;
	float CreativeReturnToHubTutorialDelay;
	struct LoginFailureLogSubmitOptions LoginFailureOptions;
	struct LogoutLogSubmitOptions LogoutFailureOptions;
	struct PurchaseFailureLogSubmitOptions RealMoneyPurchaseFailureOptions;
	bool bSubmitReturnToMenuErrorLogs;
	bool bSubmitSecondaryReturnToMenuErrorLogs;
	int ReturnToMenuErrorLogTailKb;
	float ReturnToMenuErrorLogSubmitChance;
	struct PartyFailureLogSubmit PartyJoinFailureLogSubmit;
	TArray<struct KairosSubmitLogOptions> KairosSubmitOptions;
	struct VoiceChatLogSubmitOptions VoiceChatSubmitOptions;
	bool bShowMissionResultsMovies;
	bool bDisablePlayerTeleportDuringMissionResults;
	bool bDisableParticleEffectsDuringMissionResults;
	bool bFlushGPUWhenPlayerIsTeleportedAtEndOfZone;
	bool bStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone;
	bool bTwitchEnabled;
	bool bAllowContainersInCreativeItemLists;
	bool bAccountLinkingEnabled;
	EFortAccountLinkingUIConfig AccountLinkingUIConfig;
	struct FString AccountLinkingUIURL;
	bool bEnableAccountLinkingUIURLButton;
	bool bAllowStreamerSafetyCharacterReplication;
	bool bAnonymousCharacterModeSafetyCharacterReplication;
	bool bTournamentSafetyCharacterReplication;
	bool bAllowSafetyCharacterReplicationToUseVariantItems;
	bool bAllowItemWrapMaterialSyncLoads;
	bool bEnableQuestContentCheckOnSave;
	bool bEnableSeasonalQuestline;
	bool bTwitchHeartbeatEnabled;
	bool bTwitchAllowDisplayViewernames;
	int MaxTwitchViewerNamesToCache;
	int TwitchViewerNameExpirationMinutes;
	float MinTwitchHeartbeatInterval;
	float TwitchAccountInformationRefreshInterval;
	bool bAllowLogout;
	bool bAllowQuit;
	bool bHasWorldMap;
	float PlayerJoinServerTimeoutSeconds;
	float PlayerUnregistrationFailsafeTimer;
	float PollForDedicatedServerReadyToShutdownInterval;
	bool bUploadAthenaStatsV2;
	bool bAthenaStatsFrontendEnabled;
	bool bAthenaLeaderboardFrontEndEnabled;
	bool bAthenaSquadQuickChatEnabled;
	float AthenaQuickChatRangeForNonSquadTeamMembers;
	bool bGlobalLeaderboardsFrontEndEnabled;
	int TimeBetweenLeaderboardRequestsMinutes;
	bool bFirstShotAccuracyDisabled;
	bool bAllowProjectileRethrow;
	bool bPapayaSpeakersEnabled;
	bool bDoAthenaClientStartupWeaponPreloading;
	bool bAthenaSpatialUIDeferMarkingItemsSeen;
	bool bAthenaUsesSimCollision;
	bool bAthenaSimVehicles;
	bool bAthenaSubstepping;
	bool bCampaignSubstepping;
	bool bCampaignUsesSimCollision;
	bool bCampaignSimVehicles;
	float MaximumCharacterVelocity;
	TArray<class UClass*> AthenaReferencedObjects;
	int NumOutstandingAthenaAsyncRequests;
	int TotalAthenaAsyncRequests;
	struct TSoftClassPtr<UObject> AthenaAlwaysLoadedContentHack;
	bool bAllowXboxStwToken;
	bool bUsePlatformProfanityFilterForChat;
	bool bShouldSendSettingsSnapshotOnLogin;
	bool bShouldForceAllowBroadcasting;
	bool bUseLegacyMediaSource;
	bool bUseLegacyMediaSourceForCreative;
	bool bDisableMediaStreamingOnWindows7;
	bool bAllowElectraForCellStreaming;
	int MaxElectraVerticalResolutionOf60fpsVideos;
	float MaxElectraFpsVideos;
	int MaxElectraVerticalResolutionOfWindowsSWD;
	float ElectraLivePresentationOffset;
	float ElectraLiveAudioPresentationOffset;
	bool bElectraLiveUseConservativePresentationOffset;
	bool bElectraUseDedicatedMediaSegmentDownloadThreads;
	bool bAllowElectraForReplayCinematic;
	bool bDisableElectraForReplayCinematicOnWin7;
	bool bDisableElectraForReplayCinematicOnWin7AndWin8;
	float ProbabilityOfUsingElectraForReplayCinematic;
	float OpenTimeLimitForReplayCinematic;
	float DurationTimeLimitForReplayCinematic;
	float DurationExtraTimeForReplayCinematic;
	bool bAllowElectraForWatchBattlePassMovie;
	bool bShowExtendedBattlePassMovie;
	float ProbabilityOfUsingElectraForWatchBattlePassMovie;
	float OpenTimeLimitForWatchBattlePassMovie;
	bool bAllowForceDefaultAudioTrack;
	int64_t MemoryRequirementForMediaStreamingMB;
	TArray<struct FString> LiveStreamingCDNs;
	TArray<struct FString> VODStreamingCDNs;
	TArray<struct FString> LiveStreamingCDNsCN;
	TArray<struct FString> VODStreamingCDNsCN;
	int MaxResolutionForMediaStreaming;
	int MaxResolutionForStandalonePlayer;
	TArray<struct FString> RiskyReelsPlaylistBlacklistFilter;
	TArray<struct FString> RadioPlaylistBlacklistFilter;
	bool bRegionCN;
	float GlobalSnowAltitude;
	float GlobalSnowRadius;
	struct Vector GlobalSnowOrigin;
	TArray<struct SubGameAccess> SubGameAccess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGoatVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* GolfCart;
	float GolfCartSpeed;
	bool bForwardSpeedIsNearlyZero;
	bool bForwardSpeedIsGreaterThanOne;
	bool bReverseSpeedIsGreaterThanOne;
	bool bSpeedIsGreaterThanFiveAndPlayerHitSpace;
	bool bIsBraking;
	bool bIsEBraking;
	bool bIsBoosting;
	bool bIsPowerSliding;
	bool bPlayerHitSpaceBar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGoatVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float BounceCrouchTime;
	float BounceCrouchTimeDeadzone;
	float BounceRecoilTime;
	float BounceForcePerMass;
	float PassengerLeanMagnitude;
	float PassengerLeanMinMagnitude;
	float PassengerLeanLeftRightInterpolationPerSecond;
	float PassengerLeanUpInterpolationPerSecond;
	float PassengerLeanDownInterpolationPerSecond;
	float PassengerLeanResetInterpolationPerSecond;
	float PassengerLeanDeadzone;
	float HandbrakeForce;
	float PowerSlideMinAngle;
	float MinLateralSpeedForPowerSlideBoost;
	float MaxAccumulatedPowerSlideBoost;
	TArray<struct GoatVehicleBoostLevel> PowerSlideBoostAccumulationSteps;
	float PowerSlideAccumulationMultiplier;
	float PowerSlideTopSpeedMultiplier;
	float PowerSlideTopSpeedInAirMultiplier;
	float PowerSlideStrength;
	float PowerSlideMinAngularSpeed;
	float PowerSlideMaxAngularSpeed;
	float BoostSteeringMultiplier;
	float BoostCooldown;
	float BoostSteeringMultiplierRampTime;
	float BoostSlowExtraStrength;
	float MinForwardSpeedBoostExtraStrength;
	float BoostTopSpeedForceMultiplier;
	float VehiclePowerSlideFrontMultiplier;
	float VehiclePowerSlideRearMultiplier;
	float PowerSlideMinPushForce;
	float CameraShakeAmplitudeMin;
	float CameraShakeAmplitudeMax;
	float SpringFudgeFactor;
	float CameraShakeNormalizedSpeed;
	float CameraShakeSpeedCurvePow;
	float PowerSlideShakeMultiplierMin;
	float PowerSlideShakeMultiplierMax;
	float BoostingCameraShakeAmount;
	float BoostCameraShakeFrequency;
	float SmoothedSpringCompressionMin;
	float SmoothedSpringCompressionMax;
	float PowerSlideMinSpringCompression;
	float ScreenShakeFrequencyMin;
	float ScreenShakeFrequencyMax;
	float PassengerCameraShakeMultiplier;
	float ScreenShakeYawFrequencyMultiplier;
	struct LinearColor WheelSlideBoostColorWhenNotPowerSliding;
	float TreadWidth;
	float RumbleMultiplier;
	float SparksRumbleMultiplier;
	float BoostCameraOffset;
	float ADSCameraDistance;
	float PassengerCameraOffset;
	float ADSInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortGravityGunHolder : public ABuildingGameplayActor
{
public:
	class UClass* OwningPlayer;
	class UClass* HeldObject;
	class UClass* HeldObjectProjectileClass;
	class UClass* CachedLayeredAudioComponent;
	struct GravityGunVelocityAudioMapRangeClamped VelocityAudioRangeClamped;
	class UClass* PivotComponent;
	class UClass* RingPivotComponent;
	class UClass* RingSMComponent;
	class UClass* Ring1SMComponent;
	class UClass* Ring2SMComponent;
	class UClass* Ring3SMComponent;
	EGravityGunHolderState CurrentState;
	EGravityGunHolderObjectType ObjectTypeHeld;
	bool bAimingDownSights;
	struct ScalableFloat HoldForwardDistance;
	struct ScalableFloat HoldUpDistance;
	struct ScalableFloat HoldUpDistanceWhileADS;
	float MaxAxisLength;
	struct ScalableFloat MaxAxisLengthPercent;
	float CurrentRingSizeInUnits;
	struct ScalableFloat MoveSpeed;
	struct ScalableFloat MoveSpeedWhileADS;
	struct ScalableFloat MaxMoveSpeedToGoal;
	struct ScalableFloat StabilizationCoefficient;
	struct ScalableFloat StabilizationCoefficientWhileADS;
	struct ScalableFloat RingRightDistanceScalar;
	struct ScalableFloat FollowSpeedMultiplier;
	struct ScalableFloat VehicleFollowSpeedMultiplier;
	struct ScalableFloat VehicleBroadcastImpactAtLocationRadius;
	struct ScalableFloat MaxDistanceBeforeDetach;
	float TimeWhenStartedHolding;
	struct ScalableFloat MaxHoldTimeForDetach;
	struct ScalableFloat RingRotationSpeed;
	struct ScalableFloat RingRotationSpeedWhileADS;
	struct ScalableFloat ThrowSpeed;
	float LaunchSpeedMultiplier;
	float VehicleLaunchSpeedMultiplier;
	bool bUseCameraRightAsReference;
	bool bAllowRotation;
	EGravityGunHolderRotationAxis CurrentRotationAxisIndex;
	struct ScalableFloat TargetRotationTorqueStiffness;
	struct ScalableFloat TargetRotationTorqueDampening;
	struct ScalableFloat TargetRotationTorqueMaxAccel;
	struct ScalableFloat TargetRotationTorqueDeltaTimeScalar;
	class UClass* TrajectorIndicator;
	struct ScalableFloat TrajectorySplineFriction;
	struct ScalableFloat TrajectorySplineBounciness;
	struct ScalableFloat TrajectorySplineTimeStep;
	struct ScalableFloat TrajectorySplineTraceExtent;
	ECollisionChannel TrajectorySplineTraceChannel;
	TArray<class UClass*> TrajectorySplineExtraIgnoreActors;
	struct ScalableFloat TrajectorySplineMaxBounces;
	struct ScalableFloat TrajectorySplineMaxSteps;
	struct ScalableFloat TrajectorySplineMaxDistanceBetweenSplinePoints;
	struct ScalableFloat TrajectorySplineInitialDistance;
	float CachedHoldForwardDistance;
	float CachedHoldUpDistance;
	float CachedHoldUpDistanceWhileADS;
	float CachedTargetRotationTorqueDeltaTimeScalar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGuidedMissilePackSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData MaxMissiles;
	struct FortGameplayAttributeData Missiles;
	struct FortGameplayAttributeData ReserveMaxMissiles;
	struct FortGameplayAttributeData ReserveMissiles;
	struct FortGameplayAttributeData ReloadDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHardcoreModifierItem : public UFortAccountItem
{
public:
	bool is_enabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHardcoreModifierItemDefinition : public FortPersistableItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ModifierAbilitySet;
	struct GameplayTagContainer AdditionalSourceTagsToAdd;
	TArray<struct TSoftClassPtr<UObject>> TierAccolades;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHealing : public FortGameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHealthBarComponent : public USceneComponent
{
public:
	class UClass* BuildingActorOwner;
	struct FText DisplayText;
	bool bIsHealthBarVisible;
	float MaxDistance;
	class UClass* ScaleOverDistanceCurve;
	bool bClampToScreen;
	bool bShowClampToScreenArrow;
	class UClass* HealthBarColorCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSlateHUDIndicator : public UFortIndicator
{
public:
	bool bClampToScreen;
	bool bShowClampToScreenArrow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHealthBarIndicator : public UFortSlateHUDIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeldObjectComponent : public UActorComponent
{
public:
	struct TSoftClassPtr<UObject> EquippedWeaponItemDefinition;
	struct HeldObjectThrownData HeldObjectThrownData;
	struct Vector AttachmentOffset;
	EAttachmentRule PlayerAttachmentScaleRule;
	bool bAllowObjectToBeHeldInVehicle;
	bool bBlocksVehicleDriverSeat;
	bool bApplyAngularImpulseOnThrow;
	struct Vector2D ThrowAngularImpulseRange;
	struct TSoftClassPtr<UObject> PreviewMaterial;
	class UClass* PlacementPreviewClass;
	class UClass* GuideProjectileClass;
	struct Vector GuideAttachLocationOffset;
	struct Rotator GuideAttachRotationOffset;
	struct FScriptMulticastDelegate OnHeldObjectPickedUp;
	struct FScriptMulticastDelegate OnHeldObjectPlaced;
	struct FScriptMulticastDelegate OnHeldObjectDropped;
	struct FScriptMulticastDelegate OnHeldObjectGuideProjectileStarted;
	struct FScriptMulticastDelegate OnHeldObjectGuideProjectileStopped;
	struct FScriptMulticastDelegate OnHeldObjectEnteredWater;
	struct FScriptMulticastDelegate OnHeldObjectMovedToVehicle;
	struct FScriptMulticastDelegate OnHeldObjectThrown;
	struct FScriptMulticastDelegate OnHeldObjectThrownLanded;
	struct FScriptMulticastDelegate OnHeldObjectDestroy;
	struct FScriptMulticastDelegate OnHeldObjectAttached;
	struct FScriptMulticastDelegate OnHeldObjectOwningPawnChanged;
	bool bUsePreviewMaterial;
	bool bCollisionBlockedByPawns;
	bool bDroppedFromWeaponSwap;
	EHeldObjectState HeldObjectState;
	class UClass* OwningPawn;
	struct Rotator ObjectPickupRotation;
	Unknown PreviousOwningPawn;
	struct HeldObjectMovementReplicatedData HeldObjectMovementReplicatedData;
	Unknown GrantedWeaponItem;
	Unknown GrantedWeapon;
	class UClass* ProjectileMovementComponent;
	class UClass* PhysicsObjectComponent;
	Unknown CollisionResponseChannelRestoreMap;
	class UClass* ReferenceMeshComponent;
	class UClass* PlacementPreviewActor;
	class UClass* GuideProjectile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHelpItem : public UDataAsset
{
public:
	EFortHelpItemType ItemType;
	struct FName ItemId;
	struct FText HeaderName;
	struct FText BodyText;
	struct FortHelpAdditionalContent AdditionalContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHelpItemCategory : public UFortHelpItem
{
public:
	TArray<class UClass*> AssetSubItems;
	TArray<class UClass*> InlineSubItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHelpItemEntry : public UFortHelpItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHermesLoadContext : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorker : public UFortCharacter
{
public:
	struct FString slotted_building_id;
	int building_slot_used;
	int Gender;
	struct FString personality;
	struct FString set_bonus;
	struct FString Portrait;
	struct GameplayTagContainer PersonalityTag;
	struct GameplayTagContainer SetBonusTag;
	struct TSoftClassPtr<UObject> IconDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHero : public UFortWorker
{
public:
	struct FString hero_name;
	TArray<struct FortSavedModeLoadout> mode_loadouts;
	bool Refundable;
	TArray<struct McpVariantReader> OutfitVariants;
	TArray<struct McpVariantReader> BackblingVariants;
	TArray<class UClass*> Specializations;
	TArray<class UClass*> SpecializationAbilityKits;
	TArray<class UClass*> CharacterParts;
	TArray<struct McpVariantChannelInfo> OutfitVariantChannels;
	TArray<struct McpVariantChannelInfo> BackblingVariantChannels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroClassGameplayDefinition : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> OverridePawnClass;
	struct GameplayTagContainer HeroClassTags;
	struct DataTableRowHandle LegacyStatHandle;
	TArray<struct TSoftClassPtr<UObject>> ClassAbilityKits;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroClassGameplayDefinitionTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroData : public UPrimaryDataAsset
{
public:
	struct FText DefaultHeroName;
	struct TSoftClassPtr<UObject> DefaultHero;
	struct HeroPerkDefaultRequirements CommanderPerkDefaultRequirements;
	bool bTeamPerkDependsOnSupportTierUnlocks;
	TArray<struct GameplayEffectApplicationInfo> CombinedStatGEs;
	TArray<struct HeroSubclassAttributeData> HeroAttributeDataForSubclasses;
	TArray<struct HeroKeywordDisplayData> HeroKeywordDisplayData;
	struct FText HeroPerkDuplicatedText;
	struct FText HeroTierTooLowForPerkText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHeroExhibitActor : public AFortExhibitActor
{
public:
	class UClass* HeroType;
	class UClass* HeroExhibitPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroGameplayDefinition : public UDataAsset
{
public:
	class UClass* HeroClassGameplayDefinition;
	struct GameplayTagContainer HeroBaseStatlineTags;
	struct GameplayTagContainer HeroTags;
	TArray<struct FortHeroTierAbilityKit> TierAbilityKits;
	struct FortHeroGameplayPiece HeroPerk;
	struct FortHeroGameplayPiece CommanderPerk;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroGameplayDefinitionTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroLoadoutTooltipContext : public UFortTooltipContext
{
public:
	Unknown HeroLoadout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroSpecialization : public UPrimaryDataAsset
{
public:
	TArray<struct FortSpecializationSlot> SpecializationSlots;
	TArray<struct TSoftClassPtr<UObject>> CharacterParts;
	EFortAlteration AlterationType;
	TArray<struct HeroSpecializationAttributeRequirement> AttributeRequirements;
	struct GameplayTagContainer RequiredTags;
	bool bForceShowHeadAccessory;
	bool bForceShowBackpack;
	struct SlateBrush CardIconBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroSpecializationTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroTooltip : public UFortCharacterTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWorkerType : public FortCharacterType
{
public:
	EFortCustomGender Gender;
	struct TSoftClassPtr<UObject> FixedPortrait;
	bool bIsManager;
	struct GameplayTagContainer ManagerSynergyTag;
	struct GameplayTagContainer FixedPersonalityTag;
	struct GameplayTagContainer FixedSetBonusTag;
	int MatchingPersonalityBonus;
	int MismatchingPersonalityPenalty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroType : public FortWorkerType
{
public:
	bool bForceShowHeadAccessory;
	bool bForceShowBackpack;
	TArray<struct TSoftClassPtr<UObject>> Specializations;
	struct TSoftClassPtr<UObject> DefaultMontageLookupTable;
	struct TSoftClassPtr<UObject> OverrideMontageLookupTable;
	TArray<struct GameplayEffectApplicationInfo> CombinedStatGEs;
	struct GameplayTagContainer RequiredGPTags;
	struct TSoftClassPtr<UObject> MaleOverrideFeedback;
	struct TSoftClassPtr<UObject> FemaleOverrideFeedback;
	struct TSoftClassPtr<UObject> OverridePawnClass;
	class UClass* HeroGameplayDefinition;
	class UClass* HeroCosmeticOutfitDefinition;
	class UClass* HeroCosmeticBackblingDefinition;
	struct TSoftClassPtr<UObject> FrontEndAnimClass;
	struct TSoftClassPtr<UObject> FrontendAnimMontageIdleOverride;
	float FrontEndBackPreviewRotationOffset;
	struct FText Subtype;
	struct FortAttributeInitializationKey AttributeInitKey;
	struct DataTableRowHandle LegacyStatHandle;
	struct TSoftClassPtr<UObject> ItemPreviewMontage_Male;
	struct TSoftClassPtr<UObject> ItemPreviewMontage_Female;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorkerTypeTooltip : public UFortCharacterTypeTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroTypeTooltip : public UFortWorkerTypeTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHexMapMarkerBase : public AActor
{
public:
	TArray<class UClass*> CurrentMIDs;
	class UClass* IdleAnimation;
	class UClass* SkelMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHideShowInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHighlightObjectInWorldComponent : public UActorComponent
{
public:
	TArray<struct HighlightObjectData> HighlightData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHLODSMActor : public AActor
{
public:
	struct FName ActorFName;
	struct Vector UniqueWorldLocation;
	bool bIsDynamic;
	bool bStartHidden;
	float MaxDrawDistanceMultiplier;
	struct TSoftClassPtr<UObject> HLODStaticMesh;
	class UClass* StaticMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseBannerColorItem : public UFortAccountItem
{
public:
	struct FName ColorRowName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHomebaseBannerColorItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseBannerColorMap : public UDataAsset
{
public:
	Unknown ColorMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseBannerIconItem : public UAthenaCosmeticAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHomebaseBannerIconItemDefinition : public AthenaCosmeticItemDefinition
{
public:
	struct DataTableRowHandle Category;
	bool bFullUsageRights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomeBaseContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnWorkerPreviewStateChanged;
	struct FScriptMulticastDelegate OnHomebaseInventoryUpdated;
	struct FScriptMulticastDelegate OnMaximumItemLevelChanged;
	struct FScriptMulticastDelegate OnItemUpgradePointsChanged;
	struct FScriptMulticastDelegate SquadSlotMarkedAsSeen;
	struct FScriptMulticastDelegate OnPlayerInfoChangedDelegate;
	struct FScriptMulticastDelegate OnItemSlottingPreviewInfoChangedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseManager : public UDataAsset
{
public:
	class UClass* HomebaseNodeGameplayEffectDataTable;
	class UClass* ResearchSystemUpgradesTable;
	class UClass* StatsGamplayEffect;
	class UClass* HomebaseSquadDataTable;
	class UClass* ExpeditionSlotsDataTable;
	class UClass* ManagerSquadSynergyBonusTable;
	class UClass* SquadGE;
	TArray<struct WorkerPersonalityData> WorkerPersonalities;
	TArray<struct WorkerSetBonusData> WorkerSetBonuses;
	TArray<struct ManagerSynergyData> ManagerSynergies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseNodeGameplayEffectDataTable : public UDataTable
{
public:
	TArray<class UClass*> TemplateAttributeGEs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseNodeItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHomebaseNodeItemDefinition : public FortAccountItemDefinition
{
public:
	TArray<struct HomebaseNodeLevel> LevelData;
	EHomebaseNodeType DisplayType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHomebaseSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData Keep_Level;
	struct FortGameplayAttributeData Keep_AmmoStash_Level;
	struct FortGameplayAttributeData Keep_Armory_Level;
	struct FortGameplayAttributeData Keep_Medical_Level;
	struct FortGameplayAttributeData Keep_Storage_Level;
	struct FortGameplayAttributeData Keep_Workshop_Level;
	struct FortGameplayAttributeData Keep_StructureCap;
	struct FortGameplayAttributeData Keep_PermaniteCap;
	struct FortGameplayAttributeData Manor_Level;
	struct FortGameplayAttributeData Manor_StructureCap;
	struct FortGameplayAttributeData InventorySizeBonus;
	struct FortGameplayAttributeData WorldInventorySizeBonus;
	struct FortGameplayAttributeData StorageInventorySizeBonus;
	struct FortGameplayAttributeData ResearchPointMaxBonus;
	struct FortGameplayAttributeData MaxLevelBonus_Global;
	struct FortGameplayAttributeData MaxLevelBonus_Schematics;
	struct FortGameplayAttributeData MaxLevelBonus_Schematics_Ranged;
	struct FortGameplayAttributeData MaxLevelBonus_Schematics_Melee;
	struct FortGameplayAttributeData MaxLevelBonus_Schematics_Traps;
	struct FortGameplayAttributeData MaxLevelBonus_Personnel;
	struct FortGameplayAttributeData MaxLevelBonus_Alterations;
	struct FortGameplayAttributeData rate_per_second_collector_Token_collectionresource_nodegatetoken01;
	struct FortGameplayAttributeData max_capacity_collector_Token_collectionresource_nodegatetoken01;
	struct FortGameplayAttributeData SupplyDrop_Magnitude;
	struct FortGameplayAttributeData SupplyDrop_Level;
	struct FortGameplayAttributeData ExpeditionSquadOne_Power;
	struct FortGameplayAttributeData ExpeditionSquadTwo_Power;
	struct FortGameplayAttributeData ExpeditionSquadThree_Power;
	struct FortGameplayAttributeData ExpeditionSquadFour_Power;
	struct FortGameplayAttributeData ExpeditionSquadFive_Power;
	struct FortGameplayAttributeData ExpeditionSquadSix_Power;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomeTeleporterInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHookGunRope : public AActor
{
public:
	class UClass* RopeMesh;
	class UClass* RopeProjectileMesh;
	struct Vector StartLocation;
	struct Vector EndLocation;
	class UClass* WeaponMesh;
	struct FName WeaponMeshSocketName;
	class UClass* OwningProjectileMesh;
	struct FName OwningProjectileMeshSocketName;
	struct FScriptMulticastDelegate OnEndReel;
	bool bProjectileGone;
	struct HookGunRopeRepData HookGunRopeRepData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHotfixBehaviorVolume : public AActor
{
public:
	class UClass* TriggerBoxComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHotfixBlockingVolume : public AActor
{
public:
	class UClass* BlockBoxComponent;
	struct Vector ReplicatedExtent;
	bool bNeededOnClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHotfixKillVolume : public AActor
{
public:
	class UClass* KillBoxComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHotfixManager : public OnlineHotfixManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHotfixUndergroundVolume : public AActor
{
public:
	class UClass* TriggerBoxComponent;
	struct Vector ReplicatedExtent;
	bool bNeededOnClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHoverboardCameraMode : public UFortCameraMode_ThirdPerson
{
public:
	class UClass* VelocityBasedFOVIncreaseCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorCameraComponent : public CineCameraComponent
{
public:
	class UClass* SpectatorController;
	class UClass* IntendedViewTarget;
	class UClass* CurrentBlend;
	class UClass* ScreenFringeFOVCurve;
	float ZoomRate;
	float FocalLengthInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHoverDroneCameraComponent : public FortSpectatorCameraComponent
{
public:
	float DroneTiltInterpSpeed_Accel;
	float DroneTiltInterpSpeed_Decel;
	struct Vector TiltUpVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHUDTagPromptTagMapping : public UDataAsset
{
public:
	TArray<struct FortHUDTagPromptData> TagToPromptDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHUDTargetUnderReticleInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHuskAnimInstance : public UFortAIAnimInstance
{
public:
	EFortHuskAnimType HuskAnimType;
	float FallAsleepAnimDuration;
	float AltFallAsleepAnimDuration;
	float WakeUpAnimDuration;
	float FallAsleepToSleepingCrossfade;
	float WakeUpToIdleCrossfade;
	float DefaultToDwarfScaleRatio;
	float LookAtAlpha;
	float LookAtInterpSpeed;
	float AdjustedLowerBodyWeight;
	float AdjustedLowerBodyInterpSpeed;
	float RunPlayRate;
	float ZapperOverrideWeight;
	float RunStartPosition;
	float AuthoredJogSpeed;
	int MovementStyleIsWalking;
	bool bForceFullBodyMontage;
	bool bIsDwarf;
	bool bIsZapper;
	bool StateTransition_IdleToMove;
	bool StateTransition_IdleToFallAsleep;
	bool StateTransition_IdleToStunned;
	bool StateTransition_IdleToKnockedbackDown;
	bool StateTransition_IdleToKnockedbackUp;
	bool StateTransition_MoveToIdle;
	bool StateTransition_FallAsleepToSleeping;
	bool StateTransition_SleepingToWakeUp;
	bool StateTransition_WakeUpToIdle;
	bool StateTransition_StunnedToIdle;
	bool StateTransition_KnockedbackDownToIdle;
	bool StateTransition_KnockedbackUpToKnockedbackDown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortIconCaptureCamera : public ACameraActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIndicatedActorManagementLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIndicatorComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIndicatorManager : public UObject
{
public:
	TArray<class UClass*> AllIndicators;
	TArray<class UClass*> MiniMapIndicators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInescapableZoneTracker : public UObject
{
public:
	class UClass* NavGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInfluenceMap : public UObject
{
public:
	class UClass* GraphData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInGameMapManagerCreative : public AFortInGameMapManagerAthena
{
public:
	class UClass* HeatmapEnabledMapMaterial;
	class UClass* HeatmapDisabledMapMaterial;
	class UClass* CreativeMapMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIngredientItemDefinition : public FortWorldItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInitializationInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInitializeFromObjectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaysetGrenadeInputComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnPlaysetGrenadeTarget;
	class UClass* PlaysetGrenadeInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortObjectMoverInputComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnDuplicateBuildingActorPressed;
	struct FScriptMulticastDelegate OnDuplicateBuildingActorReleased;
	struct FScriptMulticastDelegate OnMoveToolLetGo;
	struct FScriptMulticastDelegate OnMoveToolCopyGrabOrDuplicatePressed;
	struct FScriptMulticastDelegate OnMoveToolCopyGrabOrDuplicateReleased;
	struct FScriptMulticastDelegate OnMoveToolRotateClockwisePressed;
	struct FScriptMulticastDelegate OnMoveToolRotateClockwiseReleased;
	struct FScriptMulticastDelegate OnMoveToolRotateCounterclockwisePressed;
	struct FScriptMulticastDelegate OnMoveToolRotateCounterclockwiseReleased;
	struct FScriptMulticastDelegate OnMoveToolRotateSingleClockwisePressed;
	struct FScriptMulticastDelegate OnMoveToolRotateSingleClockwiseReleased;
	struct FScriptMulticastDelegate OnMoveToolRotateSingleCounterclockwisePressed;
	struct FScriptMulticastDelegate OnMoveToolRotateSingleCounterclockwiseReleased;
	struct FScriptMulticastDelegate OnMoveToolSwitchRotationAxisPressed;
	struct FScriptMulticastDelegate OnMoveToolSwitchRotationAxisReleased;
	struct FScriptMulticastDelegate OnTouchMoveToolResetRotationPressed;
	struct FScriptMulticastDelegate OnMoveToolMirror;
	struct FScriptMulticastDelegate OnMoveToolPushPressed;
	struct FScriptMulticastDelegate OnMoveToolPushReleased;
	struct FScriptMulticastDelegate OnMoveToolPullPressed;
	struct FScriptMulticastDelegate OnMoveToolPullReleased;
	struct FScriptMulticastDelegate OnMoveToolDropToFloor;
	struct FScriptMulticastDelegate OnMoveToolExitPressed;
	struct FScriptMulticastDelegate OnMoveToolExitReleased;
	struct FScriptMulticastDelegate OnMoveToolDeletePressed;
	struct FScriptMulticastDelegate OnMoveToolDeleteReleased;
	struct FScriptMulticastDelegate OnMoveToolChangePrecisionLevelPressed;
	struct FScriptMulticastDelegate OnMoveToolChangePrecisionLevelReleased;
	struct FScriptMulticastDelegate OnPlaysetPreviewPlace;
	struct FScriptMulticastDelegate OnPlaysetPreviewPushPressed;
	struct FScriptMulticastDelegate OnPlaysetPreviewPushReleased;
	struct FScriptMulticastDelegate OnPlaysetPreviewPullPressed;
	struct FScriptMulticastDelegate OnPlaysetPreviewPullReleased;
	struct FScriptMulticastDelegate OnMoveToolScaleUpPressed;
	struct FScriptMulticastDelegate OnMoveToolScaleUpReleased;
	struct FScriptMulticastDelegate OnMoveToolScaleDownPressed;
	struct FScriptMulticastDelegate OnMoveToolScaleDownReleased;
	struct FScriptMulticastDelegate OnMoveToolSwitchScaleAxisPressed;
	struct FScriptMulticastDelegate OnTouchMoveToolResetScalePressed;
	struct FScriptMulticastDelegate OnMoveToolSwitchScaleAxisReleased;
	struct FScriptMulticastDelegate OnCycleTransformationModeUpPressed;
	struct FScriptMulticastDelegate OnCycleTransformationModeDownPressed;
	struct FScriptMulticastDelegate OnSelectTranslationModePressed;
	struct FScriptMulticastDelegate OnSelectRotationModePressed;
	struct FScriptMulticastDelegate OnSelectScaleModePressed;
	struct FScriptMulticastDelegate OnMultiSelectPressed;
	struct FScriptMulticastDelegate OnMultiSelectReleased;
	struct FScriptMulticastDelegate OnClearMultiSelectPressed;
	struct FScriptMulticastDelegate OnMoveToolHitTraceRulePressed;
	struct FScriptMulticastDelegate OnMoveToolHitTraceRuleReleased;
	class UClass* OwningPC;
	class UClass* CreativeMoveToolEquippedInputComponent;
	class UClass* PropPossessorEquippedInputComponent;
	class UClass* MoveObjectsFreelyModeInputComponent;
	class UClass* MultiSelectMoveObjectsFreelyModeInputComponent;
	class UClass* MoveBuildingsOnGridModeInputComponent;
	class UClass* MultiSelectMoveBuildingsOnGridModeInputComponent;
	class UClass* TranslationInputComponent;
	class UClass* RotationInputComponent;
	class UClass* ScaleInputComponent;
	class UClass* EmptyInputComponent;
	class UClass* PlaysetPreviewModeInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPossessedPropInputComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnPossessedPropCancel;
	struct FScriptMulticastDelegate OnPossessedPropPlace;
	struct FScriptMulticastDelegate OnPossessedPropMakeNoise;
	class UClass* FortPossessedPropInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRiftBubblePossessedPropInputComponent : public UFortPossessedPropInputComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDataDrivenPossessedPropInputComponent : public UFortPossessedPropInputComponent
{
public:
	TArray<struct InputEventBinding> PossessedPropPlaceBindings;
	TArray<struct InputEventBinding> PossessedPropMakeNoiseBindings;
	TArray<struct InputEventBinding> PossessedPropCancelBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInputData : public UPrimaryDataAsset
{
public:
	struct FName ConfigDName;
	struct FName ConfigEName;
	struct FName ConfigFName;
	struct FName ConfigGName;
	struct FName ConfigDAthenaName;
	struct FName ConfigEAthenaName;
	struct FName ConfigFAthenaName;
	struct FName ConfigGAthenaName;
	struct FName ConfigHAthenaName;
	struct FName ConfigCustomAthenaName;
	struct FName GamepadAbility1Name;
	struct FName GamepadAbility2Name;
	struct FName GamepadAbility1AName;
	struct FName GamepadAbility1BName;
	struct FName GamepadAbility2AName;
	struct FName GamepadAbility2BName;
	struct FName GamepadAbility3AName;
	struct FName GamepadAbility3BName;
	struct FName GamepadPreviousBuildingName;
	struct FName GamepadNextBuildingName;
	struct FName GamepadBuildingSlot1Name;
	struct FName GamepadBuildingSlot2Name;
	struct FName GamepadBuildingSlot3Name;
	struct FName GamepadBuildingSlot4Name;
	struct FName GamepadToggleHarvestWeaponName;
	struct FName GamepadToggleHarvestWeaponOrAltInteractName;
	struct FName GamepadToggleCreativePhoneWeaponName;
	struct FName GamepadToggleHarvestOrHoldCreativePhoneName;
	struct FName GamepadSelectPreviousWeaponName;
	struct FName GamepadSelectNextWeaponName;
	struct FName GamepadCreativeQuickbarSelectNextName;
	struct FName GamepadCreativeQuickbarSelectPreviousName;
	struct FName GamepadNextWeaponOrHarvestHoldName;
	struct FName GamepadNextWeaponOrAltInteractOrHarvestHoldName;
	struct FName GamepadTapSelectPreviousWeaponForChordAbilities;
	struct FName GamepadTapSelectNextWeaponForChordAbilities;
	struct FName GamepadTrapPickerName;
	struct FName GamepadUseOrTrapPickerName;
	struct FName GamepadUseOrTrapPickerAndPlaceName;
	struct FName GamepadChangeMaterialOrHarvestHoldName;
	struct FName GamepadSwitchModeOrEditBuildingName;
	struct FName GamepadImproveOrRotateBuildingPieceName;
	struct FName GamepadRepairHoldOrRotateBuildingPieceName;
	struct FName GamepadPerformBuildingEditInteractionOrCancelPersonalVehicleName;
	struct FName DBNOCarryHoistName;
	struct FName AlternateInteractCarryName;
	struct FName HotbarKey1Name;
	struct FName HotbarKey2Name;
	struct FName HotbarKey3Name;
	struct FName HotbarKey4Name;
	struct FName HotbarKey5Name;
	struct FName HotbarKey6Name;
	struct FName HotbarKey7Name;
	struct FName HotbarKey8Name;
	struct FName HotbarKey9Name;
	struct FName HotbarKeyF1Name;
	struct FName HotbarKeyF2Name;
	struct FName HotbarKeyF3Name;
	struct FName HotbarKeyF4Name;
	struct FName HotbarKeyF5Name;
	struct FName HotbarKeyF6Name;
	struct FName HotbarKeyF7Name;
	struct FName HotbarKeyF8Name;
	struct FName HotbarKeyF9Name;
	struct FName HotbarKeyF10Name;
	struct FName HotbarKeyF11Name;
	struct FName HotbarKeyF12Name;
	struct FName CreativeQuickbarActivateClutchName;
	struct FName CreativeQuickbarKey1Name;
	struct FName CreativeQuickbarKey2Name;
	struct FName CreativeQuickbarKey3Name;
	struct FName CreativeQuickbarKey4Name;
	struct FName CreativeQuickbarKey5Name;
	struct FName CreativeQuickbarKey6Name;
	struct FName CreativeQuickbarKey7Name;
	struct FName CreativeQuickbarKey8Name;
	struct FName TrapPickerName;
	struct FName ChangeMaterialName;
	struct FName BuildConfirmName;
	struct FName PerformBuildingEditInteractionName;
	struct FName PerformBuildingImprovementInteractionName;
	struct FName PickerConfirmName;
	struct FName EndOfZonePickerConfirmName;
	struct FName PickerCancelName;
	struct FName EmotePickerName;
	struct FName SquadQuickChatPickerName;
	struct FName SwitchQuickBarName;
	struct FName UseName;
	struct FName UseOrReloadName;
	struct FName ReloadName;
	struct FName InventoryOrChatHoldName;
	struct FName FireName;
	struct FName TargetName;
	struct FName RotatePrimitiveClockwiseName;
	struct FName ToggleFullScreenMapName;
	struct FName GamepadToggleFullScreenMapName;
	struct FName GamepadToggleFullScreenMapWhileBuildingName;
	struct FName GamepadToggleFullScreenMapWhileEditingName;
	struct FName ToggleInventoryName;
	struct FName GamepadToggleInventoryName;
	struct FName GamepadToggleInventoryWhileBuildingName;
	struct FName GamepadToggleInventoryWhileEditingName;
	struct FName JumpName;
	struct FName GamepadJumpName;
	struct FName CrouchName;
	struct FName CrouchWhileBuildingName;
	struct FName CrouchWhileEditingName;
	struct FName CrouchOrRepairName;
	struct FName CrouchOrRepairWhileBuildingName;
	struct FName CrouchOrRepairWhileEditingName;
	struct FName QuickHealingName;
	struct FName ShoppingCartCoastName;
	struct FName CannonShootName;
	struct FName GamepadCannonShootName;
	struct FName CannonCoastName;
	struct FName GamepadCannonCoastName;
	struct FName GolfCartEBrakeName;
	struct FName GamepadGolfCartEBrakeLeftName;
	struct FName GamepadGolfCartEBrakeRightName;
	struct FName GamepadGolfCartForwardName;
	struct FName GamepadGolfCartReverseName;
	struct FName GolfCartHonkName;
	struct FName GamepadQuadCrasherForwardName;
	struct FName GamepadQuadCrasherReverseName;
	struct FName QuadCrasherHonkName;
	struct FName QuadCrasherBoostName;
	struct FName GamepadQuadCrasherBoostLeftName;
	struct FName GamepadQuadCrasherBoostRightName;
	struct FName GamepadQuadCrasherBoostExtraName;
	struct FName JackalBoostName;
	struct FName JackalJumpName;
	struct FName GamepadJackalJumpName;
	struct FName GamepadJackalBoostLeftName;
	struct FName GamepadJackalBoostRightName;
	struct FName JackalUseOrExitName;
	struct FName GamepadJackalExitName;
	struct FName GamepadJackalUseOrExitName;
	struct FName HamsterballBoostName;
	struct FName HamsterballShootName;
	struct FName HamsterballExtendName;
	struct FName GamepadHamsterballBoostLeftName;
	struct FName GamepadHamsterballBoostRightName;
	struct FName GamepadHamsterballShootName;
	struct FName GamepadHamsterballExtendName;
	struct FName BiplanePitchForward;
	struct FName BiplanePitchForwardSecondary;
	struct FName BiplaneRollRightName;
	struct FName BiplaneRollLeftName;
	struct FName BiplaneRollInvertName;
	struct FName BiplaneStartEngineName;
	struct FName BiplaneStopEngineName;
	struct FName BiplaneTaxiBackwardsName;
	struct FName BiplaneBoostName;
	struct FName BiplaneShootName;
	struct FName BiplaneFreelookName;
	struct FName GamepadBiplanePitchForward;
	struct FName GamepadBiplaneRollRightName;
	struct FName GamepadBiplaneRollLeftName;
	struct FName GamepadBiplaneRollInvertName;
	struct FName GamepadBiplaneStartEngineName;
	struct FName GamepadBiplaneStopEngineName;
	struct FName GamepadBiplaneTaxiBackwardsName;
	struct FName GamepadBiplaneBoostName;
	struct FName GamepadBiplaneShootName;
	struct FName HoagieBoostName;
	struct FName GamepadHoagieBoostName;
	struct FName OstrichBoostName;
	struct FName GamepadOstrichBoostName;
	struct FName OstrichJumpName;
	struct FName GamepadOstrichJumpName;
	struct FName OstrichPrimaryFireName;
	struct FName GamepadOstrichPrimaryFireName;
	struct FName OstrichSecondaryFireName;
	struct FName GamepadOstrichSecondaryFireName;
	struct FName OstrichShieldBoostName;
	struct FName GamepadOstrichShieldBoostName;
	struct FName OstrichSelfDestructName;
	struct FName GamepadOstrichSelfDestructName;
	struct FName TogglePickAxeName;
	struct FName GamepadResetCameraName;
	struct FName GamepadTogglePickAxeHoldGyroName;
	struct FName GamepadGyroModifierName;
	struct FName GamepadResetCameraHoldGyroName;
	struct FName ToggleCreativePhoneName;
	struct FName ToggleQuickMenuName;
	struct FName GamepadSquadQuickChatPickerName;
	struct FName GamepadEmotePickerOrReplayLastEmoteHoldName;
	struct FName GamepadEmotePickerOrReplayLastEmoteHoldWhileBuildingName;
	struct FName GamepadEmotePickerOrReplayLastEmoteHoldWhileEditingName;
	struct FName GamepadSwitchModeName;
	struct FName CreativeMoveToolEquippedGrabOrLetGoName;
	struct FName CreativeMoveToolEquippedCopyGrabOrDuplicateName;
	struct FName CreativePossessPropActivateName;
	struct FName CreativeMoveToolEquippedDeleteName;
	struct FName CreativeToggleGhostName;
	struct FName CreativeToggleInvulnerablityName;
	struct FName CreativeToggleHeatmapName;
	struct FName CreativeMoveToolMultiSelectName;
	struct FName CreativeMoveToolClearMultiSelectName;
	struct FName CreativeMoveObjectsFreelyLetGoName;
	struct FName CreativeMoveObjectsFreelyDuplicateName;
	struct FName CreativeMoveObjectsFreelyDropToFloorName;
	struct FName CreativeMoveObjectsFreelyRotateClockwiseName;
	struct FName CreativeMoveObjectsFreelyRotateCounterclockwiseName;
	struct FName CreativeMoveObjectsFreelySwitchAxisName;
	struct FName CreativeMoveObjectsFreelyPushName;
	struct FName CreativeMoveObjectsFreelyPullName;
	struct FName CreativeMoveObjectsFreelyExitName;
	struct FName CreativeMoveObjectsFreelyChangePrecisionLevelName;
	struct FName CreativeMoveBuildingsOnGridLetGoName;
	struct FName CreativeMoveBuildingsOnGridDuplicateName;
	struct FName CreativeMoveBuildingsOnGridRotateClockwiseName;
	struct FName CreativeMoveBuildingsOnGridRotateCounterclockwiseName;
	struct FName CreativeMoveBuildingsOnGridMirrorName;
	struct FName CreativeMoveBuildingsOnGridExitName;
	struct FName CreativeMoveBuildingsOnGridChangePrecisionLevelName;
	struct FName CreativeFlyUpName;
	struct FName CreativeFlyDownName;
	struct FName CreativeIslandPanelSupportAffiliateName;
	struct FName CreativeIslandPanelStartMinigameName;
	struct FName CreativeIslandPanelToggleDetailsName;
	Unknown ScreenLabels;
	struct FText MoveLabel;
	struct FText LookLabel;
	struct FText SwitchQuickbarLabel;
	struct FText JumpLabel;
	struct FText SprintLabel;
	struct FText AutoSprintLabel;
	struct FText NextWeaponLabel;
	struct FText PreviousWeaponLabel;
	struct FText NextWeaponTapLabel;
	struct FText PreviousWeaponTapLabel;
	struct FText NextBuildingPieceLabel;
	struct FText PreviousBuildingPieceLabel;
	struct FText GamepadStairSelectAndPlaceLabel;
	struct FText GamepadRoofSelectAndPlaceLabel;
	struct FText GamepadWallSelectAndPlaceLabel;
	struct FText GamepadFloorSelectAndPlaceLabel;
	struct FText GamepadTrapSelectAndPlaceLabel;
	struct FText GamepadTrapPickerHoldLabel;
	struct FText GamepadChangeMaterialOrTrapPickerLabel;
	struct FText HarvestWeaponHoldLabel;
	struct FText HarvestWeaponLabel;
	struct FText AimDownSightsLabel;
	struct FText AimDownSightsHeavyMeleeLabel;
	struct FText Ability1Label;
	struct FText Ability2Label;
	struct FText Ability3Label;
	struct FText Gadget1Label;
	struct FText Gadget2Label;
	struct FText RotateBuildingLabel;
	struct FText RotateBuildingTapRepairHoldLabel;
	struct FText BuildingEditResetLabel;
	struct FText ReloadLabel;
	struct FText ReloadTapLabel;
	struct FText CraftAmmoHoldLabel;
	struct FText InteractTapHoldLabel;
	struct FText UseOrReloadLabel;
	struct FText CrouchLabel;
	struct FText ToggleFullScreenMapLabel;
	struct FText ToggleInventoryLabel;
	struct FText GameMenuLabel;
	struct FText PlaceBuildingOrTrapConfirmLabel;
	struct FText AttackConfirmLabel;
	struct FText ChangeMaterialLabel;
	struct FText EmoteLabel;
	struct FText EmoteOrQuickChatLabel;
	struct FText ChatHoldLabel;
	struct FText PickTrapTapLabel;
	struct FText TrapInventoryHoldLabel;
	struct FText PickTrapTapHoldLabel;
	struct FText PickTrapLabel;
	struct FText EditBuildingPieceHoldLabel;
	struct FText SwitchQuickBarTapLabel;
	struct FText DeployHoverboardLabel;
	struct FText RepairImproveSpotEnemyLabel;
	struct FText RepairLabel;
	struct FText RepairHoldLabel;
	TArray<struct FortActionKeyMapping> InputOptionsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInspectorCameraCreative : public ACameraActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInspectorCameraCreativePreview : public AFortInspectorCameraCreative
{
public:
	struct Guid SavedActorGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInstancedStaticMeshActor : public AFortStaticMeshActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIntelPackSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData MaxCharges;
	struct FortGameplayAttributeData CurrentCharges;
	struct FortGameplayAttributeData StormTrackerCost;
	struct FortGameplayAttributeData RevealedTargetsRange;
	struct FortGameplayAttributeData RevealedTargetsDuration;
	struct FortGameplayAttributeData RevealedTargetsCost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIntensityCurveSequence : public UDataAsset
{
public:
	TArray<struct DataTableRowHandle> IntensityCurves;
	EFortIntensityCurveSequenceType SequenceType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIntensityCurveSequenceProgression : public UDataAsset
{
public:
	TArray<struct FortInstensityCurveSequenceProgression> IntensityCurveSequences;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInteractabilityTracker : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInteractContextInfo : public UObject
{
public:
	struct FText ContextText;
	struct LinearColor ContextTextColor;
	struct FText ContextSubText;
	struct LinearColor ContextSubTextColor;
	class UClass* ContextOverrideWidget;
	class UClass* SecondContextOverrideWidget;
	struct FText SecondContextText;
	struct LinearColor SecondContextTextColor;
	struct FText SecondContextSubText;
	struct LinearColor SecondContextSubTextColor;
	struct FText ErrorText;
	class UClass* ReceivingActor;
	class UClass* InteractComponent;
	class UClass* OptionalObjectData;
	class UClass* LongInteractSound;
	class UClass* OptionalHUDDisplayWidget;
	struct Vector InteractPoint;
	EInteractionBeingAttempted InteractionBeingAttempted;
	float RequiredDuration;
	float SecondRequiredDuration;
	bool bShowCountDown;
	bool bShowFirstInteraction;
	bool bShowSecondInteraction;
	bool bIsSecondInteractionActive;
	bool bDisplayTextOnly;
	bool bSuppressInteractionWidget;
	bool bHasCustomInteractionWidget;
	bool bSuppressSimpleInteractionWidgetForTouch;
	EFortInteractContextInfoType InteractContextInfoType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInteractContextInfoWidget : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractionTypeContext : public UObject
{
public:
	struct InteractionType InteractionType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInteractInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInterface_OverrideCanInteract : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInteriorAudioSettings : public UPrimaryDataAsset
{
public:
	Unknown Dictionaries;
	int HorizontalScanDistance;
	int VerticalScanDistance;
	int TotalBuildingCountRequiredForInterior;
	int TotalBuildingCountRequiredForPartialExterior;
	int TotalCeilingCountRequiredAlongHorizontalScan;
	int HorizontalLineTraceDistance;
	int VerticalLineTraceDistance;
	ECollisionChannel TraceCollisionChannel;
	class UClass* InteriorSoundMix;
	class UClass* PartialInteriorSoundMix;
	class UClass* PartialExteriorSoundMix;
	int AmbientEntryPriority;
	class UClass* AmbientBanks;
	struct GameplayTag AmbientTagOutdoors;
	struct GameplayTag AmbientTagIndoors;
	struct GameplayTag AmbientTagIndoorPlayerBuilt;
	TArray<struct InteriorAudioRoomSizeInfo> RoomSizeInfo;
	class UClass* SourceBusAsset;
	float SourceBusFadeInTime;
	float SourceBusFadeOutTime;
	float SourceBusCrossfadeTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInteriorAudioSubsystem : public UWorldSubsystem
{
public:
	struct SoftObjectPath InteriorAudioSettingsPath;
	class UClass* Settings;
	struct FScriptMulticastDelegate OnInteriorStateChanged;
	struct FScriptMulticastDelegate OnRoofStateChanged;
	class UClass* FPC;
	struct InteriorAudioPlayerInfo Player;
	class UClass* BuildingGrid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInventory : public AActor
{
public:
	EFortInventoryType InventoryType;
	struct FortItemList Inventory;
	class UClass* ReplayPawn;
	bool bRequiresLocalUpdate;
	bool bRequiresSaving;
	bool bIsShuttingDown;
	TArray<class UClass*> PendingInstances;
	TArray<class UClass*> RecentlyAdded;
	TArray<class UClass*> RecentlyRemoved;
	TArray<class UClass*> RecentlyChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInventoryInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInventoryManager : public UObject
{
public:
	class UClass* PersistenceManager;
	struct FString VkProjectId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortInventoryOutpost : public AFortInventory
{
public:
	TArray<class UClass*> UnavailableItemInstances;
	bool bHasUnavailableItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInventoryOverrideProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInventoryOwnerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInventorySubsystem : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate OnItemAddedDelegate;
	struct FScriptMulticastDelegate OnItemRemovedDelegate;
	struct FScriptMulticastDelegate OnViewTargetInventoryUpdatedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortIslandLocalizationComponent : public UActorComponent
{
public:
	class UClass* SaveComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemIconDefinition : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> SmallImage;
	struct TSoftClassPtr<UObject> LargeImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemAccessTokenType : public FortAccountItemDefinition
{
public:
	EItemProfileType ProfileType;
	class UClass* access_item;
	struct FText UnlockDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemAnimInstance : public UFortBaseAnimInstance
{
public:
	EFortCustomGender Gender;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCacheItemDefinition : public FortWorldItemDefinition
{
public:
	struct TSoftClassPtr<UObject> CardPackReward;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemCaptureActor : public AActor
{
public:
	class UClass* ItemDefinition;
	Unknown Renderer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemCategory : public UDataAsset
{
public:
	TArray<struct ItemCategoryMappingData> PrimaryCategories;
	TArray<struct ItemCategory> SecondaryCategories;
	TArray<struct ItemCategory> TertiaryCategories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemDefinitionAbilitySetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemDefinitionItemModifierInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemEntryComponent : public UActorComponent
{
public:
	struct FortItemEntry OwnedItemEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemEntrySubsystem : public UGameInstanceSubsystem
{
public:
	Unknown ItemAbilityCooldownMap;
	Unknown ItemTaggedIntegerMap;
	Unknown ItemTaggedFloatMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemExhibitActor : public AFortExhibitActor
{
public:
	struct FString ItemInstanceId;
	class UClass* ExhibitItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemGlobalData : public UPrimaryDataAsset
{
public:
	int RarityToMaxLevel;
	struct CurveTableRowHandle RarityToFusionXPCurveTableRow;
	struct CurveTableRowHandle LevelUpXPCostCurveTableRow;
	struct DataTableRowHandle RarityUpgradeRecipes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance_ChargedWeapon : public UFortBaseLayerAnimInstance
{
public:
	class UClass* ChargeSpeedModifierCurve;
	class UClass* WeaponChargeLoop;
	float ChargeAlpha;
	float ChargeBlendInTime;
	bool bWeaponIsCharging;
	bool bWeaponIsAtMaxCharge;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance_ExplosiveBow : public UFortItemLayerAnimInstance
{
public:
	struct FortAnimInput_BowWeapon BowWeaponInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance_FullLocomotion : public UFortItemLayerAnimInstance
{
public:
	struct FortAnimInput_SpeedWarping SpeedWarping;
	struct FortAnimInput_SpeedWarping JogStartSpeedWarping;
	struct Vector ActorSpaceVelocityDirPreTurn;
	float LocalVelocityYawAngle;
	float LocalVelocityYawAngleMinusMeleeTwist;
	float LocalVelocityYawAngleMinusJogBlendSpaceRotation;
	float StartAnimDeltaAngleNorth;
	float StartAnimDeltaAngleEast;
	float StartAnimDeltaAngleSouth;
	float StartAnimDeltaAngleWest;
	float SpeedAdjustedPlayrate;
	EFortCardinalDirection LocomotionCardinalDirection;
	EFortCardinalDirection StopCardinalDirection;
	EFortCardinalDirection PrePivotCardinalDirection;
	EFortCardinalDirection PostPivotCardinalDirection;
	bool bIsSprinting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance_GalileoPatrol : public UFortItemLayerAnimInstance_FullLocomotion
{
public:
	float WalkAdditiveStartOffset;
	struct FName PatrolLocomotionStateMachineName;
	bool bRecentlyFired;
	bool bIsLandPatrolling;
	bool bIdle_Walk_Transition;
	bool bIsPatrolLocomotionCurrentTimeAboveThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance_Lobster : public UFortItemLayerAnimInstance
{
public:
	struct Rotator RootRotationOffset;
	TArray<struct FortMeleeDeflectAnimData> MeleeDeflectAnimData;
	class UClass* DeflectEntry1Anim;
	class UClass* DeflectHold1Anim;
	class UClass* DeflectExit1Anim;
	class UClass* DeflectTransition1_2Anim;
	class UClass* DeflectHold2Anim;
	class UClass* DeflectExit2Anim;
	class UClass* DeflectTransition2_1Anim;
	int ActiveDeflectionIndex;
	int NextDeflectionIndex;
	bool bIsMeleeGuarding;
	bool bIsMeleeDeflecting;
	bool bIsMeleeDodging;
	bool bIsMeleeDodgingNorth;
	bool bIsMeleeDodgingSouth;
	bool bIsMeleeDodgingWest;
	bool bIsMeleeDodgingEast;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewSingleAngleActor : public AFortItemPreviewActor
{
public:
	class UClass* ZoomedOutCameraComponent;
	class UClass* ZoomedInCameraComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewOffPawnActor : public AFortItemPreviewSingleAngleActor
{
public:
	class UClass* PreviewActorComponent;
	class UClass* PreviewStaticMeshComponent;
	class UClass* PreviewSkelMeshComponent;
	class UClass* ContentOnDemandItemDefinition;
	bool bUseItemDefConfiguredLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewOnPawnActor : public AFortItemPreviewMultiAngleActor
{
public:
	class UClass* ZoomedInBodyCameraComponent;
	class UClass* ZoomedOutTallBodyCameraComponent;
	class UClass* ZoomedInTallBodyCameraComponent;
	class UClass* ZoomedOutBackpackCameraComponent;
	class UClass* ZoomedInBackpackCameraComponent;
	class UClass* ZoomedOutSkydiveCameraComponent;
	class UClass* ZoomedInSkydiveCameraComponent;
	class UClass* ZoomedOutEmoteCameraComponent;
	class UClass* ZoomedInEmoteCameraComponent;
	class UClass* ZoomedOutEmoteHighCameraComponent;
	class UClass* ZoomedInEmoteHighCameraComponent;
	class UClass* ZoomedOutEmoticonCameraComponent;
	class UClass* ZoomedInEmoticonCameraComponent;
	class UClass* ZoomedOutPickaxeCameraComponent;
	class UClass* ZoomedInPickaxeCameraComponent;
	class UClass* ZoomedOutDualPickaxeCameraComponent;
	class UClass* ZoomedInDualPickaxeCameraComponent;
	class UClass* ZoomedOutDoubleWristPickaxeCameraComponent;
	class UClass* ZoomedInDoubleWristPickaxeCameraComponent;
	class UClass* ZoomedOutPersonalGliderCameraComponent;
	class UClass* ZoomedInPersonalGliderCameraComponent;
	class UClass* ZoomedOutCharacterCustomizerCameraComponent;
	class UClass* ZoomedInCharacterCustomizerCameraComponent;
	class UClass* HeroPawnComponent;
	class UClass* EquippedWeapon;
	class UClass* EquippedParachute;
	float ContrailGlideVerticalVelocity;
	float ContrailDiveVerticalVelocity;
	float EmotePlayDelay;
	float EmoteFXDuration;
	class UClass* FXSystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemSeriesDefinition : public UPrimaryDataAsset
{
public:
	struct FText DisplayName;
	struct FortColorPalette Colors;
	struct TSoftClassPtr<UObject> BackgroundTexture;
	struct TSoftClassPtr<UObject> ItemCardMaterial;
	struct TSoftClassPtr<UObject> BackgroundMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemsForEventMapping : public UDataAsset
{
public:
	TArray<struct ItemsForEventData> ItemsForEventArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URealTimeThumbnailSubsystem : public UGameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortThumbnailRenderer : public UObject
{
public:
	class UClass* AlphaMaskMaterial;
	class UClass* EffectMaskMaterial;
	class UClass* PrivateWorld;
	int RendererIndex;
	int SurfaceWidth;
	int SurfaceHeight;
	class UClass* DiffuseRT;
	class UClass* AlphaMaskRT;
	class UClass* EffectsRT;
	class UClass* CaptureComponent;
	Unknown CaptureTargetPtr;
	TArray<Unknown> AlphaMaskActorPtrs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemThumbnailRenderer : public UFortThumbnailRenderer
{
public:
	class UClass* PreviewMaterial;
	class UClass* CaptureEnvironmentActorClass;
	class UClass* ItemDefinition;
	class UClass* PreviewMaterialInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemToBuildingGameplayActorPickupMapping : public UDataAsset
{
public:
	Unknown ItemToBGAMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemVariantData : public UDataAsset
{
public:
	TArray<struct FortVariantData> Variants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemDefToItemVariantDataMapping : public UDataAsset
{
public:
	TArray<struct ItemDefToItemVariantDataMapping> ItemDefToItemVariantDataMappings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemWrapMappingData : public UDataAsset
{
public:
	TArray<struct ItemWrapSlotMetadata> SlotMetadata;
	struct TSoftClassPtr<UObject> MasterVehicleMaterial;
	struct TSoftClassPtr<UObject> MasterWeaponMaterial;
	struct TSoftClassPtr<UObject> MasterCharacterMaterial;
	struct GameplayTag DoNotApplyWrapsTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemWrapMaterialAssetData : public UAssetUserData
{
public:
	class UClass* GeneratedMaterial_Vehicle_Opaque;
	class UClass* GeneratedMaterial_Vehicle_Masked;
	class UClass* GeneratedMaterial_Weapon_Opaque;
	class UClass* GeneratedMaterial_Character_Opaque;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemWrapOverrideComponent : public UActorComponent
{
public:
	struct TSoftClassPtr<UObject> ReplicatedItemWrapOverride;
	class UClass* CurrentOverrideHardRef;
	TArray<struct McpVariantChannelInfo> VariantInfo;
	Unknown OriginalMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemWrapPreviewActor : public AActor
{
public:
	struct ItemWrapPreviewEntry CurrentEntryInfo;
	class UClass* MyWrap;
	class UClass* ItemWrapModifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortJumpBoostSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData BoostActive;
	struct FortGameplayAttributeData MaxFuel;
	struct FortGameplayAttributeData Fuel;
	struct FortGameplayAttributeData ReserveMaxFuel;
	struct FortGameplayAttributeData ReserveFuel;
	struct FortGameplayAttributeData FuelBurnRate;
	struct FortGameplayAttributeData FuelRegenRate;
	struct FortGameplayAttributeData FuelRegenDelay;
	struct FortGameplayAttributeData BoostFuelCost;
	struct FortGameplayAttributeData UpwardThrust;
	struct FortGameplayAttributeData LateralThrust;
	struct FortGameplayAttributeData UpwardAcceleration;
	struct FortGameplayAttributeData LateralAcceleration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortJumpDownLink : public ANavLinkProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortLauncherAthena : public ABuildingTrapFloor
{
public:
	struct ScalableFloat LaunchStrength;
	struct ScalableFloat LaunchStrengthVehicle;
	class UClass* OnLaunchSound3P;
	class UClass* OnLaunchSound1P;
	bool bAllowMultipleTriggers;
	bool bLaunchPlayersFromVehicles;
	struct ServerLaunchInfo ServerLaunchInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLeaderboardRowProxyInstance : public UObject
{
public:
	struct LeaderboardRowData RowData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelDuplicatable : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLevelLightSwitchInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLevelOverlayConfig : public UDataAsset
{
public:
	TArray<struct FortSourceWorldAndOverlayWorld> OverlayList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLevelOverlayManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveBaseComponent : public UActorComponent
{
public:
	struct FString ExplicitSaveFile;
	float TimeBetweenSaves;
	bool bAutoLoadRecord;
	class UClass* LevelRecord;
	TArray<class UClass*> ActorToAddAfterWrite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveComponent : public ULevelSaveBaseComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLevelSaveComponent : public ULevelSaveComponent
{
public:
	struct FScriptMulticastDelegate OnStartPlotLoadForUser;
	struct FScriptMulticastDelegate OnFinishedReadingMnemonicLink;
	struct FScriptMulticastDelegate OnFinishedPlaysetLoad;
	struct FScriptMulticastDelegate OnFinishedEnumeratingFiles;
	struct FScriptMulticastDelegate OnFinishedLoadingCloudFiles;
	struct FScriptMulticastDelegate OnFinishedWritingCloudFiles;
	struct FScriptMulticastDelegate OnFinishedEnumeratingTitleFiles;
	struct FScriptMulticastDelegate OnFinishedReadingCloudFiles;
	struct FScriptMulticastDelegate OnClientSaveStateChanged;
	struct FScriptMulticastDelegate OnClientBackupSaveStateChanged;
	struct FScriptMulticastDelegate OnClientBackupRestoreStateChanged;
	struct FScriptMulticastDelegate OnClientCheckpointDateChanged;
	struct FScriptMulticastDelegate OnPlotUnloaded;
	class UClass* RestrictedPlotDefinition;
	bool bAutoLoadFromRestrictedPlotDefinition;
	int LinkCodeNumberToAutoLoad;
	bool bLoadRandomLinkCode;
	bool bLoadMatchAssignedCode;
	bool bCuratedHub;
	bool bLoadPlaysetFromPlot;
	struct UniqueNetIdRepl AccountIdOfOwner;
	class UClass* LoadedPlot;
	bool bPermissionsSaveInProgress;
	bool bCurated;
	struct FortCreativePlotPermissionData PlotPermissions;
	struct FString LoadedPlotInstanceId;
	struct CreativeLoadedLinkData LoadedLinkData;
	bool bIsLoaded;
	bool bIsAutoSaving;
	EBackupSaveState BackupSaveState;
	EBackupSaveState RestoringState;
	struct DateTime LastCheckpointDateUtc;
	struct FortCreativePlotPermissionData OldPermissions;
	int PublishRateLimitSeconds;
	int BackupRateLimitSeconds;
	int RestoreRateLimitSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortLevelScriptActor : public ALevelScriptActor
{
public:
	bool bWorldReadyCalled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortLevelSpawnActor : public AActor
{
public:
	struct FName SpecialActorUniqueID;
	struct GameplayTag SpecialActorCategoryTag;
	struct SlateBrush MiniMapIconBrush;
	struct Vector2D MiniMapIconScale;
	int CachedSpecialActorIdx;
	struct FName SpecialActorID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLevelStreamComponent : public UActorComponent
{
public:
	bool bAutoLoadLevel;
	bool bAllowUnload;
	TArray<struct TSoftClassPtr<UObject>> LevelsToLoad;
	Unknown StreamedLevels;
	TArray<struct FortLevelStreamingData> LevelStreamingData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPointLightComponent : public UPointLightComponent
{
public:
	TArray<struct LightOverrideSettings> OverrideSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpotLightComponent : public USpotLightComponent
{
public:
	TArray<struct LightOverrideSettings> OverrideSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortLightningActor : public AFortClientOnlyActor
{
public:
	int MaxBoltMeshes;
	float MaxBoltWidth;
	struct FName BoltMaterialParamTopPct;
	struct FName BoltMaterialParamBottomPct;
	class UClass* ActorToNotify;
	TArray<struct Vector> BoltLocations;
	TArray<class UClass*> BoltMeshes;
	TArray<class UClass*> BoltMIDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLinkDataManager : public UGameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLinkedAccount : public UObject
{
public:
	class UClass* Manager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLinkedAccountManager : public UObject
{
public:
	TArray<class UClass*> LinkedAccounts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLinkedAnimLayerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLinkToActorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnLinkedActorDestroyed;
	struct FScriptMulticastDelegate OnLinkedActorDisconnected;
	bool bPerformLinkingCheckOnBeginPlay;
	bool bRegisterWithOwnerMovementComponent;
	bool bUseActorRotationForDirectionVectors;
	bool bMonitorLinkedActorForChanges;
	ELinkToDirection DirectionForLink;
	float DirectionTraceLength;
	struct FName ActorTag;
	Unknown ActorLinkedTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerSpectating : public FortPlayerControllerGameplay
{
public:
	ESpectatorCameraType CurrentCameraType;
	TArray<ESpectatorCameraType> CameraModeCycle;
	struct LinearColor MinimapPlayerIconColorBase;
	struct LinearColor MinimapPlayerIconColorHovered;
	float ZoomThresholdForPlayerNames;
	struct QuickBarData QuickBarDefinitions;
	struct FScriptMulticastDelegate OnFollowedPlayerChanged;
	struct FScriptMulticastDelegate OnCameraTypeChanged;
	struct FScriptMulticastDelegate OnPlayerBecameRelevant;
	struct FScriptMulticastDelegate OnPlayerBecameIrrelevant;
	struct FScriptMulticastDelegate OnPlayerStateAdded;
	struct FScriptMulticastDelegate OnPlayerStateChanged;
	struct FScriptMulticastDelegate OnPlayerDied;
	struct FScriptMulticastDelegate OnTimelineScrubbed;
	struct FScriptMulticastDelegate OnZoomChanged;
	struct FScriptMulticastDelegate OnShowNotification;
	struct FScriptMulticastDelegate OnShowNotificationsEnabledChanged;
	struct FScriptMulticastDelegate OnFollowedPlayerChangedTeam;
	class UClass* SpectatorPostProcessMaterial;
	class UClass* SpectatorPawnBaseClass;
	class UClass* ThirdPersonPawnBaseClass;
	class UClass* HoverDronePawnClass;
	class UClass* BattleMapPawnClass;
	class UClass* ARDronePawnClass;
	class UClass* MinimapIndicatorClass;
	TArray<struct SavedPlayerSpectatorCameraData> SavedCameraStates;
	Unknown PlayerRelevancyTrackingMap;
	Unknown AddedPlayersMap;
	Unknown PlayerMatchReports;
	struct Vector ChaseCamOffset;
	class UClass* LastDamagerOfViewTarget;
	class UClass* HoveredActor;
	class UClass* FullScreenMapInputComponent;
	struct SavedSpectatorCameras HotkeyCameras;
	class UClass* LastKnownViewTarget;
	struct RemoteViewRotSnapshotManager RemoteViewRotSnapshotManager;
	class UClass* CameraBoundsVolume;
	bool ClampDroneToCameraBoundsVolume;
	class UClass* RelevancyZoneIndicatorClass;
	class UClass* RelevancyZoneIndicator;
	class UClass* ReplayContext;
	class UClass* MarkerComponent;
	TArray<class UClass*> SquadMembers;
	class UClass* FollowedPlayerRemoteClientInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLiveSpectatorController : public FortPlayerControllerSpectating
{
public:
	class UClass* FollowedPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLiveBroadcastController : public FortLiveSpectatorController
{
public:
	struct FScriptMulticastDelegate OnHideBusButtonFromServer;
	struct FScriptMulticastDelegate OnToggleOffAirWidgetVisibilty;
	struct FScriptMulticastDelegate OnToggleNetUIWidgetVisibilty;
	class UClass* BroadcastPostProcessingActorClass;
	class UClass* SquadMarkerActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLiveEventLayerAnimInstance : public UFortBaseLayerAnimInstance
{
public:
	class UClass* LiveEventLayerAnimBP;
	struct CachedAnimRelevancyData UnderwaterSprintStopRelevancyData;
	struct CachedAnimRelevancyData UnderwaterSwimStartRelevancyData;
	EFortCardinalDirection StopDirection;
	struct Rotator WorldFlipRotator;
	float WorldFlipAimOffsetAlpha;
	float Speed;
	float AccelerationMagnitude;
	float VelocityYaw;
	float VelocityYawLocal;
	float VelocityYawLocalStop;
	float VelocityYawLocalSmooth;
	float AccelerationYaw;
	float AccelerationYawLocal;
	float ControlRotationPitchLocal;
	float VelocityPitchDelta;
	float VelocityYawDelta;
	float ControlRotationPitchLocalDelta;
	float WorldTiltRoll;
	float WorldTiltPitch;
	float WorldFlipPitch;
	float WorldFlipRoll;
	float WorldFlipAlpha;
	float WorldTiltCameraRoll;
	float WorldFlipCameraRoll;
	float Breaststroke_Direction;
	float Pitch_AO_Input;
	float Breaststroke_AO_Yaw;
	float Breaststroke_AO_Pitch;
	bool bIsWorldTilting;
	bool bIsWorldFlipping;
	bool bUseIdleNoiseTucked;
	bool bHasWorldFullyFlipped;
	bool bEnterWorldFlipGliding;
	bool bWorldFlipBeginDive;
	bool bWorldFlipReturnToGlide;
	bool bIsFloating;
	bool bIsOnGround;
	bool bUWIdleFullyBlended;
	bool bIsChangingDirection;
	bool bIsStopping;
	bool bWantsToUpdateStop;
	bool bWantsToUpdateStopDirection;
	bool bHoldBSDirection;
	bool bTransition_UWIdle_To_UWSwimStart;
	bool bTransition_UWSprintStop_To_UWSwimStart;
	bool bTransition_UWSwimStart_To_SprintStop;
	bool bTransition_UWSwimStart_To_Idle;
	bool bTransition_UWSprintLoop_To_SprintStop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLoadingConfig : public UDataAsset
{
public:
	struct FortSubGameLoadingScreen LoadingScreenFallback;
	struct FortSubGameLoadingScreen LoadingScreens;
	struct FortEarlyAcessLoadingScreen LoadingScreenEA;
	struct SlateBrush LoadingScreenMissionBackground;
	struct SlateBrush LoadingScreenTipBackground;
	TArray<struct FortPSALoadingScreen> PSALoadingScreens;
	class UClass* LoadingMusic;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortLoadingScreenPreviewActor : public AActor
{
public:
	class UClass* FullScreenPreviewWidget;
	class UClass* DisplayedLoadingScreen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconClient : public LobbyBeaconClient
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconClientPvE : public FortLobbyBeaconClient
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconClientRM : public FortLobbyBeaconClient
{
public:
	struct FScriptMulticastDelegate LocalReadiedUpStatusChanged;
	struct FScriptMulticastDelegate OnUpdateLobbyPlayerPadTop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconHost : public LobbyBeaconHost
{
public:
	bool bAllowReservationsToProceedToLobby;
	bool bWorldRecordLoaded;
	int LastReservationCountForPermissionTimeoutChange;
	float LobbyPermissionTimeout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconHostPvE : public FortLobbyBeaconHost
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconHostOutpost : public FortLobbyBeaconHostPvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconHostRM : public FortLobbyBeaconHost
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconPlayerState : public LobbyBeaconPlayerState
{
public:
	struct UniqueNetIdRepl ConsoleUniqueNetId;
	struct FString Platform;
	byte TeamAffiliation;
	int CurrentCharXP;
	int MatchmakingLevel;
	struct FString HeroId;
	class UClass* HeroType;
	struct FortAthenaLoadout CosmeticLoadout;
	int LobbyTimeRemaining;
	int64_t HomeBaseVersion;
	TArray<struct FString> SelectedGadgets;
	ETrustedPlatformType TrustedPlatformType;
	EFortCustomGender CharacterGender;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconPlayerStatePvE : public FortLobbyBeaconPlayerState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconPlayerStateRM : public FortLobbyBeaconPlayerState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconState : public LobbyBeaconState
{
public:
	bool bIsLobbyTimerPaused;
	int MatchmakingLevel;
	struct FString MissionGeneratorClassPath;
	class UClass* CachedMissionGeneratorCDO;
	ELobbyMissionGeneratorDetailsRequirement MissionGeneratorDetailsRequirement;
	bool bWorldRecordLoaded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconStatePvE : public FortLobbyBeaconState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconStateOutpost : public FortLobbyBeaconStatePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyBeaconStateRM : public FortLobbyBeaconState
{
public:
	int LobbyTimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortLocalizationService : public AInfo
{
public:
	Unknown DocumentLoadInProgress;
	Unknown TranslationsReadyToSendToTheClient;
	Unknown AvailableTranslationsOnTheClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialManager : public SocialManager
{
public:
	ESocialImportPanelPlatform SocialImportPlatform;
	bool bTutorialCompleted;
	bool bLeftLastPartyFromGameDisconnect;
	class UClass* LocalTeam;
	bool bEnablePartyJoinReturnToMainMenu;
	double PendingQueryPartyJoinabilityResultTimeout;
	class UClass* CurrentJoinAndSpectateTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialParty : public SocialParty
{
public:
	struct GameDifficultyInfo CachedZoneDifficultyInfo;
	struct FortPartyRepData PartyRepData;
	TArray<struct FortPartySquad> PartySquads;
	bool bSendSocialFriendsActiveAnalytics;
	bool bPromoteMemberWhenBackgrounding;
	bool bEnableBootToGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyMember : public PartyMember
{
public:
	struct FortPartyMemberRepData MemberRepData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalPartyMember : public FortPartyMember
{
public:
	byte NumAthenaPlayersLeftDeltaThreshold;
	float AthenaPlayersLeftUpdateDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLocalTeam : public UObject
{
public:
	TArray<class UClass*> TeamMembers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCampaignTeam : public UFortLocalTeam
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaTeam : public UFortLocalTeam
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLockOnTargetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLootGroupWeightedRollingData : public UDataAsset
{
public:
	struct ScalableFloat MinGroupsToPick;
	struct ScalableFloat MaxGroupsToPick;
	TArray<struct FortLootGroupWeightData> LootGroupWeightData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLOSComponent : public UActorComponent
{
public:
	float LOSMaxDistance;
	float FOVInDegrees;
	float TimeBetweenChecks;
	bool bStopAfterHasBeenFound;
	bool bDistanceCheckOnly;
	struct FScriptMulticastDelegate OnHasBeenFound;
	bool bHasBeenFound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMangDataTrackerComponent : public FortGameplayDataTrackerComponent
{
public:
	struct GameplayTag NumMangBotsThreatenedEvent;
	struct GameplayTag MangBotsTargetedThreatenedEvent;
	struct GameplayTag NumMangBotsAlertedEvent;
	struct GameplayTag NumMangBotsDBNOEvent;
	struct GameplayTag NumMangBotsUnawareEvent;
	struct GameplayTag NumMangBossesThreatenedEvent;
	struct GameplayTag BossIdentifyingTag;
	struct GameplayTag NumTurretsThreatenedEvent;
	struct GameplayTag NumTurretsAlertedEvent;
	struct GameplayTag NumTurretsUnawareEvent;
	struct GameplayTag NumCamerasThreatenedEvent;
	struct GameplayTag NumCamerasAlertedEvent;
	struct GameplayTag NumCamerasUnawareEvent;
	struct ScalableFloat UnawareNearDistance;
	struct ScalableFloat UnawareFarDistance;
	struct ScalableFloat AlertNearDistance;
	struct ScalableFloat AlertFarDistance;
	struct ScalableFloat ThreatenedFarDistance;
	struct ScalableFloat DistancePercentLerpExponent;
	struct ScalableFloat ShouldUseDotProductForThreatEvents;
	struct ScalableFloat ThreatEventsDotProductComparisonValue;
	struct ScalableFloat ThreatEventsDotProductFailureMultiplier;
	struct ScalableFloat TargetedThreatenedGuaranteedRange;
	struct ScalableFloat TargetedThreatenedNearComparisonRange;
	struct ScalableFloat BotFacingNearTargetedThreatenedDotProductComparisonValue;
	struct ScalableFloat BotFacingFarTargetedThreatenedDotProductComparisonValue;
	struct ScalableFloat PlayerFacingNearTargetedThreatenedDotProductComparisonValue;
	struct ScalableFloat PlayerFacingFarTargetedThreatenedDotProductComparisonValue;
	struct ScalableFloat ShouldUseTargetedThreatenedEvent;
	struct ScalableFloat ShouldTrackPerPlayer;
	TArray<class UClass*> MangBotControllers;
	struct FortMangBotInfoArray BotInfos;
	TArray<struct FortMangSentryInfo> CameraInfos;
	TArray<struct FortMangSentryInfo> TurretInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMapLocationComponent : public USceneComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMapMarkerTopperActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMarkableActorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortActorMarkerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMarkActor : public AActor
{
public:
	Unknown OwningPlayer;
	struct FString MarkString;
	struct FText PreapprovedMarkString;
	bool bFinishedEditing;
	class UClass* AttachedToActor;
	struct Vector AttachmentOffset;
	struct SlateBrush MiniMapIconBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMarkerDetailsTable : public UPrimaryDataAsset
{
public:
	Unknown DefaultMarker;
	Unknown MarkerTypeToIdMap;
	struct DataRegistryType MarkerRegistryType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchAnalytics : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchClientAnalytics : public UFortMatchAnalytics
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmaking : public UObject
{
public:
	class UClass* ReservationBeaconClientClass;
	class UClass* ReservationBeaconClient;
	class UClass* LobbyBeaconClient;
	int ControllerId;
	struct FString TempZoneInstanceId;
	struct FortCachedMatchmakingSearchParams CachedMatchmakingSearchParams;
	class UClass* Matchmaking;
	struct FString LastCriticalMissionSessionId;
	EFortMatchmakingPrivacyConfiguration LastMatchmakingPrivacyConfiguration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMatchmakingActor : public ABuildingActor
{
public:
	struct FText LeaderInteractDetailsText;
	struct LinearColor LeaderInteractDetailsColor;
	struct FText MemberInteractDetailsText;
	struct LinearColor MemberInteractDetailsColor;
	struct TSoftClassPtr<UObject> MatchmakingWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingPolicy : public UObject
{
public:
	bool bMatchmakingInProgress;
	struct FName SessionName;
	struct MatchmakingParams CurrentParams;
	class UClass* MMPass;
	int ChanceToHostAttempt;
	bool bShouldCampaignForceCrossplayConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingCommon : public UFortMatchmakingPolicy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchmakingContext : public FortBlueprintContext
{
public:
	struct FScriptMulticastDelegate OnMatchmakingStarted;
	struct FScriptMulticastDelegate OnMatchmakingComplete;
	struct FScriptMulticastDelegate OnMatchmakingStateChange;
	struct FScriptMulticastDelegate OnMatchmakingFlowChanged;
	struct FScriptMulticastDelegate OnLobbyConnectionAttemptStarted;
	struct FScriptMulticastDelegate OnLobbyConnectionAttemptFailed;
	struct FScriptMulticastDelegate OnLobbyConnectionAttemptProceedToLobby;
	struct FScriptMulticastDelegate OnLobbyWaitingForPlayers;
	struct FScriptMulticastDelegate OnLobbyWaitingForPlayersTimeUpdate;
	struct FScriptMulticastDelegate OnLobbyStarted;
	struct FScriptMulticastDelegate OnLobbyDisconnected;
	struct FScriptMulticastDelegate OnLobbyConnectingToGame;
	struct FScriptMulticastDelegate OnLobbyTimeUpdated;
	struct FScriptMulticastDelegate OnLobbyTimeExpired;
	struct FScriptMulticastDelegate OnLocalReadyUpStatusChange;
	struct FScriptMulticastDelegate OnWorldRecordLoadedChanged;
	struct FScriptMulticastDelegate OnRejoinCheckCompleted;
	struct FortMatchmakingConfig NormalConfig;
	struct FortMatchmakingConfig CriticalConfig;
	struct FortMatchmakingConfig QuickPlayConfig;
	struct FortMatchmakingConfig OnboardingConfig;
	struct FortMatchmakingConfig OutpostConfig;
	bool bMatchmakingFlowActive;
	struct FScriptMulticastDelegate OnOutpostDiscoveryFailure;
	struct FScriptMulticastDelegate OnUtilityPreStateChanged;
	struct FScriptMulticastDelegate OnUtilityStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingMissionCommon : public UFortMatchmakingPolicy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingCriticalMission : public UFortMatchmakingMissionCommon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingGather : public UFortMatchmakingPolicy
{
public:
	float ChanceToJoinInProgress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingPvE : public UFortMatchmakingCommon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingQuickPlay : public UFortMatchmakingMissionCommon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingSingleSession : public UFortMatchmakingPolicy
{
public:
	struct FortInviteSessionParams CurrentSessionParams;
	class UClass* SessionHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchmakingV2 : public UObject
{
public:
	struct FString MMSVersionCompatability;
	struct FString MMSTicketURLClient;
	float MMSPingInterval;
	bool bCustomKeyEnabled;
	float UpdateCheckInterval;
	bool bEnablePrivateMatchUpdateCheck;
	float MatchmakingRetryInterval;
	uint32_t MaxMatchmakingRetries;
	TArray<struct MMSAltDomainRecord> AltDomainRecords;
	float LogSubmitChance;
	bool bSubmitSecondaryLogs;
	int LogTailKb;
	TArray<struct FString> DisabledMatchmakingRegions;
	TArray<struct FName> WhitelistedPlaylistsForActiveCheck;
	bool bUseHotfixVersionForPlaylistRevision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchQualitySubsystem : public UGameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMatchServerAnalytics : public UFortMatchAnalytics
{
public:
	float PlayersNotCompletingPhasePercentage;
	float PlayersDisconnectingUnexpectedlyPercentage;
	double MatchStartThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMaterialCache : public UObject
{
public:
	TArray<struct MaterialReservation> Reservations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMaterialCacheManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpCollectionBase : public UObject
{
public:
	TArray<struct FortMcpCollectedItemProperties> Collected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpCollectableCharacter : public UFortMcpCollectionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpCollectableFish : public UFortMcpCollectionBase
{
public:
	Unknown SpeciesToItemDefMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_InitialCalendarSyncCompleted : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSyncComplete;
	class UClass* MyGameInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CalendarEventWatcherBase : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnEventActive;
	struct FScriptMulticastDelegate OnEventUpdated;
	struct FScriptMulticastDelegate OnEventEnded;
	class UClass* MyGameInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CalendarMultiEventWatcher : public UFortAsyncAction_CalendarEventWatcherBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CalendarEventWatcher : public UFortAsyncAction_CalendarEventWatcherBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_MCPContextUpgradeItem : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnMCPRequestComplete;
	Unknown MCPContext;
	Unknown ItemToUpgrade;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_MCPContextRecycleItems : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnMCPRequestComplete;
	Unknown MCPContext;
	TArray<Unknown> ItemsToRecycle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_MCPContextConsumeItem : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnMCPRequestComplete;
	Unknown MCPContext;
	Unknown ItemToConsume;
	struct UniqueNetIdRepl TargetAccountId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnHeroesChanged;
	struct FScriptMulticastDelegate OnGiftBoxRemovedDelegate;
	struct FScriptMulticastDelegate OnXpBoostChanged;
	struct FScriptMulticastDelegate OnFounderGranted;
	struct FScriptMulticastDelegate OnDailyRewardTokenGranted;
	struct FScriptMulticastDelegate OnPhoenixXpChanged;
	struct FScriptMulticastDelegate OnLocalAccountInfoChanged;
	struct FScriptMulticastDelegate OnCurrentlyViewedAccountInfoChanged;
	struct McpPrivacySettings PrivacySettings;
	struct FScriptMulticastDelegate OnMissionRewardsOpened;
	struct FScriptMulticastDelegate OnMissionRewardsOpenFailed;
	struct FScriptMulticastDelegate OnMissionAlertRewardsOpened;
	struct FScriptMulticastDelegate OnDifficultyIncreaseRewardsClaimed;
	struct FScriptMulticastDelegate OnDifficultyIncreaseRewardsClaimFailed;
	struct FScriptMulticastDelegate OnItemCacheRewardsClaimed;
	struct FScriptMulticastDelegate OnItemCacheRewardsClaimFailed;
	struct FScriptMulticastDelegate OnResourceCollectorClaimed;
	struct FScriptMulticastDelegate OnConversionBegin;
	struct FScriptMulticastDelegate OnConversionComplete;
	struct FScriptMulticastDelegate OnRarityUpgradeBegin;
	struct FScriptMulticastDelegate OnRarityUpgradeComplete;
	struct FScriptMulticastDelegate OnPromotionComplete;
	struct FScriptMulticastDelegate OnTransmogComplete;
	struct FScriptMulticastDelegate OnTransmogFailed;
	struct FScriptMulticastDelegate OnRefundBegin;
	struct FScriptMulticastDelegate OnRefundComplete;
	struct FScriptMulticastDelegate OnLiveStreamingQuestWindowStarts;
	struct FScriptMulticastDelegate OnLiveStreamingQuestWindowEnds;
	struct FScriptMulticastDelegate OnLiveStreamingQuestWindowSelectedViewers;
	struct FScriptMulticastDelegate OnOfferPurchaseComplete;
	struct FScriptMulticastDelegate OnRealMoneyPurchaseComplete;
	TArray<struct FriendCode> CachedFriendCodes;
	TArray<struct FDelegate> PendingFriendCodeOnCompleteDelegates;
	double MinTimeBetweenFriendCodeRequestsSeconds;
	struct FText FriendCodeMessageBody;
	TArray<struct FString> EUCountryCodes;
	TArray<class UClass*> RequestedGiftBoxesToDisplay;
	struct FDelegate DisplayPurchaseWidget;
	struct FDelegate DismissPurchaseWidget;
	struct FDelegate DisplayLoginWidget;
	struct FDelegate DismissLoginWidget;
	struct FDelegate DisplayAccountCreationWidget;
	struct FDelegate DismissAccountCreationWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfile : public McpProfile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileSubgame : public FortMcpProfile
{
public:
	TArray<class UClass*> LoadoutLockerItems;
	class UClass* LastAppliedLoadout;
	struct FortSubgameClientSettings CachedClientSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileAthena : public FortMcpProfileSubgame
{
public:
	float ClientQuestLoginTimerNoise;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileAthenaStats : public FortMcpProfile
{
public:
	class UClass* LifeTimeStats;
	TArray<class UClass*> LifeTimeAndSeasonStatsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileCampaign : public FortMcpProfileSubgame
{
public:
	struct FScriptMulticastDelegate OnDifferentHeroLoadoutActivated;
	bool bEnableHeroLoadoutMocking;
	float HeroLoadoutCommandDelaySeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileCollectionBook : public FortMcpProfile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileCollections : public McpProfile
{
public:
	Unknown DataTables;
	class UClass* TaskManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileCommonCore : public FortMcpProfile
{
public:
	struct FString ListCatalogEntriesUrl;
	int AffiliateExpirationSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileCommonPublic : public FortMcpProfile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileCreative : public FortMcpProfile
{
public:
	bool bEnablePublishing;
	struct TSoftClassPtr<UObject> DefaultBattleLabPlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileMetadata : public FortMcpProfile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMcpProfileWorld : public FortMcpProfile
{
public:
	TArray<struct FortWorldProfileUpdateRequest> UpdateRequests;
	struct FortWorldPlayerLoadout CachedPlayerLoadout;
	class UClass* FortInventory;
	bool bIsInventoryInitialized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpResource : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpTwitch : public UFortMcpResource
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpUtils : public UObject
{
public:
	struct FString CreateXboxDedicatedServerSessionUrl;
	struct FString UnredeemedCodesUrl;
	struct FString QueryUserXuidUrl;
	struct FString RecordUserStatsUrl;
	struct FString QueryUserStatsUrl;
	struct FString QueryLeaderboardUrl;
	struct FString QueryCohortUrl;
	struct FString InMatchTimePlayedUrl;
	struct FString ProcessPendingRewardsUrl;
	bool bShouldSendTimeTracking;
	struct FString VoiceLoginUrl;
	struct FString VoiceJoinUrl;
	struct FString PrivacySettingsUrl;
	struct FString ReplacePlayerTokensUrl;
	struct FString AllowHomebaseCharactersUrl;
	struct FString InventorySnapshotUrl;
	struct FString QuerySwitchEntitlementsUrl;
	struct FString ReportPlayerToxicityUrl;
	struct FString EventCalendardTestUrl;
	struct FString CreativeHistoryBaseUrl;
	struct FString QueryCreativeDiscoverySurfacePanelsUrl;
	struct FString QueryCreativeDiscoverySurfacePanelPageUrl;
	struct FString ResolveWellKnownIslandMetricsUrl;
	int DefaultLogTailLengthKb;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMcpWorlds : public UFortMcpResource
{
public:
	struct FortActiveTheaterInfo TheaterInfo;
	int TheaterQueryRetry;
	struct DateTime LastTheaterRefresh;
	struct TSoftClassPtr<UObject> LastWorld;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVehiclePontoonsComponent : public BuoyancyComponent
{
public:
	TArray<struct VehicleEffectsPontoonParamSet> WaterEffectsPontoonParameters;
	TArray<float> OverridePontoonRadiuses;
	TArray<int> PushForcePontoons;
	TArray<int> LeftTurnPontoons;
	TArray<int> RightTurnPontoons;
	class UClass* OwnerVehicle;
	int WaterLineStartPontoonIndex;
	int WaterLineEndPontoonIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeatballPontoonsComponent : public FortVehiclePontoonsComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMeatballVehicle : public AFortAthenaSKVehicle
{
public:
	struct FortRechargingActionTimer BoostAction;
	int WaterSkiSeatIndex;
	float FxNormalizationMaxSpeedKmh;
	class UClass* CacheAudioEngineUp;
	class UClass* CacheAudioEngineDown;
	class UClass* CacheAudioWakeTurn;
	class UClass* CacheAudioWakeSpeed;
	class UClass* CacheAudioScrape;
	class UClass* CacheAudioEngineOutOfFuel;
	class UClass* BoostMID;
	class UClass* CacheBoostReadyLFx;
	class UClass* CacheBoostReadyRFx;
	class UClass* CacheDirtCascade;
	class UClass* CacheSnowInteractionComponent;
	class UClass* DrivingPlayerController;
	class UClass* LandCameraShake;
	class UClass* LandCameraShakeClass;
	class UClass* DriverCameraShake;
	class UClass* DriverCameraShakeClass;
	float LandRumbleIntensity;
	uint64_t LandForceFeedbackHandle;
	float TurnRumbleIntensity;
	uint64_t TurnForceFeedbackHandle;
	float CurrentSnowAltitude;
	bool bHasSnow;
	bool bBoostReadyFxOn;
	bool bLargeRumble;
	bool bTurnRumbleActive;
	bool bWaterDropsOnScreen;
	struct GameplayTag GCVehicleScreenDrips;
	struct GameplayCueParameters GCParamsEmpty;
	class UClass* FortMeatballVehicleConfigsClass;
	class UClass* FortSpaghettiVehicleClass;
	class UClass* BoostingCamera;
	class UClass* VehicleCameraOverride;
	struct ScalableFloat WaterSkiEnabled;
	EVehicleFuelState VehicleFuelSystemState;
	class UClass* FortMeatballVehicleConfigs;
	int WaterLineStartPontoonIndex;
	int WaterLineEndPontoonIndex;
	bool bBoostFailed;
	class UClass* FuelComponent;
	TArray<struct ActiveVehicleUI> ActiveFuelUI;
	TArray<struct VehicleSpecificUIDetails> CustomFuelUI;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMeatballVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* Meatball;
	float MeatballSpeed;
	float SteeringAngle;
	float BoostCharge;
	struct Vector SeatOffset;
	struct Rotator SeatRotation;
	struct Rotator CurrentDriveJiggle;
	struct Rotator SteeringRotator;
	struct Rotator SpeedGuageRotator;
	struct Rotator BoostPercentRotator;
	struct Rotator RandomJiggleRotatorMotorTop;
	struct Rotator RandomJiggleRotatorMotorBase;
	bool bIsMovingForward;
	bool bIsDrivingFast;
	bool bIsBraking;
	bool bIsBoosting;
	bool bIsBoostReady;
	bool bIsBoostStarting;
	bool bIsBoostEnding;
	bool bIsRocketReady;
	bool bIsRocketOnCoolDown;
	bool bIsSteeringLeft;
	bool bIsSteeringRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMeatballVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float WaterSteerRollFactor;
	float InnerTurnPontoonOffsetMultiplier;
	float OuterTurnPontoonOffsetMultiplier;
	float MinForwardSpeedToBankOnTurn;
	float BoostMinPushForce;
	float BoostTopSpeedForceMultiplier;
	float BoostTopSpeedMultiplier;
	float MaxPontoonOffsetPerSecond;
	float LandTopSpeedMultiplier;
	float LandPushForceMultiplier;
	int MinPushPontoonsForWaterDriving;
	float MaxWaterPitchAngle;
	float MinForwardSpeedToPitch;
	float MinForwardSpeedForMaxPitch;
	float MaxForwardSpeedForMaxPitch;
	float MaxFowrardSpeedPitchFactor;
	float BoostMaxForwardSpeedPitchFactor;
	float FrontLateralFrictionFactor;
	float RearLateralFrictionFactor;
	float LandFrontLateralFrictionFactor;
	float LandRearLateralFrictionFactor;
	float SeatOffsetScaleX;
	float SeatOffsetScaleY;
	float SeatYawAngleMax;
	float SeatPitchAngleMax;
	float BoostSteeringMultiplier;
	float BoostSteeringMultiplierRampTime;
	float LandSteeringMultiplier;
	float LandMinSpeedSteeringAngle;
	float LandMaxSpeedSteeringAngle;
	float DragCoefficientNoAccel;
	float DragCoefficient2NoAccel;
	float MinSteerAlphaForWaterFriction;
	float TurnInPlaceYawStiff;
	float TurnInPlaceYawDamp;
	float MaxSteerRollAngle;
	float MaxTurnInPlaceYawAngle;
	float UprightSpringSteerStrength;
	float TurnInPlaceYawStrength;
	float MaxSpeedForTurnInPlaceKmH;
	float BlendOutExtraSpeedTurnInPlaceKmH;
	float MaxPitchForCameraInPlaceSteer;
	float SpringLengthMutliplierWater;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMedalsPunchCardItem : public UFortAccountItem
{
public:
	TArray<struct FString> medal_punch_list;
	TArray<struct CardSlotMedalData> MedalPunchData;
	int days_since_season_start_grant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMedalsPunchCardItemDefinition : public FortPersistableItemDefinition
{
public:
	int NumPunches;
	bool bAllowMedalReplacement;
	struct ScalableFloat PunchCardXpRewards;
	struct ScalableFloat PunchCardRestXp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMediaCDNWarmer : public UObject
{
public:
	TArray<float> CDNDistribution;
	bool bAutoClearCDNDistribution;
	bool bWarmLive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMediaPlayerCtrl : public UObject
{
public:
	class UClass* MediaPlayer;
	class UClass* MediaSource;
	float InitialBufferDurationInSeconds;
	float SegmentBufferDurationInSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMediaRegionLockComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnMediaRegionLockLocaleComplete;
	struct FScriptMulticastDelegate OnRegionLockCanPlayContentInRegionComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMediaUCPInView : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMedicPackSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData MaxFuel;
	struct FortGameplayAttributeData Fuel;
	struct FortGameplayAttributeData ReserveMaxFuel;
	struct FortGameplayAttributeData ReserveFuel;
	struct FortGameplayAttributeData FuelBurnRate;
	struct FortGameplayAttributeData FuelRegenRate;
	struct FortGameplayAttributeData FuelRegenDelay;
	struct FortGameplayAttributeData SelfReviveActive;
	struct FortGameplayAttributeData SelfReviveTime;
	struct FortGameplayAttributeData SelfReviveCost;
	struct FortGameplayAttributeData DamageBreaksSelfRevive;
	struct FortGameplayAttributeData Heal;
	struct FortGameplayAttributeData HealRadius;
	struct FortGameplayAttributeData HealPeriod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AMegaStormManager : public AActor
{
public:
	float MaxSecondsInMegaStormUpdate;
	int NumBuildingActorMegaStormShouldDamagePerFrame;
	float SleepTimeAfterDamagingBuildingActors;
	float MinDelayTimeBeforeDestruction;
	bool bFloorRadiusToGridConversion;
	int GridRadiusCellOffset;
	float MegaStormStartTime;
	float SleepTimeRemaining;
	TArray<struct MegaStormCircle> MegaStormCircles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeshBeaconClient : public MeshBeaconClient
{
public:
	bool bIgnoreFailedUpdateLevelVisibilityValidation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeshBeaconHost : public MeshBeaconHost
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeshBeaconHostObject : public MeshBeaconHostObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMeshNetworkFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMeshNetworkActor : public AActor
{
public:
	class UClass* MeshNetworkComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMeshNetworkEventsLoader : public AInfo
{
public:
	bool bMeshNetworkReady;
	struct MeshNetworkEventStateDataArray ActiveMeshNetworkEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMeshNetworkEventsSubsystem : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate OnMeshNetworkEventBurst;
	struct FScriptMulticastDelegate OnMeshNetworkEventStart;
	struct FScriptMulticastDelegate OnMeshNetworkEventChange;
	struct FScriptMulticastDelegate OnMeshNetworkEventEnd;
	TArray<struct EventResponderTrackingItem> EventResponderList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeshReplicationGraphNode_PawnList : public ReplicationGraphNode_ActorList
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMeshReplicationGraph : public MeshReplicationGraph
{
public:
	class UClass* PawnListNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMetaNavArea : public NavAreaMeta
{
public:
	TArray<struct NavAgentData> AgentData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMetaNavArea_Obstacles : public NavAreaMeta
{
public:
	int HealthThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMetaNavArea_Wall : public FortMetaNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMetaTagToPreviewActorMapping : public UDataAsset
{
public:
	Unknown MetaTagToPreviewActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMinigame : public AInfo
{
public:
	Unknown PendingPlayers;
	struct FScriptMulticastDelegate StateChangedDelegate;
	struct FScriptMulticastDelegate MinigameHideHUDDelegate;
	struct FScriptMulticastDelegate StatChangedDelegate;
	struct FScriptMulticastDelegate FullStatChangedDelegate;
	struct FScriptMulticastDelegate OnMinigamePlayerSpawned;
	struct FScriptMulticastDelegate MinigameEndGameDelegate;
	struct FScriptMulticastDelegate PlayerAddedDelegate;
	struct FScriptMulticastDelegate PlayerAddedPostResetDelegate;
	struct FScriptMulticastDelegate PlayerRemovedDelegate;
	struct FScriptMulticastDelegate PlayerChangedTeamDelegate;
	struct FScriptMulticastDelegate OnPlayerClassApplied;
	struct FScriptMulticastDelegate OnRefreshIndicatorPlayersCache;
	struct FScriptMulticastDelegate OnPlayerClassRemoved;
	struct FScriptMulticastDelegate OnPlayerJoinInProgress;
	struct FScriptMulticastDelegate OnCreativePlayerIndicatorRulesChanged;
	struct FScriptMulticastDelegate OnCreativeBossInfoRulesChanged;
	struct FScriptMulticastDelegate MinigameStartedDelegate;
	struct FScriptMulticastDelegate MinigameEndedDelegate;
	struct FScriptMulticastDelegate MinigameTeamConfigUpdated;
	struct FScriptMulticastDelegate MinigameClassConfigUpdated;
	struct FScriptMulticastDelegate OnPawnTeleportedForMinigame;
	struct FScriptMulticastDelegate OnUIExtensionsChanged;
	struct FScriptMulticastDelegate OnPlayModeChangedDelegate;
	struct FScriptMulticastDelegate OnCurrentRoundChangedDelegate;
	TArray<struct UIExtension> UIExtensions;
	struct GameplayTagContainer UIExtensionTags;
	float TimeLimit;
	int CurrentRound;
	int TotalRounds;
	struct MinigamePlayers PlayerArray;
	struct MinigamePlayers SpectatingPlayerArray;
	TArray<struct MinigameEndCondition> EndConditionArray;
	bool bRemovePawnOnDeath;
	class UClass* PlayerDeathsStatFilter;
	bool bKeepItemsBetweenRounds;
	float PercentageOfResourcesKeptBetweenRounds;
	bool bReloadAndRestockWeaponsEachRound;
	Unknown RestockAmmoAmounts;
	int DefaultRestockAmmoAmount;
	bool bLastTeamStandingWins;
	bool bAllowStandardEndGameConditions;
	bool bEndGameOnMatchPointWin;
	struct FScriptMulticastDelegate ServerTimeReplicatedDelegate;
	struct FText DisplayName;
	int AutoStartDelay;
	EFortMinigamePlayerSpawnLocationSetting SpawnLocationSetting;
	EFortMinigamePostGameSpawnLocationSetting PostGameSpawnLocationSetting;
	float WarmupDuration;
	float PostGameResetDelay;
	float GameWinnerDisplayTime;
	float GameScoreDisplayTime;
	float RoundWinnerDisplayTime;
	float RoundScoreDisplayTime;
	float ServerEndgameDelay;
	bool bTimerCountsDown;
	TArray<struct MinigameTeam> TeamArray;
	TArray<struct MinigameClassSlot> ClassSlotArray;
	TArray<struct FortMinigameStatQuery> BaseEndConditionArray;
	TArray<class UClass*> TrackedStats;
	TArray<class UClass*> ScoreboardStats;
	struct FortMinigameStatCollection RoundStats;
	struct FortMinigameStatCollection GameStats;
	EFortMinigameState CurrentState;
	EFortMinigameState PreviousState;
	class UClass* CompletionTimeStatFilter;
	class UClass* ScoreStatFilter;
	class UClass* RaceProgressStatFilter;
	class UClass* LapTimeStatFilter;
	class UClass* TimeAliveStatFilter;
	byte DefaultClassSlot;
	EFortMinigameClassResetType ClassResetType;
	int MaxLivesForPlayer;
	byte TeamToSwapToWhenOutOfSpawns;
	int AutoEndTeamThreshold;
	struct FortMinigameTimes ServerTime;
	struct FortMinigameTimes CachedTime;
	bool bStopwatchMode;
	float LastRoundDuration;
	TArray<class UClass*> MinigameComponents;
	TArray<class UClass*> PlayerStartComponents;
	TArray<class UClass*> CheckpointPlayerStartComponent;
	class UClass* CreatureManagerComponent;
	class UClass* TeleporterManagerComponent;
	class UClass* CreativePlayerHealthComponent;
	class UClass* Volume;
	bool bSortScoreboardEntries;
	bool bTeamMinigame;
	bool bTeamsAreStable;
	int NumTeams;
	bool bAllowJoinInProgress;
	EMinigamePlayerPersistence PlayerPersistence;
	class UClass* MinigameStarter;
	int TeamRotationSetting;
	int TeamRotationCount;
	bool bStableTeamCosmetics;
	EMinigameFullscreenMapWidgetType MinigameMapWidget;
	EMinigameWinCondition WinCondition;
	bool bAllTeamsMustMatchEndConditions;
	bool bOnlyAllowRespawningIfPlayerStartPadsFound;
	EMinigameGameEndCallout GameEndCallout;
	int VictoryAudioIndex;
	int DrawAudioIndex;
	int DefeatAudioIndex;
	bool bShowCumulativeScoreboard;
	struct FName MinigameStartCameraBehavior;
	struct FText ClientMinigameStartedText;
	struct FName MinigameEndCameraBehavior;
	struct FText ClientMinigameEndedText;
	Unknown AllowedUIExtensions;
	Unknown MinigameEditModeStates;
	bool bAllowFriendlyFire;
	bool bVehiclesDamageObjectsMinigame;
	int NumMinigameComponentsServer;
	bool bVolumeNavigationHasBuilt;
	TArray<int> RoundWinHistory;
	TArray<struct MinigamePlayerBucket> PlayerBuckets;
	struct GameplayTagContainer OldUIExtensionTags;
	TArray<struct MinigamePlayerPersistentStartPoint> PlayerPersistentStartPoints;
	int PersistenceRequiredDevices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameItemListComponent : public UFortMinigameItemContainerComponent
{
public:
	struct PickupInstigatorData BaseInstigatorData;
	bool bAllowItemTracking;
	bool bAllowItemCustomization;
	TArray<struct MinigameItemData> ItemListData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameManager : public UObject
{
public:
	class UClass* PlayerController;
	class UClass* CurrentMinigame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMinigameMode : public AInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameObjectiveComponent : public UFortMinigameLogicComponent
{
public:
	struct FScriptMulticastDelegate OnObjectiveUpdated;
	struct FScriptMulticastDelegate OnObjectiveStateChanged;
	struct FScriptMulticastDelegate OnObjectiveAllowedInteractionChanged;
	int TrackedIndex;
	float ProgressPercentage;
	byte TrackedState;
	byte TrackedStateOwnerTeam;
	bool bIsInteractionAllowed;
	EObjectiveType ObjectiveType;
	bool bPurgeTrackingHistoryOnRemoval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameObjectiveTrackerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnTrackedObjectiveAdded;
	struct FScriptMulticastDelegate OnTrackedObjectiveChanged;
	struct FScriptMulticastDelegate OnTrackedObjectiveRemoved;
	struct FScriptMulticastDelegate OnTrackedObjectiveStateChanged;
	struct FScriptMulticastDelegate OnTrackedObjectiveAllowedInteractionChanged;
	struct FScriptMulticastDelegate OnTrackedObjectiveTeamUpdated;
	struct TrackedObjectiveArray ObjectiveArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeIgnoreEnabledInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigamePlayerStartComponent : public UFortMinigameLogicComponent
{
public:
	bool bIsCheckpoint;
	TArray<class UClass*> PlayerStarts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameProgressComponent : public UFortMinigameLogicComponent
{
public:
	struct FScriptMulticastDelegate ProgressStartedDelegate;
	struct FScriptMulticastDelegate ProgressFinishedDelegate;
	struct FScriptMulticastDelegate ProgressAbortedDelegate;
	struct FScriptMulticastDelegate ProgressRevertedDelegate;
	float ActivationTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMinigameScoreRegistry : public AInfo
{
public:
	class UClass* Playset;
	struct MinigameScoreTemplate ScoreTemplate;
	bool bPostToKillFeed;
	struct FScriptMulticastDelegate OnScoreRecorded;
	struct FScriptMulticastDelegate OnScoreRankingsUpdated;
	struct MinigameScoreArray Scores;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMinigameSettingsBuilding : public AInfo
{
public:
	class UClass* CreativeLinkComponent;
	TArray<struct FText> GameDescriptionData;
	struct FText GameNameData;
	bool bShowPublishWatermark;
	struct FScriptMulticastDelegate OnGameDescriptionDataChanged;
	struct FScriptMulticastDelegate OnGameNameDataChanged;
	struct FScriptMulticastDelegate OnVolumeMachineSet;
	struct FScriptMulticastDelegate OnShowPublishWatermarkChanged;
	bool bAllowOutOfBounds;
	bool bDeferDeletePlayerBuiltBuildingActorsForRollback;
	struct CreativeIslandMatchmakingSettings MatchmakingSettings;
	int MinimumNumberOfPlayersUserSetting;
	int MaximumNumberOfPlayersUserSetting;
	EMMSRulePreset MmsType;
	EMMSPrivacy MmsPrivacy;
	bool bPrefersRespectingPartiesFromMMS;
	int MmsPlayerCount;
	EMMSPlayersPerTeamPreset MmsPlayersPerTeam;
	int JoinInProgress;
	int ShowResourceFeedOnElimination;
	class UClass* SettingsVolume;
	struct Guid SavedActorGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameSpawnerComponent : public UFortMinigameItemContainerComponent
{
public:
	TArray<struct MinigameSpawnerSpawnParams> ToSpawnList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMinigameObjectiveDefinition : public UObject
{
public:
	EFortQuestObjectiveStatEvent StatEvent;
	EFortQuestObjectiveItemEvent ItemEvent;
	struct TSoftClassPtr<UObject> ItemDefinition;
	struct GameplayTagQuery TargetTagsQuery;
	struct GameplayTagQuery SourceTagsQuery;
	struct GameplayTagQuery ContextTagsQuery;
	struct FText Description;
	struct FText HudShortDescription;
	struct TSoftClassPtr<UObject> HudIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMinigameState : public AInfo
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameStatFilter : public UObject
{
public:
	EFortQuestObjectiveStatEvent StatEvent;
	EFortQuestObjectiveItemEvent ItemEvent;
	struct TSoftClassPtr<UObject> ItemDefinition;
	struct GameplayTagQuery TargetTagsQuery;
	struct GameplayTagQuery SourceTagsQuery;
	struct GameplayTagQuery ContextTagsQuery;
	bool bAccumulates;
	struct FText Description;
	struct FText HudShortDescription;
	struct TSoftClassPtr<UObject> HudIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameVolumeComponent : public UActorComponent
{
public:
	class UClass* CurrentMinigameSettingsMachine;
	struct FScriptMulticastDelegate OnMinigameSetUp;
	class UClass* MinigameClass;
	class UClass* CurrentMinigame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapChallengeIndicators : public UFortMiniMapIndicator
{
public:
	class UClass* AthenaPlayerController;
	class UClass* ChallengeIndicatorCache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapComponent_Discoverable : public UFortMiniMapComponent
{
public:
	struct FScriptMulticastDelegate OnPlayerVisibilityChanged;
	EMiniMapComponentDiscoverableVisibility DefaultVisibility;
	bool bDefaultVisibilityCanChangeAtRuntime;
	struct Vector2D NotDiscoveredIconScale;
	class UClass* NotDiscoveredIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapInputComponent : public UInputComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapRadiusTrackerIndicator : public UFortMiniMapIndicator
{
public:
	class UClass* RadiusTrackerComponent;
	class UClass* PlayerController;
	float PlatformScale;
	TArray<struct SlateBrush> MinimapRadiusTrackerCircleBrushes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMiniMapTeamIndicators : public UFortMiniMapIndicator
{
public:
	class UClass* PlayerController;
	bool bSpectating;
	class UClass* SpectatorPC;
	class UClass* IndicatedPlayersCache;
	float PlatformScale;
	struct SlateBrush SquadPlayerBrush;
	struct SlateBrush TeamPlayerBrush;
	struct SlateBrush EnemyPlayerBrush;
	struct SlateBrush SpectatedPlayerBrush;
	struct SlateBrush SpectatedPlayerVehicleBrush;
	struct SlateBrush MiniMapIconBrushDBNO;
	struct LinearColor MinimapIconColorSelf;
	struct LinearColor MinimapIconColorTeammate;
	struct LinearColor MinimapIconColorEnemy;
	TArray<struct LinearColor> MinimapIconColorEnemy_MultiTeam;
	struct SlateBrush PlayerNameBackgroundBrush;
	struct SlateFontInfo PlayerNameFontInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionState : public AActor
{
public:
	struct FScriptMulticastDelegate OnUpdateUI;
	struct FScriptMulticastDelegate OnMissionUIEvent;
	bool bAlreadySetTimerOnce;
	bool bAlreadyCalledOnAllPlayersLoadedIn;
	float TimerForOnAllPlayersLoadedIn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMission : public AFortMissionState
{
public:
	class UClass* MissionInfo;
	class UClass* BotLogicClass;
	class UClass* BotLogic;
	TArray<struct TSoftClassPtr<UObject>> MissionPreloadAssets;
	class UClass* AnnouncementClassOverride;
	class UClass* MissionGenerator;
	EMissionGenerationCategory MissionCategory;
	int UIIndex;
	struct UniqueNetIdRepl QuestOwnerAccount;
	TArray<struct FortMissionEventName> MissionEventNames;
	struct FScriptMulticastDelegate OnObjectivesUpdated;
	struct FScriptMulticastDelegate OnMissionInfoSet;
	TArray<struct FortMissionPlacementActorPreferredTagInfo> PlacementActorPreferredTagData;
	bool bLoadedFromRecord;
	bool bFiredParTimeEvent;
	bool bAreNonpublicMatchesLeecherExempt;
	float LeecherPity;
	float LeecherMinMultiplier;
	float LeecherCutoff;
	float LeecherTimeScalingCutoff;
	float LeecherTimeScalingPenaltyMultipler;
	float LeecherCombatScoreMultiplier;
	float LeecherBuildingScoreMultiplier;
	float LeecherUtilityScoreMultiplier;
	int LeecherCombatLowBar;
	int LeecherBuildingLowBar;
	int LeecherUtilityLowBar;
	float MissionActivationTime;
	struct FortMissionFocusDisplayData CurrentFocusData;
	bool bSilentDestroyNextFrame;
	TArray<class UClass*> ActiveObjectives;
	TArray<struct UniqueNetIdRepl> ParticipatingAccounts;
	TArray<struct UniqueNetIdRepl> ParticipatingButDisconnectedAccounts;
	EFortMissionStatus MissionStatus;
	struct GameplayTagContainer MissionCompletionTags;
	bool bIsMissionVisible;
	EFortMissionAudibility MissionAudibility;
	int CurrentObjectiveBlockIndex;
	bool bIsMissionVisibleOverride;
	struct Guid MissionGuid;
	int StartingDay;
	class UClass* TimerComponent;
	class UClass* TimerElapsedComponent;
	bool bObjectiveTimerExpireShouldFailObjectives;
	bool bMissionTimerExpireShouldFailMission;
	bool bNeedsEnemyKilledEventForAllPawns;
	int ChosenRewardIdx;
	struct FortBadgeCountArray PotentialBadgesArray;
	struct FortGeneratedDifficultyOptions GeneratedMissionOptions;
	class UClass* MissionCompletionStinger;
	struct FortMissionInstancedConfigData ConfigData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMission_ActiveThreat : public AFortMission
{
public:
	bool bStartBasedOnAthenaGamePhases;
	EAthenaGamePhase StartingGamePhase;
	float StartingDelay;
	int StartingActiveThreatEncounterIndex;
	struct FortEncounterSettings EncounterSettings;
	TArray<struct FortActiveThreatPlayerData> PlayerData;
	float SyncedEncounterStartingTime;
	int CurrentActiveThreatEncounterIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMission_CreativeRiftSpawners : public AFortMission
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMission_HarvestingBase : public AFortMission
{
public:
	TArray<class UClass*> BuildingActorClassesValidForHarvestDrop;
	TArray<class UClass*> DecoActorClassesValidForHarvestDrop;
	float ItemDropChancePercent;
	int ItemMinDropQuantity;
	int ItemMaxDropQuantity;
	float MinDurationBetweenDrops;
	int MaxFailedDropsInARow;
	bool bEnableConversations;
	TArray<struct FortReactiveQuestDialogue> Conversations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMission_RiftSpawners : public AFortMission
{
public:
	bool bStartBasedOnAthenaGamePhases;
	EAthenaGamePhase StartingGamePhase;
	float StartingDelay;
	bool bUseAthenaSafeZonePhases;
	bool bSynchronizeEncounterStartTimes;
	int MinEncounterIndex;
	int MaxEncounterIndex;
	struct FortEncounterSettings EncounterSettings;
	bool bAllowRiftIntensification;
	struct ScalableFloat MinDamageTriggerPercentage;
	struct ScalableFloat MaxDamageTriggerPercentage;
	struct GameplayTagQuery RequiredRiftTagsQuery;
	struct FString RequiredEventFlag;
	TArray<struct FName> AssociatedSupplyDropIDs;
	float SpawnerShutdownCheckInterval;
	float BurstFallbackTime;
	float CalendarRecheckInterval;
	TArray<struct FortRiftSpawnerData> ActiveRiftSpawnerData;
	int CurrentEncounterIndex;
	bool bRiftSpawningInProgress;
	float SyncedEncounterStartTime;
	bool bCalendarAllowsSpawning;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMission_VehicleSpawn : public AFortMission
{
public:
	TArray<struct MissionVehicleSpawnSet> SpawnSets;
	class UClass* SpawnLocationQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionAircraft : public AFortMission
{
public:
	class UClass* Aircraft;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionConfigData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionCSVEventMap : public UPrimaryDataAsset
{
public:
	Unknown MissionMappings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionEventDelegateHolder : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UContainerSearchedDelegateHolder : public UFortMissionEventDelegateHolder
{
public:
	struct FDelegate OnContainerSearchedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuildingSMActorHarvestedDelegateHolder : public UFortMissionEventDelegateHolder
{
public:
	struct FDelegate OnBuildingSMActorHarvestedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionGenerationData : public UDataAsset
{
public:
	TArray<class UClass*> PrimaryMissionGenerators;
	float PrimaryMissionMinPowerPointsUsagePercentage;
	struct CurveTableRowHandle SecondaryMissionPowerPointsBudgetMultiplier;
	struct CurveTableRowHandle MinSecondaryMissionPowerPointsMultiplier;
	struct CurveTableRowHandle MaxSecondaryMissionPowerPointsMultiplier;
	struct CurveTableRowHandle MinSecondaryMissions;
	struct CurveTableRowHandle MaxSecondaryMissions;
	struct CurveTableRowHandle TertiaryMissionPowerPointsBudgetMultiplier;
	struct CurveTableRowHandle MinTertiaryMissionPowerPointsMultiplier;
	struct CurveTableRowHandle MaxTertiaryMissionPowerPointsMultiplier;
	struct CurveTableRowHandle PowerPointsCurve;
	TArray<struct FortDifficultyOptionBudget> EncounterDifficultyOptionBudgets;
	float EncounterMinDifficultyOptionPointsUsagePercentage;
	TArray<struct FortDifficultyOptionBudget> MissionDifficultyOptionBudgets;
	float MissionMinDifficultyOptionPointsUsagePercentage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionGenerationList : public UPrimaryDataAsset
{
public:
	struct GameplayTagQuery GameplayContextRequirements;
	TArray<struct PerDifficultyMissionGenerationInfo> PerDifficultyMissionGenerationInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionGenerationManager : public AActor
{
public:
	EFortCheatMissionGenType CheatMissionGenType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionGenerator : public UPrimaryDataAsset
{
public:
	struct FText MissionName;
	struct FText MissionDescription;
	struct SlateBrush MissionIcon;
	struct FortMultiSizeBrush MissionIcons;
	struct ZoneLoadingScreenConfig LoadingScreenConfig;
	struct FortAthenaLTMConfig AthenaLTMConfig;
	struct TSoftClassPtr<UObject> PrimaryMissionInfo;
	bool bUseNewMissionGeneration;
	struct GameplayTagQuery OptionalRequirementsForAllOtherMissions;
	struct TSoftClassPtr<UObject> MissionGenerationList;
	float MissionGenerationChance;
	TArray<struct FortPossibleMission> SecondaryMissionList;
	TArray<struct FortPossibleMission> TertiaryMissionList;
	TArray<struct FortPossibleMission> SurvivorMissionList;
	bool bUseOverridePlayerSpawnPadPlacementData;
	struct FortPlayerSpawnPadPlacementData OverridePlayerSpawnPadPlacementData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionInfo : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> MissionRef;
	EFortMissionType MissionType;
	struct GameplayTagContainer MissionTags;
	float TimeOfDaySpeed;
	float ZoneEndDelay;
	float ZoneEndDelayOverrideForFailure;
	class UClass* MissionRewardBadge;
	struct FName MissionRewardItemsLootTierGroup;
	int MaxRewardLootTierPoints;
	int ParTime;
	class UClass* UnderParBadge;
	int MaxMissionPoints;
	bool bVictoryTileRequired;
	struct FText MissionDescription;
	struct FortMultiSizeBrush MissionIcons;
	class UClass* EndOfMissionMediaSource;
	bool bSkipEndOfMissionVideo;
	int DaysToLive;
	TArray<struct FortObjectiveBlock> ObjectiveBlocks;
	bool bShowMinimapIconsOnlyIfFocused;
	float ExpectedCompletionTime;
	float MissionEncounterTime;
	struct FortMissionPlacementItems MissionPlacementInfo;
	float MinDistanceToOtherMissions;
	float MinDistanceToAllowSpawnPad;
	struct FortPlacementActorFinderInfo PlacementActorInfo;
	bool bStartPlayingOnLoad;
	bool bRequiresActivation;
	int BluGloActivationRequirement;
	bool bAllowDifficultyIncrease;
	struct FText RewardsTitleText;
	struct FText RewardsDescriptionText;
	struct FText NonParticipationRewardsDescriptionText;
	struct FortMissionPopupWidgetData PopupWidgetData;
	class UClass* WeightedRewards;
	bool bIsGroupContent;
	bool bUseRRV;
	struct FText MissionName;
	bool bShouldDisplayMissionName;
	TArray<struct FortEncounterProfile> EncounterProfiles;
	TArray<struct FortEncounterSequenceSettings> EncounterSequences;
	struct TSoftClassPtr<UObject> MissionOptions;
	struct GameplayTagContainer MissionDifficultyOptionTags;
	TArray<struct FortMissionTaggedRewards> TaggedRewards;
	TArray<struct MissionPerDifficultyProperties> PerDifficultyProperties;
	struct FortMissionConfigDataParams ConfigParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionInfoIndicator : public UFortSlateHUDIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionItemDefinition : public FortWorldItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionLarsVan : public AFortAircraft
{
public:
	class UClass* Root;
	class UClass* Van;
	class UClass* VanApparatus;
	class UClass* VanBalloon;
	class UClass* VanFlames;
	class UClass* Stool;
	class UClass* Lars;
	class UClass* Arrow;
	class UClass* VanMovement;
	TArray<class UClass*> WaitingToJump;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionManager : public AActor
{
public:
	TArray<struct FortMissionEventName> MissionEventNames;
	struct TSoftClassPtr<UObject> PrimaryMissionGE;
	class UClass* BluGloManager;
	TArray<class UClass*> Missions;
	TArray<class UClass*> AllMissionEnemyClasses;
	TArray<struct FortMissionEventReceiverByGameplayTagQuery> ContainerSearchedMissionReceivers;
	TArray<struct FortMissionEventReceiverByGameplayTagQuery> HarvestedMissionReceivers;
	TArray<struct FortMissionUIActorHandle> MissionUIActors;
	class UClass* CurrentUIFocusedMission;
	class UClass* MissionClosestToPar;
	struct FScriptMulticastDelegate OnMissionsUpdated;
	struct EarnedBadgeEntryArray EarnedBadgesArray;
	struct FScriptMulticastDelegate OnShouldShowSecondaryMissionHeadersChanged;
	bool bDisplaySecondaryMissionHeaders;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionOutpostConfigData : public UFortMissionConfigData
{
public:
	struct DataTableRowHandle DifficultyData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionOutpostQuestConfigData : public UFortMissionConfigData
{
public:
	struct GameplayTag LegTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionPowerPointsInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMissionStormSafeZone : public AActor
{
public:
	class UClass* SafeZoneMesh;
	bool bScaleUniformly;
	struct FScriptMulticastDelegate OnSafeZoneInStormStateChanged;
	TArray<class UClass*> Abilities;
	bool bSafeZoneInStormStateChanged;
	float SafeZoneRadius;
	class UClass* AbilityComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionTimerComponent : public UActorComponent
{
public:
	bool bShowTimeElapsed;
	bool bUpdateQuestsTimeElapsed;
	struct FScriptMulticastDelegate OnMissionTimerComponentUpdated;
	struct FScriptMulticastDelegate OnMissionTimerTimeAddedOrRemoved;
	TArray<struct MissionTimeDisplayData> DisplayData;
	struct MissionTimerData TimerData;
	struct FText TimerLabelText;
	bool bDisplayInTimeFormat;
	ETimerOverrideSetting TimerVisibilityOverrideSetting;
	float TimerVisibilityShowAtEndTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionTimerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUINotification : public UObject
{
public:
	struct FText Title;
	struct FText Description;
	bool bHasAction;
	EFortNotificationType NotificationType;
	struct UniqueNetIdRepl IdToRepresent;
	struct FScriptMulticastDelegate OnNotificationCleared;
	struct TSoftClassPtr<UObject> DisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionVoteUINotification : public UFortUINotification
{
public:
	EFortVoteType VoteType;
	bool bHasVoteEnded;
	int VoteResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionWeightedRewards : public UDataAsset
{
public:
	TArray<struct FortMissionWeightedReward> Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDPresetContainer : public UObject
{
public:
	struct GameplayTag HUDPresetContainerTag;
	TArray<struct FortMobileHUDPreset> HUDProfilePresets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDPresetExtensionContainer : public UDataAsset
{
public:
	struct GameplayTag HUDPresetExtensionContainerTag;
	struct GameplayTag HUDPresetContainerToExtendTag;
	TArray<struct FortMobileHUDPresetExtension> HUDPresetExtensions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetRegistryBase : public UDataAsset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileInteractionComponent : public UStaticMeshComponent
{
public:
	class UClass* IconMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileLocalPlayer : public UFortLocalPlayer
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMontageLookupTable : public UPrimaryDataAsset
{
public:
	TArray<struct MontageLookupData> MontageLookupDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMountedTurret : public AFortAthenaSKMotorVehicle
{
public:
	byte TeamIndex;
	bool bConstrainVerticalRotationOnly;
	struct Transform LastFrameTurretTransform;
	float PedalScaler;
	float MovementParam;
	float BatteryParam;
	float RumbleIntensity;
	class UClass* DriverCameraShake;
	class UClass* PassengerCameraShake;
	class UClass* LocalPlayerPawn;
	struct TurretCosmeticData TurretCosmeticData;
	class UClass* FortMountedTurretConfigsClass;
	class UClass* FortMountedTurretConfigs;
	TArray<struct VehicleSpecificUIDetails> CustomUI;
	TArray<struct ActiveVehicleUI> ActiveUI;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMountedCannon : public AFortMountedTurret
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMountedTurretAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* MountedTurret;
	bool bIsUsingMountedTurret;
	float AimingYaw;
	float AimingPitch;
	float PedalScaler;
	float TurnRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMountedTurretConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float CameraShakeAmplitudeMin;
	float CameraShakeAmplitudeMax;
	float CameraShakeNormalizedSpeed;
	float CameraShakeSpeedCurvePow;
	float AimInterpSpeed;
	float InitialCameraInterpSpeed;
	float InitialCameraLerpTime;
	float MaxYawPerSecondThreshold;
	float MaxPitchPerSecondThreshold;
	float PitchConstraintAngleOffset;
	bool bConstrainVerticalRotationOnly;
	struct Vector LocalAimOffsetWhenPitchedUp;
	struct Vector LocalAimOffsetWhenPitchedFlat;
	struct Vector LocalAimOffsetWhenPitchedDown;
	float PedalCyclesPerFullTurn;
	int bWeaponIgnoresMountedTurretBase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMountedWeaponInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMovementComp_Character : public UCharacterMovementComponent
{
public:
	float LandHardSoundFallSpeedThreshold;
	float LandSoundFallSpeedThreshold;
	class UClass* PushBumpedPawnClass;
	float NetworkSmoothingVisibilityThreshold;
	int NetworkSmoothingThrottleProxyUpdateForPawnLOD;
	float NetworkSmoothingViewAngleThreshold;
	float NetworkSmoothingViewAngleThresholdSmall;
	float NetworkSmoothingNoThrottleWithinDistanceInMeters;
	int PlayerLodRequiredForFloorCheckWhenRendered;
	EFortAILODLevel AILodRequiredForFloorCheckWhenRendered;
	class UClass* VelocityBasedStrafeCurve;
	class UClass* VelocityBasedTurnCurve;
	class UClass* VelocityBasedBackupCurve;
	bool bWasUsingVelocityBasedTurnCurve;
	float RotationYawRateToRestore;
	struct ScalableFloat FallingSlopeSafeSlideAngleScalable;
	struct ScalableFloat FallingSlopeSafeSlideMaxSpeedScalable;
	struct ScalableFloat FallingSlopeDamageScalarMinScalable;
	float FallingSlopeSafeSlideAngleCached;
	float FallingSlopeSafeSlideNormalZ;
	struct AirControlParams SkydivingControlParamsPassive;
	struct AirControlParams SkydivingControlParamsActive;
	struct AirControlParams ParachuteControlParamsSkydive;
	struct AirControlParams ParachuteControlParamsJump;
	struct AirControlParams ParachuteControlParamsGliderRedeploy;
	struct AirControlParams GoopAirControlParams;
	struct GoopControlParams GoopControlParams;
	struct AirControlParams BalloonControlParams;
	struct AirControlParams FloatingControlParams;
	struct AirControlParams VortexSkydivingControlParamsPassive;
	struct AirControlParams VortexSkydivingControlParamsActive;
	struct AirControlParams VortexSkydivingControlParamsActiveUpward;
	struct AirControlParams VortexParachuteControlParams;
	struct AirControlParams SkyTubeSkydivingControlParamsPassive;
	struct AirControlParams SkyTubeSkydivingControlParamsActive;
	struct AirControlParams SkyTubeSkydivingControlParamsActiveUpward;
	struct ScalableFloat SkyTubeUpwardAccelerationScalar;
	struct ScalableFloat SkyTubeDownwardAccelerationScalar;
	struct WaterControlParams SurfaceSwimmingWaterControlParams;
	struct WaterJumpParams WaterJumpParams;
	struct WaterJumpParams WaterJumpParamsSprint;
	bool bComputeWaterSplineDataOnSimulatedMovement;
	struct WaterSprintBoostParams WaterSprintBoostParams;
	float SkydivingMaxSmoothUpdateDistanceScale;
	float SlideTimeUntilReset;
	float SlideIfVelocityLessThanZ;
	int GravityCeilingRelation;
	float CurrentZiplineVelocityDirection;
	float GracePeriodToConnectToZipline;
	float FallingStartedZ;
	struct Vector CustomFallingAcceleration;
	struct Vector ReplicatedAcceleration;
	bool bTriggeredFallingFeedbackSinceLanded;
	bool bUpdatesFloorWhenNotInFullSimulation;
	bool bUpdatesFloorWhenNotInFullSimulationOnlyOnNetUpdate;
	Unknown CachedLODSettingsManager;
	float CustomMeshHeightAdjust;
	float CustomMeshHeightAdjustLerpTarget;
	float CustomMeshHeightAdjustLerpSpeed;
	float CustomMeshHeightAdjustTotalApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMovementComp_AIChar : public UFortMovementComp_Character
{
public:
	bool bDeimos;
	class UClass* CachedAthenaPathFollowingComp;
	class UClass* CachedAthenaAIController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMovementComp_CharacterAthena : public UFortMovementComp_Character
{
public:
	TArray<struct AthenaJumpPenalty> JumpPenalties;
	float JumpPenaltyResetTime;
	int NetworkSkipSkyDivingCollisionForPawnLOD;
	float MaxAccelerationFlying;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMovementComp_CharacterAthena_Ostrich : public UFortMovementComp_CharacterAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMovementComp_GroundSpline : public UMovementComponent
{
public:
	float SplineLocationOffsetZ;
	bool bOffsetZIsAbsolute;
	bool bTickGroundSplineMovement;
	struct FScriptMulticastDelegate OnHitActor;
	struct FScriptMulticastDelegate OnEndOfSplineReached;
	struct FScriptMulticastDelegate OnCrossedSplinePoint;
	int NumberOfMoveRetriesPerTick;
	float ClimbSpeedPercent;
	float PitchSpeed;
	float PitchThreshold;
	float PitchThresholdSmoothing;
	float LinearJerk;
	float YawJerk;
	float GroundCheckFrequency;
	float GroundCheckDistance;
	float AttemptUnstickMinimumAngleDegrees;
	float PawnPushTime;
	float ClientImmediatelySnapToReplicatedLocationTime;
	float ClientImmediatelySnapToReplicatedLocationDistanceMinimumSquared;
	float PawnPushForceMultiplier;
	class UClass* GameplayEffectClassDestroyBuildings;
	struct GameplayTag TagDestroyBuildings;
	float SplineDistanceReplicationRecoveryPercent;
	float SplineDistanceReplicationRecoveryMinDistancePerSecond;
	float SpeedTimeReplicationRecoveryPercent;
	struct GroundSplineLocationData ReplicatedSplineLocationData;
	struct GroundSplineSpeedData ReplicatedTargetSpeeds;
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMovementSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData WalkSpeed;
	struct FortGameplayAttributeData RunSpeed;
	struct FortGameplayAttributeData SprintSpeed;
	struct FortGameplayAttributeData FlySpeed;
	struct FortGameplayAttributeData CrouchedRunSpeed;
	struct FortGameplayAttributeData CrouchedSprintSpeed;
	struct FortGameplayAttributeData BackwardSpeedMultiplier;
	struct FortGameplayAttributeData JumpHeight;
	struct FortGameplayAttributeData GravityZScale;
	struct FortGameplayAttributeData VehicleGravityZScale;
	struct FortGameplayAttributeData SpeedMultiplier;
	struct FortGameplayAttributeData LandSpeedMultiplier;
	struct FortGameplayAttributeData SwimSpeedMultiplier;
	struct FortGameplayAttributeData LandSpeedWhileBurrowingMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMtxWallets : public UObject
{
public:
	Unknown SharedWallets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMusicAsset : public UPrimaryDataAsset
{
public:
	struct FortMusicSection Sections;
	float Priority;
	EFortMusicSectionStopBehavior StopBehavior;
	bool bIsStinger;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMusicCombatBank : public UDataAsset
{
public:
	class UClass* Assets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMusicContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnMusicPackChanged;
	class UClass* DesiredActiveMusicPack;
	TArray<struct PrimaryAssetId> LoadedPacks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMusicVoice : public UObject
{
public:
	struct FScriptMulticastDelegate OnVoiceStarted;
	struct FScriptMulticastDelegate OnVoiceFinished;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMusicManager : public AActor
{
public:
	class UClass* ControllerOwner;
	class UClass* Voices;
	TArray<class UClass*> VoicesToCleanUp;
	bool bWorldReadyCalled;
	class UClass* MusicBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMusicManagerBank : public UDataAsset
{
public:
	class UClass* TimeOfDayBank;
	class UClass* CombatBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortMusicPackPreviewActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMusicTimeOfDayBank : public UDataAsset
{
public:
	class UClass* Assets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMutatorOwner : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMutatorContext : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMutatorContextComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMutatorListComponent : public UActorComponent
{
public:
	bool bShouldMakeMutatorsDormant;
	EMutatorListInitState InitState;
	TArray<struct TSoftClassPtr<UObject>> MutatorDefs;
	class UClass* UserOptions;
	TArray<class UClass*> Mutators;
	struct FScriptMulticastDelegate OnSettingsInitialized;
	struct FScriptMulticastDelegate OnSettingsChanged;
	struct PropertyOverrideData PropertyOverrideArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNativizationUtilityLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNavAgentCostData : public UPrimaryDataAsset
{
public:
	struct FName NavAgentName;
	TArray<class UClass*> NavAreaStrengthBuckets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_CheapObstacle : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_ClosedDoors : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_Danger : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_DefaultSmashable : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_DefenderNull : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_HuskNull : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_LowJump : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_LowSmashable : public FortNavArea_DefaultSmashable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_Obstacle : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_PlayerBuiltSmashable : public FortNavArea_DefaultSmashable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_PortalOrSmash : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_SmashableJump : public FortNavArea
{
public:
	int Strength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_StarlightCheapObstacle : public FortNavArea_CheapObstacle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_StarlightObstacle : public FortNavArea_Obstacle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_StoneWall : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_TakerOnly : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_TraceSmashable : public FortNavArea_DefaultSmashable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_Unwalkable : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_WalkOverWall : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_WallCorner : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavArea_WoodenWall : public FortNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavGraphGoal : public AActor
{
public:
	float GraphRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavigationActor_BattlePassInfo : public AFortEventLevelNavigationActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavigationActor_DailyChallengeBoard : public AFortEventLevelNavigationActor
{
public:
	class UClass* S_NoteCard_Top;
	class UClass* S_NoteCard_Middle;
	class UClass* S_NoteCard_Bottom;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavigationActor_EventGraphItem : public AFortEventLevelNavigationActor
{
public:
	struct GameplayTag ParentNavObject;
	struct GameplayTagContainer LevelDefinedNodeToRollFor;
	struct GameplayTag NodeTag;
	class UClass* RewardGraphToReprisent;
	bool bInitializedCalled;
	bool CanNavigateToWhenClaimed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavigationActor_MapTable : public AFortEventLevelNavigationActor
{
public:
	class UClass* ApolloMap;
	class UClass* ReferencePlane;
	struct Vector ApolloMapMinLoc;
	struct Vector ApolloMapMaxLoc;
	struct Vector UnscaledPlaneExtent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavigationActor_OpenablePresent : public AFortNavigationActor_EventGraphItem
{
public:
	float TurnSpeed;
	float OpenDelay;
	struct Vector StartingOrigin;
	bool bCanInspect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationMetaFilter : public NavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationFilter_Hunting : public FortNavigationMetaFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationFilter_IgnoreSmashingCost : public NavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationFilter_NoSmashing : public NavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationFilter_NoSmashingIncludeLow : public NavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationFilter_TetherZone : public NavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavigationGraph : public NavigationData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNavigationVisibilityComponent : public UActorComponent
{
public:
	Unknown WeakActor;
	struct FScriptMulticastDelegate HandleCustomPassed;
	struct FScriptMulticastDelegate HandleCustomFailed;
	bool bPassedRules;
	int64_t LastProfileRevision;
	bool bEnableCollision;
	bool bCustomSkipCollision;
	Unknown RoomOwner;
	Unknown GSC_StreamingLevelOwner;
	struct GameplayTagContainer ValidActiveCameraTags;
	struct GameplayTagContainer ExcludedActiveCameraTags;
	TArray<struct QuestRequirement> Quests;
	TArray<struct ItemRequirement> Items;
	TArray<struct CalendarRequirement> CalendarEvents;
	TArray<struct ProfileStatRequirement> ProfileStats;
	struct FString DebugTrackingName;
	bool bShouldLogFails;
	bool debugVisibilityLastKnownState;
	EVisibilityResponse ActorResponse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNavLinkBlockerComponent : public UBoxComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNavLinkContainer : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNavLinkDefinition : public UNavLinkDefinition
{
public:
	struct FortNavLinkPattern Pattern;
	TArray<struct FortNavLinkPattern> AdditionalPatterns;
	TArray<EBuildingStairsRailing> StairsRailing;
	EBuildingFloorRailing FloorRailing;
	EFortNavLinkPattern PatternType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNavObstacleComponent : public NavRelevantComponent
{
public:
	class UClass* ObstacleAreaClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNeverPersistItemDefinition : public FortWorldItemDefinition
{
public:
	bool bAccumulateOnPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNiagaraGameplayLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortniteAutomationBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNonPlayerConversationParticipantComponent : public ConversationParticipantComponent
{
public:
	struct FScriptMulticastDelegate OnDialogMarkerInteractionStateChanged;
	struct FScriptMulticastDelegate OnConversationEnded;
	struct GameplayTag ConversationEntryTag;
	struct GameplayTag InteractorParticipantTag;
	struct GameplayTag SelfParticipantTag;
	struct GameplayTag ServiceProviderIDTag;
	bool bShowNameWhenInRange;
	bool bShowIndicatorBubble;
	bool bShowConversationText;
	EFortQuestObjectiveStatEvent InitiateConversationStatEventType;
	class UClass* Gifts;
	struct GameplayTag GiftsSeasonDataTableTag;
	class UClass* GiftTypeDefinitions;
	struct GameplayTag GiftTypeDefinitionsSeasonDataAssetTag;
	class UClass* GiftItemInventory;
	struct GameplayTag GiftItemInventorySeasonDataTableTag;
	int MaxServices;
	class UClass* Services;
	class UClass* SalesInventory;
	bool bQuestsRequireProviderTagMatch;
	int MaxQuestsToSupportFromSingleProvider;
	bool bOverrideParticipantDisplayName;
	struct FText ParticipantDisplayNameOverride;
	struct TSoftClassPtr<UObject> CustomDialogMarkerSoftClass;
	bool bOverrideRelativeLocation;
	struct Vector RelativeLocationOverride;
	bool bOverrideMaxDrawDistance;
	float MaxDrawDistanceOverride;
	struct TSoftClassPtr<UObject> DialogMarkerIndicatorSoftIcon;
	TArray<struct TSoftClassPtr<UObject>> SupportedQuests;
	struct GameplayTagContainer SupportedServices;
	TArray<struct NPCSaleInventoryRow> SupportedSales;
	TArray<struct NPCConversationGiftRow> SupportedGiftTypes;
	TArray<struct NPCGiftItemInventoryRow> SupportedGiftItems;
	TArray<struct FName> HideUIIndicatorReasons;
	class UClass* CustomDialogMarkerClass;
	class UClass* ResolvedGiftTypeDefinitions;
	bool bServiceDataInitialized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNotificationMessage : public ULocalMessage
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNPCConversationParticipantComponent : public FortNonPlayerConversationParticipantComponent
{
public:
	bool bCanStartConversation;
	bool bConversationModeActive;
	class UClass* PlayerPawnOwner;
	class UClass* BotControllerOwner;
	class UClass* AffiliationManager;
	class UClass* ConversationRuntimeParameters;
	struct FName ConversationInteractionCollisionProfile;
	struct Vector ConversationInteractionBoxExtent;
	struct Vector ConversationInteractionBoxOffset;
	class UClass* InteractCollisionComponent;
	class UClass* CharacterData;
	class UClass* NPCAnimLayer;
	bool bTriggerGiftOnFirstConversationEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNpcItemDefinition : public FortWorldItemDefinition
{
public:
	TArray<struct TSoftClassPtr<UObject>> ChallengeBundles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortObjectiveBase : public AFortMissionState
{
public:
	class UClass* ObjectiveRewardBadge;
	TArray<class UClass*> ItemsToGiveOnObjectiveStart;
	bool bStartPlayingOnMissionStart;
	bool bAcceptsMissionEventsWhenFinished;
	struct GameplayTagContainer ObjectiveHandle;
	struct FString ObjectiveAnalyticsName;
	EFortObjectiveRequirement MissionRequirement;
	bool bIsObjectiveVisible;
	EFortMissionVisibilityOverride VisibilityOverride;
	bool bIsProgressBarHidden;
	EFortMissionAudibility ObjectiveAudiblity;
	bool bRelevantToSpecificTeam;
	EFortTeam RelevantTeam;
	EFortObjectiveStatus ObjectiveStatus;
	class UClass* TimerComponent;
	struct FScriptMulticastDelegate OnObjectiveStatusChanged;
	struct FScriptMulticastDelegate OnObjectiveVisibilityChanged;
	struct FScriptMulticastDelegate OnObjectiveVisibilityOverrideChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortOctopusTowhookAttachableProjectile : public AFortAttachableProjectileBase
{
public:
	struct FName RopeAttachSocketName;
	struct FName CollisionProfileNameOverride;
	class UClass* OwningVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOctopusVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* OctopusVehicle;
	struct Rotator ShellRotation;
	struct Rotator SeatRotation;
	struct Vector SeatRotationVelocity;
	struct Vector SeatRotationTorque;
	float SeatSteerYawDelta;
	float SeatSteerPitchDelta;
	float SeatSteerRollDelta;
	float FwdBwd;
	float LeftRight;
	struct Rotator TowhookRotation;
	struct Vector TargetHeading;
	struct Vector AimPoint;
	EFortCardinalDirection PivotDir;
	bool bIsBoosting;
	bool bIsTowhookExtending;
	bool bIsTowhookAttached;
	bool bIsTowhookContracting;
	bool bIsTowhookHolstered;
	bool bIsLowerVelocity;
	bool bIsDriverFemale;
	bool bShouldPlayPivotTransition;
	bool bShouldPlayGrappleFire;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOctopusVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float MinBuildingDamage;
	float MaxBuildingDamage;
	float MinBuildingDamageSpeedKmh;
	float MaxBuildingDamageSpeedKmh;
	float MinBuildingDamageWhileBoosting;
	float MaxBuildingDamageWhileBoosting;
	float MinBuildingDamageSpeedWhileBoostingKmh;
	float MaxBuildingDamageSpeedWhileBoostingKmh;
	struct FName TowhookMuzzleSocketName;
	float TowhookNetUpdateTime;
	float WaterTraction;
	float BoostBounceRechargeFalloff;
	float MinSpeedToLaunchPlayersKmh;
	float MinYankLaunchForce;
	float MaxYankLaunchForce;
	float MinYankLaunchVelocityKmh;
	float MaxYankLaunchVelocityKmh;
	int MaxSignificanceBudgetForFX;
	int MaxSignificanceBudgetForAudio;
	bool bDisableFXWhenInsignificant;
	bool bDisableAudioTickWhenInsignificant;
	bool bGlassIsPenetrable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOnlineAccount : public UOnlineAccountCommon
{
public:
	bool bEnableEulaCheck;
	bool bShouldAthenaQueryRecentPlayers;
	bool bHadLoginPurchaseCheckFailure;
	TArray<struct FString> IgnoreProducts;
	TArray<struct FString> ResubmitProducts;
	Unknown RestrictedCountries;
	bool bShouldClientForcePartnerId;
	struct FString ClientForcePartnerId;
	bool bDisablePurchasingOnRedemptionFailure;
	double MinimumSecondsBetweenPurchaseRedemptionAttempts;
	bool bPromptUserAndReverifyAuthToken;
	float RefreshConnectionTimerDuration;
	TArray<struct FString> RealMoneyPurchaseBlockedCountryCodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOnlineBeaconHost : public OnlineBeaconHost
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOnlineSessionClient : public OnlineSessionClient
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOstrichAnimInstance : public UFortAnimInstance
{
public:
	struct TSoftClassPtr<UObject> EmoteMeshSpecialMontage;
	class UClass* MechMeshSpecialMontage;
	bool bDoingSpecialEmote;
	bool bIsCosmeticPreview;
	struct FortAnimInput_VelocityImpact VelocityImpactInput;
	bool bIsMoving2D;
	bool bWasMoving2DLastFrame;
	bool bIsShotgunFired;
	bool bIsMechBeginFired;
	bool bIsFallingWithDriver;
	bool bIsSkyTubingWithDriver;
	bool bIsInAirWithDriver;
	bool bStartTransitionTriggeredAndEnableStarts;
	float MechWalkPlayRateValue;
	float MechWalkSpeedWarpingValue;
	float RocketCurveValueFloat;
	float ShotgunAmmo_SlideValue;
	class UClass* Ostrich;
	class UClass* EmoteMeshToCopy;
	struct Vector ImpactDisplacement;
	struct FortAnimInput_TurnInPlace TurnInPlaceInput;
	float YawDeltaCurrentTick;
	struct Vector ActorLocationLastTick;
	struct Rotator ActorRotationLastTick;
	float SlopeWarpingAlpha;
	struct Vector2D SlopeWarpingAlphaSpeedInputRange;
	struct Vector2D SlopeWarpingAlphaSpeedOutputRange;
	float SlopeWarpingAlphaInterpSpeed;
	float Speed2D;
	float LocalAimYaw;
	float GunnerAimTargetDeltaYaw;
	float GunnerAimTargetDeltaPitch;
	EFortCardinalDirection LocalAimCardinalDirection;
	float LocalAimYawDeadZoneAngle;
	float LocalVelocityYawAngle;
	struct FloatRK4SpringInterpolator LocalVelocityYawAngleInterpolator;
	float LocalVelocityYawAngleInterpolated;
	float LocalAccelerationYawAngle;
	EFortCardinalDirection LocomotionCardinalDirection;
	float LocomotionDeadZoneAngle;
	struct Vector WorldSpaceAimPoint;
	bool bIsDashing;
	bool bIsDashAnimDurationElapsed;
	bool bIsChargingJump;
	bool bHasDriver;
	bool bHasGunner;
	bool bIsEmoting;
	bool bIsOnGround;
	bool bIsRocketOnCoolDown;
	bool bShouldApplyShoulderPadsAdditive;
	bool bInAir;
	bool bShouldRightArmLookAt;
	bool bPassengerBootUp;
	bool bIsEmptyOnFirstLoad;
	bool bJustDidStompInAir;
	bool bIsStompInAir;
	bool bWasStompInAir;
	bool bShouldPlayJumpCharging;
	bool bHadDriver;
	bool bJustGotDriver;
	bool bJustLostDriver;
	bool bWasDashing;
	bool bStartedDash;
	bool bHadGunner;
	bool bJustGotGunner;
	bool bJustLostGunner;
	bool bShouldPlayJogStop;
	bool bShouldBringAmmoBack;
	bool bHasAnyPlayer;
	bool bIsOnCoolDown;
	bool bShouldPlayNormalJump;
	bool bShouldPlayChargedJump;
	bool bIsSkyTubing;
	bool bShouldPlaySkyTubingLoop;
	bool bStartTransitionTriggered;
	bool bStartEarlyOut;
	bool bPivotTransitionTriggered;
	bool bPivotEarlyOut;
	bool bShouldEarlyOutStompLanding;
	float JumpApexLoopAlphaValue;
	float StatusStartPositionAlphaValue;
	float InMotionAlphaValue;
	float DashLeansAlphaValue;
	float ShotgunShellsAlphaValue;
	float GunnerJogBounceAlphaValue;
	struct Rotator AimYawRotationValue;
	float GunnerAimYawBlendIn;
	float GunnerAimYawBlendOut;
	float RightArmNoAdditiveAlphaValue;
	float BaseAdditiveAlphaValue;
	float GunnerAlphaValue;
	float JoyStickAlphaValue;
	float ShellOneAlphaValue;
	float ShellTwoAlphaValue;
	float ShellThreeAlphaValue;
	float ShellFourAlphaValue;
	float ShellsPlayRateValue;
	float RecoilAmountAlphaValue;
	float LowerBodyRecoilAdditiveAlphaValue;
	float ChargeJumpFloatValue;
	float InMotionAlphaInterpSpeed;
	float DashLeansAlphaInterpSpeed;
	float GunnerJogBounceAlphaInterpSpeed;
	float RightArmNoAdditiveInterpSpeed;
	float JoyStickAlphaInterpSpeed;
	float GunnerAlphaInterpSpeed;
	float StatusStartPositionAlphaWhemIsEmptyOnFirstLoad;
	float DashLeansAlphaWhenGunner;
	float DashLeansAlphaNoGunner;
	float ShotgunShellsAlphaWhenShotgunFires;
	float ShotgunShellsAlphaNoShotgunFiring;
	float BaseAdditiveAlphaWhenMontageIsPlaying;
	float BaseAdditiveAlphaNoMontagePlaying;
	float JoyStickAlphaWithGunner;
	float GunnerAlphaWithGunner;
	float ShellOneAlphaAmmoCountAt3;
	float ShellTwoAlphaAmmoCountAt2;
	float ShellThreeAlphaAmmoCountAt1;
	float ShellFourAlphaAmmoCountAt0;
	float ShellsPlayRateWhenNoMoreAmmoAndShouldBringAmmo;
	float RecoilAmountAlphaWhenMontagePlayingAndShotgunFires;
	float LowerBodyRecoilAdditiveAlphaWithDriver;
	float LowerBodyRecoilAdditiveAlphaNoDriver;
	float JumpApexLoopAlphaNotChargingJump;
	float JumpApexLoopAlphaWhenIsChargingJump;
	float PlayRateSpeedWarpAlpha;
	float RigidBodyAlpha;
	class UClass* MechShotgunReload;
	class UClass* MechShotgunFireA;
	class UClass* MechShotgunFireB;
	class UClass* MechRocketFire;
	class UClass* MechRocketFireSettle;
	class UClass* ChargedJumpApexSeq;
	class UClass* ChargedJumpFallSeq;
	class UClass* ChargedJumpLandSeq;
	class UClass* ChargedJumpLandPredictedSeq;
	class UClass* NormalJumpApexSeq;
	class UClass* NormalJumpFallSeq;
	class UClass* NormalJumpLandSeq;
	class UClass* NormalJumpLandPredictedSeq;
	class UClass* JumpBaseApexSeq;
	class UClass* JumpBaseFallSeq;
	class UClass* JumpBaseLandSeq;
	class UClass* JumpBaseLandPredictedSeq;
	bool bTransition_Idle_To_Movement;
	bool bTransition_BootUp_To_Movement;
	bool bTransition_Turn_To_Idle;
	bool bTransition_Stop_To_Idle;
	bool bTransition_DashLoop_To_Default;
	bool bTransition_DashLoop_To_DashOutro;
	float NotJustGotDriverFloat;
	float IsShotgunFiredFloat;
	struct Rotator UpperBodyLagOffset;
	float UpperBodyLagMaxRecoverySpeed;
	float UpperBodyLagRecoverySmoothness;
	float UpperBodyLagRecoveryMass;
	float UpperBodyLagRecoveryDelay;
	float UpperBodyLagOffsetLimitDuringTurns;
	float UpperBodyLagOffsetLimitDuringTurnsInterpSpeed;
	float UpperBodyLagOffsetLimitWhileStill;
	float UpperBodyLagOffsetLimitWhileStillInterpSpeed;
	float CurrentUpperBodyLagRecoverySpeed;
	float TimeUntilNextUpperBodyLagRecovery;
	float CurrentUpperBodyLagOffsetLimit;
	struct FortDistanceCurve DistanceCurve;
	struct FortCachedFloatCurve PlayRateSpeedWarpAlphaCurve;
	struct CachedAnimStateData PivotStateData;
	class UClass* PivotAnimationLeft;
	class UClass* PivotAnimationRight;
	float PivotEarlyOutAngleThreshold;
	struct FortAnimInput_TurnCorrection PivotTurnCorrection;
	struct Vector PivotLocation;
	struct Vector PivotInitialFacingDir2D;
	class UClass* PivotAnimation;
	float PivotAnimPosition;
	struct CachedAnimStateData MovementStateData;
	bool bEnableStarts;
	struct CachedAnimStateData StartStateData;
	struct FortDirectionalAnimRef DirectionalStartAnims;
	float StartEarlyOutThresold;
	struct FortAnimInput_TurnCorrection StartTurnCorrection;
	float StartAnimDistanceFromMarker;
	float ActualDistanceFromMarker;
	float StartAnimTimeElapsed;
	float StartInitialAccelYaw;
	float StartTurnDirection;
	struct Vector StartAnimLocation;
	EFortCardinalDirection StartCardinalDirection;
	class UClass* StartAnimation;
	float StartAnimPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOstrichSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData WalkSpeed;
	struct FortGameplayAttributeData SprintSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOstrichVehicleConfigs : public UFortVehicleConfigs
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortOutpostBuilding : public ABuildingProp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOutpostContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnBuildingLevelChanged;
	struct FScriptMulticastDelegate OnItemsNeedRefresh;
	struct FScriptMulticastDelegate OnGooContentNeedRefresh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOutpostPOSTRequirementData : public UObject
{
public:
	class UClass* RequirementItemDefinition;
	int TotalRequired;
	int AlreadyDeposited;
	int AmountOwned;
	bool bHasEnough;
	int AmountToDeposit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOutpostData : public UDataAsset
{
public:
	int StructureLimitNotificationThreshold;
	struct OutpostBuildingData StormShieldData;
	struct HarvestingOptimizerBuildingData HarvestingOptimizerData;
	struct StorageVaultBuildingData StorageVaultData;
	struct OutpostUpgradeAndPrestigeBuildingData OutpostUpgradeAndPrestigeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOutpostFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOutpostItem : public UFortCloudSaveItem
{
public:
	struct FortOutpostCoreInfo outpost_core_info;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOutpostItemDefinition : public FortCloudSaveItemDefinition
{
public:
	TArray<class UClass*> StaticGameplayEffectsByLevel;
	int TheaterIndex;
	struct FText LongDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPackPersonality : public UDataAsset
{
public:
	class UClass* TickleVOSound;
	class UClass* TickleSFXSound;
	class UClass* XRayVOSound;
	class UClass* HoverVOSound;
	class UClass* BuySFXSound;
	class UClass* OpenGenericVO_Sound;
	class UClass* OpenGenericSFX_Sound;
	class UClass* UpgradeSilverVO_Sound;
	class UClass* UpgradeSilverSFX_Sound;
	class UClass* OpenSilverVO_Sound;
	class UClass* OpenSilverSFX_Sound;
	class UClass* UpgradeGoldVO_Sound;
	class UClass* UpgradeGoldSFX_Sound;
	class UClass* OpenGoldVO_Sound;
	class UClass* OpenGoldSFX_Sound;
	class UClass* GreetGenericVO_Sound;
	class UClass* GreetAxeVO_Sound;
	class UClass* GreetBaseballBatVO_Sound;
	class UClass* GreetGardenHoeVO_Sound;
	class UClass* GreetGardenRakeVO_Sound;
	class UClass* GreetHockeyStickVO_Sound;
	class UClass* GreetPickAxeVO_Sound;
	class UClass* GreetPitchforkVO_Sound;
	class UClass* GreetScytheVO_Sound;
	class UClass* GreetSledgehammerVO_Sound;
	class UClass* GreetSwordVO_Sound;
	class UClass* PreHitVO_Sound;
	class UClass* DropMusic_Sound;
	class UClass* OpenMusic_Sound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyBeaconClient : public PartyBeaconClient
{
public:
	struct EmptyServerReservation PendingEmptyReservation;
	float ReconnectionInitialTimeout;
	float ReconnectionTimeout;
	bool bHasReconnected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyBeaconHost : public PartyBeaconHost
{
public:
	TArray<struct PlayerSquadMapping> PlayerSquadMapping;
	bool bUseSquadMappingOverride;
	TArray<struct FString> RegionsToUseSquadOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyBeaconState : public PartyBeaconState
{
public:
	struct UniqueNetIdRepl GameSessionOwner;
	struct EmptyServerReservation ReservationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyContext : public FortBlueprintContext
{
public:
	struct FScriptMulticastDelegate OnPartyJoined;
	struct FScriptMulticastDelegate OnClientPartyStateChanged;
	struct FScriptMulticastDelegate OnPartyTypeChanged;
	struct FScriptMulticastDelegate OnCrossplayPreferenceChanged;
	struct FScriptMulticastDelegate OnPlayerStateChanged;
	struct FScriptMulticastDelegate OnAthenaNumAliveChanged;
	struct FScriptMulticastDelegate OnAthenaTimeSpentInMatch;
	struct FScriptMulticastDelegate OnAthenaReadyTypeChanged;
	struct FScriptMulticastDelegate OnPartyJoinRequested;
	struct FScriptMulticastDelegate OnPartyInvitesCountChanged;
	struct FScriptMulticastDelegate OnLFGChanged;
	struct FScriptMulticastDelegate OnPartyPrivacyChanged;
	struct FScriptMulticastDelegate OnLocalPlayerStateChanged;
	struct FScriptMulticastDelegate OnPartyLeft;
	Unknown TeamsMap;
	Unknown UnassignedPlayerStatesByID;
	class UClass* LocalPlayerTeam;
	Unknown PendingChangedMemberInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPartySpectateAnalytics : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPathCostEstimator : public UObject
{
public:
	class UClass* GoalActor;
	class UClass* NavGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPatrolAnimAsset : public UDataAsset
{
public:
	struct FortAnimInput_PatrolAnimSet AnimSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPatrolAnimLayer : public UFortBaseLayerAnimInstance
{
public:
	struct FortAnimInput_PatrolAnimSet CurrentAnimSet;
	float CurrentSpeedInterpSpeed;
	float PatrolForceEnableSpeedThreshold;
	float WalkAdditiveStartOffset;
	float Speed2D;
	float LocalVelocityYawAngle;
	float DisableIdleDuringWalk;
	struct FName PatrolLocomotionStateMachineName;
	bool bRecentlyFired;
	bool bIsLandPatrolling;
	bool bIdle_Walk_Transition;
	bool bIsPatrolLocomotionCurrentTimeAboveThreshold;
	bool bIsDBNO;
	bool bIsMoving2D;
	bool bIsAIPatrolling;
	bool bIsStressed;
	bool bIsDanceStunned;
	bool bEnableFullbodyOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPatrolWardInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPawn_FeedbackAnnouncer : public AFortPawn
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPawn_Taker : public AFortAIPawn
{
public:
	float SlowShackleScale;
	bool bUseClimbLinks;
	TArray<struct BuildingHitTime> BuildingCollisions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPawnComponent_Convert : public FortPawnComponent
{
public:
	struct ScalableFloat CanConvert;
	struct ScalableFloat CanBeConverted;
	struct ScalableFloat CanBeConvertedFromDBNO;
	struct ScalableFloat MaxConvertedPawn;
	struct ScalableFloat ConvertTimeFromDBNO;
	class UClass* ConvertInteractionSound;
	class UClass* IndicatorMarkerWidgetClass;
	struct FScriptMulticastDelegate OnConvertedEvent;
	struct FScriptMulticastDelegate OnUnconvertedEvent;
	struct FScriptMulticastDelegate OnConvertEvent;
	struct FScriptMulticastDelegate OnUnconvertEvent;
	bool bCanConvert;
	bool bCanBeConverted;
	bool bCanBeConvertedFromDBNO;
	class UClass* ConverterPlayerState;
	class UClass* CachedAIConvertParameters;
	TArray<class UClass*> ConvertedPawnComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPawnComponent_Disguise : public FortPawnComponent
{
public:
	class UClass* CachedAIDisguiseParameters;
	class UClass* CachedNPCBehaviorParameters;
	float PlayerDetectedTimestamp;
	float RevealPlayerProximityDuration;
	class UClass* AffiliationManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPawnComponent_PassiveHealer : public FortPawnComponent
{
public:
	struct ScalableFloat PassiveHealerGreetingDistance;
	struct ScalableFloat PassiveHealerGreetingDuration;
	struct TSoftClassPtr<UObject> PassiveHealerActivitiesTable;
	TArray<class UClass*> GameplayEffectsToApply;
	struct ItemAndCount HealItem;
	struct ScalableFloat HealingIntervalDuration;
	struct ScalableFloat HealItemEquipDuration;
	struct ScalableFloat HealItemThrowHoldDuration;
	struct ScalableFloat HealItemWaitAfterThrowDuration;
	struct FName PassiveHealerInteractionCollisionProfile;
	struct Vector PassiveHealerInteractionBoxExtent;
	struct Vector PassiveHealerInteractionBoxOffset;
	class UClass* GreetingTextWidgetComponentClass;
	struct DataTableRowHandle OverrideLootInfo;
	class UClass* AffiliationManager;
	class UClass* InteractCollisionComponent;
	bool bPassiveHealingRunning;
	struct PrimaryAssetId SelectedEmotePrimaryAssetId;
	struct FText SelectedInteractText;
	struct FText SelectedGreetingText;
	float GreetingDistanceSqr;
	TArray<struct FortPassiveHealerPawnInfo> HealingPawns;
	class UClass* GreetingTextWidgetComponent;
	class UClass* FortWorldHealItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPawnComponent_Tether : public FortPawnComponent
{
public:
	class UClass* TetherPawn;
	float TetherPawnSavedCullDistanceSquared;
	bool bTetheredWithoutWeapon;
	bool bPressedTetheredBoost;
	bool bAllowVehicleTether;
	struct Vector2D TetherSweetSpotRange;
	struct Vector2D TetherAccelerationRange;
	float TetherSlackLength;
	float TetherCatchupLength;
	float TetherViewPlayerLength;
	float TetherBreakLength;
	float TetheredSpeedToBackOff;
	float TetheredMaxSpeed;
	float TetheredMovementAccelBackOff;
	float TetheredMovementAccelNudge;
	float TetheredMovementGroundFrictionMultiplier;
	float TetheredMovementWaterFrictionMultiplier;
	float TetheredMovementMaxAccel;
	float SetViewTargetToTetherPawnDelayTime;
	float SetViewTargetToTetherPawnBlendTime;
	float TetherJumpServerCorrectionExpansionTime;
	float TetherInitialYankLaunchZ;
	class UClass* TetherRopeMesh;
	class UClass* TetherRopeMaterial;
	class UClass* TetherRopeComp;
	class UClass* TetherRopeRodMesh;
	class UClass* TetherRopeRodComp;
	float TetherRightInput;
	class UClass* TetheredInputComponent;
	float TetheredExitHoldTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPawnScriptedBehavior : public UObject
{
public:
	TArray<struct ScriptedAction> ActionTemplates;
	TArray<struct ScriptedBehavior> ScriptedBehaviors;
	struct ScriptedBehavior CurrentBehavior;
	struct ScriptedAction CurrentCommand;
	struct FScriptMulticastDelegate ScriptComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPawnTickSubsystem : public UWorldSubsystem
{
public:
	TArray<class UClass*> Pawns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDetailedPerfReport : public UObject
{
public:
	TArray<struct FortBadMatchTrigger> BadMatchTriggers;
	TArray<struct FString> PhasesToInclude;
	double ReportProbability;
	bool bEnabled;
	bool bEnableCsvProfile;
	bool bUploadAllCsvs;
	bool bAllowForcedPerformanceReport;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDetailedPerfReportCampaign : public UFortDetailedPerfReport
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPersistence : public UObject
{
public:
	class UClass* Persistence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemTypeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPersonalVehicleItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPersonalVehicleItemDefinition : public FortAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> PersonalVehicleAbility;
	float MountTime;
	struct TSoftClassPtr<UObject> SkeletalMesh;
	class UClass* AnimClass;
	struct TSoftClassPtr<UObject> ActivateSound;
	struct TSoftClassPtr<UObject> DeactivateSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPetAnimInstanceShared : public UFortAnimInstance
{
public:
	float DeltaTime;
	struct GameplayTagContainer PendingActiveVariantContextTags;
	struct GameplayTagContainer ActiveVariantContextTags;
	bool bAreActiveFlagChangesPending;
	class UClass* OwnerFortPawn;
	class UClass* OwnerPet;
	bool bIsOnGround;
	bool bIsFrontEndPreview;
	bool bLobbySkyDive_IsDiving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPetAnimInstance : public UFortPetAnimInstanceShared
{
public:
	struct FortAnimInput_Skydiving SkydivingState;
	struct Rotator SkydiveRotation;
	float LookAtAlpha;
	struct Vector LookAtTargetLocation;
	float LookAtTargetingSpeed;
	float LookAtOverride;
	int JumpAnimIndex;
	struct FName OwnerBoneNameToFollowInVortex;
	struct Vector2D SkydiveRollInVortexOwnerRange;
	struct Vector2D SkydiveRollInVortexRange;
	float SkydiveRollWhenFloating;
	float SkydiveRollWhenDiving;
	float SkydiveRollInterpSpeed;
	float DownSightsToLocomotionTimeRemaining;
	float FaceCurveOverrideValue;
	bool bIsFlyingPet;
	float HandIKAlpha;
	float LegIKAlpha;
	bool bIsSlopeSliding;
	bool bIsJumpLandComplete;
	bool bIsZiplining;
	bool bIsBallooning;
	bool bIsFlying;
	bool bIsSurfaceSwimming;
	bool bIsInAirNotJumping;
	bool bUseSkydiveRotation;
	bool bIsSkydivingInGame;
	bool bIsPlayingMeleeAnim;
	bool bIsTargeting;
	bool bIsDBNO;
	bool bIsHappy;
	bool bIsHunker;
	bool bIsInFrontEnd;
	bool bIsFrontEndLobbyPartyMember;
	bool bIsOwnerPawnBeingControlledByNonPlayerAnimBP;
	bool bIsCrouching;
	bool bIsMoving2D;
	bool bIsLocomotion;
	bool bIsJogging;
	bool bIsSprinting;
	bool bIsCrouchSprinting;
	bool bIsCrouchMoving;
	bool bIsTargetingAndMoving;
	struct CachedAnimRelevancyData CachedAnimData_DownSightsToIdle;
	struct CachedAnimRelevancyData CachedAnimData_JumpLand;
	struct CachedAnimRelevancyData CachedAnimData_IdleHappy;
	struct CachedAnimRelevancyData CachedAnimData_CrouchInternalHappy;
	struct CachedAnimRelevancyData CachedAnimData_ParachuteSkydive;
	bool bTransition_LocomotionToIdle_To_Locomotion;
	bool bTransition_Locomotion_To_LocomotionToIdle;
	bool bTransition_JumpFall_To_Skydive;
	bool bTransition_JumpLand_To_Locomotion;
	bool bTransition_DownSightsToIdle_To_Locomotion;
	bool bTransition_Idle_IdleLobby;
	bool bTransition_Idle_Locomotion;
	bool bTransition_InnerIdle_IdleToHappy;
	bool bTransition_Locomotion_StartJump;
	bool bTransition_Locomotion_LocomotionHappy;
	bool bTransition_Crouch_CrouchToLocomotion;
	bool bTransition_Crouching_CrouchToIdle;
	bool bTransition_Crouching_CrouchToCrouchADSNotMoving;
	bool bTransition_CrouchToCrouchADSNotMoving_Crouching;
	bool bTransition_Skydive_Idle;
	bool bTransition_SkyDiveGliding_SkyDiveDiving;
	bool bTransition_Hunker_Idle;
	bool bTransition_Hunker_Locomotion;
	bool bTransition_Hunker_HunkerToCrouch;
	bool bTransition_DownSights_ADSToCrouch;
	bool bTransition_DownSights_DownSightsToIdle;
	bool bTransition_CrouchWalkingDownSights_DownSights;
	bool bTransition_IdleLobby_Idle;
	bool bTransition_FrontEndSkydive_LobbyHunker;
	bool bTransition_FrontEndSkydive_IdleLobby;
	bool bTransition_LobbyHunker_HunkerToLobby;
	bool bTransition_Happy_HappyToIdle;
	bool bTransition_Happy_HappyToCrouchInternal;
	bool bTransition_ParachuteToSkydiveGlide_Skydive;
	bool bEmotePlaying_WhereHunkeringIsBest;
	bool bEmotePlaying_WhereHappyIsBest;
	bool bResponse_ShouldBeHappy;
	class UClass* LastObservedFrontEndEmote;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPetAnimInstance_AnimDynamics : public UFortPetAnimInstanceShared
{
public:
	float PawnSpeedForAnimDynamics;
	float PawnSpeedForPlayingEmote;
	float PawnSpeedForDBNO;
	bool bIsJoggingOrSprinting;
	bool bPetWantsAnimDynamics;
	bool bIsPlayingEmote;
	bool bIsDBNO;
	bool bIsPlayingEmoteOrDBNO;
	bool bIsSkydiving;
	bool bIsParachuteOpened;
	bool bIsSkydiveDiveMode;
	bool bIsSkydiveFloating;
	bool bIsCrouching;
	bool bIsTargeting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPetAnimInstance_HighTowerRadish : public UFortPetAnimInstance
{
public:
	class UClass* OwnerAnimBP;
	struct Vector BodyOffset_Total;
	float OwnerLocomotionDirection;
	float OwnerLocomotionSpeed;
	bool StoppedMovingOrMeleeForLongEnoughTime;
	bool bPetUnderwater;
	bool HighTowerRadish_LobbySkyDive_Diving;
	bool HighTowerRadish_LobbySkyDive_Gliding;
	bool FrontEndIdleTransition;
	float AdditiveTransitionCurve;
	float LeftHandIKCurve;
	float TurnOffLeans;
	float OffsetRootYawFractioned;
	float OffsetRootYawSmooth;
	bool bIsPlayingEmoteExtra;
	bool bIsInVehicle;
	float InVehicle;
	bool bIsSkydivingFE;
	bool bSlowDownInterp;
	bool bPetUnderWaterAndNotTargeting;
	bool bIsOwnerPlayingMeleeAnim;
	bool bIsSkydivingInGameOrIsParachuteOpen;
	struct FortPetOffsets BodyOffsetsFromPlayer;
	struct Vector BodyOffsetWhenSkydivingFE;
	struct Vector BodyOffsetWhenNotSkydivingFE;
	float BodyOffsetSpringMass;
	struct Vector BodyOffsetSpringLagFactor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPetManager : public UObject
{
public:
	TArray<class UClass*> RegisteredPets;
	TArray<class UClass*> PetsPendingUpdate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPetStimuliBank : public UDataAsset
{
public:
	TArray<struct PetResponseFromQuestSystem> QuestTriggers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPhysicsBall : public ABuildingGameplayActor
{
public:
	bool bDetachRootChildrenOnServer;
	bool bUpdateRotationOnlyIfRendered;
	bool bRollingAudioFaded;
	float UpdateRollingAudioRangeMeters;
	class UClass* SphereCollision;
	class UClass* RotationPivot;
	class UClass* WaterInteractionComponent;
	class UClass* RotatedComponent;
	class UClass* RollingAudioComponent;
	bool bEnableBackspinOnKick;
	bool bApplyingBackspin;
	float BackspinRotationScale;
	bool bEnableLiftAndDrag;
	bool bStopLiftWhenFalling;
	bool bApplyingLift;
	float LiftFactor;
	float StopLiftHorizontalVelocityThreshold;
	float StopLiftVerticalVelocityThreshold;
	float StopLiftTimeDuration;
	float LiftDuration;
	float DragVelocityThreshold;
	float DragFactor;
	float WaterMinRotationSpeed;
	float WaterRotationInterpSpeed;
	float WaterAxisFlipSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPhysicsObjectComponent : public GameFrameworkComponent
{
public:
	struct FScriptMulticastDelegate OnAwakeChanged;
	struct FScriptMulticastDelegate OnReceivedLargeImpulse;
	TArray<Unknown> IgnoredPawns;
	TArray<Unknown> IgnoredPawnsPendingRemoval;
	class UClass* BuoyancyComponent;
	struct Vector PreviousLinearVelocity;
	struct Vector LinearVelocity;
	struct Vector PreviousAngularVelocity;
	struct Vector AngularVelocity;
	float CustomGravityMultiplier;
	struct PhysicsObjectMovementStateData MovementStateData;
	class UClass* PhysicsPreset;
	class UClass* EffectsDataOverride;
	class UClass* PhysicalMaterialOverride;
	class UClass* BuoyancyAssetOverride;
	class UClass* ImpactDamageDataOverride;
	bool bHasSetupPhysicsObject;
	bool bServerHasSetupPhysicsObject;
	bool bForceStartActiveAndAwake;
	bool bHasComponentActivated;
	EFortPhysicsObjectAwakeState PhysicsObjectAwakeState;
	class UClass* SimulatingComponent;
	struct PhysicsObjectImpactInstigatorData ImpactInstigatorData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsObjectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPhysicsObjectManager : public AActor
{
public:
	TArray<class UClass*> PhysicsObjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPhysicsObjectNavigationComponent : public NavModifierComponent
{
public:
	float LowSpeedSquareThreshold;
	float LowSpeedSquareDistanceThreshold;
	float LowSpeedRotationThreshold;
	float LowSpeedScaleThreshold;
	class UClass* ComponentAffectingNavMesh;
	class UClass* PhysicsObjectComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsObjectCollisionEffectsData : public UDataAsset
{
public:
	struct GameplayCueTag ImpactEffectsCue;
	float MinRetriggerTime;
	float MinRetriggerDistance;
	float MinWaterVelocityThreshold;
	float MinMediumWaterVelocityThreshold;
	float MinLargeWaterVelocityThreshold;
	float MaxLargeWaterVelocityThreshold;
	float MinImpulseMagnitude;
	float MinMediumImpulseMagnitude;
	float MinLargeImpulseMagnitude;
	float MaxLargeImpulseMagnitude;
	struct GameplayCueTag WaterEntryCue;
	struct GameplayCueTag MovementEffectsCue;
	float LinearVelocityThreshold;
	float AngularVelocityThreshold;
	float RollingCosThreshold;
	float MovingBufferTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsObjectBuoyancyData : public UDataAsset
{
public:
	float DefaultPontoonRadius;
	float MinTimeInWaterToSink;
	struct BuoyancyData BuoyancyData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsObjectImpactDamageData : public UDataAsset
{
public:
	TArray<struct ImpulseDamageData> PlayerImpactDamageBuckets;
	TArray<struct ImpulseDamageData> EnvironmentImpactDamageBuckets;
	struct ScalableFloat BaseOnImpactDamage;
	struct ScalableFloat BaseEnvironmentalOnImpactDamage;
	struct ScalableFloat BaseVehicleOnImpactDamage;
	struct ScalableFloat DelayBeforeNextImpactDamageEvent;
	Unknown SourceSurfaceTypeToDamageModifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsObjectPreset : public UDataAsset
{
public:
	EFortPhysicsObjectNetworkPolicy NetworkPolicy;
	struct CollisionProfileName CollisionProfile;
	float PlayerImpulseMagnitude;
	bool bIsAffectedByPlayerMovement;
	bool bCanAffectPlayerMovement;
	bool bImpulseOnPlayerInteraction;
	bool bCanInteractWithVehicles;
	class UClass* BuoyancyAsset;
	bool bCanInteractWithWater;
	bool bRestorePreviousCollisionProfileOnDeactivate;
	float DefaultPontoonRadius;
	float MinTimeInWaterToSink;
	struct BuoyancyData BuoyancyData;
	bool bStartActive;
	bool bStartAwake;
	bool bShouldEnableTick;
	bool bShouldImpulseOnDamage;
	bool bOverrideLinearDamping;
	bool bOverrideAngularDamping;
	bool bOverrideMassKg;
	bool bOverrideMassScale;
	bool bOverrideGravity;
	float LinearDampingOverride;
	float AngularDampingOverride;
	float MassKgOverride;
	float MassScaleOverride;
	float GravityOverride;
	class UClass* PhysicalMaterialOverride;
	float SleepLinearVelocity;
	float SleepAngularVelocity;
	float TimeToSleep;
	float TimeToDeactivate;
	float MinHitImpulseForNotify;
	float DamageImpulseMultiplier;
	float MinDamageToImpulse;
	class UClass* ImpactDamageData;
	class UClass* EffectsData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsObjectAssetSetupData : public UDataAsset
{
public:
	class UClass* DefaultPhysicsPreset;
	class UClass* DefaultEffectsData;
	class UClass* DefaultPhysicalMaterial;
	class UClass* DefaultBuoyancyData;
	class UClass* DefaultImpactDamageData;
	Unknown AssetSetupTagToPreset;
	Unknown AssetSetupTagToEffectData;
	Unknown AssetSetupTagToPhysMat;
	Unknown AssetSetupTagToBuoyancyData;
	Unknown AssetSetupTagToImpactDamageData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPhysicsPawnObject : public AFortPhysicsPawn
{
public:
	class UClass* PhysicsMeshComponent;
	class UClass* VisibleMeshComponent;
	EPhysicalSurface PrimarySurfaceType;
	EFortBaseWeaponDamage WeaponResponseType;
	bool bShowDamageNumbers;
	bool bPlayDamageAudio;
	struct GameplayTagContainer PhysicsObjectTags;
	float ImpulseResponseMultiplier;
	float ImpulseResponseZBias;
	struct Vector TestInitialLinearVelocity;
	struct Vector TestInitialAngularVelocity;
	struct HitResult LookAheadHit;
	float CachedSpeed;
	class UClass* DefaultHitNotifyAudioBank;
	struct FScriptMulticastDelegate OnHealthChanged;
	float LifespanAfterDeath;
	bool bPlayedDying;
	float LastDamagedTime;
	class UClass* PlayerCollisionGameplayEffect;
	struct VehicleTargetOrientation CorrectTargetOrientation;
	struct FortAttributeInitializationKey AttributeInitKey;
	class UClass* AbilitySystemComponent;
	class UClass* HealthSet;
	class UClass* ImpulseResponseSet;
	class UClass* DamageSet;
	class UClass* HealthBarIndicator;
	bool bPendingDeath;
	struct GameplayTagContainer GameplayTags;
	TArray<class UClass*> WallsPhysicsObjectCanDestroy;
	TArray<class UClass*> BuildingPropClassesPhysicsObjectCanDestroy;
	EPhysicalSurface SurfaceTypePhysicsObjectOn;
	struct FScriptMulticastDelegate OnSurfaceTypePhysicsObjectIsOnChangedDelegate;
	class UClass* StartupAbilitySet;
	struct TimeStampedPhysicsPawnState CurrentServerPhysicsState;
	struct HitData LastServerConfirmedHit;
	struct PhysicsPawnObjectInitialParameters InitialParameters;
	TArray<class UClass*> ActorsObjectDiesWhenHitting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPhysicsReplicatedTargetGhost : public AActor
{
public:
	class UClass* SkeletalMesh;
	class UClass* StaticMesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhysicsSimulationLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPhysicsTowHook : public AActor
{
public:
	TArray<struct NetTowhookAttachState> ReplicatedAttachStates;
	class UClass* AlwaysAttachedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickaxePreviewActor : public AActor
{
public:
	class UClass* MontageToPlayForSwinging;
	class UClass* CosmeticPickaxeItemDefinition;
	TArray<struct McpVariantChannelInfo> PreviewVariantChannels;
	class UClass* WeaponActor;
	struct FDelegate OnSettingsChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPicklePortal : public AActor
{
public:
	class UClass* RangeCollisionComponent;
	struct FName OpenAmountParameterName;
	struct ComponentReference PortalParticleSystemReference;
	struct ComponentReference SMPortalInnerReference;
	struct ComponentReference SMPortalOuterReference;
	struct ComponentReference SpotlightComponentReference;
	struct ComponentReference AudioComponentReference;
	class UClass* PortalParticleSystem;
	class UClass* SMPortalInner;
	class UClass* SMPortalOuter;
	class UClass* SpotLightComponent;
	struct Vector2D OuterConeAngleRange;
	struct Vector2D InnerConeAngleRange;
	struct Vector2D IntensityRange;
	struct Vector2D AttenuationRadiusRange;
	class UClass* AudioComponent;
	class UClass* EffectPreset;
	struct SourceEffectStereoDelaySettings EffectSettings;
	class UClass* MaterialParameterCollection;
	struct FName MaterialParameterCollectionParamName;
	struct Vector2D DelayTimeRange;
	struct Vector2D WetLevelRange;
	class UClass* OpenCurve;
	struct Vector ZeroPointPosition;
	float OpenInterpSpeed;
	float MaxDistance;
	float NearDistance;
	float FadeRadius;
	TArray<class UClass*> LocalPawns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickupBackpack : public AFortPickup
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPickupComponent_ItemAttachedActor : public UActorComponent
{
public:
	class UClass* AttachedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickupCreative : public AFortPickupAthena
{
public:
	class UClass* CostComponent;
	bool bPickupOnTouch;
	int CachedPickupInstigatorHandle;
	struct PickupInstigatorData CachedInstigatorData;
	bool bUseOverrideDespawnTime;
	float OverrideDespawnTime;
	struct FScriptMulticastDelegate OnAccentColorParamChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickupEffect : public AActor
{
public:
	class UClass* StaticMesh;
	class UClass* SkeletalMesh;
	class UClass* ParentPickupActor;
	TArray<class UClass*> ActiveAlterations;
	class UClass* ItemDefinition;
	bool bDoNotShowSpawnParticles;
	bool bDoNotTickSkeletalMeshComponents;
	struct Vector PickupColor;
	struct LinearColor BackpackWorldPosition;
	bool bOwnedByALocalPlayer;
	bool bOwnedByPlayer;
	bool bRandomRotation;
	class UClass* PickupByNearbyPawnSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPickupEventHandler : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPickupInstigator : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPickupInstigatorRegistryComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnPickupInstigatorDataChanged;
	struct FScriptMulticastDelegate OnPickupInstigatorDataRemoved;
	struct PickupInstigatorArray InstigatorRegistry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPickupManagementInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPickupsParent : public AFortPickupEffect
{
public:
	TArray<class UClass*> MIDs;
	TArray<class UClass*> CurrentMaterials;
	TArray<class UClass*> CurrentParentMaterials;
	class UClass* DefaultBaseMaterial;
	class UClass* LootGiftMaterialSkelMesh;
	class UClass* LootGiftMaterialStaticMesh;
	bool bIsBluGloPickup;
	bool bIsSkeletalMeshComponent;
	bool bHasUniqueMaterialIds;
	bool bActivateRarityParticleSystems;
	bool bIsLootGiftForOthers;
	TArray<struct FName> NamesOfMaterialsThatShouldNotBeReparented;
	float CurrentViewDistance;
	int PickupRarityLevel;
	struct LinearColor PickupRarityColor;
	TArray<float> SweepBrightness;
	TArray<float> SweepSpeed;
	float CullDistanceStW;
	float CullDistanceAthena;
	float CullDistanceBacchus;
	float BackgroundParticleSystemComponentCullDistance;
	struct Vector MeshPivotOffset;
	struct Rotator MeshRotationBias;
	class UClass* SkelMeshComponent;
	class UClass* StaticMeshComponent;
	class UClass* MeshPrimitiveComponent;
	class UClass* BackgroundParticleSystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaceableActorItemDefinition : public FortItemDefinition
{
public:
	class UClass* BasePlaceableActorClass;
	struct SlateBrush DisplayImage;
	struct FName ActorName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlacedPawnMarker : public ANavigationObjectBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlacementActor : public ABuildingActor
{
public:
	Unknown OccupyingActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlacementActorDataProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlacementActorTagTest : public UObject
{
public:
	struct GameplayTagContainer TagsToApplyOnSuccess;
	struct GameplayTagContainer TagsToApplyOnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_ATVDriver : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector ImpactDisplacement;
	float AbsSteerAngle;
	bool bInAir;
	bool bIsInRollAngleThreshold;
	bool bIsDriveStarting;
	struct Vector LocalLeftOffset;
	struct Vector WorldPosLeft;
	struct Rotator LocalRotLeftOffset;
	struct Rotator WorldRotLeft;
	struct Vector LocalRightOffset;
	struct Vector WorldPosRight;
	struct Rotator LocalRotRightOffset;
	struct Rotator WorldRotRight;
	bool bIsSteeringRotating;
	bool bIsStopped;
	bool bIsSlowingDown;
	bool bIsDrivingFast;
	bool bIsTurningRightHard;
	bool bIsTurningLeftHard;
	bool bIsBraking;
	bool bIsBoosting;
	bool bIsJumpTrick;
	float JumpPlayRate;
	bool bIsJumpFlipping;
	bool bShouldEnableAO;
	bool bIsBodyDragging;
	float FallDistanceJumpingThreshold;
	float FallDistanceJumpTrickThreshold;
	float RollAngleThreshold;
	float StartSpeedThreshold;
	float SlowingSpeedThreshold;
	float FastSpeedThreshold;
	float BrakingDeltaThreshold;
	float SteerHardAngleThreshold;
	float GroundTraceUpOffset;
	float GroundTraceLength;
	struct Vector2D JumpPlayRateInRange;
	struct Vector2D JumpPlayRateOutRange;
	bool bIsJumpingAndNotRolling;
	bool bIsOnGroundAndNotRolling;
	bool bIsOnGroundAndBoosting;
	bool bPlayPivotOnGroundAndNotBoosting;
	struct Vector2D LandStartPosInRange;
	struct Vector2D LandStartPosOutRange;
	float LandStartPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_DBNOCarried : public UFortPlayerAnimInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_FerretDriver : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector ImpactDisplacement;
	float AbsSteerAngle;
	bool bInAir;
	bool bOnGround;
	bool bIsInRollAngleThreshold;
	bool bIsDriveStarting;
	struct Vector LocalLeftOffset;
	struct Vector WorldPosLeft;
	struct Rotator LocalRotLeftOffset;
	struct Rotator WorldRotLeft;
	struct Vector LocalRightOffset;
	struct Vector WorldPosRight;
	struct Rotator LocalRotRightOffset;
	struct Rotator WorldRotRight;
	bool bIsSteeringRotating;
	bool bIsStopped;
	bool bIsSlowingDown;
	bool bIsDrivingFast;
	bool bIsTurningRightHard;
	bool bIsTurningLeftHard;
	bool bIsBraking;
	bool bIsBoosting;
	bool bIsJumpTrick;
	float JumpPlayRate;
	bool bIsJumpFlipping;
	bool bShouldEnableAO;
	bool bIsBodyDragging;
	float FallDistanceJumpingThreshold;
	float FallDistanceJumpTrickThreshold;
	float RollAngleThreshold;
	float StartSpeedThreshold;
	float SlowingSpeedThreshold;
	float FastSpeedThreshold;
	float BrakingDeltaThreshold;
	float SteerHardAngleThreshold;
	float GroundTraceUpOffset;
	float GroundTraceLength;
	struct Vector2D JumpPlayRateInRange;
	struct Vector2D JumpPlayRateOutRange;
	bool bIsJumpingAndNotRolling;
	bool bIsOnGroundAndNotRolling;
	bool bIsOnGroundAndBoosting;
	bool bPlayPivotOnGroundAndNotBoosting;
	struct Vector2D LandStartPosInRange;
	struct Vector2D LandStartPosOutRange;
	float LandStartPosition;
	float DriverAimPitch;
	float DriverAimYaw;
	EPlaneDirection FerretCardinalDirection;
	float ElevatorDeadZone;
	float RudderDeadZone;
	bool bFerretShouldPlayStartTransition;
	bool bFerretShouldPlayStopTransition;
	EPlaneDirection FerretStopCardinalDirection;
	EPlaneDirection FerretPrePivotCardinalDirection;
	bool bFerretShouldPlayPivotTransition;
	bool bIsFerretRotating;
	bool bIsFerretShooting;
	float ElevatorRotation;
	bool bIsRollingRight;
	bool bIsRollingLeft;
	struct Vector LeftHandLocalTranslateOffset;
	struct Vector RightHandLocalTranslateOffset;
	struct Rotator LeftHandLocalRotateOffset;
	struct Rotator RightHandLocalRotateOffset;
	struct Vector LeftHandComponentTranslateOffset;
	struct Vector RightHandComponentTranslateOffset;
	struct Rotator LeftHandComponentRotateOffset;
	struct Rotator RightHandComponentRotateOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_Gauntlet : public UFortPlayerAnimInstance
{
public:
	float FullBodyOverrideWeight;
	float EmoteIKAlphaInterpSpeed;
	float EmoteIKAlphaCurrent;
	bool bCarmineJumpCharge;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_GolfCartDriver : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector ImpactDisplacement;
	struct FortAnimInput_SocketBasedIKTarget RightHandIKTarget;
	struct FortAnimInput_SocketBasedIKTarget LeftHandIKTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_JackalDriver : public UFortPlayerAnimInstance
{
public:
	bool bInAir;
	bool bIsBoosting;
	bool bPlayPivotOnGroundAndNotBoosting;
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector ImpactDisplacement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_MountedTurret : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector ImpactDisplacement;
	class UClass* MountedTurret;
	float PedalScaler;
	float TurnRate;
	float PitchRate;
	float AimingPitchLastTick;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_OstrichOccupant : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_OstrichDriver : public UFortPlayerAnimInstance_OstrichOccupant
{
public:
	float BouncePlayRateValue;
	float LegsBounceAlphaValue;
	float LegsBounceAlphaWhenSkytubing;
	float LegsBounceAlphaNoSkytubing;
	float LegsBounceAlphaInterpSpeed;
	bool bIsSkyTubing;
	bool bIsMechMoving2D;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_OstrichGunner : public UFortPlayerAnimInstance_OstrichOccupant
{
public:
	float BodyRecoilAlphaValue;
	float BodyRecoilAlphaWhenShotgunIsFired;
	float BodyRecoilAlphaNoShotgunFired;
	bool bIsMechShotgunFired;
	bool bIsMechBeginFired;
	bool bIsRocketFiring;
	struct FortAnimInput_VelocityImpact GunnerVelocityImpactInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_ShoppingCartDriver : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector ImpactDisplacement;
	bool bIsInAirFarFromGround;
	bool bForwardVelocityGT400;
	bool bForwardSpeedKmHLT5;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_SpaghettiDriver : public UFortPlayerAnimInstance
{
public:
	struct FortAnimInput_VelocityImpact VelocityImpact;
	struct Vector SeatLocation;
	struct Rotator HandRotationOffset;
	struct Rotator FootRotationOffset;
	struct Rotator SeatRotationPose;
	struct Vector HandAttachmentLocLeft;
	struct Rotator HandAttachmentRotLeft;
	struct Vector HandAttachmentLocRight;
	struct Rotator HandAttachmentRotRight;
	struct Vector FootAttachmentLocLeft;
	struct Rotator FootAttachmentRotLeft;
	struct Vector FootAttachmentLocRight;
	struct Rotator FootAttachmentRotRight;
	EFortCardinalDirection PivotDir;
	float LowerVelocityTime;
	float LowerVelocityDuration;
	float FwdBwd;
	float LeftRight;
	float SeatSteerYaw;
	float SeatSteerPitch;
	float SeatSteerStrength;
	bool bIsLowerVelocity;
	bool bWasLowerVelocity;
	bool bShouldPlayGrappleFire;
	bool bShouldApplyLeanAdditive;
	bool bShouldPlayPivotTransition;
	bool bHasDriver;
	bool bIsBoosting;
	bool bWantsEastWestPivot;
	bool bWantsNorthSouthPivot;
	bool bIsInAir;
	bool bIsTowhookHolstered;
	bool bIsTowhookExtending;
	bool bIsTowhookAttached;
	bool bEnterMovingInPlace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerAttributesProxyActor : public AActor
{
public:
	struct FortPlayerAttributeSets AttributeSets;
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerAttrSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData Stamina;
	struct FortGameplayAttributeData StaminaRegenRate;
	struct FortGameplayAttributeData StaminaRegenDelay;
	struct FortGameplayAttributeData MaxStamina;
	struct FortGameplayAttributeData StaminaCost;
	struct FortGameplayAttributeData SprintCost;
	struct FortGameplayAttributeData ItemRegenMaxStack;
	struct FortGameplayAttributeData ItemRegenCooldown;
	struct FortGameplayAttributeData ItemMaxStack;
	struct FortGameplayAttributeData DoubleLootRollChance;
	struct FortGameplayAttributeData DoubleItemLootChance;
	struct FortGameplayAttributeData DoubleCraftChance;
	struct FortGameplayAttributeData CraftingTimeMultiplier;
	struct FortGameplayAttributeData CraftItemLevelBonusMin;
	struct FortGameplayAttributeData CraftItemLevelBonusMax;
	struct FortGameplayAttributeData ResourceHarvesting;
	struct FortGameplayAttributeData HarvestingTool;
	struct FortGameplayAttributeData ExtraLives;
	struct FortGameplayAttributeData ResurrectTeammateDuration;
	struct FortGameplayAttributeData Fortitude_Team;
	struct FortGameplayAttributeData Offense_Team;
	struct FortGameplayAttributeData Tech_Team;
	struct FortGameplayAttributeData Resistance_Team;
	struct FortGameplayAttributeData TurboBuildFirstInterval;
	struct FortGameplayAttributeData TurboBuildInterval;
	struct FortGameplayAttributeData BuildSpeedModifier;
	struct FortGameplayAttributeData BuildCostModifier;
	struct FortGameplayAttributeData ActiveEffectDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransientQuestGameplayAbility : public FortGameplayAbility
{
public:
	class UClass* QuestItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerBountyGameplayAbility : public FortTransientQuestGameplayAbility
{
public:
	struct TSoftClassPtr<UObject> PoachedBountyQuestPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerCameraBase : public APlayerCameraManager
{
public:
	TArray<struct ActiveFortCamera> CameraBlendStack;
	TArray<struct FortCameraInstanceEntry> CameraInstances;
	class UClass* CurrentAbilitySpecifiedCameraClass;
	struct GameplayAbilitySpecHandle AbilitySpecForCameraClassRequest;
	class UClass* UICamera;
	class UClass* Base3PClass;
	class UClass* Targeting3PClass;
	class UClass* OverrideCameraClass;
	class UClass* CinematicCameraClass;
	class UClass* DBNOCameraClass;
	class UClass* DBNOCarriedCameraClass;
	class UClass* DeathCameraClass;
	class UClass* RespawnedInAirCameraClass;
	class UClass* SkydiveGlideCameraClass;
	class UClass* SkydiveDiveCameraClass;
	class UClass* SkydiveParachuteCameraClass;
	class UClass* HoverboardCameraClass;
	class UClass* WaterSprintBoostCameraClass;
	class UClass* FocalPointCameraClass;
	class UClass* TetheredTargeting3PClass;
	class UClass* RCActorCameraClass;
	TArray<struct FortCameraPrototype> CameraPrototypes;
	class UClass* ZoomPostProcessVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerCameraSpectator : public AFortPlayerCameraBase
{
public:
	class UClass* SpectatorCam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerCameraZone : public AFortPlayerCameraBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerCharm : public AActor
{
public:
	class UClass* CharmItemDef;
	class UClass* CharmMesh;
	bool bIsFrontEndPreview;
	class UClass* CharmAttachedTo;
	struct FName CharmAttachedToSocket;
	class UClass* CharmModifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerAthenaXPComponent : public FortControllerComponent
{
public:
	TArray<struct AthenaAccolades> PlayerAccolades;
	TArray<struct CardSlotMedalData> LocalPunchCardMedals;
	struct XPEventArray EventArray;
	TArray<struct XPEventEntry> WaitingQuestXp;
	int RestXP;
	bool bRegisteredWithQuestManager;
	struct AthenaLevelInfo CachedLevelInfo;
	class UClass* CachedSeasonDef;
	int CachedSeasonMatchXpBoost;
	int CurrentLevel;
	int PlayerXp;
	int TotalXpEarned;
	int MedalBonusXP;
	int SurvivalXp;
	int CombatXp;
	int MatchXp;
	int ChallengeXp;
	int64_t HasBRMatchReportCompletedProfileVer;
	int64_t InMatchProfileVer;
	TArray<class UClass*> MedalsEarned;
	TArray<Unknown> QuestsUpdated;
	bool bUseNewQuestRewardProcess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerPvE : public FortPlayerControllerZone
{
public:
	bool bForceAutoSlotWeaponsAtStart;
	bool bRecycleBrokenWeapons;
	struct QuickBar CachedPrimaryQuickBarRecord;
	struct QuickBar CachedSecondaryQuickBarRecord;
	TArray<class UClass*> HeroLoadoutGadgets;
	TArray<class UClass*> HeroAbilityGadgets;
	class UClass* IdleWarningAnnouncement;
	struct TimerHandle IdleWarningUpdateTimerHandle;
	float IdleKickEstimatedTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerBoss : public FortPlayerControllerPvE
{
public:
	struct FName LastPossessedPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerControllerContext : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerDeployableBase : public FortPlayerControllerPvE
{
public:
	class UClass* CurrentPlot;
	class UClass* PreviousPlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerFrontEnd : public FortPlayerController
{
public:
	class UClass* DiscoverabilityComponent;
	bool bUnlockAllZones;
	class UClass* MarkerComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerGameplay_Custom : public FortPlayerControllerGameplay
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerControllerOutpost : public FortPlayerControllerPvE
{
public:
	class UClass* BuildingBeingUpgraded;
	int LevelBeforeUpgrade;
	bool bOutpostRefundDialogPending;
	TArray<struct FortDepositedResources> PostDepositedResources;
	bool bIsOutpostOwnerInPIE;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerCustomizable : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerGliderAnimSet : public UDataAsset
{
public:
	struct FortAnimInput_PlayerGliderAnimAsset AnimAsset;
	TArray<struct FortTagToGliderAnimSetPair> OverrideAnimAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerInput : public UPlayerInput
{
public:
	struct FString CampaignDefaultKBMPresetName;
	struct FString AthenaDefaultKBMPresetName;
	TArray<struct FString> CampaignKBMResetToDefaultPresetNames;
	TArray<struct FString> AthenaKBMResetToDefaultPresetNames;
	struct FString DefaultGamepadPresetName;
	struct FString DefaultGamepadPresetNameAthena;
	struct FString DefaultGamepadPresetNameAthenaMobile;
	struct FString CustomGamepadPresetNameAthena;
	TArray<struct FString> FortPlayerInputSettingsNames;
	float TouchLookAccelerationMultiplier;
	float TouchBuildingMultiplier;
	float TouchEditModeMultiplier;
	EFortMotionYawAxis MotionYawAxis;
	float TargetingMultiplier;
	float ScopedMultiplier;
	float GamepadTargetingMultiplier;
	float GamepadScopedMultiplier;
	float GamepadBuildingMultiplier;
	float GamepadEditModeMultiplier;
	bool bInvertedPitchForMotion;
	bool bInvertedYawMobile;
	float MotionTargetingMultiplier;
	float MotionScopedMultiplier;
	float MotionHarvestingToolMultiplier;
	float GyroV2Sensitivity;
	EFortMotionYawAxis GyroV2DetachedYawAxis;
	EFortMotionYawAxis GyroV2AttachedYawAxis;
	EGyroActiveMode GyroV2ActiveMode;
	bool bGyroV2LookStickDisables;
	bool bGyroV2AimAssist;
	float GyroV2AccelMultiplier;
	float GyroV2AccelMinThreshold;
	float GyroV2AccelMaxThreshold;
	EGyroAcceleration GyroV2AccelerationMode;
	float GyroV2VerticalMultiplier;
	float GyroV2DeadZone;
	float GyroV2Smoothing;
	float GyroV2Tightening;
	EGyroButtonResponse GyroV2ButtonX;
	EGyroButtonResponse GyroV2ButtonY;
	float GyroV2TrackballDecay;
	float GyroV2ButtonHoldTime;
	bool bGyroV2DisabledWhileDriving;
	bool bFlickStickEnabled;
	float FlickTime;
	float FlickSmoothingThreshold;
	float FlickDeadZone;
	float GamepadMoveStickDeadZone;
	float GamepadLookStickDeadZone;
	Unknown AllPlayerInputSettings;
	class UClass* DesiredKBMPlayerInputSettings;
	class UClass* DesiredGamepadPlayerInputSettings;
	TArray<struct FText> InputActionTypeFriendlyNames;
	TArray<struct FortInputActionGroupContext> InputActionGroupContexts;
	TArray<EFortInputActionGroup> InputActionGroupExemptFromAllModesCheck;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerInputAthena : public UFortPlayerInput
{
public:
	class UClass* GamepadSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerInputSettings : public UObject
{
public:
	struct FText FriendlyName;
	struct FText Description;
	struct FText SubDescription;
	TArray<struct InputActionKeyMapping> ActionMappings;
	TArray<struct FortInputActionKeyAlias> ActionKeyAliases;
	TArray<struct FortInputActionThatShouldAlwaysBeBound> ActionsThatShouldAlwaysBeBound;
	float HoldInputTime;
	float HoldCraftAmmoTime;
	float HoldHudChatTime;
	float HoldVoteDialogTime;
	bool bBuildingPickerOnlyChoosesCategories;
	bool bWeaponPickerShowOnlySlottedItems;
	bool bTrapPickerUsesRadial;
	bool bRadialClosesOnRelease;
	int NumActiveTrapSlots;
	bool bWeaponSlotsAreSharedWhenUsingGamepad;
	bool bEditModeUsableFromCombatMode;
	bool bOnlyShowNextPrevBuildingSlotKeybinds;
	bool bEnabledForCampaign;
	bool bEnabledForAthena;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerMannequin : public ASkeletalMeshActor
{
public:
	class UClass* CurrentFortHeroType;
	class UClass* AthenaCharacter;
	class UClass* AthenaBackBling;
	Unknown EmoteAudioCompsMap;
	class UClass* CharacterParts;
	struct LightingChannels MannequinLightingChannels;
	float MannequinBoundsScale;
	bool bIsMannequinVisible;
	bool bMannequinCastsHiddenShadow;
	class UClass* CharacterPartList;
	TArray<struct McpVariantChannelInfo> OverrideVariants;
	class UClass* CharacterPartColorSwatches;
	class UClass* ColorSwatchesForCharacterParts;
	class UClass* AccessoryColorSwatchHandler;
	class UClass* ColorSwatches;
	class UClass* WeaponSkeletalMesh;
	struct FName WeaponAttachSocket;
	TArray<struct MorphValuePair> MorphTargets;
	bool bInitialized;
	bool bLimitTick;
	bool bAutoRegisterWithBudgetAllocator;
	class UClass* CustomizationAssetLoader;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerMarkerBase : public AActor
{
public:
	struct Vector ImpactLocation;
	struct LinearColor Color;
	class UClass* MID_Main;
	class UClass* MID_Target;
	class UClass* CustomMarkerItemDefinition;
	float SpawnMarkerAnimLength;
	class UClass* SpawnMarkerAnim_Opacity;
	class UClass* SpawnMarkerAnim_SpawnScale;
	class UClass* SpawnMarkerAnim_SpawnVerticalScale;
	struct FortWorldMarkerData CurrentMarkerData;
	class UClass* StaticMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerParachute : public AActor
{
public:
	struct TSoftClassPtr<UObject> GliderOpenSoundFromDef;
	class UClass* CurrentGliderOpenSound;
	Unknown CurrentGliderOpenAudioComponent;
	struct TSoftClassPtr<UObject> GliderCloseSoundFromDef;
	class UClass* CurrentGliderCloseSound;
	Unknown CurrentGliderCloseAudioComponent;
	class UClass* FortLayeredAudioComponentGlider;
	class UClass* PlayerPawn;
	class UClass* ParachuteItemDef;
	float ParachuteHiddenAnimFinishTime;
	bool bGliderFullyDeployed;
	bool bChuteOpened;
	bool bIsFrontEndPreview;
	bool bParachuteVisible;
	bool bActivateTrailOnRationalMovement;
	struct MarshalledVFXRuntimeData GliderRuntimeVFXData;
	struct Rotator LastRotationalMovement;
	struct FName ParachuteTrailParameterName;
	bool IsCosmeticPreview;
	bool bIsEtherealBackgroundPreview;
	class UClass* TrailVFX;
	class UClass* TrailVFX2;
	class UClass* ParachuteMesh;
	class UClass* TrailParticles;
	class UClass* CurrentGliderPlayerAnimSet;
	bool bUsesDayPhaseChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemAndVariantSwapHelpers : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerPerksItem : public UFortAccountItem
{
public:
	int earned_xp;
	int previous_level;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerPerksItemDefinition : public FortAccountItemDefinition
{
public:
	struct GameplayTag SecondaryXpSource;
	class UClass* XpCurve;
	TArray<struct PlayerPerkLevel> PlayerPerkLevels;
	TArray<struct TechCurrentLevelCap> LevelCaps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerPet : public AActor
{
public:
	class UClass* PetItemDef;
	class UClass* PetAudioComponent;
	bool bIsFrontEndPreview;
	class UClass* PetMesh;
	class UClass* InteractionCollisionSphere;
	bool bSuppressInteract;
	TArray<class UClass*> SavedMaterials;
	class UClass* SoundBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerPetRepState : public AActor
{
public:
	class UClass* LookAtTarget;
	class UClass* PetItemDef;
	struct PetStimuliRepData StimuliTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerPushableCart : public ABuildingGameplayActor
{
public:
	struct FScriptMulticastDelegate OnCheckPointReached;
	struct FScriptMulticastDelegate OnPushersOrDefendersChanged;
	struct FScriptMulticastDelegate OnCartPlayerPushableChanged;
	struct FScriptMulticastDelegate OnPlayerEnteredPushArea;
	struct FScriptMulticastDelegate OnPlayerExitedPushArea;
	struct FScriptMulticastDelegate OnCartApproachingCheckPoint;
	struct FScriptMulticastDelegate PlayerPushableCartOnTeamsRolesChanged;
	class UClass* MovementComponent;
	Unknown UraniumMutatorOwner;
	Unknown SplineComponent;
	TArray<int> SplineCheckPointIndices;
	byte CurrentCheckPoint;
	struct TeamRoles TeamRoles;
	byte TotalActivePushers;
	byte TotalActiveDefenders;
	bool bIsPushable;
	struct ScalableFloat BasePushSpeed;
	struct ScalableFloat PushSpeedPercentPerPusher;
	struct ScalableFloat Acceleration;
	struct ScalableFloat Deceleration;
	struct ScalableFloat YawSpeed;
	bool bIsNearCheckpoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSaveComponent : public UActorComponent
{
public:
	class UClass* PersistenceManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSessionContext : public UFortLocalPlayerSubsystem
{
public:
	TArray<struct GameplayTag> DiscoveredPoiTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerSpawnPad : public ABuildingSMActor
{
public:
	TArray<class UClass*> Chests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStart : public APlayerStart
{
public:
	class UClass* ClaimingController;
	float ExpirationCheckInterval;
	class UClass* StartParticleComponent;
	struct GameplayTagContainer StartPointTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStartCreative : public APlayerStart
{
public:
	struct GameplayTagContainer PlayerStartTags;
	int PortalIndex;
	byte ApplicableTeam;
	int ApplicableClass;
	bool bUseAsIslandStart;
	int PriorityGroup;
	struct FString LockedPlayerNameSubstring;
	bool bIsEnabled;
	class UClass* CreativeLinkComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStartupController : public AActor
{
public:
	bool UseIndividualHoldingAreas;
	float DelayAfterFirstInTime;
	float ContainmentTimer;
	float AllInCountdownTime;
	float ErodeShieldTime;
	float StopJoinabilityTime;
	bool DestroyImmediately;
	struct FScriptMulticastDelegate OnPlayerStartupControllerCreated;
	struct FScriptMulticastDelegate OnPlayerStartupControllerRegistered;
	struct FScriptMulticastDelegate OnAllInCountdownInitiated;
	struct FScriptMulticastDelegate OnPlayerStartupControllerDestroyed;
	struct FScriptMulticastDelegate OnResetContainmentTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStartWarmup : public APlayerStart
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerState : public APlayerState
{
public:
	bool bIsWorldDataOwner;
	bool bIsGameSessionOwner;
	bool bIsGameSessionAdmin;
	bool bIsReadyToContinue;
	bool bHasFinishedLoading;
	bool bHasStartedPlaying;
	bool bMeshNetPlayer;
	bool bRepFlag1;
	EFortPlayerRole PlayerRole;
	int16_t WorldPlayerId;
	struct UniqueNetIdRepl PartyOwnerUniqueId;
	struct FString HeroId;
	class UClass* HeroType;
	int CurrentCharXP;
	Unknown MyBackpackPickup;
	int InitialExperienceLevel;
	int InitialExperienceAmount;
	TArray<struct FortExperienceDelta> ExperienceDeltas;
	struct FString Platform;
	struct PlayerBannerInfo Banner;
	bool bIsSimulatingDamage;
	TArray<class UClass*> Awards;
	EFortCustomGender CharacterGender;
	EFortCustomBodyType CharacterBodyType;
	struct CustomCharacterData CharacterData;
	class UClass* CharacterColorSwatches;
	EFortCustomGender LocalCharacterGender;
	EFortCustomBodyType LocalCharacterBodyType;
	class UClass* LocalCharacterParts;
	class UClass* LocalCharacterCharms;
	TArray<class UClass*> LocalVariantPartsToLoad;
	TArray<struct McpVariantChannelInfo> ActiveVariantOverrides;
	TArray<struct FortAppliedSwapItemAndVariantData> ActiveCosmeticItemSwaps;
	class UClass* LocalCharacterColorSwatches;
	class UClass* CustomPRIComponent;
	class UClass* CharacterPartColorSwatches;
	class UClass* LocalCharacterPartColorSwatches;
	class UClass* PlayerTeam;
	class UClass* PlayerTeamPrivate;
	bool bSkipReplicatedStats;
	struct ReplicatedStatValues ReplicatedStats_Campaign;
	struct ReplicatedStatValues ReplicatedStats_Zone;
	bool bAreZoneStatsFinalized;
	EReadyCheckState ReadyCheckState;
	class UClass* HomeActor;
	struct FortPlayerAttributeSets AttributeSets;
	class UClass* AbilitySystemComponent;
	struct FName PlayerOSSName;
	ETrustedPlatformType TrustedPlatformType;
	struct UniqueNetIdRepl PlatformUniqueNetId;
	bool bInvitedToConsoleSession;
	bool bInitializedPlayerCustomizationOptionsFromClientSettings;
	struct Vector PawnDeathLocation;
	int CachedPreviousWorldPlayerId;
	bool bInGhostMode;
	struct FScriptMulticastDelegate OnPawnDiedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateZone : public AFortPlayerState
{
public:
	struct FScriptMulticastDelegate OnCurrentPawnChanged;
	class UClass* SpectatingTarget;
	struct FortSpectatorZoneArray Spectators;
	struct FScriptMulticastDelegate OnSpectatorsRemovedEvent;
	struct FScriptMulticastDelegate OnSpectatorCountChangedEvent;
	struct FScriptMulticastDelegate OnSpectatingTargetChangedEvent;
	struct FScriptMulticastDelegate OnBeginSpectatingEvent;
	EFortKickReason KickedFromSessionReason;
	struct ReplicatedStatValues RS_Zone_Old;
	class UClass* CarriedObject;
	int NumRejoins;
	int OldTotalScoreStat;
	bool bInvincibleDueToUI;
	float CurrentHealth;
	float MaxHealth;
	float CurrentShield;
	float MaxShield;
	float CurrentSignalInStorm;
	float MaxSignalInStorm;
	TArray<struct AccumulatedItemEntry> AccumulatedItems;
	struct FScriptMulticastDelegate OnAccumulatedItemsChanged;
	TArray<struct SimulatedAttributeEntry> SimulatedAttributes;
	class UClass* PendingDestroyedGadgetItemDefinition;
	bool bInAircraft;
	bool bHasEverSkydivedFromBus;
	bool bHasEverSkydivedFromBusAndLanded;
	TArray<class UClass*> QuickbarEquippedItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateAthena : public AFortPlayerStateZone
{
public:
	int PersonalLobbyAction;
	struct FortRespawnData RespawnData;
	ETeamMemberState ReplicatedTeamMemberState;
	ETeamMemberState TeamMemberState;
	float TeamMemberStateRepTime;
	struct FScriptMulticastDelegate OnTeamIndexChangedDelegate;
	struct FScriptMulticastDelegate OnSquadIdChangedDelegate;
	bool bHasWonAGame;
	int TeamKillScore;
	Unknown KillsWhileAthenaGadgetEquippedMap;
	Unknown DamageDealtToBigHealthProps;
	byte TeamIndex;
	int TeamScorePlacement;
	int TeamScore;
	int Place;
	int DownScore;
	int KillScore;
	int SeasonLevelUIDisplay;
	int HumanKillScore;
	int AIKillCount;
	int NumChestsOpened;
	int NumAmmoCansOpened;
	int NumSupplyDropsOpened;
	int NumLlamasOpened;
	int NumForagedItemsConsumed;
	int NumMinutesAlive;
	int NumBronzeCoinsCollected;
	int NumSilverCoinsCollected;
	int NumGoldCoinsCollected;
	int TotalPlayerScore;
	struct FScriptMulticastDelegate PointsAddedToScore;
	struct FScriptMulticastDelegate TeamScoreChanged;
	struct FScriptMulticastDelegate TeamPlacementChanged;
	struct FScriptMulticastDelegate PlaceChanged;
	struct FScriptMulticastDelegate TeamAverageDamageChanged;
	struct FScriptMulticastDelegate MatchAbandonStateChanged;
	TArray<class UClass*> FriendsInSquad;
	TArray<class UClass*> FriendsInSquadAtPartnerCafe;
	byte StormSurgeEffectCount;
	uint16_t TeamAverageDamageDealt;
	byte SquadId;
	bool bThankedBusDriver;
	bool bDidNotThankBusDriver;
	bool bUsingAnonymousMode;
	bool bUsingAnonymousCharacterMode;
	bool bShowingSeasonLevel;
	struct FText PlayerNameCustomOverride;
	bool bIsTalking;
	bool bIsMuted;
	struct FScriptMulticastDelegate OnInventoriesInNonPersistenceModeChanged;
	struct DetailedMetricInformation MetricInformation;
	struct SimpleMetricInformation SimpleMetricInformation;
	int SecondsAlive;
	int TimeOfPawnCreation;
	bool bIsDisconnected;
	class UClass* GameModeIcon;
	struct DeathInfo DeathInfo;
	struct ChangeTeamInfo ChangeTeamInfo;
	bool bResurrectionChipDisabled;
	struct FortResurrectionData ResurrectionChipAvailable;
	bool bResurrectingNow;
	int RebootCounter;
	bool bHoldsRebootVanLock;
	EMatchAbandonState MatchAbandonState;
	bool bIsAnAthenaGameParticipant;
	bool bIsContributingToOverbudgetHeatmap;
	struct UniqueNetIdRepl BotUniqueId;
	bool bPreserveSquad;
	EKeepPlayingTogetherVotingStatus KeepPlayingTogetherVotingStatus;
	byte InitialSquadSize;
	byte SquadSizeIncrements;
	byte SquadSizeDecrements;
	bool bInventoriesInNonPersistenceMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomFeedMessageGeneratorBase : public UObject
{
public:
	ECustomFeedFilterParticipantNames FilteredParticipantNamePolicy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomFeedMessageWith2DAudio : public UFortCustomFeedMessageGeneratorBase
{
public:
	struct FText FeedMessageFormat;
	class UClass* OnTriggeredAudio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomFeedMessageWith3DAudio : public UFortCustomFeedMessageWith2DAudio
{
public:
	struct Vector AdditionalAudioOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCustomFeedMessageConfig : public UDataAsset
{
public:
	Unknown FeedMessageGeneratorsByID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerStateComponent_CustomFeedMessage : public FortPlayerStateComponent
{
public:
	TArray<struct TSoftClassPtr<UObject>> CustomFeedMessageConfigs;
	Unknown CustomFeedMessageGeneratorsInternal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerStateComponent_Quests : public FortPlayerStateComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStatePvE : public AFortPlayerStateZone
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateDeployableBase : public AFortPlayerStatePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateEndless : public AFortPlayerStatePvE
{
public:
	int BluGloActivityScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateFOB : public AFortPlayerStatePvE
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateFrontEnd : public AFortPlayerState
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPlayerStateOutpost : public AFortPlayerStatePvE
{
public:
	bool bHasPermissionToEditOutpost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyBase : public UObject
{
public:
	struct FScriptMulticastDelegate OnSurveyFinished;
	struct FScriptMulticastDelegate OnAnswerChangedDelegate;
	TArray<struct FortPlayerSurveyAnswer> Answers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyFixedSurvey : public UFortPlayerSurveyBase
{
public:
	struct FortPlayerSurveyDescription Description;
	TArray<class UClass*> Questions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyLocalSurveyAsset : public UPrimaryDataAsset
{
public:
	struct FortPlayerSurveyDescription Description;
	TArray<class UClass*> Questions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyManagerLegacy : public UObject
{
public:
	TArray<class UClass*> SurveyQueue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyQuestionLegacy : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyQuestionStandardBase : public UFortPlayerSurveyQuestionLegacy
{
public:
	EFortPlayerSurveyQuestionPresentationStyle PresentationStyle;
	struct FText QuestionText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyQuestionFreeFormText : public UFortPlayerSurveyQuestionStandardBase
{
public:
	struct FText HintText;
	bool bAnswerRequired;
	int MaxAnswerLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyQuestionMultipleChoice : public UFortPlayerSurveyQuestionStandardBase
{
public:
	TArray<struct FortPlayerSurveyQuestionChoice> Choices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyQuestionMultipleSelection : public UFortPlayerSurveyQuestionStandardBase
{
public:
	TArray<struct FortPlayerSurveyQuestionChoice> Choices;
	int MinNumAnswers;
	int MaxNumAnswers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyQuestionSelector : public UObject
{
public:
	class UClass* Survey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyTokenItem : public UFortAccountItem
{
public:
	struct FString survey_id;
	int token_type;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyTokenItemDefinition : public FortAccountItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSharedAssetList : public UDataAsset
{
public:
	TArray<class UClass*> SharedItemsToFullyLoad;
	TArray<struct TSoftClassPtr<UObject>> SharedAdditionalLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSharedAssetGroup : public UDataAsset
{
public:
	TArray<class UClass*> SharedAssetsToLoad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortConditionalAssetGroup : public UDataAsset
{
public:
	Unknown ConditionalAssetsToLoad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaylist : public UPrimaryDataAsset
{
public:
	int PlaylistId;
	struct FName PlaylistName;
	EFortGameType GameType;
	int MinPlayers;
	int MaxPlayers;
	bool bUnderfillMatchmaking;
	int UnderfilledMaxPlayers;
	bool bOverrideMaxPlayers;
	int MaxHumanAndBotParticipants;
	int MaxTeamCount;
	int MaxTeamSize;
	int MaxSocialPartySize;
	int MaxSquadSize;
	int MaxSquads;
	bool EnforceSquadFill;
	bool bAllowSquadFillOption;
	bool bShouldFillWhenNoSquadFillOption;
	bool bAllowJoinInProgress;
	struct FText JoinInProgressMatchType;
	int EndOfMatchXpFirstElim;
	int EndOfMatchXpMultiplier;
	class UClass* UserOptions;
	bool bEnableBackfillDuringWarmupPhase;
	float TimeAfterWarmupToDisableBackfill;
	struct FName RichPresenceAssetName;
	bool bAllowKeepPlayingTogether;
	bool bAllowSquadSizeTracking;
	struct TSoftClassPtr<UObject> PreloadPersistentLevel;
	TArray<struct TSoftClassPtr<UObject>> AdditionalLevels;
	TArray<struct TSoftClassPtr<UObject>> AdditionalLevelsServerOnly;
	TArray<struct FString> BuiltInGameFeaturePluginsToLoad;
	class UClass* RootExternalContent;
	struct FString OverrideGameFeaturePluginToDownload;
	struct FString GameFeaturePluginToActivateUntilDownloadedContentIsPresent;
	byte DefaultFirstTeam;
	byte DefaultLastTeam;
	struct GameplayTagContainer GameplayTagContainer;
	EFriendlyFireType FriendlyFireType;
	bool bUseFriendlyFireAimAssist;
	int LootLevel;
	struct GameplayTagQuery LootTagQuery;
	int BuildingLevelOverride;
	EDBNOType DBNOType;
	struct ScalableFloat SpawnImmunityTime;
	TArray<EAthenaGamePhaseStep> SkippedGamePhaseNotification;
	TArray<struct TSoftClassPtr<UObject>> ModifierList;
	struct TSoftClassPtr<UObject> TimeOfDayManager;
	bool bIgnoreWeatherEvents;
	TArray<class UClass*> ItemsToFullyLoad;
	class UClass* SharedAssetGroup;
	class UClass* ConditionalAssetGroup;
	bool bIsDefaultPlaylist;
	struct FText UIDisplayName;
	struct FText UIDescription;
	struct GameplayTagContainer HUDElementsToHide;
	struct TSoftClassPtr<UObject> LootTierData;
	struct TSoftClassPtr<UObject> LootPackages;
	TArray<struct FortPlaylistBaseCurveTableOverride> BaseCurveTableOverrides;
	TArray<struct FortPlaylistBaseDataTableOverride> BaseDataTablesOverride;
	struct TSoftClassPtr<UObject> RangedWeapons;
	struct TSoftClassPtr<UObject> GameData;
	struct TSoftClassPtr<UObject> ResourceRates;
	struct TSoftClassPtr<UObject> SkydiveMusic;
	struct TSoftClassPtr<UObject> SkydiveMusicOutroStinger;
	struct TSoftClassPtr<UObject> RespawnStinger;
	float GarbageCollectionFrequency;
	float ServerPerformanceEventFrequency;
	float ServerMetricsEventFrequency;
	bool bUseLocalizationService;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaylistAthena : public UFortPlaylist
{
public:
	bool bRewardsTrackPlacement;
	bool bRewardsAllowXPProgression;
	bool bRewardForRevivingTeammates;
	ERewardPlacementBonusType RewardPlacementBonusType;
	int RewardsPlacementThreshold;
	ERewardTimePlayedType RewardTimePlayedType;
	int RewardTimePlayedXPPerMinute;
	int RewardTimePlayedXPFlatValue;
	struct ScalableFloat InMatchXPRewardScalar;
	struct TSoftClassPtr<UObject> QuestEventXPTableOverride;
	TArray<struct TSoftClassPtr<UObject>> FirstWinRewards;
	TArray<struct FString> CalendarEventsForEndOfMatchUpdate;
	bool bAllowSinglePartyMatches;
	bool bRequeueAfterFailedSessionAssignment;
	bool bIsTournament;
	bool bUseMultidivisionQueues;
	int CompetitivePointClamp;
	struct FString Strategy;
	struct FName BotVersionPlaylistName;
	int MaxBucketCapacity;
	int MaxPendingMatches;
	TArray<struct RatingExpansion> PriorityRatingExpansion;
	bool bUseInputRules;
	bool bAllowBackfill;
	int MinBackfillMatchPlayers;
	int MaxTeamScoreAllowedForBackfill;
	int MinPlayersForPrivateServer;
	float MaxTeamScoreDiscrepancyPercent;
	bool bUsePlayerRating;
	bool bEnableRatingUpdate;
	bool bEnableDynamicBotBackfill;
	struct FString RatingType;
	bool bRequireCrossplayEnabled;
	bool bLimitedPoolMatchmakingEnabled;
	bool bAllowedInLeto;
	bool bAllowInGameMatchMaking;
	bool bAllowReturnToMatchmakingOriginOnMatchEnd;
	bool bAllowBotsInHumanTeams;
	bool bForceNewPlayerStateOnReconnect;
	int DADTestValue;
	EAthenaWinCondition WinConditionType;
	struct ScalableFloat TimedWinConditionTime;
	struct ScalableFloat FinalWinConditionTime;
	struct WinConditionScoreData ScoringData;
	struct ScalableFloat TimedSafeZonePhaseTime;
	int WinConditionPlayersRemaining;
	struct ScalableFloat NumWinningTeamsCN;
	bool bIsLargeTeamGame;
	bool bShouldSpreadTeams;
	bool bIgnoreDefaultQuests;
	bool bDisallowMultipleWeaponsOfType;
	bool bAllowEditingEnemyWalls;
	int LootDropRounds;
	float ForceKickAfterDeathTime;
	EForceKickAfterDeathMode ForceKickAfterDeathMode;
	EWeaponSelectionPreservationType QuickbarSelectionPreservationMode;
	struct GameplayTagContainer AlwaysAllowedNativeActions;
	struct ScalableFloat PawnForcedCullDistance;
	struct ScalableFloat TransientMatchStartBonusCurrency;
	TArray<struct ItemAndCount> InventoryItemsToGrant;
	bool bIgnoreGameModeStartingInventory;
	bool bRequirePickaxeInStartingInventory;
	float DestructedBuildingInGridTimeout;
	bool bTeamFilterDestructedBuildingsInGrid;
	bool bOwnerFilterDestructedBuildingsInGrid;
	bool bEnableBuildingCreatedEvent;
	float MaximumAspectRatio;
	bool bVehiclesDestroyAllBuildingSMActorsOnContact;
	class UClass* VehicleBoundsXYSplineClass;
	bool bAutoAcquireSpawnChip;
	class UClass* SoundMix;
	bool bAllowHardcoreModifiers;
	bool bForceCameraFadeOnRespawn;
	float MinTimeBeforeRespawnCameraFade;
	EAthenaRespawnType RespawnType;
	struct ScalableFloat RespawnHeight;
	struct ScalableFloat MaxRespawnHeight;
	struct ScalableFloat RespawnTime;
	bool bRespawnInAir;
	struct ScalableFloat RespawnLevelStreamDistanceToForceSceenFade;
	bool bSkipWarmup;
	bool bSkipAircraft;
	bool bAllowWarmupPlayerStartInSetupPhase;
	float WarmupEarlyRequiredPlayerPercent;
	EAirCraftBehavior AirCraftBehavior;
	bool bUseCustomAircraftPathSelection;
	bool bUseSameDirectionForOpposingAircraft;
	bool bAircraftDropOnlyWithinSafeZone;
	struct ScalableFloat AircraftSafetyMarginPct;
	float AircraftPathOffsetFromMapCenterMin;
	float AircraftPathOffsetFromMapCenterMax;
	float AircraftPathMidpointSelectionRadiusMin;
	float AircraftPathMidpointSelectionRadiusMax;
	float LastStepPushAircraftCenterLine_Magnitude;
	float LastStepPushAircraftCenterLine_Direction;
	bool bDisableAudioShapes;
	float NonRenderedCharacterAnimationScale;
	class UClass* PlaylistMissionGen;
	bool bForceLTMLoadingScreenBackground;
	struct TSoftClassPtr<UObject> LoadingScreenWidget;
	TArray<struct UIExtension> UIExtensions;
	struct TSoftClassPtr<UObject> PlaylistUIData;
	struct TSoftClassPtr<UObject> HUDInfoDataAsset;
	class UClass* MissionIcon;
	struct FText UIDisplaySubName;
	bool bLimitedTimeMode;
	bool bDisable_ReportAPlayerReason_TeamingUpWithEnemies_WhileInGame;
	bool bDisplayScoreInHUD;
	bool bDisplayRespawnWidget;
	bool bDisableMatchStatsDisplay;
	struct DataTableRowHandle SpecialActorInputActionDataTableRow;
	bool bEnforceFullSquadInUI;
	bool bShowEliminationIndicatorForSelf;
	bool bShowEliminationIndicatorForSquadmates;
	bool bShowEliminationIndicatorForTeammates;
	bool bShowEliminationIndicatorForEnemies;
	struct ScalableFloat EliminationIndicatorMaxDistance;
	bool bLeaderboardDisplaysIndividuals;
	bool bUsePointLeaderAsTeamLeaderInLeaderboard;
	EFortLeaderboardMetric TypeOfLeaderboard;
	struct ScalableFloat OnlyRespectsGlobalSettingForReplayRecording;
	struct ScalableFloat DisableReplays;
	struct ScalableFloat EnableServerReplays;
	struct ScalableFloat ShouldUseCustomGameChannel;
	struct ScalableFloat ShouldRejectDefaultGameChat;
	ECustomGameVoiceChannel CustomGameChannel;
	struct ScalableFloat ShouldRecommendCustomGameChannel;
	struct SlateBrush MapImageOverride;
	float MapScaleOverride;
	bool bDrawCreativeDynamicIslands;
	struct TSoftClassPtr<UObject> MapManagerClass;
	bool bUseAsyncPhysics;
	EFortServerTickRate ServerMaxTickRate;
	ESafeZoneStartUp SafeZoneStartUp;
	bool bWarmUpInStorm;
	float StormEffectDelay;
	bool bDisplayFinalStormPosition;
	bool bDrawLineToStormCircleIfOutside;
	int LastSafeZoneIndex;
	struct TSoftClassPtr<UObject> SafeZoneLocationBlacklist;
	struct TSoftClassPtr<UObject> CreativeItemListSource;
	struct TSoftClassPtr<UObject> UpgradeBenchData;
	struct TSoftClassPtr<UObject> AILootOnDeathData;
	struct TSoftClassPtr<UObject> HeroStats;
	bool bUseDefaultSupplyDrops;
	TArray<struct SupplyDropModifierData> SupplyDropModifierList;
	TArray<struct TSoftClassPtr<UObject>> SupplyDropInfoList;
	TArray<struct TSoftClassPtr<UObject>> QueryNameToLootChanceScaleTables;
	TArray<struct TSoftClassPtr<UObject>> QueryNameToLootCountScaleTables;
	struct TSoftClassPtr<UObject> ExitCraftInfo;
	bool bPlaylistUsesCustomCharacterParts;
	TArray<struct CharacterPreloadBlock> CharactersToPreload;
	TArray<struct CharacterFallbackPreloadBlock> CharacterFallbackTagsToPreload;
	TArray<struct GameplayTag> AIPawnCustomizationFallbackTagsToPreload;
	TArray<struct TSoftClassPtr<UObject>> SpawnActorInfoList;
	int NetActorDiscoveryBudgetInKBytesPerSec;
	int NetDormancyNumFramesUntilObsolete;
	bool bEnableCreativeMode;
	bool bEnableSpawningStartup;
	bool bAllowTeamSwitching;
	bool bShowTeamSelectButton;
	bool bAllowLayoutRequirementsFeature;
	bool bUseCreativeStarterIsland;
	bool bForceCustomMinigame;
	bool bUsesAnimationSharing;
	struct TSoftClassPtr<UObject> AnimationSharingSetup;
	bool bAllowBroadcasting;
	bool bAllowSpectateAPartyMember;
	bool bActivateCurie;
	class UClass* CurieSettings;
	TArray<struct FName> CurieManagerConfigOverrides;
	int PlaylistStatId;
	bool bAccumulateToProfileStats;
	bool bSaveToRecentGameList;
	bool bEnableStatsV2Stats;
	class UClass* AISettings;
	class UClass* ServerBotManagerClass;
	struct TSoftClassPtr<UObject> DefaultCreativeTOD;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaylistAthenaHelper : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaylistManager : public UObject
{
public:
	TArray<class UClass*> PreloadedPlaylists;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaylistUIInfo : public UDataAsset
{
public:
	TArray<struct FortOptionsMenuData> OptionsMenuOverrides;
	class UClass* PostGamePlacementOverlayClass;
	TArray<struct PostGameScreenTagClassPair> PostGameScreenOverrides;
	class UClass* VictoryStinger;
	struct FText VictoryText;
	bool bIsCinematicVictory;
	bool bShouldPushEmoteInput;
	bool bShouldPlayOnLoss;
	float StingerFadesToAudioMusicAfter;
	struct SlateBrush MinimapOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUserOptionProxy : public UObject
{
public:
	class UClass* ItemOption;
	class UClass* OptionFilter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionColorEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct PlaylistOptionColorValue> OptionValues;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionCollisionProfileEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct PlaylistOptionCollisionProfileValue> OptionValues;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionIntEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct PlaylistOptionIntValue> OptionValues;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionFloatEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct PlaylistOptionFloatValue> OptionValues;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionFloatRange : public UPlaylistUserOptionBase
{
public:
	float Min;
	float Max;
	float DefaultValue;
	float IncrementValue;
	struct FText UnitName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionIntRange : public UPlaylistUserOptionBase
{
public:
	int Min;
	int Max;
	int DefaultValue;
	int IncrementValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionConfigIntRange : public UPlaylistUserOptionBase
{
public:
	int Min;
	int Max;
	struct FString MaxValueCVarName;
	int DefaultValue;
	int IncrementValue;
	int Shift;
	Unknown OverrideValueStrings;
	struct FText OptionPrefix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionBool : public UPlaylistUserOptionBase
{
public:
	bool bDefaultValue;
	struct FText OptionOnText;
	struct FText OptionOffText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionString : public UPlaylistUserOptionBase
{
public:
	int EntryCharLimit;
	struct FString DefaultValue;
	bool bCanBeLocalized;
	bool bShouldBeSanitized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionMusicTrackDataTable : public UPlaylistUserOptionBase
{
public:
	class UClass* DataTable;
	struct FString DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionPrimaryAsset : public UPlaylistUserOptionBase
{
public:
	TArray<struct PrimaryAssetId> OptionValues;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionItemType : public UPlaylistUserOptionBase
{
public:
	EFortItemType ItemType;
	int DefaultValueIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionsFilter : public UObject
{
public:
	class UClass* KnobThatWeAreBeingApplied;
	TArray<struct FString> ValuesToIgnore;
	struct FString OverridenOptionKey;
	struct FText OverridenOptionDisplayName;
	struct FText OverridenOptionDescription;
	struct FString OverridenDefaultValue;
	bool bInvertIgnoredValues;
	struct GameplayTagContainer Tags;
	EUFortMatchmakingKnobsDataSource MenuListType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptionsFilterRange : public UPlaylistUserOptionsFilter
{
public:
	struct IntPoint RangeToPreserve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaylistUserOptions : public UDataAsset
{
public:
	bool bSupportNoOverride;
	TArray<class UClass*> Options;
	TArray<class UClass*> OptionFilters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayMontageForGameplayTagQueryInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponRangedItemDefinition : public FortWeaponItemDefinition
{
public:
	struct TSoftClassPtr<UObject> ProjectileTemplate;
	struct TSoftClassPtr<UObject> BulletShellFXTemplate;
	bool bUseNativeWeaponTrace;
	bool bTraceThroughPawns;
	bool bTraceThroughWorld;
	bool bShouldSpawnBulletShellFX;
	bool bShouldUsePerfectAimWhenTargetingMinSpread;
	bool bDoNotAllowDoublePump;
	bool bUseOnTouch;
	bool bAllowADSInAir;
	bool bShowReticleHitNotifyAtImpactLocation;
	bool bForceProjectileTooltip;
	bool bSecondaryFireRequiresAmmo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaysetGrenadeItemDefinition : public FortWeaponRangedItemDefinition
{
public:
	struct TSoftClassPtr<UObject> PlaysetToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaysetItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaysetItemDefinition : public FortAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> PlaysetToSpawn;
	struct FString OptionFullSavePath;
	int SizeX;
	int SizeY;
	int SizeZ;
	float ZSnapTolerance;
	EPlaysetOffsetType OffsetType;
	bool bUseLocationOffset;
	struct Vector LocationOffset;
	struct Rotator DefaultRotation;
	struct FText UIDisplayName;
	struct TSoftClassPtr<UObject> MinigameClass;
	bool bAdjustForWorldCollision;
	bool bUsePlaysetProps;
	struct FortCreativeTagsHelper CreativeTagsHelper;
	class UClass* LevelSaveRecord;
	class UClass* PlaysetPropLevelSaveRecordCollection;
	Unknown ActorClassCount;
	TArray<struct TSoftClassPtr<UObject>> AssociatedPlaysetProps;
	TArray<struct FortPreviewActorData> PreviewActorData;
	struct FName PlaysetName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaysetPropItem : public UFortItem
{
public:
	class UClass* ItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaysetPropItemDefinition : public FortItemDefinition
{
public:
	struct FortCreativeTagsHelper CreativeTagsHelper;
	class UClass* ActorSaveRecord;
	TArray<struct TSoftClassPtr<UObject>> AssociatedPlaysets;
	bool bExplicitlyNotBrowsable;
	bool bImplicitlyNotBrowsable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaysetWorldItem : public UFortWorldItem
{
public:
	class UClass* PlaysetToSpawn;
	bool bUseVolumeToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaysetWorldItemDefinition : public FortWorldItemDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayspaceComponent : public PlayspaceComponent
{
public:
	struct FScriptMulticastDelegate OnMeshNetworkReady_BP;
	struct FScriptMulticastDelegate OnMeshNetworkEventBurst_BP;
	struct FScriptMulticastDelegate OnMeshNetworkEventStart_BP;
	struct FScriptMulticastDelegate OnMeshNetworkEventChange_BP;
	struct FScriptMulticastDelegate OnMeshNetworkEventEnd_BP;
	bool bSubscribeToMeshNetwork;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayspaceConfig : public UDataAsset
{
public:
	TArray<struct FortPlayspaceConfigData> PlayspaceDataList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayspaceGameMode : public FortGameModeAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayspaceGameState : public FortGameStateAthena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPluginActorSpawner : public AActor
{
public:
	struct GameplayTag TagToPluginActor;
	struct ScalableFloat MinSpawnChance;
	struct ScalableFloat MaxSpawnChance;
	bool bWaitForPlaylistLoad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPocketLevel : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> Level;
	struct Vector Bounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPocketLevelInstance : public UObject
{
public:
	class UClass* PocketLevel;
	class UClass* World;
	class UClass* LocalPlayer;
	struct Vector SpawnPoint;
	class UClass* StreamingPocketLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPocketLevelSubsystem : public UWorldSubsystem
{
public:
	TArray<class UClass*> PocketInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPoi_DiscoverableComponent : public UActorComponent
{
public:
	struct Vector MapLocationTextLocationOffset;
	struct FText PlayerFacingName;
	bool bDisableMapLocationText;
	struct TSoftClassPtr<UObject> QuestPartOf;
	struct FName QuestObjectiveBackendName;
	int DiscoverMinimapBitId;
	TArray<struct EventDrivenDiscoveryID> EventDrivenBitIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPOIAmbientAudioBank : public AmbientAudioDataAsset
{
public:
	struct FortPOIAmbientAudioLoop Loops;
	TArray<struct FortPOIAmbientAudioOneShot> Oneshots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPoiCollisionComponent : public UPrimitiveComponent
{
public:
	struct BodyInstance PoiBodyInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPoiManager : public AActor
{
public:
	struct FortPoiGridInfo FortPoiGridInfo;
	TArray<class UClass*> SmallTickUpdatedPoi;
	TArray<class UClass*> LargePoiVolumes;
	TArray<class UClass*> PendingLargePoiVolumes;
	TArray<class UClass*> NamedOnMapPoiVolumes;
	TArray<class UClass*> AllPoiVolumes;
	int TestPlayerIndex;
	TArray<struct FName> POIsExcludedFromBeginGolden;
	int MaxNumTestsPerFrame;
	TArray<struct GameplayTagContainer> PoiTagContainerTable;
	int PoiTagContainerTableSize;
	bool bIsReinitializingGrid;
	bool bHasInitalized;
	int PoiGridPrevSizeForDebugDisplay;
	TArray<int16_t> PoiGridForDebugDisplay;
	TArray<int16_t> FortPoiGridCellsTagContainerTableIds;
	TArray<struct FortPoiVolumeGridCell> FortPoiGridCellsLargeVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPoiTracker : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPoiVolume : public AVolume
{
public:
	bool bIsLargeGameVolume;
	float CurrentFortPoiVolumeSize;
	float VolumeThresholdForLargeGameVolume;
	float LargeGameVolume;
	TArray<struct FString> EventsEnabledDuring;
	struct GameplayTagContainer LocationTags;
	class UClass* AudioBank;
	class UClass* PoiCollisionComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPooledSkelMeshComponent : public SkeletalMeshComponentBudgeted
{
public:
	TArray<class UClass*> SavedMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPortalComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnLinkDataLoaded;
	struct FScriptMulticastDelegate OnLinkDataError;
	struct FScriptMulticastDelegate OnLinkThumbnailUpdated;
	struct FScriptMulticastDelegate OnPortalLinkCodeLockStatusChanged;
	struct FScriptMulticastDelegate OnPortalLinkLockExpired;
	struct CreativeLoadedLinkData LoadedLinkData;
	struct FString LinkDataErrorStatus;
	class UClass* ThumbnailTexture;
	int ThumbnailTextureWidth;
	int ThumbnailTextureHeight;
	EPortalLinkCodeLockMode LinkCodeLockMode;
	EPortalLinkCodeLockStatus LinkCodeLockStatus;
	bool bWindowLockedStartsLocked;
	bool bHasValidLinkData;
	bool bLinkRequiresCreativeContent;
	struct DateTime LinkCodeLockExpirationTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPowerTripAttributeSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData Power;
	struct FortGameplayAttributeData MaxPower;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPreferredItemSlotSettings : public UDataAsset
{
public:
	Unknown SlotItemTypeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPrerollDataItem : public UFortAccountItem
{
public:
	struct FString OfferId;
	struct DateTime Expiration;
	TArray<struct McpLootEntry> Items;
	int Highest_Rarity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPrerollDataItemDefinition : public FortAccountItemDefinition
{
public:
	float StreakbreakerRefundMultiplier;
	float StreakbreakerAccumulationMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProceduralFoliageComponent : public UProceduralFoliageComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProfileGo : public UObject
{
public:
	TArray<struct ProfileGoScenario> ProfileGoScenarios;
	TArray<struct ProfileGoGeneratedScenario> ProfileGoGeneratedScenarios;
	TArray<struct ProfileGoCollection> ProfileGoCollections;
	TArray<struct ProfileGoCommand> AllCommands;
	TArray<struct FString> AnimProfilingAssetsBlacklist;
	TArray<struct FString> AnimProfilingCosmeticsWhitelist;
	float DefaultSettleTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectile_DrunkHoming : public AFortProjectileBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectile_MOBATurret : public AFortProjectileBase
{
public:
	TArray<struct HitResult> ForcedHitResults;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectileAthena : public AFortProjectileBase
{
public:
	struct Vector_NetQuantize FireStartLoc;
	struct HitResult PawnHitResult;
	bool bExplodeOnPawnHit;
	bool bNoCollisionForNonOwningClients;
	bool bIgnoreActorsAttachedToFiringPawn;
	bool bProcessLocalHits;
	float TimeToWaitForPawnHitBeforeKillOnServer;
	class UClass* PredictedHitActor;
	class UClass* PredictedHitComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectileDecoHelper : public AFortDecoHelper
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectileFallingTrap : public AFortProjectileBase
{
public:
	class UClass* MeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	struct ProjectileHomingData HomingData;
	EFortHomingStyle InitialHomingStyle;
	bool bHasHomedTowardTarget;
	bool bSetInitialLocAndDir;
	bool bReplicatedAutoRegisterUpdatedComponent;
	bool bReplicateStopSimulating;
	float HomingLaserTargetDistance;
	float HomingTravelTime;
	float HomingOverrideSpeed;
	Unknown LockedOnTarget;
	struct Vector DesiredDirection;
	struct Vector PreviousHomingTargetPosition;
	struct Vector LaunchPosition;
	struct Vector InitialDirection;
	float AccelerationMagnitude;
	struct FortReplicatedVelocityData ReplicatedVelocityData;
	struct FortStopSimulatingRepData FortStopSimulatingRepData;
	class UClass* WaterInteractionComponent;
	struct FScriptMulticastDelegate OnProjectileVelocityReplicated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProjectileMoveComp_Chase : public UFortProjectileMovementComponent
{
public:
	struct FScriptMulticastDelegate OnChaseTargetReached;
	class UClass* InternalChaseTarget;
	struct FName ChaseTargetSocket;
	float ChaseTargetReachedDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProjectileMoveComp_Drunk : public UFortProjectileMovementComponent
{
public:
	struct ProjectileMovementDrunkConfig DrunkConfig;
	struct DrunkHomingConfig DrunkHomingConfig;
	float DrunkTravelTime;
	bool bDrunkDirectionChange;
	int RandSeed;
	float DrunkDirectionChangeTimer;
	float DrunkHomingDirectionChangeTimer;
	struct Vector DrunkHomingTargetPosition;
	struct RandomStream DrunkRandStream;
	float DrunkBlendOutMaxRange;
	bool bDoingTimeBasedBlendOut;
	float CachedBlendAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProjectileMovementInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectilePetrol : public AFortProjectileBase
{
public:
	float FuelAmount;
	class UClass* PetrolTemplate;
	class UClass* FortSplineGroundPathTemplate;
	bool bImpacted;
	float MaxLifeSpanOnCollision;
	float GroundSlopeAngleThreshold;
	struct Vector CachedImpactDir;
	Unknown SplatterSourceActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortProjectileRootComponent : public UCapsuleComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProjectileTrajectory : public AActor
{
public:
	class UClass* SplineComponent;
	TArray<class UClass*> SplineMeshComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPropAnimInstance : public UFortBaseAnimInstance
{
public:
	bool bIsMoving2D;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPropertyOverrideRedirects : public UObject
{
public:
	TArray<struct PropertyOverrideRedirect> PropertyOverrideRedirects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPropertyOverridePropertyDataRedirects : public UObject
{
public:
	TArray<struct PropertyOverridePropertyDataRedirect> PropertyOverridePropertyDataRedirects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPropertyOverrideProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPropertyOverrideReplShared : public AInfo
{
public:
	struct PropertyOverrideDataRepl ReplOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPropertyOverrideReplComponent : public UActorComponent
{
public:
	struct PropertyOverrideDataRepl PendingReplOverrides;
	class UClass* ReplOverrideData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPropertyOverrideReplProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortProtoActorBase : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPrototypingContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnPrototypingStatusChangedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPushCannonAnimInstance : public UFortAnimInstance
{
public:
	bool bHasDriver;
	bool bHasPassenger;
	bool bIsCoolDownEnded;
	bool bIsCannonFired;
	class UClass* PushCannon;
	struct Rotator CannonLocalRotation;
	struct Rotator WheelSpinRotatorFR;
	struct Rotator WheelSpinRotatorFL;
	struct Rotator WheelSpinRotatorBR;
	struct Rotator WheelSpinRotatorBL;
	float CooldownEndedOverheatThreshold;
	float OnFiredOverheatValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPushNotificationManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortPvPPlayerStart : public APlayerStart
{
public:
	byte Team;
	bool bDynamicStartLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AIPawnSpawnLocation : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AllBots : public UEnvQueryContext
{
public:
	bool bIncludeOnlyAthenaGameParticipantBots;
	struct GameplayTagQuery BotTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AllEnemies : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AllGoals : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AllPlayers : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AllPOIVolumes : public UEnvQueryContext
{
public:
	struct GameplayTagQuery VolumeLocationTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AthenaCurrentSafeZoneCenter : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_AthenaCurrentSafeZoneIndicatorCenter : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_BlackboardKeyLeader : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_BotPOIVolume : public UEnvQueryContext
{
public:
	bool bSetProjectedToNavmeshLocationAsContext;
	struct Vector ProjectionExtent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_BuildingRifts : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterFallbackTarget : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterGoalsCenterLocation : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterGoalsOnGround : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterPrimaryAssignmentGoals : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterProvidedQueryLocations : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterQueryActor : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterRandomDirection : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_EncounterTargetObjective : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_Goal : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_Goal_SpawnLocation : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_GoalProviderRootAssignmentGoals : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_NearbyAIPawns : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_NearbyAIPawnsMoveDestinations : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_NearbyFriendlyAIPawns : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_NearbyFriendlyAIPawnsAndPlayerPawns : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_NearbyFriends : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_SpawnSpotActorLocationOrAIPawnSpawnLocation : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_StWStormShield : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_TwoPointSolverPointA : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_TwoPointSolverRotationA : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryContext_WorldLocationParam : public UEnvQueryContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryData_CurvesAroundLine : public UDataAsset
{
public:
	struct FortPointsOnCurve PointsOnSideA;
	struct FortPointsOnCurve PointsOnSideB;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_ActorsAround : public UEnvQueryGenerator_ActorsOfClass
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_Allies : public UEnvQueryGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_AssignmentGoal : public UEnvQueryGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_BuildingRifts : public UEnvQueryGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_Buildings : public UEnvQueryGenerator
{
public:
	class UClass* BuildingGridVolumeCenter;
	struct AIDataProviderIntValue HorizontalBuildingCellRadius;
	struct AIDataProviderIntValue BuildingCellsAbove;
	struct AIDataProviderIntValue BuildingCellsBelow;
	struct AIDataProviderBoolValue bIncludeWalls;
	struct AIDataProviderBoolValue bIncludeFloors;
	struct AIDataProviderBoolValue bIncludeCenterCell;
	struct AIDataProviderIntValue MaxBuildingActorsPerVolumeCenterToCollect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_BuildingsOnCachedPath : public UEnvQueryGenerator
{
public:
	class UClass* CachedPathSource;
	struct AIDataProviderBoolValue bIncludeWalls;
	struct AIDataProviderBoolValue bIncludeFloors;
	struct AIDataProviderBoolValue bIncludeCenterCell;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_EncounterTargets : public UEnvQueryGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_Enemies : public UEnvQueryGenerator
{
public:
	bool bPerceivedEnemiesOnly;
	bool bSleepCapableAIUsePerceivedEnemiesOnly;
	bool bIgnoreDBNOPawns;
	bool bIgnoreSleepingAIs;
	bool bAddEnemiesFromAbilityRange;
	struct GameplayTagContainer AbilityTags;
	struct GameplayTagContainer DistanceTags;
	struct AIDataProviderFloatValue MaxTimeSincePerceived;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_GoalOnCircle : public UEnvQueryGenerator_OnCircle
{
public:
	bool bIncludeCenterActorInGeneratedGoals;
	class UClass* OptionalAssignmentSettings;
	struct FortAIAssignmentIdentifier OptionalAssignmentIdentifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_GoalPlayerPawns : public UEnvQueryGenerator
{
public:
	bool bOnlyAthenaGameParticipants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_HotspotSlots : public UEnvQueryGenerator
{
public:
	class UClass* GenerateAround;
	struct AIDataProviderFloatValue Radius;
	bool bUseTetherZone;
	class UClass* HotspotClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_InfluenceMapPoints : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderIntValue Density;
	bool bOnlyFlatSurface;
	class UClass* GenerateAround;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_LootGoalsAthena : public UEnvQueryGenerator
{
public:
	struct FortAIAssignmentIdentifier AssignmentIdentifier;
	class UClass* AssignmentSettings;
	struct AIDataProviderFloatValue HorizontalHalfExtents;
	struct AIDataProviderFloatValue VerticalHalfExtents;
	class UClass* SearchCenter;
	bool bAvailableLootOnly;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_MissionPlacementActors : public UEnvQueryGenerator
{
public:
	struct GameplayTagQuery MissionPlacementActorTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_MutatorActorQueryResults : public UEnvQueryGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_MutatorBaseQueryResults : public UEnvQueryGenerator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_PointsAroundLine : public UEnvQueryGenerator_ProjectedPoints
{
public:
	class UClass* GenerateAround;
	struct AIDataProviderIntValue MaxPointsPerClusterLocation;
	struct AIDataProviderFloatValue ClusterRadius;
	struct TSoftClassPtr<UObject> CurvesAroundLineAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_PointsFromNavGraph : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue MinPathDistance;
	struct AIDataProviderFloatValue MaxPathDistance;
	struct AIDataProviderIntValue Density;
	struct AIDataProviderFloatValue ExploreDirectionYaw;
	struct EnvDirection ExploreDirection;
	float ExploreAngleDot;
	struct AIDataProviderFloatValue ExploreInnerRadius;
	bool bLimitExplorationDirection;
	bool bOnlyFlatSurface;
	bool bUseParameterizedDirection;
	bool bUseHeightCheck;
	bool bFilterAllowTerrain;
	bool bFilterAllowBuildings;
	bool bFilterAllowDropdown;
	bool bFilterAllowClimbup;
	bool bFilterAllowSmash;
	EFortPointsFromNavGraphGoalPathDistanceFilterOperator PathDistanceFilterOperator;
	class UClass* GenerateAround;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_PointsInVolume : public UEnvQueryGenerator
{
public:
	struct AIDataProviderIntValue NumberOfPoints;
	EFortNamedNavmesh NavMeshToUse;
	class UClass* GenerateIn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_PointsOnBuildingGrid : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderIntValue HorizontalGridSize;
	struct AIDataProviderIntValue VerticalGridSize;
	bool bStartGridFromBottom;
	bool bUsePointInVerticalCenterOfCell;
	class UClass* GenerateAround;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_PointsOnWaterShoreLine : public UEnvQueryGenerator_ProjectedPoints
{
public:
	class UClass* GenerateAround;
	struct TSoftClassPtr<UObject> CurvesAroundLineAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_RandomPointsInBoundingVolume : public UEnvQueryGenerator_ProjectedPoints
{
public:
	class UClass* GenerateIn;
	struct AIDataProviderFloatValue RandomPointsCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_SpecificAssignmentGoals : public UEnvQueryGenerator
{
public:
	struct FortAIAssignmentIdentifier AssignmentIdentifier;
	class UClass* AssignmentSettings;
	class UClass* GoalProvider;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_TerrainDonut : public UEnvQueryGenerator
{
public:
	class UClass* Center;
	struct AIDataProviderFloatValue Radius;
	struct AIDataProviderFloatValue RadiusWidth;
	struct AIDataProviderFloatValue SpacingArc;
	struct AIDataProviderIntValue NumRings;
	bool bFilterAllowTerrain;
	bool bFilterAllowBuildings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryGenerator_ValidSpawnRiftActors : public UEnvQueryGenerator
{
public:
	struct AIDataProviderIntValue NumAIForGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryItemType_Goal : public UEnvQueryItemType_ActorBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryItemType_PointOrSlot : public UEnvQueryItemType_Point
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalBase : public UEnvQueryTest
{
public:
	bool bScoreEnemies;
	bool bScoreEncounterGoals;
	bool bScoreWorldGoals;
	bool bScoreSpecificAssignments;
	TArray<struct FortAIAssignmentIdentifier> AssignmentIDs;
	TArray<struct FortAIAssignmentIdentifier> ProhibitedAssignmentIDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_AssignmentTypeInterest : public UFortQueryTest_GoalBase
{
public:
	struct AIDataProviderFloatValue InvalidTypeStartInterest;
	struct AIDataProviderFloatValue InvalidTypeEndInterest;
	struct AIDataProviderFloatValue InvalidTypeTimeBeforeLerp;
	struct AIDataProviderFloatValue InvalidTypeLerpDuration;
	struct AIDataProviderFloatValue ValidTypeStartInterest;
	struct AIDataProviderFloatValue ValidTypeEndInterest;
	struct AIDataProviderFloatValue ValidTypeTimeBeforeLerp;
	struct AIDataProviderFloatValue ValidTypeLerpDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_BuildingCriteria : public UFortQueryTest_GoalBase
{
public:
	struct AIDataProviderFloatValue ScoreForGroundSupportedFloor;
	struct AIDataProviderFloatValue ScoreForBeingGroundSupported;
	struct AIDataProviderFloatValue ScoreForTraps;
	struct AIDataProviderFloatValue ScoreForWalls;
	struct AIDataProviderFloatValue ScoreForNavigableOpening;
	struct FortAIAssignmentIdentifier RootAssignmentID;
	struct AIDataProviderBoolValue bPreferCloserToRootAssignment;
	struct AIDataProviderFloatValue ScoreForDistanceFromClosestRootAssignmentGoal;
	struct AIDataProviderFloatValue MinDistanceForDistanceScoring;
	struct AIDataProviderFloatValue MaxDistanceForDistanceScoring;
	struct AIDataProviderFloatValue MaxHealthScore;
	struct AIDataProviderBoolValue bPreferHigherHealth;
	struct AIDataProviderFloatValue ClampMaxHealthValue;
	struct AIDataProviderFloatValue ClampMinHealthValue;
	struct AIDataProviderBoolValue bPreferHigherHealthPercentage;
	struct AIDataProviderFloatValue MaxHealthPercentageScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_CanAttackTarget : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_CanBeDamaged : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_CanHitWithGameplayAbility : public UEnvQueryTest
{
public:
	class UClass* AIsUsingAbility;
	class UClass* AbilityTargets;
	struct GameplayTagContainer GameplayAbilityTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_DecoyDistance : public UEnvQueryTest
{
public:
	class UClass* DistanceTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GameplayTagsPerDifficulty : public UEnvQueryTest
{
public:
	TArray<struct FortGameplayTagQueryPerDifficulty> TagQueriesPerDifficulty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalActorDot : public UFortQueryTest_GoalBase
{
public:
	class UClass* LineATo;
	class UClass* LineBTo;
	EFortTestGoalActorDot TestMode;
	bool bAbsoluteValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalActorTimeSinceSpawn : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalDiscouragement : public UFortQueryTest_GoalBase
{
public:
	struct AIDataProviderBoolValue DisableDiscouragementWhenUndermining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalDistance : public UFortQueryTest_GoalBase
{
public:
	EDistanceMode DistanceMode;
	class UClass* DistanceTo;
	EEnvTestDistance TestMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalDistanceRanges : public UFortQueryTest_GoalBase
{
public:
	EDistanceMode DistanceMode;
	class UClass* DistanceTo;
	EEnvTestDistance ScreeningTestMode;
	EEnvTestDistance TestMode;
	TArray<struct GoalDistanceData> GoalDistanceDataRanges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalFrustrationDiscouragement : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalGameplayTags : public UFortQueryTest_GoalBase
{
public:
	bool bShouldLookupQueryByTag;
	struct GameplayTagQuery TagQueryToMatch;
	struct GameplayTag QueryLookupTag;
	bool bShouldPassWhenQueryNotFound;
	bool bRequireAllProvidedTagQueriesPass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalMarkedByPlayer : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalNumberOfAIAssigned : public UFortQueryTest_GoalBase
{
public:
	ECountAIAssignedToType TypeOfMatchToCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalOverallDamageCaused : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalProject : public UFortQueryTest_GoalBase
{
public:
	struct EnvTraceData ProjectionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalStickiness : public UFortQueryTest_GoalBase
{
public:
	struct AIDataProviderFloatValue StartValueForGoal;
	struct AIDataProviderFloatValue EndValueForGoal;
	struct AIDataProviderFloatValue TimeBeforeValueLerp;
	struct AIDataProviderFloatValue ValueLerpDuration;
	struct AIDataProviderBoolValue ApplyStickinessToAllGoalsWithSameActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalType : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_GoalWithinTetheredBounds : public UFortQueryTest_GoalBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_HasNearbyBuildings : public UEnvQueryTest
{
public:
	bool bIncludeCenter;
	bool bIncludeFloors;
	bool bIncludeFloorsAbove;
	bool bIncludeWalls;
	int ExtentXY;
	int ExtentZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_HasNearbyEncounterGoals : public UEnvQueryTest
{
public:
	bool bOnlyActiveEncounters;
	struct AIDataProviderFloatValue TestDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_HotspotSlotOrientation : public UEnvQueryTest
{
public:
	class UClass* FaceToward;
	struct AIDataProviderFloatValue DotThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_HotspotSlotState : public UEnvQueryTest
{
public:
	EAIHotSpotSlot SlotState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_InfluenceScore : public UEnvQueryTest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_InsideAthenaSafeZone : public UEnvQueryTest
{
public:
	bool bUseCurrentSafeZoneIndicatorRadius;
	struct AIDataProviderIntValue SafeZoneIndex;
	bool bNextSafeZone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_InsideBuilding : public UEnvQueryTest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_InsideWater : public UEnvQueryTest
{
public:
	float TestRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_IsCloseToHotspotSlot : public UEnvQueryTest
{
public:
	class UClass* HotspotClass;
	struct AIDataProviderFloatValue Radius;
	bool bIgnoreItemsWithSlotData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_IsCloseToPatrolWard : public UEnvQueryTest
{
public:
	EWardAffectType WardEffectTypeFilter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_IsGoalForAssignment : public UEnvQueryTest
{
public:
	bool bRetrieveRootAssignmentFromOwner;
	struct FortAIAssignmentIdentifier RootAssignmentID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_MissionGameplayTagMatch : public UEnvQueryTest
{
public:
	struct GameplayTagQuery MissionPlacementActorTagQuery;
	struct GameplayTagContainer GameplayTagsToMatch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_MissionSameMap : public UEnvQueryTest
{
public:
	struct GameplayTagQuery MissionPlacementActorTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_NavGraphDistance : public UEnvQueryTest
{
public:
	class UClass* DistanceTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_OnFlatSurface : public UEnvQueryTest
{
public:
	float Radius;
	float ToleranceZ;
	float TraceOffsetUp;
	float TraceOffsetDown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_OnFlatSurfaceNoNavMesh : public UEnvQueryTest
{
public:
	float Radius;
	float ZTolerance;
	float NormalTolerance;
	float TraceOffset;
	TArray<class UClass*> ActorClassesToIgnoreInTrace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_PawnHealth : public UFortQueryTest_GoalBase
{
public:
	bool bUsePercentHealth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_PerceptionAge : public UEnvQueryTest
{
public:
	ECorePerceptionTypes Sense;
	class UClass* SenseClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_PerceptionAll : public UFortQueryTest_GoalBase
{
public:
	struct AIDataProviderFloatValue SenseScores;
	Unknown AdditionalSenseScores;
	struct AIDataProviderFloatValue MinSenseAge;
	struct AIDataProviderFloatValue MaxSenseAge;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_PerceptionExists : public UEnvQueryTest
{
public:
	ECorePerceptionTypes Sense;
	class UClass* SenseClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_PointInBuildingFoundation : public UEnvQueryTest
{
public:
	class UClass* BuildingFoundationContext;
	class UClass* BuildingFoundationClass;
	struct Vector BoundingBoxScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_PrimaryAssignment : public UFortQueryTest_GoalBase
{
public:
	bool bUseItemActorLocation;
	struct AIDataProviderFloatValue DistanceClose;
	struct AIDataProviderFloatValue DistanceFar;
	struct AIDataProviderFloatValue PercentValueClose;
	struct AIDataProviderFloatValue PercentValueRegular;
	struct AIDataProviderFloatValue PercentValueFar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_ProjectOnNavMesh : public UEnvQueryTest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_Random : public UEnvQueryTest
{
public:
	bool bUseRandomSeedForAI;
	bool bUseRandomSeedForOthers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTest_TowardNextAthenaSafeZone : public UEnvQueryTest
{
public:
	struct AIDataProviderIntValue SafeZoneIndex;
	bool bCheckAcceptanceAngleTowardNextCenter;
	float AcceptanceAngleTowardNextCenter;
	TArray<int> ExclusionSafeZoneIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQueryTwoPointSolver : public UObject
{
public:
	class UClass* QueryPointA;
	class UClass* QueryPointB;
	TArray<struct EnvNamedValue> QueryParamsA;
	TArray<struct EnvNamedValue> QueryParamsB;
	struct FScriptMulticastDelegate OnFinished;
	struct FScriptMulticastDelegate OnFailed;
	ETwoPointSolverRotationA RotationMode;
	struct Rotator MinRotationOffset;
	struct Rotator MaxRotationOffset;
	bool bUseNegativeAngleOffsets;
	bool bUsePositiveAngleOffsets;
	class UClass* AISys;
	class UClass* CachedQuerier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestIndicatorData : public UDataAsset
{
public:
	class UClass* QuestTagToLocationDataTable;
	struct TSoftClassPtr<UObject> DefaultQuestIcon;
	class UClass* QuestTagToIconDataTable;
	Unknown QuestOjectiveTypeToIconMap;
	class UClass* QuestTagToCategoryDataTable;
	TArray<struct FortChallengeMapPoiData> ChallengeMapPoiData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestItem : public UFortAccountItem
{
public:
	TArray<class UClass*> Objectives;
	int LastNotifiedQuestCount;
	EFortQuestState quest_state;
	bool sent_new_notification;
	struct DateTime last_state_change_time;
	EFortRarity quest_rarity;
	TArray<struct CompletionCountEntry> CompletionCounts;
	bool bSentCompleteNotification;
	bool bAllObjectivesComplete;
	bool bIsManuallyGrantedQuest;
	bool bHasRegisteredWithQuestManager;
	struct FString twitch_broadcaster_channel_id;
	int CurrentStage;
	struct DateTime expiry_time;
	struct FString quest_pool;
	float xp_reward_scalar;
	struct FortMissionInstancedConfigData InstancedConfigData;
	struct FString challenge_linked_quest_given;
	struct FString challenge_linked_quest_parent;
	struct FString challenge_bundle_id;
	int PlayerLevel;
	TArray<struct Guid> TrackedGuids;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestCategory : public UObject
{
public:
	struct FText Name;
	TArray<class UClass*> CurrentQuests;
	bool bExpanded;
	struct FortCategoryTableRow CategoryInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestManager : public UObject
{
public:
	struct FScriptMulticastDelegate OnQuestsUpdated;
	struct FScriptMulticastDelegate OnQuestsCompleted;
	struct FScriptMulticastDelegate OnQuestsGranted;
	struct FScriptMulticastDelegate OnQuestRewardClaimed;
	struct FScriptMulticastDelegate OnQuestSeen;
	struct FScriptMulticastDelegate OnNoQuestRewardsToClaim;
	struct FScriptMulticastDelegate OnPinnedQuestsChanged;
	struct FScriptMulticastDelegate OnDailyQuestRerolled;
	struct FScriptMulticastDelegate OnDisplayDynamicQuestUpdate;
	struct FScriptMulticastDelegate OnTransientQuestStarted;
	struct FScriptMulticastDelegate OnTransientQuestRemoved;
	struct FScriptMulticastDelegate OnUrgentTransientQuestStarted;
	struct FScriptMulticastDelegate OnUrgentTransientQuestCompleted;
	struct FScriptMulticastDelegate OnUrgentTransientQuestFailed;
	struct FScriptMulticastDelegate OnObjectiveStatXPGranted;
	struct FScriptMulticastDelegate OnXpValueDeltasUpdate;
	struct FScriptMulticastDelegate OnInitQuests_Prepare;
	TArray<class UClass*> CurrentQuests;
	TArray<class UClass*> CurrentFeats;
	TArray<class UClass*> ActiveTransientQuests;
	TArray<class UClass*> CompletedTransientQuests;
	TArray<class UClass*> RemovedTransientQuests;
	TArray<class UClass*> ActiveNPCInteractableQuests;
	TArray<class UClass*> CurrentHardcoreModifiers;
	TArray<class UClass*> HardcoreModifiersToUse;
	struct GameplayTagContainer CurrentHardcoreModifierSrcTags;
	TArray<class UClass*> CurrentAccolades;
	TArray<class UClass*> TrackedTempQuestItems;
	Unknown CurrentCategorizedQuestsMap;
	TArray<struct FortQuestObjectiveCompletion> PendingChanges;
	Unknown BoundProfile;
	TArray<struct FortAbilitySetHandle> EquippedQuestAbilities;
	Unknown SquadSharedQuestData;
	TArray<class UClass*> EventQuestDataTables;
	float DamageEventFlushDelaySeconds;
	float BuildingEventFlushDelaySeconds;
	bool bDoQuestStateLogging;
	bool bBlockBRXPWhenDead;
	bool bFlatCurrentQuestsSearch;
	bool bBlockQuestCompletion;
	bool bBlockAthenaQuestCompletion;
	bool bBlockStWQuestCompletion;
	bool bBlockXPEventsInAnyAAState;
	bool bBlockAthenaQuestCompletionInCompetitive;
	bool bBlockPartyAssist;
	bool bUseSquadForPartyAssist;
	bool bBlockAthenaFeatsCompletionInCompetitive;
	TArray<struct FString> BackendObjectiveNamesToBlock;
	TArray<struct FString> QuestTemplatesToBlock;
	bool bAllowAthenaMCPNotifyOnComplete;
	EQuestMapScreenMode QuestMapMode;
	Unknown FeatsCompletedThisSession;
	bool bEnableObjectiveConditionHandling;
	TArray<struct FortDisplayQuestUpdateData> DisplayQuestUpdateData;
	TArray<class UClass*> Components;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestManagerComponent : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestManagerComponent_Athena : public UFortQuestManagerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestManagerComponent_Campaign : public UFortQuestManagerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestMapDataAsset : public UDataAsset
{
public:
	class UClass* QuestData;
	class UClass* CosmeticData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventQuestMapDataAsset : public UFortQuestMapDataAsset
{
public:
	struct FText EventCalloutTitle;
	struct FText EventCalloutDescription;
	class UClass* EventCalloutImage;
	class UClass* EventCalloutOverrideSound;
	struct SlateColor EventArrowColor;
	struct SlateColor EventArrowShadowColor;
	struct FString EventCalloutQuestFlag;
	class UClass* RequiredCompletedQuest;
	bool bOnlyDisplayIfRequiredCompletedQuest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestMapData : public UDataAsset
{
public:
	class UClass* CampaignQuestMapDataAsset;
	TArray<class UClass*> EventQuestMapDataAssetList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestObjectiveInfo : public UObject
{
public:
	struct FName BackendName;
	EFortQuestObjectiveStatEvent StatEvent;
	EFortQuestObjectiveItemEvent ItemEvent;
	struct TSoftClassPtr<UObject> ItemReference;
	struct FText Description;
	struct FText HudShortDescription;
	class UClass* HudIcon;
	int AchievedCount;
	int RequiredCount;
	int LastNotifiedCount;
	int LastKnownMCPCount;
	class UClass* QuestOwner;
	class UClass* AssistPlayerState;
	bool bIsHelper;
	bool bVisible;
	bool bActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestObjectiveTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortQuickBars : public AFortClientOnlyActor
{
public:
	struct QuickBar PrimaryQuickBar;
	struct QuickBar SecondaryQuickBar;
	struct QuickBar CreativeQuickBar;
	TArray<class UClass*> AllCachedTraps;
	TArray<class UClass*> CachedFloorTraps;
	TArray<class UClass*> CachedWallTraps;
	TArray<class UClass*> CachedCeilingTraps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortQuickBarsAthena : public AFortQuickBars
{
public:
	float ServerPrimarySlotsUpdateDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuotaItem : public UFortAccountItem
{
public:
	float current_value;
	struct FString last_mod_time;
	int units_per_minute_recharge;
	int max_quota;
	int recharge_delay_minutes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuotaItemDefinition : public FortAccountItemDefinition
{
public:
	float StartingValue;
	int MaximumValue;
	float UnitsPerMinuteRechargeRate;
	int RechargeDelayMinutes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRarityData : public UDataAsset
{
public:
	struct FortRarityItemData RarityCollection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHealthRegenInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRegenHealthSet : public FortHealthSet
{
public:
	struct FortGameplayAttributeData HealthRegenRate;
	struct FortGameplayAttributeData HealthRegenDelay;
	struct FortGameplayAttributeData HealthRegenThreshold;
	struct FortGameplayAttributeData ShieldRegenRate;
	struct FortGameplayAttributeData ShieldRegenDelay;
	struct FortGameplayAttributeData ShieldRegenThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRegionInfo : public UDataAsset
{
public:
	struct FText RegionName;
	struct FName UniqueId;
	struct GameplayTagContainer RegionTags;
	struct FortRequirementsInfo Requirements;
	TArray<struct FortMissionAlertRequirementsInfo> MissionAlertRequirements;
	struct FortTheaterMapMissionData MissionData;
	struct TSoftClassPtr<UObject> RegionThemeIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRegisteredPlayerInfo : public UObject
{
public:
	struct FScriptMulticastDelegate OnAbilitySystemActorChangedChangedDelegate;
	struct UniqueNetIdRepl PlayerID;
	struct FString PlayerName;
	struct UniqueNetIdRepl PartyLeaderId;
	struct FString Platform;
	byte TeamAssignment;
	int PlayerIndex;
	bool bIsInitialPlayer;
	bool bShouldLockProfile;
	bool bFailedToLockProfile;
	struct Guid UnregistrationSaveGUID;
	ERegisteredPlayerUnregistrationStatus UnregistrationStatus;
	struct TimerHandle UnregisterFailsafeTimerHandle;
	struct TimerHandle PollForDedicatedServerReadyToShutdownTimerHandle;
	class UClass* CommonPublicProfile;
	class UClass* CommonCoreProfile;
	class UClass* AccountProfile;
	class UClass* WorldProfile;
	class UClass* OutpostProfile;
	class UClass* MetadataProfile;
	class UClass* CreativeModeProfile;
	class UClass* CollectionsProfile;
	class UClass* AthenaProfile;
	class UClass* QuestManagers;
	Unknown AwardManagers;
	Unknown MinigameManagers;
	class UClass* CollectionBookManager;
	class UClass* ExpeditionManager;
	class UClass* LinkedAccountManager;
	class UClass* TempAthenaMenuHeroInstance;
	bool bAthenaMenuHeroDirty;
	class UClass* CustomizationAssetLoader;
	struct EndZoneScoreAndAwards EndZoneScoreAndAwards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRegisteredPlayerInfoTooltip : public UFortTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRejoinCheck : public RejoinCheck
{
public:
	bool bAbandonAfterCheck;
	bool bAttemptingAbandon;
	EJoinServerState CurrentJoinState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortReleaseVersionManager : public UObject
{
public:
	struct FName CurrentVersion;
	TArray<struct FName> AllVersions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortRelevancyZoneIndicator : public AActor
{
public:
	class UClass* RelevancyZoneMesh;
	class UClass* CustomDepthMesh;
	float RelevancyZoneToWorldScale;
	class UClass* MiniMapNetRelevancyOverlayMaterial;
	class UClass* MiniMapNetRelevancyCircleMaterial;
	class UClass* MinimapNetRelevancyOverlayMID;
	struct SlateBrush MinimapNetRelevancyOverlayBrush;
	class UClass* MinimapNetRelevancyCircleMID;
	struct SlateBrush MinimapNetRelevancyCircleBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortRemoteControlledPawnAthena : public AFortPlayerPawnAthena
{
public:
	bool bCurrentlyDelayingLaunch;
	float ServerFuseStartTime;
	byte RCTeam;
	Unknown ControllingPlayerPawn;
	Unknown SpectateReturnPlayerPawn;
	class UClass* OverrideAbilitySystemComponent;
	float TriggeredHealthThreshold;
	TArray<struct FortGameplayEffectContainerSpec> EffectContainerSpecToApplyOnKills;
	class UClass* RemoteControlPawnSet;
	bool bTriggeredForDestroy;
	struct FortAttributeInitializationKey AttributeInitKey;
	class UClass* RemoteControlledPawnDefaultCameraClass;
	class UClass* RemoteControlledPawnTriggeredCameraClass;
	class UClass* ControllingPlayerEffect;
	struct ActiveGameplayEffectHandle ControllingPlayerEffectHandle;
	bool bIsKeyboardTurnPressed;
	bool bIsKeyboardLookPressed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRemoteControlPawnSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData FuseLength;
	struct FortGameplayAttributeData MouseTurnCap;
	struct FortGameplayAttributeData MouseTurnRate;
	struct FortGameplayAttributeData MouseTurnRateMax;
	struct FortGameplayAttributeData GyroTurnRateMax;
	struct FortGameplayAttributeData KeyboardTurnRate;
	struct FortGameplayAttributeData ControllerTurnRate;
	struct FortGameplayAttributeData TouchTurnRate;
	struct FortGameplayAttributeData MaxSpeed;
	struct FortGameplayAttributeData MaxAcceleration;
	struct FortGameplayAttributeData UseLaunchDelay;
	struct FortGameplayAttributeData LaunchDelay;
	struct FortGameplayAttributeData LaunchSpeed;
	struct FortGameplayAttributeData OutOfHealthExplodeDelay;
	struct FortGameplayAttributeData PlayerCanDetonate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRepeatableDailiesCardItem : public UFortAccountItem
{
public:
	int days_since_season_start_grant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRepeatableDailiesCardItemDefinition : public FortAccountItemDefinition
{
public:
	struct FString GranterQuestPack;
	int FillCount;
	struct ScalableFloat ReplacedRestedXpValue;
	struct ScalableFloat ReducedXPReward;
	struct ScalableFloat ReplacedRestedXpValueScalarForMissedDays;
	struct TSoftClassPtr<UObject> RequiredItemDef;
	TArray<struct RepeatableDailiesCardDateOverride> DateOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayContext : public BlueprintContextBase
{
public:
	struct FortReplayPlaybackState PlaybackState;
	struct FortReplayFXState EffectsState;
	struct FScriptMulticastDelegate OnReplayFXStateChange;
	float TimeBeforeEvent;
	struct FScriptMulticastDelegate OnPauseStateChanged;
	struct FScriptMulticastDelegate OnSessionIdWatermarkVisibilityChanged;
	struct FScriptMulticastDelegate OnReplayTimeChanged;
	struct FScriptMulticastDelegate OnReplayTimelineChanged;
	struct FScriptMulticastDelegate OnReplayPlaybackMultiplierChanged;
	struct FScriptMulticastDelegate OnReplayHudVisibilityChanged;
	struct FScriptMulticastDelegate OnReplayHudNotificationSuppressionChanged;
	struct FScriptMulticastDelegate OnToggleReplayViewSettings;
	struct FScriptMulticastDelegate OnToggleReplayPlayerList;
	struct FScriptMulticastDelegate OnToggleHighlightsListEvent;
	struct FScriptMulticastDelegate OnReplayLevelStreamingChanged;
	struct FScriptMulticastDelegate OnSequencerReadyEvent;
	struct FScriptMulticastDelegate OnReplayTimelineFocusChanged;
	struct FScriptMulticastDelegate OnReplayTimelineMarkerAdded;
	struct FScriptMulticastDelegate OnReplayTimelineMarkersCleared;
	struct FScriptMulticastDelegate OnReplayScrubStart;
	struct FScriptMulticastDelegate OnReplayScrubComplete;
	struct FScriptMulticastDelegate OnToggleSequencer;
	struct FScriptMulticastDelegate OnSequenceFinished;
	struct FScriptMulticastDelegate OnSequenceShotChanged;
	struct FScriptMulticastDelegate OnHighlightPlayingEvent;
	TArray<class UClass*> InteractiveMapIcons;
	Unknown UniqueMapIconVisibility;
	class UClass* SpectatingPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortReplayMovableSpotLight : public AFortReplaySpectatorPawnBase
{
public:
	class UClass* SpotLightComp;
	bool bGroupMoveLocked;
	int LightIndex;
	float RepInnerAngle;
	float RepOuterAngle;
	float RepIntensity;
	float RepRadius;
	byte RepColorR;
	byte RepColorG;
	byte RepColorB;
	float RepTemperature;
	bool bRepEnabled;
	bool bDebugDraw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortReplayMovableSpotLightHUD : public AHUD
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortReplayMovableSpotLightPilotController : public APlayerController
{
public:
	bool bMovingAllLights;
	bool bColorSelectMode;
	float Hue;
	float Saturation;
	float Value;
	float ColorInputX;
	float ColorInputY;
	class UClass* LightColorSelectComponent;
	class UClass* PendingCurrentSpotLight;
	class UClass* OriginalControllerRef;
	class UClass* OriginalPlayer;
	float TimeAccumulator;
	float InitialMaxSpeed;
	float InitialAccel;
	float InitialDecel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortReplaySequenceComponent : public UActorComponent
{
public:
	struct SavedSpectatorCameras SequenceShots;
	int CurrentShotIdx;
	class UClass* ReplayContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplaySpectator : public FortPlayerControllerSpectating
{
public:
	TArray<float> PlaybackSpeedLUT;
	struct UniqueNetIdRepl FollowedPlayerUniqueId;
	class UClass* FollowedPlayerPrivate;
	class UClass* OverriddenTODManager;
	class UClass* SequencerComponent;
	float SequencerLoadingScreenRevealTime;
	bool bShouldUpdateReplayContextAboutSequencer;
	float BaseSequencerRetryFindPawnGraceTime;
	struct FScriptMulticastDelegate OnServerHighlightsAvailableEvent;
	float HighlightAnnotationTime;
	float ExtendedGameHighlightsTargetSeconds;
	float GameHighlightsTargetSeconds;
	float FeatureReelTargetSeconds;
	float HighlightShotExtraLeadTime;
	class UClass* UnicornDriver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplaySpectatorAthena : public FortReplaySpectator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGlobalRepGraphActorClassSettings : public UObject
{
public:
	TArray<struct RepGraphActorTemplateSettings> TemplateSettings;
	TArray<struct RepGraphActorClassSettings> ClassSettings;
	TArray<struct RepGraphClassTracking> ExplicitCSVTracking;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraph : public ReplicationGraph
{
public:
	TArray<class UClass*> AlwaysRelevantClasses;
	class UClass* RootGridNode;
	class UClass* AlwaysRelevantNode;
	class UClass* LiveSpectatorRelevancyNode;
	class UClass* PlayerStateLimiterNode;
	class UClass* ReplayPlayerStateLimiterNode;
	TArray<class UClass*> FortVolumeGrids;
	Unknown ClassToNodetoRouteTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphConnection : public NetReplicationGraphConnection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_AlwaysRelevant_ForConnection : public ReplicationGraphNode
{
public:
	TArray<struct FortAlwaysRelevantActorInfo> PastRelevantActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_PlayerStateFrequencyLimiter : public ReplicationGraphNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_AlwaysRelevantForTeam : public ReplicationGraphNode
{
public:
	class UClass* FortTeamPrivateInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_AlwaysRelevantHealthForTeam : public ReplicationGraphNode
{
public:
	class UClass* FortTeamHealthInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_AlwaysRelevantForSquad : public ReplicationGraphNode
{
public:
	TArray<class UClass*> PlayerStates;
	TArray<class UClass*> RebootCards;
	TArray<class UClass*> Containers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_LiveSpectator : public ReplicationGraphNode_ActorList
{
public:
	TArray<struct FortAlwaysRelevantActorInfo> PastViewedTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_DynamicSpatialFrequency : public ReplicationGraphNode_DynamicSpatialFrequency
{
public:
	class UClass* NonAINode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplicationGraphNode_FortVolumeGlobalRelevancyNode : public ReplicationGraphNode
{
public:
	class UClass* NeverDormantOrAwakeList;
	class UClass* DormantNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplicationGraphNode_FortVolumeGrid : public ReplicationGraphNode
{
public:
	class UClass* FortVolume;
	class UClass* FortVolumeGrid2D;
	class UClass* FortVolumeGlobalRelevancyNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortReplicationGraphInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResourceItemDefinition : public FortWorldItemDefinition
{
public:
	EFortResourceType ResourceType;
	EFortReplicatedStat AccumulatingStatType;
	struct FortCreativeTagsHelper CreativeTagsHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRespawnDataTable : public UDataAsset
{
public:
	class UClass* RespawnData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRestedXpBoosterToken : public FortAccountItemDefinition
{
public:
	EItemProfileType ProfileType;
	int RestedXpAmountToGrant;
	bool bRequiresBattlePass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRiftBlockerComponent : public UBoxComponent
{
public:
	bool bStartActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortRiftProjectile : public AFortProjectileBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRuntimeOptions : public URuntimeOptionsBase
{
public:
	TArray<struct CreativeBetaPermission> CreativeBetaPermissions;
	bool bEnableItemDefinitionWhiteListing;
	bool bEnableItemDefinitionWhiteListingForTransientPickups;
	bool bAlwaysReadyUpAllLocalPlayersForMatchmaking;
	TArray<struct CreativeIslandResource> IslandResources;
	TArray<struct TSoftClassPtr<UObject>> VolumeManagerBannedClasses;
	int CreativeIslandDescriptionTagsMaxQty;
	TArray<struct CreativeIslandDescriptionTag> CreativeIslandDescriptionTagsWhitelist;
	TArray<struct ExperimentalCohortPercent> ExperimentalCohortPercent;
	struct FString YoutubeVideoPrefix;
	struct FString YoutubeVideoSuffix;
	bool bEnableSpectatorUpdates;
	bool bIsTournamentMode;
	bool bIsOutOfSeasonMode;
	bool bForceBRMode;
	bool bAllowBPTokenRefund;
	bool bEnableSpeculativeCreativeMMTeamSizeFix;
	bool bUseTournamentAnonymousOverrideEnabled;
	bool bForceDisallowAnonymousMode;
	bool bEnableYoutubeLinks;
	bool bEnableGeneratedScreenshotForPortalPreview;
	bool bAllowLoadoutSwitchingInLobby;
	int IngameMatchmakingDelaySeconds;
	int NumSavedLoadouts;
	struct FName TournamentPlaylistName;
	int TournamentPlaylistPriorityBase;
	float TournamentModeQueueInterval;
	int MinimumAccountLevelForTournamentPlay;
	bool bEnableManualBroadcasterStart;
	bool bForcePRM;
	bool bCreativeManualBroadcasterStart;
	bool bCreativeUseOnlyIslandVolumeForEdit;
	bool bCreativeEnableTimerForPhoneToolEnforcement;
	bool bAutoloadRestrictedPlots;
	bool bDisableMyIslandDescriptionPanel;
	bool bEnableAllRemoteClientInfos;
	bool bEnableBuildPreviewForBroadcast;
	bool bEnableRemoteAimSnapshotManagerForBroadcast;
	float EsportsAnalyticsHeartbeatRate;
	bool bUseBroadcastPostProcessing;
	bool bUseBroadcastKillFeed;
	bool bUseServerReplayActionFeed;
	bool bReplayGoToTimeEnabled;
	bool bBroadcastPipModeToggle;
	bool bShowBroadcastPlayerEventScoreWidget;
	bool bUseOutsideTopThreeSpectatorLeaderboard;
	bool bReplayPauseZeroDeltas;
	int CurrentSocialImportVersion;
	float PawnDeathScreenDelay;
	int CurrentVKImportVersion;
	bool bEnableMassFriendImport;
	bool bEnableSocialTab;
	bool bOnlyShowPartyAssistQuestsInSocialTab;
	struct FString SocialTabQuestsEventName;
	bool bShowCompletedSocialQuestsCalloutIfApplicable;
	bool bAllowSocialPresenceUpdates;
	bool bEnableToastSocialWidget;
	bool bEnableINICachedSocialStatus;
	int MaxINICachedSocialStatuses;
	TArray<struct RiftTourInfo> SocialRTInfo;
	bool bEnableSocialMovieBG;
	int NumDaysBeforeFailedImportReattempt;
	bool bEnableSocialBanModal;
	bool bEnableDedicatedServerSocialBanVoiceQuery;
	bool bEnableDedicatedServerSocialBanVoiceEnforcement;
	bool bDisplayLastOnlineTime;
	bool bDisplayLastInteraction;
	bool bEnableStartupSocialImport;
	bool bEnableStartupErebusFriendImport;
	bool bEnableVKImport;
	bool bEnableSteamImport;
	struct FString SocialImportURI;
	int DaysBetweenSocialImportPrompts;
	int DaysBetweenVKImportPrompt;
	int FriendImportCaptionSelection;
	bool bEnableSplitWalletTextNotice;
	bool bShowAthenaStoreToast;
	bool bShowAthenaStoreToastForRolloverAlone;
	bool bAllow3DInspectOfRMTItems;
	bool bAltUpdateFlow;
	bool bShowRMTDescriptionPopup;
	bool bAllowJuniorEndingMovie;
	TArray<struct FName> AthenaStarterGameMode;
	bool AthenaStarterFill;
	float PartyRichPresenceUpdateTime;
	float PartySuggestionUpdateTimer;
	int MaxPartySuggestionsToConsider;
	bool bAllowLFG;
	bool bAllowPartyPresenceUpdates;
	bool bAllowGameplayPresenceUpdates;
	bool bEnablePlaylistNameInRichPresence;
	bool bAllowDiscordFrictionlessJoin;
	bool bEnableInteractiveConsumables;
	bool bEnableContextHelpMenu;
	bool bShowAthenaItemShop;
	bool bEnableShowdown;
	bool bEnableTournamentMatchCaps;
	bool bUsePlayingEventIds;
	bool bRetryCMSLoads;
	float RefreshScoreDelay;
	bool bAlwaysForceTournamentLobbyPanelRefresh;
	bool bEnableEventLeaderboards;
	int NumCachedLeaderboardPages;
	int MaxPagesPerLeaderboard;
	int EventLeaderboardLiveRefreshTimeSeconds;
	int EventLeaderboardLivePostEventRefreshWindowMinutes;
	bool bGetLiveSessionsFromLeaderboards;
	bool bUseServerTournamentPlacementNotifications;
	int MaximumEventLengthHoursForCallout;
	bool bEnableHypeLeaderboards;
	struct FString HypeLeaderboardEventId;
	struct FString HypeLeaderboardEventWindowId;
	int HypeLeaderboardRefreshTimeSeconds;
	bool bHypeLeaderboardIncludeFriendsTab;
	struct FName CreativePlaylistName;
	struct FName BattleLabPlaylistName;
	struct FName PlaygroundsPlaylistName;
	bool bEnableEventScoreClamping;
	int CreativeDisabledTabIndex;
	bool bAllowIslandExporting;
	bool bAllowCreativeModeratorMode;
	bool bIslandExportingEnabledMCPOverride;
	bool bEnableCreativeServerImportFriendsOption;
	int MaxPlayersInCreativeServer;
	int MaxPlayersInCreativeWhitelist;
	bool bShowSupportACreatorOnIslandLinkScreen;
	bool bHideServersWithZeroPlayers;
	bool bEnableIslandCodeEntryOnPlayerPortal;
	bool bEnableIslandCodeEntryOnCuratedPortal;
	bool bEnableIslandCodeEntryInFrontend;
	float RefreshFavoriteIslandsWaitTime;
	int IslandCodeLength;
	bool bApplyCodeFormatting;
	bool bAdvertiseBattleLabOwnerInSession;
	bool bEnableThermometerUIForBattleLab;
	bool bEnableSpatialThermometerForBattleLab;
	bool bEnableHeatmapUIDisplayForCreative;
	bool bEnableHeatmapUIDisplayForBattleLab;
	bool bUseHeatmapHighPrecison;
	bool bEnableBudgetTrackerSpatialTest;
	bool bEnableSpatialThermometerForCreative;
	bool bEnableSpatialSettingsForCreative;
	bool bIsMatchmakingEnabledForPlayers;
	float CreativeHeatmapThermometerCellSize;
	bool bEnableThermomterCostPreviwer;
	bool bEnableJoinInProgress;
	bool bEnableSpectateAPartyMember;
	bool bEnableJoinAndSpectate;
	bool bEnableRequestToJoin;
	int MaxNumAlivePlayersForSpectateAPartyMember;
	int MaxNumPartyMemberSpectatorsPerMatch;
	TArray<struct RuntimeOptionSpectateAPartyMemberOverride> SpectateAPartyMemberPlaylistOverrides;
	bool bEnableJoinInProgressInMatchmakingWidget;
	bool bAnyPartyMemberAllowedToCancelMatchmakingV2;
	bool bEnableLockerSearch;
	bool bEnableLockerDirtySearch;
	bool bEnableBattlePass;
	bool bEnableBattlePassFAQ;
	bool bShowBattlePassBangAfterPurchase;
	bool bShowBattlePassBangEveryLevel;
	bool bShowBattlePassBangs;
	bool bSkipBattlePassPurchaseTextScreen;
	bool bBattlePassPurchaseSound;
	bool bBattlePassPurchaseDialog;
	bool bBattlePassFTUEFix;
	bool bBattlePassVideoDelay;
	bool bEnableAthenaFavoriting;
	bool bShowAthenaDailyQuests;
	bool bShowAthenaDailyQuestsWithAllChallenges;
	bool bEnableAthenaCustomPreviewActionForCosmetics;
	bool bEnableAthenaItemRandomization;
	bool bEnableProfileStatTracking;
	bool bEnableProfileStatUI;
	bool bEnableTrickUI;
	bool bEnableMultiplayerTricks;
	bool bShowAthenaChallengesTabWhenOutOfSeason;
	bool bEnableInGameChallengeTree;
	bool bCreateEpicAccountPinGrantDisabled;
	bool bLoginEpicWeb;
	bool bLoginXBLDisabled;
	bool bLoginPSNDisabled;
	bool bLoginErebusDisabled;
	bool bSkipInternetCheck;
	bool bEnableClientSettingsSaveToCloud;
	bool bEnableClientSettingsSaveToDisk;
	bool bEnableClientSettingsRestoreInputPresets;
	int bDedServerEventServiceDownloadTryCount;
	int TournamentRefreshPayoutMaxRateSeconds;
	int TournamentRefreshEventsMaxRateSeconds;
	int TournamentRefreshPlayerMaxRateSeconds;
	float TournamentHUDPointCounterDelay;
	int MaxNumDisplayNamesOnLiveGameList;
	int LiveGameListInitialLimit;
	int LiveGameListQueryIncreaseAmount;
	bool bEnableLiveGamesScreen;
	bool bLiveGameTimeDurationVisible;
	bool bEnableFlagSelection;
	struct FString DefaultFlagRegionId;
	struct FString MixedNationTeamFlagRegionId;
	TArray<struct FString> DisabledFlagSelections;
	int FlagChangeCooldownDays;
	bool bEnableEventServicePayouts;
	bool bLiveGamesClientAnalyticsEnabled;
	float MinimumWaitTimeToRequestNewShowdownScoreForWindow;
	int EventServicePayoutRefreshRateSeconds;
	int EventServicePayoutRefreshSpreadSeconds;
	float BundleLoaderWidgetTimerInterval;
	TArray<struct FString> CancelledEvents;
	int SecondsShowStartingMatchMessageForScheduledMMEvents;
	bool bEnableMatchAbandonProcess;
	float MatchAbandonTimeout;
	bool bEnableMultidivisionTournamentEventIdQuorum;
	bool bUseAircraftStartTimeForTimeAliveTournamentStat;
	double CloudSaveIntervalConfig;
	bool bSaveToCloudOnMapLoad;
	bool bSaveToCloudOnSuspend;
	bool bSaveToCloudOnDeactivate;
	bool bSaveToCloudOnTerminate;
	bool bSaveToCloudOnExit;
	bool bSaveToCloudOnLogout;
	double GiftNotificationRefreshTimer;
	bool bEnableUndoPurchase;
	bool bMoveUndoToBottomBar;
	bool bShowStoreBanner;
	float InGameStoreUpdateChance;
	bool bEnableReplayBrowser;
	TArray<uint32_t> WhitelistedReplayCLs;
	bool bAllowAllReplays;
	bool bEnableReplayRecording;
	bool bEnableLargeTeamReplayRecording;
	bool bEnableCreativeModeReplayRecording;
	bool bEnablePlaygroundModeReplayRecording;
	bool bEnableSplitscreenReplayRecording;
	bool bStableReplayPlayback;
	bool bEnableHearingAccessibility;
	bool bDisableSpatializationInsteadOfMutingWhenHearingAccessibilityEnabled;
	bool bDisableGiftXMPPMessageSend;
	bool bDisableGifting;
	bool bEnableGiftEligibilityCheck;
	bool bImmediateClaimOfEmote;
	bool bForceRestrictChat;
	bool bLimitGiftingToEligiblePlatforms;
	bool bCanGiftYourself;
	int GiftLimitAmount;
	bool bBattlePassGiftingEmergencyDisable;
	bool bEnableBattlePassGiftingButton;
	bool bEnableBattlePassGiftingButtonTokenOnly;
	bool bShowBPGiftBoxPopup;
	float EndBattleRoyalUpdateDelay;
	float LightswitchDownLoginDelay;
	bool bShowStatusButtonOnWaitingRoomScreen;
	bool bInvertMotionOnUnattachedSwitchControllers;
	bool bDisableTouchLookVelocityScaling;
	bool bDisablePurchaseHistoryScreen;
	bool bEnableRedeemOfflinePurchasesToasts;
	bool bAllowProcessedPayoutsToRefreshProfile;
	float TouchAimAssistStrengthScalar;
	bool bDisableTouchAimAssistAutoTracking;
	bool bProcessGamepadInputOnMobile;
	bool bMobileForceGamepadHUDWhenAttached;
	bool bDisableLegacyControls;
	bool bFixAimAssistDeadzoneExploit;
	ECrucibleWhitelistOverride CrucibleWhitelistOverride;
	bool bDisableCrucibleStatUpload;
	bool bDisableCrucibleStatDownload;
	bool bDisableCrucibleGlobalLeaderboards;
	bool bDisableCrucibleFriendLeaderboards;
	bool bDisableCrucibleAnalyticsEvents;
	bool bDisableCrucibleDestroyDeadBots;
	bool bDisableCrucibleForcedGC;
	bool bDisableCrucibleLeaderboardFilterText;
	bool bDisableCrucibleLeaderboardSwitching;
	bool bCrucibleLockToPlatform;
	bool bCrucibleSendStatsEndOfSession;
	bool bCrucibleSendStatsEndOfSessionOnShutdownEvent;
	int CrucibleMinValidStatScoreMilliseconds;
	int CrucibleLeaderboardFriendQueryMaxSize;
	bool bCrucibleLeaderboardEnableDisplayNameIcons;
	bool bEnableFortLeaderboardHelperDisplayNonPlatformNames;
	bool bEnableFortLeaderboardHelperConsolePlatformNameSearch;
	bool bEnableFortLeaderboardHelperConsoleDisplayNameFallback;
	bool bDisableCollectionStatsUpload;
	bool bDisableCollectionStatsDownload;
	int CollectionStatsFriendQueryMaxSize;
	bool bUseNativeQuickbar;
	bool bOverrideCreativeQuickbarFocusOnToggle;
	bool bSoundIndicatorsAlwaysEnabled;
	bool bSoundIndicatorsEnabledForTeammates;
	bool bSoundIndicatorsPooled;
	int SoundIndicatorMaxNum;
	int TencentDefaultBookStatSeason;
	bool bEquipFirstWeaponOnMobile;
	bool bClearLastFireOnAbilityFailed;
	bool bUsePrototypeSubGameLoadingScreen;
	bool bForcePrototypeLoadingScreenScaling;
	float ShowEliminationDistanceOver;
	float FadeOutTeamIndicatorsAfter;
	float FadeOutNPCEnemyIndicatorsAfter;
	float FadeOutEnemyIndicatorsAfter;
	float FadeOutWorldItemIndicatorsAfter;
	float FadeOutHardCoreBeaconIndicatorsAfter;
	float MapIndicatorTouchClearDistance;
	struct Vector2D MapIndicatorOffset;
	float AthenaMapZoomMax;
	float BacchusMapIndicatorSizeMultiplier;
	float AthenaMapPanSpeedMultiplier;
	float AthenaMapZoomSpeedMultiplier;
	bool bAthenaMapMapIconsFlowEnabled;
	float WaitTimeBeforeShowingNewModeViolator;
	struct RuntimeOptionLocalizableString FriendCodeShareWarningMessage;
	struct RuntimeOptionLocalizableString PlatformPlayAllowedErrorMessage;
	bool bOnlyShareURLWithNoMessage;
	bool bExcludeURLInShareMessage;
	bool bShowCreateAccountOnRedirect;
	bool bEnableContextTutorial;
	bool bDebugForcePlayerSurveys;
	bool bFeedbackTextShown;
	bool bEnableBadMatchPopup;
	int BadMatchIncidentThreshold;
	float BadConnectionUpdateTime;
	int BadMatchPopupRecallInterval;
	struct FString AthenaCodeOfConductURL;
	struct FString KairosCommunityRulesURL;
	struct FString BacchusFriendCodeShareURL;
	struct FString CreateAccountUrl;
	struct FString GooglePlayRatingURL;
	struct FString LinkAccountURL;
	struct FString AccountMergeMoreInfoURL;
	bool bEnableFactionTechScreen;
	bool bRequireFactionChoiceOnInfiltrationPlay;
	int TotalPlayerTechLevelsToShow;
	struct FString SupportURL;
	struct FString CheckStatusURL;
	struct FString iOSAppStoreURL;
	struct FString TurnOnMfaURL;
	struct FString ArenaResetTime;
	struct FString ListOfCreatorsURL;
	bool bAllowCodeRedemptionInSubgameSelect;
	bool bEnableAutomaticMOTD;
	bool bShowMOTDInLobby;
	bool bMOTDSameNewsForCreative;
	bool bSkipSubgameSelect;
	ENewsExternalURLMode BRUpdatesURLMode;
	struct FString BRUpdatesURL;
	ENewsExternalURLMode STWUpdatesURLMode;
	struct FString STWUpdatesURL;
	struct FString GiftingInfoURL;
	struct FString PrivacyPolicyURL;
	struct FString FanContentPolicyURL;
	struct FString TermsOfServiceURL;
	int GuardianChallengeLengthDays;
	bool bAgeGateFlowEnabled;
	bool bEnableContentControls;
	struct FString ContentControlsMoreInfoURL;
	struct FString ContentControlsForgotPinURL;
	struct FString ContentControlsVerifyEmailURL;
	bool bEnableContentControlsPlaytimeReporting;
	bool bEnableContentControlsPurchaseReporting;
	bool bContentControlsViewUGCEnabled;
	int MaxNumItemsInCreativeChests;
	int MaxStackSizeForCreativeResources;
	int MaxStreamerMatchmakingDelay;
	bool bEnableHiddenMatchmakingDelay;
	struct FString TencentStoreDetailsURL;
	int PSALoadingScreenPercentChance;
	struct FString StwDownloadLauncherOption;
	struct RuntimeOptionLocalizableString OverrideDefaultBonusXpEventTitleString;
	struct RuntimeOptionLocalizableString XBLDisableText;
	struct RuntimeOptionLocalizableString PSNDisableText;
	struct RuntimeOptionLocalizableString SwitchDisableText;
	struct RuntimeOptionReviewPromptCriteria ReviewPromptCriteria;
	bool bDisableAllKnobs;
	bool bDisableAllGameplayMessages;
	bool bDisableMatchmakingKnobs;
	bool bDisableMinigameKnobs;
	bool bDisableGameOptionKnobs;
	bool bDisableAffiliateFeature;
	bool bUseHotfixedAffiliateNamesArray;
	bool bEnablePrerollLlamas;
	bool bEnableSubregionNetworkAccelerators;
	TArray<struct FString> DisabledNetworkAcceleratedSubregions;
	TArray<struct FString> AdvertisedNetworkAcceleratedSubregions;
	bool bShowAccountItemWarningForVaultThreshold;
	int DaysBetweenAccountItemWarnings;
	float VaultLimitThresholdForAccountItemWarning;
	bool bShowAccountItemWarningForItemCount;
	int AlwaysWarnAccountItemCount;
	TArray<struct RuntimeOptionTabStateInfo> DisabledFrontendNavigationTabs;
	TArray<struct RuntimeOptionTabStateInfo> DisabledTabsForOutOfSeason;
	TArray<struct RuntimeOptionTabStateInfo> TournamentDisabledFrontendNavigationTabs;
	TArray<struct FString> DisabledMatchmakingKnobs;
	TArray<struct FString> HiddenMatchmakingKnobs;
	TArray<struct RuntimeOptionDisabledGameplayMessage> DisabledGameplayMessages;
	int NumGameplayMessageChannels;
	TArray<struct FString> AffiliateNames;
	bool bShowMOTDNews;
	struct DateTime DPlusVBuckPromoStart;
	struct DateTime DPlusVBuckPromoEnd;
	TArray<struct FString> CountryCodesForDPlusVBuckOverride;
	struct DateTime RockyRidgeStart;
	TArray<struct RuntimeOptionTournamentScoreThreshold> SoloTournamentScoreThresholds;
	TArray<struct RuntimeOptionTournamentScoreThreshold> DuoTournamentScoreThresholds;
	TArray<struct RuntimeOptionTournamentScoreThreshold> SquadsTournamentScoreThresholds;
	float PickingInteractDistance;
	float PickingHighlightMovementUpdateDist;
	float PickingHighlightUpdateTime;
	float PickingTime;
	float AutoPickingInteractDistanceFactor;
	float AutoOpenDoorInputMagnitude;
	float AutoOpenDoorTraceDistance;
	bool bAutofireEnabled;
	bool bShowXPWidgets;
	bool bShowAccoladesListWidget;
	bool bEnableInGameMatchmaking;
	bool bUseNewFlowIngameMatchmaking;
	bool bDisableAccoladesButton;
	bool bToggleIGMAnalytics;
	TArray<struct FString> WhitelistedInGameMatchmakingRegions;
	TArray<struct FString> WhitelistedInGameMatchmakingSubRegions;
	TArray<struct FString> BlacklistedInGameMatchmakingSubRegions;
	TArray<struct FName> BlacklistedInGameMatchmakingPlaylists;
	TArray<struct FName> SubRegionWhitelistedInGameMatchmakingPlaylists;
	bool bAllowPreserveSquad;
	bool bAllowPreserveSquadMemberVoting;
	bool bKeepPlayingTogether;
	bool bAutofireUsesComponent;
	bool bAutofireUsesAutoaimTarget;
	bool bHoldToFireOnAutofireTarget;
	float DefaultAutofireRange;
	float AutofireExtraTrackingRange;
	bool bServerNetDriverAnalytics;
	bool bClientNetDriverAnalytics;
	bool bDisableReplicationGraph;
	float BRServerMaxTickRate;
	float DoubleTapOnEndTouchTime;
	float DoubleTapOnStartTouchTime;
	float DoubleTapDistance;
	float SingleTapDistance;
	float TouchMoveStickRadius;
	float TouchMoveStickRadiusTargeting;
	float TouchMoveStickRadiusScoped;
	float TouchMoveStickRadiusDriving;
	float AutorunLockZoneOffset;
	float AutorunLockZoneDelay;
	float MoveOriginResetTime;
	float MoveOriginResetDistance;
	float MoveOriginFollowDistance;
	bool bDisableTouchLookInertia;
	float RotateInertiaMultiplier;
	float RotateInertiaMinTime;
	float RotateInertiaMinLength;
	float RotateInertiaMinMagnitude;
	int RotateInertiaNumAveragedTouches;
	bool bTouchQuickbarTapToLockEnabled;
	bool bTouchInteractInUIAvailable;
	bool bTouchInteractInUIForced;
	bool bEnableHUDLayoutTool;
	bool bEnableHUDLayoutCloudSave;
	bool bEnableHUDLayoutToolPanZoom;
	bool bEnableMobileHUDV2;
	bool bEnableHUDLayoutToolV2;
	bool bEnableHUDLayoutToolV2_GridSnap;
	bool bEnableGFNSettingEditCondition;
	float AthenaExternalRichPresenceDelayTimeSeconds;
	bool bEnableExternalPresenceAthenaPlayersRemain;
	float MinimumTimeBetweenConsolePresenceUpdates;
	float MinimumTimeBetweenMCPPresenceUpdates;
	int TimeBetweenStorePatchCheckRequestsSeconds;
	bool bInviteUIDisabled;
	bool bEnableInGameMipsAnalyticsReporting;
	float SecondsBetweenTextureStatsGathering;
	bool bEnableMipsCapExperiment;
	int CurrentMipsCapExperimentVersion;
	bool bEnableDownloadAnalyticsReporting;
	bool bEnableDownloadHeartbeat;
	float DownloadHeartbeatIntervalInSeconds;
	bool bEnableFriendsListButton;
	bool bForceDisableCrossplatformSquadFill;
	bool bRequireCrossplayOptIn;
	bool bUseAccountCrossplayPermissions;
	bool bSingleCrossplayOptInPrompt;
	bool bImmediatelyDisplayCrossplayOptIn_STW;
	bool bImmediatelyDisplayCrossplayOptIn_BR;
	bool bCrossplayOptInByDefault;
	bool bShowIconForSamePlatformPlayers;
	bool bObscuredPlatformIcons;
	bool bEnableChatWidget;
	bool bShowVoiceChatSettings;
	bool bShowMultipleVoiceChatSettings;
	bool bUseClientSettingsForControllerImage;
	bool bPartyInProgress;
	bool bShouldAthenaQueryRecentPlayers;
	bool bEnableRecentPlayerList;
	bool bEnableSuggestedFriendList;
	bool bEnableBlockedList;
	bool bEnableFriendListInGame;
	bool bPushJIPInfoToPlatformPresence;
	bool bEnableStWInZonePrivacyChange;
	bool bEnableSitoutOption;
	bool bEnableSitoutOption_STW;
	bool bEnableSocialPanelLeaveParty;
	bool bEnableMainMenuLeaveParty;
	bool bEnableINICachedRecentPlayers;
	int MaxINICachedRecentPlayers;
	int MinUSSNameLength;
	bool bEnableNickname;
	bool bAllowNicknameEmoji;
	TArray<struct FString> NicknameEmojiBlacklist;
	bool bNicknameInFront;
	bool bShowAccountBoosts;
	bool bShowCustomerSupport;
	bool bEnableChannelChangePopup;
	bool bEnableVoiceSpeakerWidget;
	bool bEnableSpeakerWidgetZonePerfMode;
	bool bShowVoiceIndicatorsWhileLoading;
	bool bEnableVoiceChannelSelectionUI;
	bool bEnableGlobalChat;
	bool bEnableAllTabInChat;
	bool bEnableEULA;
	bool bEnableEndOfZoneCinematic;
	bool bEnableOnboardingCinematics;
	TArray<struct FName> VideoDisplayDataBlacklist;
	bool bShowFounderBannerIcons;
	bool bShowCurrentRegionInLobby;
	bool bEnableFoundersDailyRewards;
	bool bEnableTwitchIntegration;
	bool bEnableMatchmakingRegionSetting;
	bool bEnableReadyupButtonWhileSittingout;
	bool bEnableEulaRequiredTournaments;
	bool bEnableMFARequiredTournaments;
	bool bAllTournamentsRequireMFA;
	bool bSpectatorBroadcasterSkipMfaEulaCheck;
	bool bEnableNaviationToChat;
	bool bEnableLanguageSetting;
	bool bEnableFriendCodeSetting;
	bool bEnableEarlyAccessLoadingScreenBanner;
	bool bClientIgnoreIsTournamentCheck;
	int CampaignMatchEndRetryCount;
	int StWTutorialDownloadAttempts;
	bool bShopPurchaseConfirmation;
	bool bShopPurchaseConfirmationJapanPS4;
	bool bToyMessagingEnabled;
	bool bAllowAccessToAllEmotesForTesting;
	bool bAllowAccessToStWHeroOutfitsAndBackblingForTesting;
	bool bEnableCosmeticItemShopInSTW;
	bool bRequireEmoteOwnershipInPIE;
	bool bEnableSTWLootDrops;
	bool bEnableSTWContainerItemCacheDrops;
	bool bEnableSTWEnemyItemCacheDrops;
	bool bEnableHoldToPickupUI;
	bool bSkipTrailerMovie;
	bool bAlwaysPlayTrailerMovie;
	bool bHideUnaffordableMtxPurchases;
	bool bDisableCTAInMtxStoreSelection;
	bool bAthenaFrontEndUsePushPopMTXStore;
	bool bHidePlusOnVbucksButton;
	bool bAllowXboxStwAccessDuringLiveStoreOutage;
	bool bShowReplayTrailerButton_Athena;
	bool bEnableAlterationModification;
	bool bEnableSchematicRarityUpgrade;
	bool bEnableMissionActivationVote;
	bool bEnableLtmRetrieveTheData;
	bool bEnableUpgradesVideos;
	bool bEnableExternalRichPresence;
	bool bShowEnableMFAModalAtStartupAthena;
	bool bShowEnableMFAModalAtStartupSTW;
	bool bEnableAIBuildingHitFX;
	int LevelToStartShowingMFAModal;
	int DaysBetweenEnableMFAModalPrompts;
	float DelayGiftButtonWhenMFANotEnabledSeconds;
	int LevelToAutoOpenBattlePassOnNewSeason;
	int ForceSeasonRefreshCounter;
	int ForceVideoRefreshCounter;
	bool bForceBattlePassPreview;
	bool bCanShowSTWUpsellInBR;
	bool bShowLeaderboardPrivacySettings;
	bool bEnableServerScoreboardLog;
	bool bEnableAsyncScoreboardFlush;
	bool bEnableInputBasedMatchmaking;
	bool bUsingAlternateMatchmakingModel;
	bool bNotifyBlockedInput;
	int NumberOfFramesBeforeWarnInputBlocked;
	bool bDisableVideoOptions;
	bool bEnableBattlePassWatchVideoActionOnCell;
	bool bEnableBattlePassReplayCinematicAction;
	bool bEnableCareerReplayCinematicAction;
	float RadioInputDebounceSeconds;
	float RadioTuningRetryTime;
	int RadioTuningRetryCount;
	bool bEnableBattlePassSocialFriends;
	bool bEnableBattlePassSocialFriendsOfDifferentPlatforms;
	bool bEnableBattlePassSocialFriendsServerSide;
	bool bEnableSimulatedXPForBattlePassSocialFriends;
	bool bEnableBattlePassPreviewOnRewardScreen;
	bool bEnableHoldToCloseOnRewardsScreen;
	int BattleStarsNeededToShowRewardPreview;
	int ShowBattlePassTracker;
	bool bDisplayBattlePassRewardsIndividually;
	bool bDisplayOnlyBattlePassFAQ;
	bool bEnableBPVideo;
	bool bEnableUEKGameSelect;
	bool bCompletelyDisableUEKGameSelect;
	bool bAlwaysPlayBPVideo;
	bool bDisableGRL;
	bool bShowBPPreviewVideo;
	bool bShowBPTrack_TimeLeft;
	bool bDisplayAllCharactersOnBattlePassPreviewScreen;
	bool bRefreshBattlePassCatalogOnSeasonDataLoaded;
	bool bEnableChallengeHolidayVideo;
	bool bEnableCareerScreenVideo;
	bool bEnableSpecialEventVideo;
	bool bEnableCNVideo;
	bool bEnableWinterfestPurchaseButton;
	bool bEnableWinterfestGiftButton;
	bool bForceWinterfestInfoModalButtonVisible;
	int NumViewsToDisplayWinterfestInfoModalButton;
	bool bCheckForPatchUpdateOnMatchmakingPlayClick;
	bool bCheckForPatchUpdateOnItemShopActivate;
	TArray<struct FString> HiddenSettings;
	bool bDisplayPlayerReportingRoles;
	bool bDisplayRelevantPlayersForPlayerReporting;
	bool bPreventMultipleReportsOfSamePlayer;
	bool bAllowReportingFeaturedIslands;
	bool bForceGamepadPlaytest;
	bool bEnableNewFireModeSelection;
	bool bEnableHUDPresetSelection;
	bool bEnableAddFriendWhileSpectating;
	bool bEnableFriendLink;
	float PlatformChatToastDisplaySeconds;
	float HPMicrophoneToastDisplaySeconds;
	struct FString FriendLinkURL;
	bool bAllowForceTouchFire;
	float VehicleSessionMinTimeUsed;
	float RebootChipExpirationTime;
	float RebootDirectiveDisplayTime;
	bool bDonutIdleGameEnabled;
	bool bRebootEnableInventoryDisplay;
	bool bUseHordeStormShield;
	float HordeStormShieldStartingRadiusOverride;
	float HordeStormShieldEndingRadiusOverride;
	float HordeStormShieldBreatherRadiusOverride;
	bool bUseHordeRespawnAtLastPawnLocation;
	bool bAllowHordePlayerTriggeredRespawn;
	int MaxQuickScopeAimAssistPulls;
	float MaxQuickScopeAimAssistPullWatchTime;
	bool bShouldDisablePickaxeFXFrontendPreview;
	bool bRegisterPawnsWithSignificanceManagerInFrontEnd;
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnPS4;
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnXB1;
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch;
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnPS4_STWOnly;
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnXB1_STWOnly;
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch_STWOnly;
	bool bSimpleHeistVanEntrance;
	struct FString LobbyGenericLinkButtonURL;
	bool bEnableLobbyGenericLinkButton;
	struct RuntimeOptionLocalizableString LobbyGenericLinkButtonText;
	int HighlightClipRewindTimeInSeconds;
	bool bEnableAntiTaxi;
	float StopFlyingParachuteCooldownTime;
	float FlushLoadingScreenRefreshSeconds;
	bool bEnableVehicleSpawnMissionInStw;
	bool bEnableDownTierCraftingInStw;
	bool bShowBugReportsButton;
	bool bShowCommentReportsButton;
	bool bShowContentReportsButton;
	bool bEnableItemRefundingInStw;
	bool bDisableCareerStatsButton;
	bool bDisableCareerLeaderboardButton;
	bool bDisableCareerStatsPagePlatformProfileButton;
	bool bUsePlatformSpecificTextOnCareerPage;
	bool bDisableViewOtherProfilesFromCompLeaderboards;
	bool bShowOtherPlayerStatsOnCareerPage;
	bool bShowFeatsOnClient;
	bool bShowHardcoreModifiers;
	int InputMethodThrashingLimit;
	float InputMethodThrashingWindowInSeconds;
	bool bEnableLogUploadForTokenHolders;
	float TokenHolderLogTailSizeKb;
	bool bAllowPartialBackgroundAudio;
	bool bDuplicateRemovedPlayersOnClient;
	struct PlayerMarkerConfig PlayerMarkerConfig;
	bool bIsCreativeMultiSelectEnabled;
	bool bEnableUserProfilePictures;
	bool bUseProfilePicturePresence;
	bool bEnableChannelsServiceLoadTesting;
	bool bAllowMimicingEmotes;
	bool bAllowMimicingEmotesInFrontend;
	bool bAllowAsyncTooltipLoading;
	bool bAllowListViewAsyncLoading;
	bool bEnableBackToPartyHubButton;
	bool bEnableMobileAvailableLootingListView;
	bool bEnableDisambiguateLoading;
	bool bEnableOptionalHighRezMips;
	int NumDaysToSnoozeGooglePlayRating;
	int NumDaysAllowedToDelayGoogleRating;
	bool bEnableMobileInGameAppRating;
	int PreloadRevision;
	bool bEnableLiveStoreTilePreviews;
	bool bEnableLiveStoreTilePreviews_InGame;
	bool bAllowedToEnableUIGlobalInvalidation;
	bool bEnableAutoMulchInStW;
	bool bAllStWMoonbeamHUD;
	int MaxCharactersInTextEntry;
	TArray<struct FString> IllegalIslandTitleCharacters;
	TArray<int> IllegalIslandTitleChars;
	bool bEnableCreativeUserTextSanitizationWithToxicityService;
	bool bEnableCreativeUserTextSanitizationWithPlatformSanitizer;
	bool bEnableCreativeUserTextSanitizationWithChatSanitizer;
	bool bUseToxicityAsCreativeMainTextSanitizer;
	bool bUseLegacyAsyncSanitizationLogicInCreative;
	float KeepPlayingTogetherDuration;
	float KeepPlayingTogetherTickFrequency;
	int HotfixVersionId;
	bool bCanTurboBuildOutsideBuildModeWithBuildTool;
	float MaxBuildingIntoTerrainIntersectionPercentage;
	bool bUsingBuildingExtraPiece;
	int AnalyticsBuildingWallTooLowLocations;
	bool bDisableClientEngagementsAnalytics;
	float AnalyticsClientEngagementsTimeoutSeconds;
	int AnalyticsClientEngagementsMaxSendPerMinute;
	int AnalyticsClientEngagementsMaxSendOnCleanup;
	bool bAnalyticsClientEngagementsRequireTimeToReturnFireToSend;
	int AnalyticsClientEngagementsParticipationPercent;
	bool PublishingEnabledForWhitelistedAccounts;
	struct FString IslandCodeLinkMnemonicExampleText;
	struct FString IslandCodeLinkURLText;
	struct FString FeaturedCreativeLTMAffiliateName;
	bool bEnableCreativeLTMSupportCreator;
	struct FString CreativePublishCodeURLPrefix;
	bool bCreativeMinimapRendering;
	bool bCreativeMinimapCaptureLighting;
	bool bCreativeMapRenderingInHub;
	bool bCreativeMapWaitForVolumeReady;
	TArray<struct FString> CuratedLinkCodes;
	TArray<struct FString> CuratedIslandTemplateCodes;
	Unknown PlaylistCuratedContent;
	bool bEnableIslandCheckpoints;
	bool bEnableIslandLoadNetSafeGuards;
	Unknown PlaylistCuratedHub;
	struct FString CreativeIslandImageURLOverride;
	struct FString CreativeIslandGeneratedImageURLOverride;
	bool bLoadingScreenInputPreprocessorEnabled;
	bool AllowInputTypeFilterForAccessibility;
	bool AllowLockPrimaryInputMethodToMouseForAccessibility;
	bool bEnableLiveStream;
	bool bEnableLiveStreamCountdown;
	struct DateTime LiveStreamStartTime;
	bool bEnableLiveStreamInMatch;
	bool bShowLiveStreamInMatchByDefault;
	bool bCaptureTeamFrontendFlag;
	struct FName VideoHolidayName;
	struct FName VideoBattlePassName;
	struct FName VideoCareerScreenName;
	struct FName VideoChallengeScreenName;
	struct FName VideoFrontEndName;
	float FTUESeasonTrailerBoundary;
	float VideoDurationOffsetFromTransition;
	float VideoDurationOffsetFromEnd;
	bool bEnableGCBeforeVideoPlayback;
	float EOneVideoLength;
	TArray<float> MediaCDNDistribution;
	int MaxNumberOfMediaDecoderResources;
	TArray<struct FString> VideoEVMap;
	int LiveStreamPiPMemoryRequired;
	int64_t ShouldShowLiveStreamPiPInMatchCounter;
	bool bEnableRiskyReelsStreaming;
	bool bDisableBlastURLStreamSource;
	int StreamPlaylistFetchMethodOrder;
	bool bHiddenButEnabledLiveStreamInMatch;
	float TimedEventsJIPStartDelay;
	bool bEnableLoadingScreenPIP;
	bool bEnableSplineReticulationById;
	bool bUseSingleHUDUpdatePerFrame;
	int64_t MinInteractionScoreForFriendToBeConsideredClose;
	int64_t MinIntervalBetweenInviteToPartyNotificationsInSeconds;
	float DelayBetweenStartOfPostGameAndShowDelayedNotificationsInSeconds;
	TArray<struct FString> PlaylistConditionalFlags;
	bool bIsUserChoiceAllowedForForcedAndroidStore;
	int AndroidStoreCounter;
	bool bHideCharacterCustomizationNullTile;
	bool bEnablePlaylistRequireCrossplay;
	bool bRequireCrossplayOptInForFill;
	bool bUseConcurrentCrossplayPromptGuard;
	int MaxSquadSize;
	int MaxPartySizeCampaign;
	int MaxPartySizeAthena;
	bool bShouldFollowersSendSquadMatchmakingInfo;
	bool bAllowAthenaNavSystemForCreative;
	bool bEnablePlayerSurveys;
	bool bEnablePlayerStatsPrecache;
	bool bEnableStreamingReplayViewingUI;
	float LiveReplayDiscoverabilityDelay;
	bool bSkipPlayingFortniteChecks;
	bool bReplayBattleMapCameraMode;
	bool bReplayKeepLocalClientEvents;
	bool bReplaySampleAthenaPawnMovement;
	float ReplaySampleAthenaPawnTimeRate;
	float ReplaySampleAthenaPawnSpaceRate;
	float ReplaySampleAthenaPawnUpdateTimeRate;
	bool bDisablePartyJoinInOutpost;
	Unknown MashSpecialScores;
	bool bEnableMissedInvitesEntry;
	bool bOnlyShowMissedInvitesEntryIfMissedInvites;
	bool bEnableNotifyWhenPlaying;
	bool bEnableSubscriptionNudges;
	bool bEnableSidekick;
	bool bEnableSidekickFeature1;
	bool bEnableSidekickFOMO;
	bool bEnableSidekickAvatars;
	bool bSidekickDisablesScreenRecord;
	bool bSidekickEnableExitFNButton;
	bool bEnableSidekickFaceAreaInvalidation;
	bool bSidekickDisabledByNightNight;
	bool bSidekickForcesSingleChannelMode;
	bool bEnableCampaignBatchLevelingUI;
	bool bAllowSimultaneousChannelConnections;
	bool bAllowSimultaneousChannelListening;
	bool bExpandNotListeningChannels;
	uint32_t MaxSetFriendSubscriptionSettingsAttempts;
	uint32_t MaxQueryFriendSubscriptionSettingsAttempts;
	int NumDaysBetweenPlayingNotifications;
	int NumHoursBetweenPlayingNotifications;
	int NumMinutesBetweenPlayingNotifications;
	bool bForceAutoChangeMaterialOn;
	bool bActiveDisplayDeviceTemperature;
	bool bAllowOfflineInvites;
	bool bEnablePlatformVoiceLeave;
	bool bEnablePlatformVoicePrompts;
	bool bEnableVoiceChatEnablePrompt;
	float PlaylistGameVoiceChannelRecommendationDisplayTime;
	bool bEnablePlaylistGameChannelRecommendationToast;
	bool bEnableQuickHealing;
	bool bAllowDeferredPedestalPawnSpawn;
	bool bRunUnicornOnServer;
	bool bShowSamsungSensorButtonWarning;
	int SamsungSensorButtonGamesPerWarning;
	TArray<struct FString> CatabaExclusiveCountryCodes;
	bool bEnableItemShopDynamicBackground;
	bool EnableCommunityVotingScreen;
	int CommunityVotingTutorialVersion;
	float CommunityVotingRevealDelay;
	float CommunityVotingTimerRefreshDelay;
	bool ScrollToWinnerTileAfterReveal;
	bool EnableStandaloneStorefront;
	bool bEnableBattlePassStorefront;
	bool bEnableItemPreviewInStore;
	bool bEnableCurrencyInspectScreenBonusText;
	bool bEnableCurrencyBonusBanner;
	bool bEnableItemShopInvalidationBox;
	bool ScrollToStandaloneSectionOnPopupClosed;
	TArray<EFortItemShopSection> ItemShopOrdering;
	bool bEnableItemShopSectionBangs;
	bool bEnableItemShopCommunityVotingSectionBang;
	TArray<struct AthenaItemShopSectionPriority> ItemShopDefaultLandingPriority;
	TArray<struct AthenaItemShopSectionOverrideDisplayData> ItemShopOverrideDisplayDataList;
	EFortItemShopSection ItemShopDefaultLanding;
	float ItemShopOfferSeenThreshold;
	bool CommunityVotingTileAnimated;
	bool ScrollToComTileOnEventPopupClosed;
	bool EnableThanksVotingPopup;
	bool bUseItemPresentationScreenOnItemPurchased;
	float CommunityVotingThanksPopupDelay;
	bool bIgnoreABTestingForReloadMtx;
	TArray<struct FString> ReloadMtxExclusiveCountryCodes;
	bool bEnableReloadMtx;
	bool bEnableDynamicReloadMtx;
	bool bEnableInGameReloadMtx;
	int ReloadMtxIntroVersion;
	bool bEnableCrew;
	bool bEnableSubscriptionInspectScreen;
	bool bEnableBattlePassViolatorEarnedCurrency;
	float InGameCosmeticItemBangRefreshRate;
	bool bUseContentPatchingRestartFlow;
	bool bAthenaAutoPickupStackables;
	TArray<struct RuntimeOptionScheduledNotification> ScheduledNotifications;
	bool bEnableUnicornHighlightsOnClient;
	bool bEnableHighlightsPromptInCompeteScreen;
	bool bUseReturnToKairosLoadingScreen;
	bool bForceReturnToKairosLoadingScreen;
	bool bDebugForceLoginRelaunch;
	bool bShouldAllowNightNightMode;
	struct FString NightNightModeEventName;
	bool bEnableDADUpdateCheckOnRTMM;
	bool bShouldAllowForcedIntro;
	struct FName ForcedIntroName;
	struct FName ForcedIntroPlaylistNameOverride;
	bool bShowMovieInGameplayIntro;
	bool bShowMovieInGameplayOutro;
	bool bSkipSubgameSelectDuringForcedIntro;
	bool bSkipToEndGameplayIntroOutroVideos;
	bool bUseAthenaArmory;
	bool bEnableLiveSpectateButton;
	bool bEnableGuidedTutorialDefensiveBuilding;
	bool bEnableSafeZoneEditor;
	bool bEnableSavedLoadouts;
	bool bSavedLoadoutsUseGodTile;
	bool bEnableSafeZoneEditorOnLogin;
	bool bEnableSafeZoneEditorWhenNotInApolloIntro;
	float LoginFlowCMSRefreshWaitTime;
	bool bEnableAppResumeCMSUpdate;
	bool bEnableMOTDAnalytics;
	bool bEnableTabTransitionMOTDAnalyticsEvent;
	bool bAllowStoreSkipOpenAnimation;
	bool bAllowInGameStore;
	bool bPostGameStoreNoLeto;
	bool bPostGameStoreTriggerIncrementalGC;
	bool bAllowInGameLocker;
	bool bAllowInGameCareer;
	bool bAllowInGameActivityBrowser;
	bool bEnableGuidedTutorialDirectFlush;
	bool bEnableGuidedTutorialABTesting;
	bool bEnableHighlightPlayButtonABTesting;
	bool bEnableSkipGuidedTutorialABTesting;
	int MaxFrontendFlowStatQueries;
	bool ApolloIntroShowMovie;
	bool bRunDeimosSpawnTimelines;
	int TeamToPlaceMeshNetPawnsOn;
	bool bEnableAddFriendUserSearchDarkTraffic;
	bool bEnableExtendedUserSearchUI;
	bool bEnableRecursiveMatchAssignmentSearchForTeam;
	bool bEnableBackfillCheckForHighestTeamScore;
	bool bEnableBackfillCheckForTeamScoreDifference;
	Unknown BackfillCheckForHighestTeamScorePlaylistOverrides;
	Unknown BackfillCheckForScoreDiscrepancyPlaylistOverrides;
	bool bDisableTdmBackfilledPlayerTeleport;
	bool bDisableWarmupRequiredPlayerCountCheck;
	bool bAIDirectorTreatBotsAsPlayersForLOD;
	bool bEnablePhoenix;
	bool bBuildingPossessionShown;
	struct SoftObjectPath LoadingContentModalWidget;
	bool bBacchusFrontendEnabled;
	TArray<struct FName> InvalidCreativeItemTags;
	bool bEnableAFortPlayerPawnOnRep_InVehicleAndUFortVehicleSeatComponentOnRep_PlayerSlotsRaceConditionFix;
	struct FString ValkyrieMajMinPatchQueryParams;
	bool bSprintingStrafeSnapEnabled;
	bool bExplicitSprintableInputRange;
	float MinForwardForSprint;
	float MinForwardForSprintSnapping;
	float AccelerationStrafeMultiplierSprintOverride;
	float KeyboardDiagonalSprintForwardOverride;
	float KeyboardSprintInputWindUpTime;
	float KeyboardMoveInputWindUpTime;
	bool bEnableWebAuthFNMobileOnClassicBuild;
	bool bPortraitWebAuthFNMobileOnClassicBuild;
	bool bBacchusFrontendLabelShown;
	int NoWeaponZoneMaxDestroyCount;
	float NoWeaponZoneResetDestroyCountRate;
	bool bAllowCurieIfCreativeOrPlayground;
	bool bEnableServerSendPlayerInteractions;
	float ServerSendPlayerInteractionsIntervalSeconds;
	bool bEnableServerSendPlayerInteractionsRankInCreativeMode;
	bool bEnableFrontendMeshRockyRidgeCheck;
	struct FString FrontendMeshRockyRidgeMetadataKey;
	struct FString FrontendMeshRockyRidgeCanaryKey;
	float FrontendMeshRockyRidgeInitialIntervalSeconds;
	float FrontendMeshRockyRidgeFailureMultiplier;
	float FrontendMeshRockyRidgeMaxIntervalSeconds;
	struct FName FrontendMeshRockyRidgeMeshName;
	bool bForceEverybodyToGoNightNight;
	bool bQueryKeychainBeforeGoingNightNight;
	bool bAllowSubgameSelectToGoNightNight;
	bool bAllowAthenaFrontendToGoNightNight;
	bool bAllowCampaignFrontendToGoNightNight;
	struct TSoftClassPtr<UObject> DefaultMissionGen;
	bool bGyroV2Enabled;
	bool bFlickStickEnabled;
	bool bEnableBacchusDialogSystem;
	bool bBacchusDialogSystemSkipConfirmationStep;
	bool bMobileDisableResolutionReset;
	bool bMotionAxisMobileDefaultToYaw;
	bool bShouldRestartCreativeServersForCalendarEventChanges;
	bool bCreativeEmoteControllerUseWhitelist;
	TArray<struct FString> CreativeEmoteControllerWhitelist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSafeZoneBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSafeZoneIndicator : public AActor
{
public:
	class UClass* MinimapComp;
	float LastRadius;
	float NextRadius;
	float NextNextRadius;
	struct Vector_NetQuantize100 LastCenter;
	struct Vector_NetQuantize100 NextCenter;
	struct Vector_NetQuantize100 NextNextCenter;
	bool bSafezoneEventDriven;
	bool bPaused;
	bool bPausedForPreview;
	bool bPausedForPreview_Previous;
	struct GameplayTag MegaStormGameplayCueTag;
	int NextNextMegaStormGridCellThickness;
	int NextMegaStormGridCellThickness;
	float MegaStormDelayTimeBeforeDestruction;
	int NumActiveMegaStormCircles;
	int ActiveMegaStormCircleGridCellCountFromEdge;
	float SafeZoneHeight;
	struct SlateBrush MiniMapIconBrush;
	struct SlateBrush FarOffMiniMapIconBrush;
	float SafeZoneStartShrinkTime;
	float SafeZoneFinishShrinkTime;
	float Radius;
	class UClass* SafeZoneMesh;
	class UClass* MovementAudioCrossfadeCurve;
	class UClass* MovementAudioPitchModCurve;
	class UClass* ClockTickingAudioVolumeCurve;
	class UClass* ClockTickingAudioPitchCurve;
	struct Vector2D SafeZoneAudioSpeedRange;
	float AudioDopplerInterpSpeed;
	class UClass* MaterialCollection;
	struct FName SafeZoneLocName;
	struct FName SafeZoneScaleName;
	float SafeZoneWorldScale;
	struct Vector ViewTargetLocation;
	struct Vector SafeZoneAudioLocation;
	bool bIsViewTargetPawnOutside;
	struct FName SuperStormActiveName;
	float MegaStormFXAlphaFactor;
	float MegaStormFXFadeInTime;
	float MegaStormFXFadeOutTime;
	bool bMegaStormGameplayCueStarted;
	bool bMegaStormStopPending;
	bool bCleanupFXWithAlphaFactor;
	float MegaStormOneOverFXFadeInTime;
	float MegaStormOneOverFXFadeOutTime;
	class UClass* ShieldBoundaryAudio;
	class UClass* HoldingAudio;
	class UClass* HoldingTickAudio;
	bool bMegastormAudioActive;
	float AudioLowPassValue;
	float AudioPitchMod;
	float AudioCrossfade;
	float MegastormAudioIntensity;
	float HoldingStartTime;
	float TimeRemainingWhenPhasePaused;
	byte ForceUpdateCount;
	class UClass* FutureReplicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSafeZoneIndicatorFuture : public AInfo
{
public:
	struct Vector_NetQuantize100 NextNextCenter;
	float NextNextRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSafeZoneInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSafeZoneStorm : public AActor
{
public:
	struct ComponentReference StormEffectsMeshRef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSanitizationService : public UObject
{
public:
	Unknown PendingRequests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortScalableFloatUtils : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSchematicItem : public UFortAlterableItem
{
public:
	bool Refundable;
	bool refund_legacy_item;
	TArray<struct FString> alteration_base_rarities;
	bool bGrantedByAbility;
	int RequiredTeamLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSchematicItemDefinition : public FortAlterableItemDefinition
{
public:
	struct DataTableRowHandle CraftingRecipe;
	struct TSoftClassPtr<UObject> CraftingSuccessSound;
	Unknown CachedResultWorldItemDefinition;
	struct DataTableCategoryHandle LootLevelData;
	struct FName CraftingTimeRowName;
	bool bUseSchematicDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSchematicTooltip : public UFortAccountItemTooltip
{
public:
	class UClass* Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortScoreStylingData : public UDataAsset
{
public:
	struct FortScoreStylingInfo ScoreStyles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortScriptedAction : public AActor
{
public:
	EFortScriptedActionEnvironment ActionEnvironment;
	struct FortClientEventName ClientEventTrigger;
	int ActionPriority;
	bool bAllowOtherActionsWhenActive;
	struct FortScriptedActionParams CachedParams;
	bool bIsActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortScriptedActionManager : public AActor
{
public:
	TArray<class UClass*> ActiveScriptedActions;
	TArray<struct FortAvailableScriptedAction> AvailableScriptedActions;
	TArray<struct FortAvailableScriptedAction> PendingAvailableScriptedActions;
	TArray<struct FortClientEventName> PendingClientEvents;
	bool bIsProcessingClientEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSearchPass : public UObject
{
public:
	class UClass* SessionHelper;
	struct FortSearchPassParams CurrentSearchParams;
	struct FortSearchPassState CurrentSearchPassState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSeasonalEventManager : public UObject
{
public:
	struct FScriptMulticastDelegate OnActiveEventFlagsChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSeasonPostCopyInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortServerBotManagerAthena : public UObject
{
public:
	TArray<struct FortServerBotInfo> DeadBots;
	TArray<struct FortServerBotInfo> PlayerBotsRestartLeft;
	class UClass* CachedGameMode;
	class UClass* CachedGameState;
	class UClass* CachedBotMutator;
	struct DebugMinimapData DebugMinimapData;
	bool bBotHostileToHumanPlayersOnly;
	struct ScalableFloat UseAllBattleBusPOIsSquadRatio;
	class UClass* TagQueryWeightChance;
	struct TSoftClassPtr<UObject> FindLocationsAroundPOIQuery;
	TArray<struct BattleBusPOI> BattleBusTagQueryPOIList;
	TArray<struct BattleBusPOI> SecondaryBattleBusTagQueryPOIList;
	TArray<struct NavigationPOI> OnGroundTagQueryPOIList;
	struct ConstructionBuildingInfo ConstructionBuildingInfo;
	struct ScalableFloat UseCustomSupportedItemList;
	class UClass* BotItemDataTable;
	struct ScalableFloat UseRegionalNameList;
	struct TSoftClassPtr<UObject> BotNameDataAsset;
	struct ScalableFloat ThankBusDriverProbability;
	struct ScalableFloat ThankBusDriverMinTime;
	struct ScalableFloat ThankBusDriverMaxTime;
	struct ScalableFloat MaxNumberOfBotsToSpawnAroundPlayer;
	float MaxAroundBotDistanceToSearchPOIToLand;
	struct GameplayTagContainer SupportedItemTags;
	TArray<struct CachedPOIVolumeLocations> CachedValidPOIVolumeLocations;
	TArray<class UClass*> CachedBuildingFoundations;
	class UClass* LastTeamPlayerStart;
	Unknown CacheSafeZoneLocationsMap;
	float DeadBotCleanupMinDelay;
	Unknown ReservedPlayerNames;
	TArray<int> LocationsInSafeZoneFreeIndices;
	class UClass* CurrentFillingTeam;
	struct ScalableFloat BotsUniqueIDUseValidAccountID;
	int CurrentBotControllerUID;
	TArray<class UClass*> BeaconList;
	class UClass* CachedAIPopulationTracker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortServerDebugActor : public AActor
{
public:
	uint64_t ServerMemSharedInKb;
	uint64_t ServerMemUniqueInKb;
	uint64_t ServerMemVirtualInKb;
	uint64_t ServerMemPhysicalInKb;
	int64_t SharedDeltaInLastMinute;
	int64_t SharedDeltaSinceProcessStart;
	int64_t SharedDeltaSinceDebugStart;
	int64_t UniqueDeltaInLastMinute;
	int64_t UniqueDeltaSinceProcessStart;
	int64_t UniqueDeltaSinceDebugStart;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortServerOnlyObject : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSessionHelper : public UObject
{
public:
	class UClass* BeaconClientClass;
	class UClass* PartyBeaconClient;
	struct FName CurrentSessionName;
	EPartyReservationResult LastBeaconResponse;
	EFortSessionHelperJoinState CurrentJoinState;
	EFortSessionHelperJoinResult CurrentJoinResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNonPrimaryMissionList : public UPrimaryDataAsset
{
public:
	TArray<struct FortNonPrimaryMission> NonPrimaryMissionList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSharedMissionLists : public UObject
{
public:
	TArray<struct FortNonPrimaryMission> CombinedNonPrimaryMissionList;
	TArray<struct FortNonPrimaryMission> NonPrimaryMissionList;
	TArray<struct TSoftClassPtr<UObject>> NonPrimaryMissionLists;
	TArray<struct FortMissionDistributionCategory> NonPrimaryMissionDistributionCategories;
	TArray<struct TSoftClassPtr<UObject>> WorldSetupMissionGenerationLists;
	struct GameplayTagQuery PrimaryMissionTagQuery;
	struct GameplayTagQuery TheaterTagQuery;
	struct GameplayTagQuery RegionTagQuery;
	TArray<struct FortGlobalMission> SharedMissionList;
	TArray<struct QuestDrivenMissionSubList> QuestDrivenMissionLists;
	TArray<struct FortQuestDrivenMission> AvailableQuestDrivenMissionList;
	TArray<class UClass*> PendingPIEPlayers;
	TArray<int> DisableSharedMissionListIndices;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSignificanceManager : public SignificanceManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSimpleMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct SlateBrush NormalBrush;
	struct SlateBrush AboveBelowBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSkeletalAudioAssetBank : public UDataAsset
{
public:
	TArray<struct SkeletalAudioBoneConfig> BoneConfigs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSkeletalAudioComponent : public UActorComponent
{
public:
	class UClass* AudioAssetBank;
	bool bShouldIgnoreDilation;
	float InterpSpeed;
	bool bShouldAttachOneShots;
	TArray<struct SkeletalAudioBoneInstance> BoneInstances;
	class UClass* SkeletalMesh;
	struct FScriptMulticastDelegate OnLoopSoundTriggered;
	struct FScriptMulticastDelegate OnLoopSoundModulated;
	struct FScriptMulticastDelegate OnMediumSoundTriggered;
	struct FScriptMulticastDelegate OnHeavySoundTriggered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSKFlyingVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float WheelRotationRange;
	float VehicleFrontLowLateralFrictionMultiplier;
	float VehicleRearLowLateralFrictionMultiplier;
	float VehicleFrontHighLateralFrictionMultiplier;
	float VehicleRearHighLateralFrictionMultiplier;
	float LowToHighFrictionDuration;
	float UphillIncline;
	float ReverseToForwardFrontFriction;
	float ReverseToForwardRearFriction;
	float ReverseToForwardMaxSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSkinWeightOverrideManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSKPushVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float PedalForceMultiplier;
	float PedalTopSpeedMultiplier;
	float PedalForceDuration;
	float CoastBrakingMinDelta;
	float CoastBrakingMaxDelta;
	float PedalMinDuration;
	float MountDuration;
	float DismountDuration;
	float MinPreDismountCooldown;
	float PreDismountCooldown;
	float PedalCooldown;
	float CoastBrakingStrength;
	float ShoppingMinPedalCoastSpeed;
	float VehicleDebugStrafeCoastMultiplier;
	float CanCoastCooldown;
	float MaxAutoDismountForwardSpeed;
	float PedalMinForwardVelocity;
	float UphillIncline;
	float FastDismountDuration;
	float CanCoastAfterFastDismountCooldown;
	float PassengerVehicleWeightShiftYawStrength;
	float MinPushForceMagnitude;
	float MinGearRampTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSkyDiveContrailPreviewActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSkydivingShadowProxy : public AActor
{
public:
	float SkydivingHeightThreshold;
	float SkydivingHeightCheckInterval;
	bool bDestroyOnHide;
	class UClass* ViewingPlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSkyTube : public AActor
{
public:
	bool bExemptFromShutdown;
	class UClass* Spline;
	struct ScalableFloat ExitAcceleration;
	struct ScalableFloat ExitGravity;
	struct ScalableFloat TangentialAcceleration;
	struct ScalableFloat TangentialMaxSpeed;
	struct ScalableFloat MaxEntrySpeed;
	struct ScalableFloat MaxPerpendicularEntrySpeed;
	struct ScalableFloat EntryBiasTowardTangent;
	struct ScalableFloat EntryVelocityAngleRequired;
	struct ScalableFloat ActiveForwardSteeringAngle;
	struct ScalableFloat bOneWay;
	struct ScalableFloat InnerMagnetRadius;
	struct ScalableFloat OuterMagnetAccel;
	struct ScalableFloat InnerMagnetDecel;
	struct ScalableFloat OuterMagnetSpeedThreshold;
	struct ScalableFloat InnerMagnetSpeedThreshold;
	struct ScalableFloat ProjectileTangentialMinSpeed;
	struct ScalableFloat ProjectileTangentialMaxSpeed;
	struct ScalableFloat SpiralAccelerationProjectiles;
	struct ScalableFloat ProjectileForceMultiplier;
	struct ScalableFloat ProjectileEntryMultiplier;
	struct ScalableFloat SpiralAccelerationPhysics;
	struct ScalableFloat PhysicsForceMultiplier;
	struct ScalableFloat PhysicsEntryMultiplier;
	struct ScalableFloat MagnetMaxReductionFromSteering;
	struct ScalableFloat MagnetMaxMultiplierWhenSteering;
	struct ScalableFloat SteeringMagnetMaxSteerAngle;
	struct ScalableFloat MagnetLowVelocityThreshold;
	struct ScalableFloat MagnetLowVelocityMinValue;
	struct ScalableFloat SteeringReduceAccelerationPower;
	struct ScalableFloat SteeringReduceDecelerationPower;
	bool bEnabled;
	bool bShuttingDown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSkyTubeAnchor : public ABuildingProp
{
public:
	bool bEnabled;
	bool bExemptFromShutdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSkyTubeAnchorVertical : public AFortSkyTubeAnchor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSkyTubePhysicsComponent : public UActorComponent
{
public:
	float MaxTubeSpeed;
	float MaxTubeAcceleration;
	bool bMagnetizeWhenNotInSkytube;
	struct FScriptMulticastDelegate OnEnteredSkyTube;
	struct FScriptMulticastDelegate OnChangedSkyTube;
	struct FScriptMulticastDelegate OnExitedSkyTube;
	class UClass* SkyTube;
	class UClass* PrevSkyTube;
	bool bMagnetized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialDebugTools : public SocialDebugTools
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialToolkit : public SocialToolkit
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialUser : public SocialUser
{
public:
	class UClass* AvatarImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSoundCameraLensEffect : public AFortEmitterCameraLensEffectDirectional
{
public:
	EFortSoundIndicatorTypes IndicatorType;
	int SnapToSections;
	float MaxAudibleDistanceOnSpawn;
	class UClass* InstigatingActor;
	class UClass* IconOverride;
	struct LinearColor TintOverride;
	Unknown EmitterDataMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSoundNodeLicensedContentSwitcher : public USoundNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSpaghettiTowhookAttachableProjectile : public AFortAttachableProjectileBase
{
public:
	struct FName RopeAttachSocketName;
	struct FName CollisionProfileNameOverride;
	class UClass* OwningVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSpaghettiVehicle : public AFortAthenaSKVehicle
{
public:
	class UClass* CacheDriverCameraShake;
	float BounceContactRepulsionForce;
	float BoostForce;
	float MaxVerticalBoostForce;
	float BoostSpeedKmh;
	struct SphericalDriveParams BaseSphericalDriveParams;
	struct TowhookParams BaseTowhookParams;
	float TowhookSpringDeformationRateOnGround;
	bool bAutoRetractGrapple;
	bool bCanHoldGrapple;
	float TowhookInterpSpeed;
	float TowhookInterpMaxPercentPerSecond;
	float TowhookMaxInvalidateTargetAngleDeg;
	float TowhookMaxInvalidateTargetDot;
	struct FName InternalBlockerCollisionName;
	struct FortRechargingActionTimer BoostBounceAction;
	class UClass* FortSpaghettiVehicleConfigsClass;
	ECollisionChannel ProjectileTraceChannel;
	float ProjectileSpeedKmh;
	struct FScriptMulticastDelegate OnTowhookShot;
	struct FScriptMulticastDelegate OnTowhookAttached;
	struct FScriptMulticastDelegate OnTowhookDetached;
	struct FScriptMulticastDelegate OnTowhookMissed;
	struct FScriptMulticastDelegate OnTowhookHolstered;
	struct FScriptMulticastDelegate OnTowhookYanked;
	struct FScriptMulticastDelegate OnExtendToggled;
	struct NetTowhookAttachState ReplicatedAttachState;
	class UClass* FortSpaghettiVehicleConfigs;
	struct Vector_NetQuantizeNormal NetTowhookAimDir;
	class UClass* CacheCoilIdleTopR;
	class UClass* CacheCoilIdleTopL;
	class UClass* CacheCoilIdleBottomR;
	class UClass* CacheCoilIdleBottomL;
	class UClass* CacheBoostFX;
	class UClass* CacheDustFX;
	class UClass* CacheAudioMovement;
	class UClass* CacheAudioWind;
	class UClass* CacheAudioTowCable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpaghettiVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* SpaghettiVehicle;
	struct Rotator ShellRotation;
	struct Rotator SeatRotation;
	struct Vector SeatRotationVelocity;
	struct Vector SeatRotationTorque;
	float SeatSteerYawDelta;
	float SeatSteerPitchDelta;
	float SeatSteerRollDelta;
	float FwdBwd;
	float LeftRight;
	struct Rotator TowhookRotation;
	struct Vector TargetHeading;
	struct Vector AimPoint;
	EFortCardinalDirection PivotDir;
	bool bIsBoosting;
	bool bIsTowhookExtending;
	bool bIsTowhookAttached;
	bool bIsTowhookContracting;
	bool bIsTowhookHolstered;
	bool bIsLowerVelocity;
	bool bIsDriverFemale;
	bool bShouldPlayPivotTransition;
	bool bShouldPlayGrappleFire;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpaghettiVehicleConfigs : public UFortOctopusVehicleConfigs
{
public:
	float UnusedProp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpatialGameplayInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpawnableByPlacementSystemInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpawnActorComponent : public GameFrameworkComponent
{
public:
	class UClass* ActorToSpawnClass;
	bool bAttachSpawnedActorToOwner;
	struct FName SocketName;
	struct FName ComponentTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpawnActorInfo : public UPrimaryDataAsset
{
public:
	struct FName SpawnActorID;
	class UClass* SpawnActorClass;
	struct CollisionProfileName CollisionProfile;
	EFortSpawnActorTime SpawnTiming;
	struct ScalableFloat SafeZoneIndex;
	struct ScalableFloat SpawnAtSafeZoneIndex;
	struct ScalableFloat DelayBetweenSpawns;
	struct ScalableFloat MinActorsToSpawn;
	struct ScalableFloat MaxActorsToSpawn;
	struct ScalableFloat MinSpawnHeight;
	struct ScalableFloat MaxSpawnHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpawnContextObjectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSpawnedScoreActor : public AFortLevelSpawnActor
{
public:
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpawnPointsPercentageCurveSequence : public UDataAsset
{
public:
	TArray<struct DataTableRowHandle> SpawnPointsPercentageCurves;
	EFortIntensityCurveSequenceType SequenceType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSpecialActorReplicationInfo : public AInfo
{
public:
	struct SpecialActorRepDataArray SpecialActorRepList;
	TArray<struct SpecialActorStatData> SpecialActorStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpecialGameplayAreaComponent : public UActorComponent
{
public:
	TArray<class UClass*> OverrideBodyParts;
	struct GameplayTagContainer SkinMetaTagsToSkip;
	TArray<struct SpecialGameplayAreaOverrideBodyPartsExtraSpecial> OverrideBodyPartsExtraSpecial;
	TArray<class UClass*> OverrideGliders;
	TArray<struct SpecialGameplayAreaLootData> OverrideLootData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectateAFriendController : public FortLiveSpectatorController
{
public:
	class UClass* PlayerJoinedOn;
	bool HasValidTarget;
	byte TeamToFollow;
	bool FollowAnyTeam;
	int TeamJoinedOnPlacement;
	class UClass* TeamJoinedOn;
	struct Vector DefaultCameraLocation;
	bool FollowAnyTeamAfterFirst;
	float StartingDiconnectTimerLength;
	float InvalidTargetDiconnectTimerLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpectateBlend : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLinearBlend : public UFortSpectateBlend
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOrbitBlend : public UFortSpectateBlend
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpectateClickableMapIcon : public UActorComponent
{
public:
	struct SlateBrush SpectatorMapIndicatorBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpectateGameplayBlend : public UFortSpectateBlend
{
public:
	class UClass* CameraManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorBeaconClient : public SpectatorBeaconClient
{
public:
	float ReconnectionInitialTimeout;
	float ReconnectionTimeout;
	bool bHasReconnected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorBeaconHost : public SpectatorBeaconHost
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorBeaconState : public SpectatorBeaconState
{
public:
	struct UniqueNetIdRepl GameSessionOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorCamComp_ThirdPerson : public FortSpectatorCameraComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSpectatorThirdPersonPawn : public AFortReplaySpectatorPawnBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSphereEdgeAudioComponent : public UFortAudioShapePrimitiveComponent
{
public:
	float Radius;
	struct FScriptMulticastDelegate OnInsideSphereStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSphericalVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	bool bKeepPassengersUpright;
	float MaxWaterDepth;
	bool bAdjustSpeedOnWaterEntry;
	float MaxVerticalWaterEntrySpeedUp;
	float MaxVerticalWaterEntrySpeedDown;
	float MaxHorizontalWaterEntrySpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSplatterSourceComponent : public UActorComponent
{
public:
	TArray<Unknown> PreviousSources;
	Unknown FortSplineGroundPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpline : public UObject
{
public:
	bool bConstantVelocity;
	struct FortCatmullRomSpline Spline;
	struct InterpCurveFloat SplineLookupTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSplineAudioActor : public AActor
{
public:
	float UpdateFrequencyInaudible;
	float UpdateFrequencyAudible;
	float MaxAudibleRange;
	int NumSamplePoints;
	TArray<struct Vector> SamplePoints;
	class UClass* ClosestPointSound;
	class UClass* NextClosestPointSound;
	class UClass* MidPointSound;
	class UClass* AudioSpline;
	class UClass* AudioAtClosestPoint;
	class UClass* AudioAtNextClosestPoint;
	class UClass* AudioAtMidPoint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSplineAudioComponent : public UFortAudioShapeComponent
{
public:
	class UClass* ClosestPointSound;
	struct FScriptMulticastDelegate OnAudioUpdateInAudibleRange;
	class UClass* Spline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSplineGroundPath : public ABuildingGameplayActor
{
public:
	float MaxDistanceBetweenPathwayPoints;
	float EvenlySpacedPointsDistance;
	float TangentDistance;
	float PathUpdateSecondIntervals;
	float PathTestRadius;
	float MinDistanceForAddingRawPoint;
	bool bDrawDebugRawPoints;
	bool bDrawDebugRawEnd;
	bool bDrawDebugReppedPoints;
	bool bDrawDebugEvenlySizedSegments;
	bool bDrawDebugTangents;
	bool bDrawDebugCollision;
	bool bDrawDebugSplineEnd;
	float CleanupTime;
	struct Vector PathwayPointOffset;
	float LerpScaleRate;
	float GrowthSmoothingStrength;
	struct Vector MostRecentlyAddedLocation;
	float MostRecentlyAddedTime;
	struct FortReppedPointList FortReppedPointList;
	TArray<struct Vector> RawPoints;
	int ServerIndexToAssign;
	TArray<struct FortEvenlySizedSegment> EvenlySizedSegments;
	struct Vector2D FrontEndCurrentScale;
	struct Vector2D FrontEndDestScale;
	TArray<struct ReppedLastServerIndexToIndex> ReppedLastServerIndexToReppedPointIndices;
	TArray<struct RawPointToLastServerIndexPlusAlpha> RawPointsToLastServerIndicesPlusAlpha;
	class UClass* StaticMesh;
	class UClass* Material;
	struct Vector2D StaticMeshScaleStart;
	struct Vector2D StaticMeshScaleTarget;
	ESplineMeshAxis ForwardAxis;
	float LerpLocationRate;
	bool bMostRecentLocationHasBeenSet;
	bool bHasWarnedOfArrayOverfill;
	bool bHasWarnedOfUnableToRepDestroy;
	int FirstActiveEvenlySizedSegmentIndex;
	int MaxReppedPointsBeforeOverfill;
	struct Vector LerpedMostRecentLocation;
	float DistanceRemainingToNextEvenlySpacedPoint;
	struct FName PositionFinalizedParameterName;
	struct FName GrowthParameterName;
	struct FName ShrinkParameterName;
	struct FName OpacityParameterName;
	float TotalFadeInTime;
	float TotalFadeOutTime;
	float SectionsLifeTime;
	float ShrinkTimeMultWhenFading;
	float ShrinkTimeMultWhenBurning;
	float GrowthTimeMult;
	float LocationLerpTimeMult;
	float CurrentFadeInTime;
	float CurrentFadeOutTime;
	int TotalSplineMeshesToFadeIn;
	int LowestUninitializedRawLastServerIndex;
	int LowestUninitializedReppedIndex;
	int NumIgnitedSections;
	bool bSomeSectionsAreFadingOut;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSplineWaterAudioComponent : public UFortSplineAudioComponent
{
public:
	class UClass* InsideSplineSound;
	class UClass* SplineEndSound;
	ESplineWaterAudioFacingDirection SplineFacingDirection;
	bool bIsExclusionSpline;
	struct Vector2D WaterVelocityRange;
	float ShorelineOffset;
	float TerrainZOffset;
	float MaxVerticalDistanceToCheckInside;
	class UClass* WaterBodyOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpottableActorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpottedActorIndicator : public UFortSlateHUDIndicator
{
public:
	class UClass* OwnerPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSprayDecalInstance : public ABuildingSMActor
{
public:
	struct FortSprayDecalRepPayload SprayInfo;
	bool bDestroyOnNearbyDestruction;
	bool bDestroyOnNearbyDamageTaken;
	bool bDestroyOnNearbyBounce;
	TArray<class UClass*> SprayMIDsThatCanBounce;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSprayManager : public UWorldSubsystem
{
public:
	TArray<class UClass*> RegisteredSprays;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSprayPreviewActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpyTechItemDefinition : public FortAccountItemDefinition
{
public:
	struct TSoftClassPtr<UObject> AbilitySetSoftRef;
	struct TSoftClassPtr<UObject> PerkGameplayEffectSoftRef;
	struct GameplayTagContainer ItemTags;
	struct GameplayTag ItemTag;
	struct GameplayTagContainer ExclusionTags;
	struct GameplayTagContainer FilterTags;
	struct ScalableFloat IsEnabledAsFloat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStatEventManager : public UObject
{
public:
	class UClass* FPC;
	TArray<struct FortStatEvent> StatEvents;
	TArray<struct FortStatEventSequence> StatEventSequences;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStaticMeshLinkComponent : public NavRelevantComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStaticMeshUserData : public UAssetUserData
{
public:
	TArray<struct TransformableNavLinkClass> NavLinks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAlwaysRelevantReplicatedActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStatItem : public UFortAccountItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStatItemDefinition : public FortAccountItemDefinition
{
public:
	EFortStatType Stat;
	struct GameplayAttribute StatAttribute;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStatManagerTagHelperLib : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortStormRotator : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortStormShieldCameraActor : public AFortCameraBase
{
public:
	float CameraTurnSpeed;
	struct Rotator CameraRotationOffset;
	float CameraOffsetForward;
	float CameraOffsetZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStormShieldComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate OnStormShieldStatusChanged;
	bool bCareAboutEdgeOfStorm;
	bool bDisabled;
	float DistanceFromEdgeOfStormShield;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStreamMediaSource : public StreamMediaSource
{
public:
	struct FString VideoStreamSource;
	float VideoStreamSourceAB;
	Unknown VideoId;
	bool bIsLive;
	bool bBlurlLive;
	int MaxResolution;
	int MaxBandwidth;
	float AspectRatio;
	bool bShareLock;
	bool bAudioOnly;
	bool bPartySync;
	float MediaDuration;
	TArray<float> CDNDistribution;
	struct FString mimetype;
	bool bAutoClearCDNDistribution;
	struct FScriptMulticastDelegate OnVideoUrlSuccess;
	struct FScriptMulticastDelegate OnVideoUrlFailed;
	struct FScriptMulticastDelegate OnMetaDataFailure;
	class UClass* FortDownloadLocalizedOverlays;
	struct FString ProtectUserFromAVSettings;
	struct FString StreamID;
	struct FString StreamID_Development;
	class UClass* LocalFilePlaybackAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSuperTowerGrenadeProjectile : public AFortProjectileBase
{
public:
	TArray<class UClass*> BuildingActorsToDestroy;
	TArray<class UClass*> BuildingActorsToIgnore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSupplyDropInfo : public UDataAsset
{
public:
	struct FName SupplyDropID;
	class UClass* SupplyDropClass;
	ESupplyDropSpawnType SpawnType;
	bool bIgnoreBlueprintOverrides;
	struct GameplayTag SpecialActorTag;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	bool bShouldDrawCompassIcon;
	TArray<struct FortSupplyDropGamePhaseData> GamePhaseData;
	ESupplyDropItemTrackType ItemTrackType;
	EAthenaGamePhase GamePhaseToSpawn;
	int SafeZoneIndexToSpawn;
	struct GameplayTagContainer SupplyDropTrackingTags;
	bool bShouldMaintainItemCount;
	struct ScalableFloat NumDeliveryItemsToSpawn;
	struct ScalableFloat MinInitialDeliveryDelayTime;
	struct ScalableFloat MaxInitialDeliveryDelayTime;
	struct ScalableFloat MinTimeBetweenDrops;
	struct ScalableFloat MaxTimeBetweenDrops;
	struct ScalableFloat MinRespawnTime;
	struct ScalableFloat MaxRespawnTime;
	struct ScalableFloat MinTraceHeight;
	struct ScalableFloat MaxTraceHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSurfaceTypeToSurfaceTypeTagMapping : public UDataAsset
{
public:
	TArray<struct FortSurfaceTypeToSurfaceTypeTag> TypeToTagMapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSurvivorData : public UDataAsset
{
public:
	class UClass* SurvivorFemaleFirstNameData;
	class UClass* SurvivorMaleFirstNameData;
	class UClass* SurvivorFemaleLastNameData;
	class UClass* SurvivorMaleLastNameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSwimmingAudioBank : public UDataAsset
{
public:
	class UClass* SwimmingAssets1P;
	class UClass* SwimmingAssets3P;
	float TeammateVolumeMultiplier;
	float MaxSwimmingDistance;
	float RequiredImmersionDepth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSwimmingLayerAnimInstance : public UFortBaseLayerAnimInstance
{
public:
	struct CachedAnimRelevancyData SwimStartRelevancyData;
	struct CachedAnimRelevancyData SwimStartAdditiveRelevancyData;
	struct FortAnimInput_PlayerAnimAsset CurrentAnimSet;
	struct Vector SwimmingRelativeVelocityToWater;
	struct Vector SwimmingWaterSurfaceNormal;
	struct Rotator SwimmingWaterSurfaceWorldRotation;
	struct Rotator SwimmingMeleeTwistRotator;
	struct Rotator SwimmingYawDeltaRotator;
	struct Vector IdlePelvisOffset;
	float SavedWeaponAbilityLastFireTime;
	float SwimmingYawDeltaRatePerSecond;
	float SwimmingSpeedRelativeToFlow;
	float SwimmingYawDeltaRatePerSecondSmooth;
	float SwimmingYawDeltaRatePerSecondSmoothClamped;
	float SwimmingSprintYawDeltaRatePerSecondSmooth;
	float SwimmingDivePitch;
	float SwimmingDivePitchDeltaRatePerSec;
	float SwimmingVelocityAngle;
	float SwimmingLocalAccelerationYawAngleSmooth;
	float SwimmingNonZeroLocalAccelYawAngle;
	float SwimmingWaterSurfacePitch;
	float SwimmingWaterSurfacePitchDelta;
	float SwimmingWaterSurfacePitchDeltaRatePerSecond;
	float SwimmingWaterSurfacePitchDeltaRatePerSecondSmooth;
	float SwimmingResetStoppedDivingWhileUnderWaterTime;
	float SwimmingNonTargetingBlendspaceDir;
	float AbsYawDeltaSmoothed;
	float LocalAccelYawAngle;
	float DefaultSwimmingLayerAlpha;
	float MovementAdditiveAndSprintSwimmingLayerAlpha;
	float IdlePelvisOffsetAlpha;
	float MeleeTwistCurveValue;
	float DBNOTurnPlayRateAbs;
	EFortCustomGender Gender;
	bool bIsFemale;
	bool bIsDBNO;
	bool bIsWaterJump;
	bool bRecentlyFired;
	bool bIsSprinting;
	bool bIsAccelerating2D;
	bool bIsMoving2D;
	bool bIsOnGround;
	bool bIsCrouching;
	bool bIsTargeting;
	bool bIsSurfaceSwimming;
	bool bIsDiveJumping;
	bool bSwimmingAllowSlowSprint;
	bool bSwimmingIsWaterLanding;
	bool bSwimmingSharpAccelerationChange;
	bool bStoppedDivingWhileUnderWater;
	bool bSwimmingPlayDBNOTurnEast;
	bool bSwimmingSprintSlowEnoughTimePassed;
	bool bSwimmingIsJumpOrLanding;
	bool bEnteredWaterDiving;
	bool bSwimmingIsSurfaceSwimmingOrPaddlingToSurface;
	bool bTransition_Swimming_FullBody_Sprinting;
	bool bTransition_FullBody_SwimSprinting;
	bool bTransition_Swimming_LowerBody_Movement;
	bool bTransition_SwimSprintSlow_to_SwimSprintStart;
	bool bTransition_SwimSprintSlow_to_SwimSprint;
	bool bTransition_SwimSprint_to_SwimSprintSlow;
	bool bTransition_Idles_to_SwimStart;
	bool bTransition_SwimStart_to_SwimMovementAccel;
	bool bTransition_SwimStartAdditive_to_SwimMovementAccelAdditive;
	bool bTransition_SwimDiveLandOnGround_to_SplitBody;
	bool bTransition_Sprinting_to_Conduit;
	bool bTransition_InterruptSprintSwimming;
	bool bTransition_DBNOSwimIdle_to_DBNOSwimTurn;
	bool bTransition_IdleAdditive_to_SwimStartAdditive;
	bool bTransition_LowerBody_Movement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSyncedAnimMetaData : public UAnimMetaData
{
public:
	class UClass* SyncedMontage;
	class UClass* SyncedMontageFemaleOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTagUIDataLookupTable : public UDataAsset
{
public:
	TArray<struct FortTagUIData> TagUIDataList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedActorsManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_Base : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_Weapon : public UFortTaggedAssetTest_Base
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_HoldAndRelease : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_SingleShot : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_FullAuto : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_Throw : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_ThrowAndDetonate : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_AlternateFire : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedAssetTest_AimAndShoot : public UFortTaggedAssetTest_Weapon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTaggedPropertiesComponent : public GameFrameworkComponent
{
public:
	Unknown TagQueries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedSoundBank : public UDataAsset
{
public:
	Unknown FlattenedResponseMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTaggedTestManager : public UObject
{
public:
	bool bIsFinished;
	bool bInitialized;
	bool bTerminateEarly;
	bool bPendingReset;
	TArray<struct AssetData> AssetsToTest;
	TArray<class UClass*> TestsToRun;
	int TestIterator;
	TArray<EFortItemType> AssetTypesToTest;
	class UClass* TargetTestBaseClass;
	TArray<struct FString> CommandlineAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTakerRift : public ABuildingRift
{
public:
	struct TSoftClassPtr<UObject> TakerRiftParticle;
	class UClass* TakerRiftParticleComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTandemCharacterData : public UPrimaryDataAsset
{
public:
	struct GameplayTag GameplayTag;
	struct GameplayTagContainer POILocations;
	TArray<struct FText> POITextOverrides;
	struct FText DisplayName;
	struct FText GeneralDescription;
	struct FText AdditionalDescription;
	struct FText BehaviorDescription;
	struct TSoftClassPtr<UObject> ToastIcon;
	struct TSoftClassPtr<UObject> EntryListIcon;
	struct TSoftClassPtr<UObject> SidePanelIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTargetSelectionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamActorInterface : public GenericTeamAgentInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTeamHealthInfo : public AInfo
{
public:
	class UClass* OwnerHealthComponent;
	class UClass* FortTeamInfo;
	struct PrivateTeamDataArray RepData;
	byte TeamNum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTeamIdentification : public UObject
{
public:
	struct Color HUDColor;
	class UClass* CharacterAccessoryColorSwatch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMinigameTeamIdentification : public UObject
{
public:
	struct TSoftClassPtr<UObject> Name;
	struct TSoftClassPtr<UObject> Logo;
	struct TSoftClassPtr<UObject> Avatar;
	struct Color FirstColor;
	struct Color SecondColor;
	struct Color StartGradient;
	struct Color EndGradient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTeamInfo : public AInfo
{
public:
	TArray<class UClass*> TeamMembers;
	byte Team;
	struct FString ChatRoomId;
	struct TeamSpottedActorInfoArray TeamSpottedActors;
	class UClass* PrivateInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTeamInfoAthena : public AFortTeamInfo
{
public:
	struct FortBotTeamInfoAthena BotInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTeamMember : public UObject
{
public:
	class UClass* SocialUser;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTeamMemberCampaign : public UFortTeamMember
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTeamMemberAthena : public UFortTeamMember
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTeamPerkItem : public UFortProfileItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamPerkItemDefinition : public FortProfileItemDefinition
{
public:
	struct TSoftClassPtr<UObject> GrantedAbilityKit;
	bool bProgressiveBonus;
	struct GameplayTagQuery RequiredCommanderTagQuery;
	struct FText CommanderRequirementsText;
	TArray<struct FortTeamPerkLoadoutCondition> TeamPerkLoadoutConditions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTeamPrivateInfo : public AInfo
{
public:
	class UClass* TeamInfo;
	struct PrivateTeamDataArray RepData;
	struct LatentRepTeamDataArray LatentTeamRepData;
	uint16_t AverageDamageDealt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTeleportationFxLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerBase : public GauntletTestController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerAthenaIslandInspector : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerAthenaNoMcpTest : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerAutoTest : public FortTestControllerBase
{
public:
	EFortAutoTestState CurrentState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerBootTest : public GauntletTestControllerBootTest
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerCosmeticAudit : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerCosmeticEmotes : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerCosmeticMemory : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerCosmeticScreenshot : public FortTestControllerBase
{
public:
	Unknown LoadedCosmetics;
	TArray<class UClass*> SpawnedActors;
	TArray<class UClass*> WrappableActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerForceOOM : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerMemoryReport : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerPlayReplay : public GauntletTestController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerPerfReplayTest : public FortTestControllerPlayReplay
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerProfileGo : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerPSOGen : public GauntletTestController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerReplaySmoke : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerSkydivePaths : public FortTestControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerStreamingTest : public FortTestControllerBase
{
public:
	TArray<struct StreamingTestSkydivePath> SkydivePathArray;
	float PostSkydiveMinWait;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerSyncedReplay : public FortTestControllerPlayReplay
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerTagTestBase : public GauntletTestController
{
public:
	class UClass* TestManager;
	TArray<EFortItemType> AssetTypesToTest;
	class UClass* TargetTestBaseClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTestControllerTagTestWeapon : public FortTestControllerTagTestBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTextHotfixConfig : public UDeveloperSettings
{
public:
	TArray<struct PolyglotTextData> TextReplacements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTheaterCamera : public AFortCameraBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTheaterInfo : public UDataAsset
{
public:
	struct FString UniqueId;
	int SaveVersion;
	struct FortTheaterMapData TheaterData;
	struct FortTheaterMapMissionData Missions;
	struct FortTheaterMapMissionAlertData MissionAlerts;
	bool bForceIncludeInCookIfReferenced;
	class UClass* SelectedZoneTheme;
	class UClass* SelectedZoneRegion;
	EFortTheaterMapTileType SelectedTileType;
	struct GameplayTagContainer SelectedTileTags;
	struct FortRequirementsInfo SelectedTileRequirements;
	TArray<struct FortLinkedQuest> SelectedLinkedQuests;
	TArray<struct FortTheaterMissionWeight> SelectedMissionWeightOverrides;
	TArray<struct FortTheaterDifficultyWeight> SelectedDifficultyWeightOverrides;
	bool bCanSelectedTileHaveMissionAlert;
	bool bShouldSelectedTileDisallowQuickplay;
	TArray<struct FortEditorTheaterMapRegionColor> RegionColors;
	TArray<struct FortTheaterTileEditorData> EditorTiles;
	int TheaterWidth;
	int TheaterHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTheaterList : public UPrimaryDataAsset
{
public:
	TArray<struct TSoftClassPtr<UObject>> ActiveTheatersList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTheaterMapTile : public AFortClientOnlyActor
{
public:
	bool bFocused;
	bool bHostSelected;
	bool bGoToPromptEnabled;
	struct FortHexMapCoord MapCoord;
	bool bHasFinishedLoading;
	EFortTheaterMapTileType TileType;
	class UClass* ZoneThemeClass;
	int TileIndex;
	int RegionIndex;
	struct Vector SelectionOffset;
	struct Vector FocusOffset;
	float SelectionInterpSpeed;
	float NormalBrightness;
	float LockedBrightness;
	float FocusedBrightness;
	float SelectedBrightnessRange;
	float SelectedPulseSpeed;
	bool bEnableBrightnessCode;
	bool bDisallowQuickplay;
	float StaticMeshMaterialID;
	struct Vector InitialLocation;
	struct FortAvailableMissionData MissionData;
	struct FortAvailableMissionData LastValidMissionData;
	struct DataTableRowHandle ZoneDifficultyInfo;
	struct FortAvailableMissionAlertData MissionAlertData;
	class UClass* StaticMeshComponent;
	TArray<class UClass*> AdjacencyMIDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTheaterMapViewer : public AActor
{
public:
	TArray<struct FortAvailableTheaterMissions> MissionAvailabilityList;
	TArray<struct FortAvailableMissionAlerts> MissionAlertAvailabilityList;
	struct Box HexMapSize;
	float HexTileWidth;
	float HexTileHeight;
	TArray<class UClass*> HexMap;
	struct FString CurrentTheaterId;
	TArray<bool> LeaderTileAccessStates;
	class UClass* CurrentSelectedTile;
	class UClass* CurrentFocusedTile;
	TArray<struct FortTheaterMapData> TheaterList;
	int NumValidHexMapTiles;
	int CurrentTileIndex;
	bool bDisplayTheaterComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortThreatParticleActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortThreatVisualsManager : public AActor
{
public:
	class UClass* CloudBlueprint;
	float CloudRadius;
	float ThreatBoxVolumeTopPadding;
	float ThreatBoxVolumeBottomPadding;
	bool bUseLocalPlayersOnlyForCloudMinimumHeight;
	bool bHideClouds;
	float CloudMinimumHeightAbovePlayers;
	float CloudMinimumHeightAboveGround;
	float CloudMinimumAltitude;
	float CloudMaxVerticalDelta;
	float CloudMinSpeed;
	float CloudMaxSpeed;
	float StormWindCloudRadius;
	float StormWindGoalRadius;
	float StormWindFalloffRadius;
	float StormWindInactiveMagnitude;
	float StormWindActiveMagnitude;
	float StormWindDesiredDeltaBlendTime;
	float StormWindDirectionAdditionalAngle;
	struct ThreatLocationArray ThreatLocations;
	struct StormWindArray StormWindArray;
	TArray<struct Vector> GoalActorLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTieredCollectionLayout : public UDataAsset
{
public:
	bool bUseTierAsRandomSeed;
	bool bFiniteTiers;
	int MaxNumberOfTiersAllowed;
	int InitialTierUnlocked;
	struct TieredNamedCollectionProgressionData SpawnWaveProgressions;
	struct DifficultyCollectionProgressionData DifficultyProgressions;
	struct TieredNamedCollectionProgressionData ModifierProgressions;
	struct RewardBadgesCollectionProgressionData RewardBadgesProgression;
	struct CollectionLootSetData LootSetProgression;
	struct FText CollectionLayoutDisplayName;
	struct TSoftClassPtr<UObject> PrerequisiteLayout;
	struct CurveTableRowHandle TierToMissionPointLookupTable;
	struct Guid LayoutGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTimeOfDayCollection : public UDataAsset
{
public:
	TArray<struct TSoftClassPtr<UObject>> TimeOfDayManagers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTimeOfDayData : public UPrimaryDataAsset
{
public:
	TArray<struct WorldAmbientPropertiesMatchingGameContext> WorldAmbientPropertiesList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTimeOfDayManager : public AInfo
{
public:
	float TimeOfDay;
	float TimeOfDayReplicated;
	EFortDayPhase CurrentDayNightPhase;
	EFortDayPhase TransitionFromPhase;
	EFortDayPhase TransitionToPhase;
	float TransitionBlendPercent;
	float DefaultTimeOfDaySpeed;
	float StartTimeOfDayInGame;
	float TimeOfDaySpeed;
	float MaxTimeOfDayAccumulationFactor;
	float TimeOfDayAccumulator;
	class UClass* BasePostProcessMaterial;
	class UClass* PostProcessMaterialMID;
	uint32_t bHasClonedPPVs;
	bool bSkipNight;
	bool bUsePerDayPhaseSkylightCubemaps;
	bool bTimeStarted;
	bool bHeightFogEnabled;
	bool bBaseHeightFogOnAltitude;
	float HeightFogZOffset;
	TArray<struct CameraAltitudeAdjustments> AltitudeAdjustments;
	TArray<struct CameraAltitudeAdjustments> AltitudeAdjustmentsForSecondFog;
	struct Rotator SunriseDirectionalLightRotation;
	struct Rotator SunsetDirectionalLightRotation;
	struct Quat DirectionalLightQuat;
	struct Rotator SunriseSunObjectRotation;
	struct Rotator SunsetSunObjectRotation;
	float SunObjectDivergencePower;
	bool bUseSkyAtmosphereRotationAndDivergence;
	struct Rotator SunriseSkyAtmosphereRotation;
	struct Rotator SunsetSkyAtmosphereRotation;
	float SkyAtmosphereRotationDivergencePower;
	float DistanceToSunOrMoon;
	bool bStartInvisible;
	class UClass* DirectionalLightComponent;
	class UClass* ActiveHeightFogComponent;
	class UClass* DayPhaseChangeEventParams;
	struct DayPhaseInfo LightAndFogPhaseSettings;
	class UClass* LightAndFogPhaseSettingOverrides;
	bool bBlendingInLightAndFogOverrides;
	bool bBlendingOutLightAndFogOverrides;
	EFortDayPhase BlendingOutLightAndFogOverridesDayPhase;
	float LightAndFogOverridesFadeTime;
	float CurrentLightAndFogBlendValue;
	struct TimeOfDayDirectOverrides DirectOverrides;
	class UClass* MorningPostProcessComponent;
	class UClass* DayPostProcessComponent;
	class UClass* EveningPostProcessComponent;
	class UClass* NightPostProcessComponent;
	class UClass* DayPhasePostProcessComponent;
	class UClass* OverridePostProcessComponent;
	struct ExponentialHeightFogValues CurrentTimeOfDayFogValues;
	struct LinearColor CurrentTimeOfDayDirectionalLightColor;
	class UClass* MaterialParameterCollection;
	class UClass* MaterialParameterCollectionInstance;
	struct Vector RainParticleSystemRelativeOffset;
	class UClass* SunMesh;
	class UClass* MoonMesh;
	TArray<class UClass*> SunMaterialOverrides;
	TArray<class UClass*> MoonMaterialOverrides;
	float SunScale;
	float MoonScale;
	class UClass* SkyDomeMaterial;
	class UClass* StarMapMaterial;
	class UClass* CloudMaskTexture;
	bool bUseStormValues;
	struct LinearColor StormLightColor;
	class UClass* StormMaterialInst;
	struct ExponentialHeightFogValues StormFogValues;
	struct FScriptMulticastDelegate OnDayPhaseChangeEvent;
	TArray<struct FScriptMulticastDelegate> DelegatesQueuedForProcessingDayPhaseChange;
	class UClass* SkyLightComp;
	class UClass* RainParticleSystemComp;
	class UClass* SunOrMoonMeshComp;
	class UClass* SkyDomeMeshComp;
	class UClass* StarMapMeshComp;
	class UClass* ActiveSkyBoxMat;
	class UClass* StarMapMID;
	float StormStrength;
	class UClass* WeatherComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTimeOfDayManagerAtmosphere : public AFortTimeOfDayManager
{
public:
	class UClass* SkyAtmosphereComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTimeOfDayWeatherComponent : public UActorComponent
{
public:
	TArray<struct GlobalWeatherData> GlobalWeatherDataArray;
	struct ScalableFloat WeatherEventStartDelayMin;
	struct ScalableFloat WeatherEventStartDelayMax;
	struct ScalableFloat WeatherEventEndedCooldownMin;
	struct ScalableFloat WeatherEventEndedCooldownMax;
	bool bWeatherDisabled;
	EAthenaGamePhase GamePhaseToStart;
	bool bWeatherStarted;
	struct FString CalendarEnableEvent;
	EGlobalWeatherState WeatherState;
	float WeatherEventEndTime;
	float WeatherEventAttemptStart;
	int WeatherEventIndex;
	int LocalWeatherEventIndex;
	float CurrentWeatherEventIntensity;
	float CurrentBlendTime;
	float TargetBlendTime;
	float BlendTimeLength;
	class UClass* PostProcessComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTimeSynthController : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTimeSynthTrackComponent : public GameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTimeWidgetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTips : public UDataAsset
{
public:
	TArray<struct FText> Tips;
	bool OverrideTips;
	uint32_t DisplayOnPlatforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTokenToTextTable : public UDataAsset
{
public:
	TArray<struct FortTooltipTokenInfo> TokenInfoList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipDisplayStatsList : public UDataAsset
{
public:
	TArray<struct FortTooltipDisplayStatsCategory> TooltipCategories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipDisplayStatsLookupTable : public UDataAsset
{
public:
	TArray<struct FortTooltipDisplayInfo> TooltipDisplayStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipLoadingWrapper : public UObject
{
public:
	struct FScriptMulticastDelegate OnTooltipAssetsLoaded;
	class UClass* SourceObject;
	class UClass* TooltipInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTooltipMap : public UDataAsset
{
public:
	TArray<struct FortTooltipMapEntry> Mapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTouchInputSettings : public UDataAsset
{
public:
	class UClass* LookSensitivityCurve;
	class UClass* LookVelocityScaleCurve;
	class UClass* MovementCurve;
	struct FortTouchAimAssistSettings TouchAimAssist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTournamentManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTournamentQueueComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTowHookAttachableProjectile : public AFortAttachableProjectileBase
{
public:
	struct FName RopeAttachSocketName;
	struct FName CollisionProfileNameOverride;
	class UClass* OwningTowHook;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortToyAbilityInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortToyContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortToyInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortToyPreviewActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTracerBase : public AFortClientOnlyActor
{
public:
	class UClass* TracerMovementComponent;
	class UClass* TracerMesh;
	class UClass* BulletWhipTrackerComponent;
	struct CurveTableRowHandle Speed;
	float SpeedScaleMinRange;
	float SpeedScaleMaxRange;
	float SpeedScaleMinMultiplier;
	float SpeedScaleMaxMultiplier;
	struct Vector MeshScaleMult;
	float MeshScaleTime;
	class UClass* BulletWhipTrackerComponentClass;
	bool bScaleOnDeath;
	bool bScaleSpeed;
	bool bScaledUp;
	bool bDead;
	bool bOwnedByPool;
	float currentScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTrack : public ABuildingProp
{
public:
	struct FScriptMulticastDelegate OnTrackGraphChanged;
	struct FText ToggleSwitchText;
	float ToggleInteractTime;
	class UClass* TrackPieceMeshesByType;
	bool bUseFloorMesh;
	class UClass* TrackFloorMeshesByVerticality;
	TArray<struct TrackConnectorMeshConfig> ConnectorMeshConfigs;
	class UClass* NeighborsByDirection;
	int SwitchState;
	int ConfigurationIdx;
	struct CollisionResponseContainer FloorCollisionResponseContainer;
	class UClass* TrackMeshComp;
	class UClass* TrackFloorMeshComp;
	class UClass* ConnectorMeshCompsByDirection;
	class UClass* PlacementCollision1;
	class UClass* PlacementCollision2;
	class UClass* SplineComp1;
	class UClass* SplineComp2;
	class UClass* SwitchCompBase;
	class UClass* SwitchComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTrack_CustomSpline : public AFortTrack
{
public:
	class UClass* CustomSplineComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTrackMovementComponent : public UMovementComponent
{
public:
	class UClass* OptionalEditorPlacedTrack;
	struct Vector TrackSnapExtent;
	struct Vector TurnSpeed;
	float SplineLocationOffsetZ;
	float DiscoverSplineFrequency;
	float TrackVelocity;
	bool bReverseYawWhenReversedOnSpline;
	struct FScriptMulticastDelegate OnOutOfTrack;
	struct FScriptMulticastDelegate OnLostTrack;
	struct TrackMovement TrackMovement;
	struct RepTrackMovement ReplicatedTrackMovement;
	float ClientPredictionSpeedModifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTrackPreview : public AFortDecoPreview
{
public:
	class UClass* TrackPieceMeshesByType;
	float CellSize;
	class UClass* TrackMeshComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTrajectoryAbilityInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTransactionalAnalyticsManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTransformGenerator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTransformGeneratorSweepFromOffset : public UFortTransformGenerator
{
public:
	struct Vector RayOriginOffsetFromOriginal;
	float SweepRadius;
	ECollisionChannel TraceChannel;
	float MaximumAllowedAdjustment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTrapGrenadeProjectile : public AFortProjectileBase
{
public:
	class UClass* ProjectileDecoTool;
	class UClass* ProjectileDecoHelper;
	class UClass* TrapDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTrapItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTrapTooltip : public UFortWorldItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTwitchAccount : public UFortLinkedAccount
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortChangeMonitoringStructHelpers : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInventorySortFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBrushSizeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMultiSizeBrushAsset : public UDataAsset
{
public:
	struct FortMultiSizeBrush Brush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReportablePlayerInfo : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortUIBaseClass : public AHUD
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIBattlePassPageUnlockNotification : public UFortUINotification
{
public:
	struct FText BattlePassPageUnlockToastTitle;
	struct FText BattlePassPageUnlockToastDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUICameraManagerComponent : public UActorComponent
{
public:
	class UClass* ViewTarget;
	bool bUpdatingViewTarget;
	EFrontEndCamera CurrentCamera;
	Unknown CameraMapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIDirectorSubsystemBase : public UGameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIFeedbackBank : public UDataAsset
{
public:
	Unknown FeedbackEvents;
	bool bIsAthenaData;
	Unknown BankDefinedFeedbackEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIFriendNotification : public UFortUINotification
{
public:
	EFortUIFriendNotificationType FriendActionType;
	struct UniqueNetIdRepl FriendUniqueId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIGlobals : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIInfoComponent : public UActorComponent
{
public:
	struct FText LabelText;
	struct FText DescriptionText;
	struct TSoftClassPtr<UObject> TextureSoftPointer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIManagerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUINotificationHandler_ReceivedGiftItem : public UGiftUINotificationHandler
{
public:
	bool bCanGenerateMultipleNotifications;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortUIProxyActor : public AActor
{
public:
	TArray<class UClass*> AttributeSets;
	class UClass* AbilitySystemComponent;
	class UClass* ItemDef;
	struct FortAttributeInitializationKey InitializerKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortUIZone : public AFortUIBaseClass
{
public:
	struct FontRenderInfo TextRenderInfo;
	class UClass* IntensityGraph;
	class UClass* PIDValuesGraph;
	class UClass* PIDContributionsGraph;
	class UClass* UtilitiesGraph;
	EFortContextualReticleTypes CurrentContextualReticleIconType;
	struct Color CurrentContextualReticleColor;
	struct TSoftClassPtr<UObject> ContextualReticleIcons;
	struct TSoftClassPtr<UObject> ActorCanvasArrowBrush;
	TArray<class UClass*> SpottedActorIndicators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortUIPvP : public AFortUIZone
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUITeamInfo : public UObject
{
public:
	struct FScriptMulticastDelegate OnTeamMemberFinishedSynchronizing;
	struct FScriptMulticastDelegate OnTeamMemberAdded;
	struct FScriptMulticastDelegate OnTeamMemberRemoved;
	struct FScriptMulticastDelegate OnTeamMemberStateChanged;
	struct FScriptMulticastDelegate OnTeamMemberPromoted;
	struct FScriptMulticastDelegate OnTeamHitPointFractionsChanged;
	class UClass* TeamContext;
	byte TeamAssignment;
	class UClass* FortTeamUEnum;
	int TotalFilledSlots;
	int PreviousFilledSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortUndergroundVolume : public APhysicsVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUnderwaterDamageComponent : public UActorComponent
{
public:
	class UClass* GE_UnderwaterDamage;
	struct ScalableFloat DamageDelay;
	struct ScalableFloat LevelDuration;
	bool bIsUnderWater;
	float UnderWaterStartTime;
	int CurrentLevel;
	bool bResetFromDBNO;
	struct ActiveGameplayEffectHandle GE_UnderWaterDamage_Handle;
	Unknown OwnerAbilityComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUpdateManager : public UpdateManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CheckForUpdate : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnUpToDate;
	struct FScriptMulticastDelegate OnUpdateRequired;
	class UClass* WorldContextObject;
	bool bShowDialogOnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUrgentQuestItemDefinition : public FortQuestItemDefinition
{
public:
	struct UrgentQuestData UrgentQuestData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWorldManager : public AInfo
{
public:
	TArray<struct FortLevelStreamingInfo> StreamedLevels;
	TArray<struct FortPlacementLocationTagHandler> PlacementLocationTagHandlers;
	bool bSavingEnabled;
	uint32_t SaveFrequency_Seconds;
	bool bStreamInBuildings;
	bool bConstructTileWorld;
	bool bUseSimMaps;
	int NumNonAutoconstructedTiles;
	struct DataTableRowHandle GameDifficultyRowPIEOverride;
	class UClass* ZoneThemeForPIE;
	struct FortWindIntensityAndDirection InitialGlobalWind;
	EFortWorldManagerState WorldManagerState;
	class UClass* TileManager;
	int X_Size;
	int Y_Size;
	int Z_StructuralGrid_Size;
	int VerticalCellNumOffsetFromOrigin;
	int TileEdgeSize;
	class UClass* Theme;
	struct FName DefaultLootQuotaCategory;
	struct FortTileLootData LootData;
	int MaxTiles;
	bool bUseFixedSeed;
	int FixedSeed;
	TArray<struct WorldTileSubArray> Y;
	struct Vector FriendlyPlayerSpawnExtent;
	struct Vector PadPlayerSpawnExtent;
	float DangerPlayerSpawnExclusionRadius;
	float ObjectivePlayerSpawnExclusionRadius;
	struct GameplayTagContainer OverrideInitialPlayerSpawnTags;
	struct GameplayTagContainer OverrideBackupPlayerSpawnTags;
	struct FortStartingMissionInfo StartingMissionInfo;
	class UClass* CurrentWorldRecord;
	class UClass* CurrentZoneRecord;
	class UClass* CloudHelper;
	int CurrentZoneIndex;
	bool bHasCreatedMissions;
	bool bHasCreatedPrimaryAdditionalFoundations;
	bool bHasSpawnedActorsForMissions;
	bool bZoneCompleted;
	bool bZoneFinished;
	bool bCreatedMissionRecord;
	struct FortMissionManagerRecord MissionManagerRecord;
	TArray<struct FortMissionEntry> ReactiveMissionsToAdd;
	TArray<struct FortDeferredNewActorData> DeferredActors;
	int FinalNumChosenBuildingFoundations;
	TArray<class UClass*> ChosenBuildingFoundations;
	int MaxConsecutiveFails;
	bool bClearOutpostMapStats;
	TArray<struct FortPlayerEarnedItemCaches> UnsavedPlayerEarnedItemCaches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUserCloudHelperComponent : public UActorComponent
{
public:
	uint64_t LastIssuedRequestHandle;
	int SaveSizeCompressionThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUserOptionProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortValidationInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVariantPreviewGenerator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWrapVariantPreviewGenerator : public UFortVariantPreviewGenerator
{
public:
	struct GameplayTag WrapVariantChannelTag;
	struct FortCosmeticVariantPreview BaseVariantPreview;
	int NumWrapPreviews;
	TArray<struct TSoftClassPtr<UObject>> PreviewWrapDefinitions;
	struct FString DefaultCustomData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantTokenType : public FortAccountItemDefinition
{
public:
	EItemProfileType ProfileType;
	class UClass* cosmetic_item;
	struct GameplayTag VariantChanelTag;
	struct GameplayTag VariantNameTag;
	TArray<struct CosmeticVariantInfo> VariantPreviewOverrides;
	bool bAutoEquipVariant;
	bool bMarkItemUnseen;
	bool bCreateGiftbox;
	struct FString CustomGiftbox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleSeatWeaponComponent : public UActorComponent
{
public:
	TArray<struct FName> MuzzleSocketNames;
	TArray<struct WeaponSeatDefinition> WeaponSeatDefinitions;
	int ActiveSeatIdx;
	class UClass* CachedWeapon;
	class UClass* CachedWeaponDef;
	float CachedOverheatMax;
	float CachedOverheatValue;
	float OverheatValueRepped;
	bool bWeaponEquipped;
	bool bUseVehicleOrientationForShootingCone;
	bool bControlledByMultipleSeats;
	class UClass* ActorBase;
	bool bReadyToSleep;
	struct ScalableFloat TotalShotsAllowedThenShutdown;
	int ShotsFired;
	struct FScriptMulticastDelegate OnOverheatStateChanged;
	bool bWeaponOverheatDataHasBeenCached;
	struct FortCachedWeaponOverheatData CachedWeaponOverheatData;
	struct VehicleWeapon_RetainedData CachedWeaponState;
	bool bSaveAndRestoreWeaponData;
	class UClass* WeaponSklMeshComponent;
	struct FName VehicleSocketName;
	struct FName VehiclePawnAttachSocketName;
	float AttachmentAngleOffsetYaw;
	bool bIsStandaloneComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleAimingWeaponComp : public UFortVehicleSeatWeaponComponent
{
public:
	bool bShouldResetCameraHorizontallyToBarrelWhenEntered;
	bool bShouldResetCameraVerticallyToBarrelWhenEntered;
	float StartCameraResetToBarrelTime;
	bool bAllowCameraLocalVerticalRotationOnly;
	float AimBlendInSpeed;
	float AimBlendOutSpeed;
	bool bSetDesiredPitchWhenUnmanned;
	bool bSetDesiredYawWhenUnmanned;
	bool bUseGlobalOnlyAiming;
	struct Vector LocalAimOffsetWhenPitchedUp;
	struct Vector LocalAimOffsetWhenPitchedFlat;
	struct Vector LocalAimOffsetWhenPitchedDown;
	float RotCyclesPerFullTurnHoriz;
	float RotCyclesPerFullTurnVert;
	bool bCorrectAimFromCameraToMuzzle;
	float YawDiffRemaining;
	float PitchDiffRemaining;
	bool bInterpolateAimToDesired;
	float LastTickTime;
	int TickCount;
	float CameraAimBlendFactor;
	struct Rotator TargetLocalAimOrientation;
	struct Rotator TargetLocalAimOrientationCorrected;
	struct Rotator CurrentLocalAimOrientation;
	struct Rotator CurrentLocalAimOrientationCorrected;
	struct Rotator TargetLocalAimOrientationRepped;
	struct Rotator TargetLocalAimOrientationCorrectedRepped;
	float UnmannedDesiredPitch;
	float UnmannedDesiredYaw;
	float HorizAimRotDelta;
	float VertAimRotDelta;
	EFortAbilityTargetingSource AimSourceType;
	bool bPlayerEnteredThisFrame;
	bool bApplyOwnerRotationToAimWhenUnmanned;
	float MaxYawPerSecondThreshold;
	float MaxPitchPerSecondThreshold;
	float PitchConstraintAngleOffset;
	float AimInterpSpeed;
	float InitialCameraInterpSpeed;
	float InitialCameraLerpTime;
	float MinDistanceForCorrection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleAnimInstance_Jackal : public UFortVehicleAnimInstance
{
public:
	class UClass* JackalVehicle;
	bool bIsSprinting;
	EFortCardinalDirection LocomotionCardinalDirection;
	float RunForwardAlpha;
	float LeanYaw;
	float CombatLeanYaw;
	bool bPlayJumpTrickVertical;
	bool bPlayJumpTrick;
	bool bIsMoving;
	bool bInAir;
	bool bIsVehicleJumping;
	bool bIsBoosting;
	bool bIsOnSlope;
	bool bPlayMovingFast;
	bool bPlayDriveSouth;
	bool bPlayAdditiveLeans;
	bool bIdleToMovementStartTransition;
	bool bMovementLoopToMovementStopTransition;
	bool bLocomotionPoseToJumpTransition;
	bool bJumpToLocomotionPoseTransition;
	bool bIdleToMovementLoopTransition;
	bool bMovementLoopToPivotTransition;
	bool bMovementLoopToIdleTransition;
	bool bDefaultToJumpCombatStartTransition;
	bool bJumpApexToJumpFallTransition;
	bool bDefaultToJumpStartTransition;
	bool bCombatModeToSprintModeTransition;
	bool bSprintModeToCombatModeTransition;
	bool bIsPlayingEmoteOnHoverboard;
	bool bShouldApplyAdditive;
	bool bIsBothLegFK;
	float InPlaceLeansBlendSpaceAlpha;
	float CombatLeanYawMultiplier;
	float SlopeCheckPitchThresholdDegrees;
	float SlopeCheckYawThresholdDegrees;
	float AdditiveLeansSpeedThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleAnimSet : public UDataAsset
{
public:
	struct FortAnimInput_VehicleDriverAnimAsset DefaultAnimAsset;
	struct FortAnimInput_VehicleDriverAnimAsset FemaleOverrideAnimAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleAudioVoice : public UAudioComponent
{
public:
	class UClass* LoopingSound;
	bool bFadeWhenOwnerDestroyed;
	float FadeTimeWhenOwnerDestroyed;
	TArray<struct FortVehicleAudioOneshotGate> OneshotGates;
	struct FScriptMulticastDelegate OnOneshotEvent;
	float OneShotGateInterpSpeed;
	struct FortVehicleAudioParam VolumeParam;
	struct FortVehicleAudioParam PitchParam;
	TArray<struct FortVehicleAudioFloatParam> FloatParams;
	TArray<struct FortVehicleAudioFloatParam> ExplicitFloatParams;
	struct Vector2D ParamRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleDynAnimInstance : public UAnimInstance
{
public:
	class UClass* Vehicle;
	class UClass* Quad;
	struct Rotator CurrentDriveJiggle;
	float Speed;
	float SpeedABS;
	bool bIsBoosting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleDynAnimInstance_Ferret : public UFortVehicleDynAnimInstance
{
public:
	class UClass* FerretVehicle;
	struct Rotator BobbleHeadJiggle;
	struct Rotator PaperJiggle;
	struct Rotator CurrentDriveJiggleRandom;
	struct Rotator CurrentDriveJiggleRandom2;
	struct Rotator WingRotations;
	float WingJiggleAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleImminentCollisionComponent : public UActorComponent
{
public:
	bool bAllowHitPawns;
	bool bAllowHitBuildingPieces;
	bool bDoMultiSweep;
	bool bOnlyAffectBuildingsIfKillingDamage;
	float ClientIgnoreBuildingActorsTime;
	struct FName NoVehicleDamageTagName;
	struct FName BoxTraceSingleName;
	struct FName DestructionTraceSocket;
	struct FName DestructionTraceSocketRear;
	bool bUpdateTimeoutIgnoreBuildingActors;
	ECollisionChannel TraceChannel;
	TArray<struct PotentiallyDestroyedBuilding> PotentiallyDestroyedBuildings;
	bool bAlignLookAheadDirectionWithVehicleYAxis;
	bool bAlignLookAheadDirectionWithVehicleZAxis;
	float VehicleApproxHalfLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleInteractionOverrideComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVehicleItemDefinition : public FortWorldItemDefinition
{
public:
	struct ScalableFloat VehicleMinSpawnPercent;
	struct ScalableFloat VehicleMaxSpawnPercent;
	struct ScalableFloat MaxNumberCanSpawn;
	struct ScalableFloat MinPercentWithGas;
	struct ScalableFloat MaxPercentWithGas;
	struct ScalableFloat MinPercentInoperable;
	struct ScalableFloat MaxPercentInoperable;
	struct Transform WrapPreviewTransform;
	int WrapPreviewSectionMask;
	bool bUseInWrapPreviewList;
	struct TSoftClassPtr<UObject> VehicleActorClass;
	struct TSoftClassPtr<UObject> PreviewSkeletalMesh;
	TArray<struct FString> SpawnVehicleNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleLayerAnimInstance : public UFortBaseLayerAnimInstance
{
public:
	struct FortAnimInput_CommonVehicle CommonVehicleInput;
	struct FortAnimInput_TurnInPlace TurnInPlaceInput;
	EFortCustomGender Gender;
	float LocalVelocityYawAngle;
	float SlopePitchDegreeAngle;
	float SlopeRollDegreeAngle;
	EFortCardinalDirection LocomotionCardinalDirection;
	bool bHasBalloons;
	bool bIsDriver;
	bool bIsFrontPassenger;
	bool bIsBackLeftPassenger;
	bool bIsBackRightPassenger;
	bool bTransitionLocomotionAdditiveCrouchTurning;
	bool bRecentlyFired;
	float Speed2D;
	bool bIsTargeting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleLayerAnimInstance_ATVPassenger : public UFortVehicleLayerAnimInstance
{
public:
	struct FortAnimInput_Quad QuadVehicleInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleLayerAnimInstance_GolfcartPassenger : public UFortVehicleLayerAnimInstance
{
public:
	struct FortAnimInput_GolfCart GolfCartVehicleInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleLayerAnimInstance_Jackal : public UFortVehicleLayerAnimInstance
{
public:
	struct FortAnimInput_JackalVehicle JackalVehicleInput;
	float AimYaw;
	float AimPitch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleLayerAnimInstance_ShoppingCartPassenger : public UFortVehicleLayerAnimInstance
{
public:
	struct FortAnimInput_ShoppingCart ShoppingCartInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortVehicleManager : public AActor
{
public:
	struct FScriptMulticastDelegate OnVehicleCountByTagChanged;
	TArray<class UClass*> Vehicles;
	Unknown VehicleCountByTagMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVehicleMovementSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData FrontLateralFrictionScale;
	struct FortGameplayAttributeData RearLateralFrictionScale;
	struct FortGameplayAttributeData BrakeForceTractionScale;
	struct FortGameplayAttributeData ForwardForceTractionScale;
	struct FortGameplayAttributeData SlopeAntigravityScale;
	struct FortGameplayAttributeData TopSpeedScale;
	struct FortGameplayAttributeData VehicleGravityScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVehicleNavModifierComponent : public FortPhysicsObjectNavigationComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleSeatComponent : public UActorComponent
{
public:
	float SeatSwitchCooldown;
	bool bHasAnyMountedWeaponSeats;
	TArray<struct AthenaCarPlayerSlot> PlayerSlots;
	TArray<struct AthenaCarPlayerSlotUnreplicated> PlayerSlotsUnreplicated;
	TArray<int> PlayerSlotPriorityList;
	bool bAlwaysAllowEntry;
	Unknown PreviousDriver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVehicleSeatInputHookProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVehicleSkelMeshComponent : public SkeletalMeshComponentBudgeted
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVehicleTeleportPortal : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleTrickSet : public UPrimaryDataAsset
{
public:
	struct DataTableRowHandle Basics;
	TArray<struct FortVehicleIncrementTrick> RollTricks;
	TArray<struct FortVehicleIncrementTrick> ReverseRollTricks;
	TArray<struct FortVehicleIncrementTrick> YawTricks;
	TArray<struct FortVehicleIncrementTrick> ReverseYawTricks;
	TArray<struct FortVehicleIncrementTrick> PitchTricks;
	TArray<struct FortVehicleIncrementTrick> ReversePitchTricks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleUserInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVFXMarshaller : public UActorComponent
{
public:
	struct MarshalledVFXAuthoredData AuthoredData;
	struct MarshalledVFXRuntimeData RuntimeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMarshalledVFX_HelperLib : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_WaitManagedParticles : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnComponentsReady;
	class UClass* MyContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMarshalledVFX_AuthoredDataConfig : public UObject
{
public:
	struct MarshalledVFXAuthoredData Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVFXDataOwner : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortVisibilityManager : public AActor
{
public:
	struct VisibiltyInfoArray VisibilityInfoArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVolume : public GameplayVolume
{
public:
	class UClass* BlockingCubeFaceOne;
	class UClass* BlockingCubeFaceTwo;
	class UClass* BlockingCubeFaceThree;
	class UClass* BlockingCubeFaceFour;
	class UClass* ObjectTrackingComponent;
	class UClass* DevicesDataTrackingComponent;
	class UClass* OverridePlayset;
	bool bNeverAllowSaving;
	bool bShouldTrackObjects;
	bool bShowPublishWatermark;
	bool bDestroyingActors;
	bool bForceBoundsToBlock;
	struct FScriptMulticastDelegate OnFinishVolumeClear;
	struct ScalableFloat IsHotfixablyEnabled;
	class UClass* CurrentPlayset;
	struct VolumeActorStats ActorStats;
	TArray<class UClass*> LinkedPortals;
	bool bAdjustNavInvokerSizeToVolume;
	bool bCreateNavOctreeInclusionBound;
	TArray<class UClass*> DeferredDestroyActors;
	ESpatialLoadingState VolumeState;
	class UClass* TaskQueue;
	struct FScriptMulticastDelegate OnVolumePerformanceMetricsUpdatedEvent;
	int AIGroupEncounterID;
	int MaxActiveAI;
	class UClass* NavInvokerClass;
	class UClass* NavigationInvokerBox;
	TArray<class UClass*> StormShields;
	TArray<class UClass*> TimerObjectives;
	struct FScriptMulticastDelegate OnActorEnter;
	struct FScriptMulticastDelegate OnActorExit;
	struct FScriptMulticastDelegate OnShowHUDMessage;
	struct FScriptMulticastDelegate OnShowPublishWatermarkChanged;
	EVolumeShape BoundsShape;
	ECollisionEnabled BoundsCollisionSetting;
	struct FScriptMulticastDelegate OnUserGeneratedContentRestrictionChanged;
	bool bUserGeneratedContentRestricted;
	class UClass* IslandResourceManagerComponent;
	class UClass* PlayerSaveComponent;
	class UClass* FortVolumePersistenceOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVolumeAccessor : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortVolumeManager : public AInfo
{
public:
	struct FScriptMulticastDelegate OnClientEnterVolume;
	struct FScriptMulticastDelegate OnClientExitVolume;
	struct FScriptMulticastDelegate OnVolumeStateChanged;
	TArray<class UClass*> VolumeObjects;
	struct FortVolumeActiveUsers VolumeActivePlayers;
	struct TSoftClassPtr<UObject> AssetCostDirectory;
	class UClass* BlackListClassesTable;
	class UClass* BlackListObjectsTable;
	Unknown BlackListClasses;
	Unknown BlackListObjects;
	bool bInSpawningStartup;
	TArray<struct VolumePlayerStateInfo> PendingPlayers;
	class UClass* OverlapQueue;
	class UClass* TraceQueue;
	class UClass* FortCreativeGeneralThrottleManager;
	struct FScriptMulticastDelegate OnClientVolumeUGCViewableStateChanged;
	struct FScriptMulticastDelegate OnServerVolumeUGCViewableStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVolumeMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct SlateBrush PerimeterBrush;
	struct SlateBrush OnRadarBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVolumeObjectTrackingComponent : public UActorComponent
{
public:
	class UClass* ParentVolume;
	struct VolumePerformanceMetrics VolumePerformanceMetrics;
	struct FortCreativeClassInstanceTracker TransientTracker;
	struct FortCreativeBudgetTracker BudgetTracker;
	struct FortCreativeClassInstanceTracker ClassTracker;
	bool bHeatmapEnabled;
	bool bHeatmapIsDirty;
	int ObjectTrackingHeatmapSize;
	TArray<byte> ObjectTrackingHeatmapHighPrecision;
	TArray<byte> ObjectTrackingOverBudgetHeatmap;
	float TargetUpdateTime;
	float CreativeHeatmapThermometerInfluenceDistanceMultiplier;
	TArray<struct FortCreativeGridCellBudget> CreativeHeatmapThermometerBudgets;
	float CreativeHeatmapThermometerCellSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVolumePersistenceOptions : public UActorComponent
{
public:
	bool bAllowPlayerToClearData;
	int PersistenceDevicesCount;
	Unknown FortCreativePersistenceOptionsMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVolumeTimeOfDayComponent : public UActorComponent
{
public:
	bool bUseEditorOverrideData;
	float TimeOverride;
	float SpeedOverride;
	bool bOverrideLightIntensity;
	float LightIntensityOverride;
	bool bOverrideLightColor;
	struct LinearColor LightColorOverride;
	bool bOverrideFogDensity;
	float FogDensityOverride;
	bool bOverrideFogColor;
	struct LinearColor FogColorOverride;
	bool bOverridePostProcess;
	class UClass* PostProcessOverride;
	struct TSoftClassPtr<UObject> OverrideTODClass;
	class UClass* TimeOfDayManager;
	struct FortVolumeTimeOfDayConfig TimeOfDayConfig;
	bool bIsOverridingTimeOfDay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWaterBodyActor : public WaterBody
{
public:
	class UClass* Generator;
	class UClass* RiverToLakeTransitionMat;
	class UClass* RiverToLakeTransitionMID;
	class UClass* RiverToOceanTransitionMat;
	class UClass* RiverToOceanTransitionMID;
	struct Vector OceanCollisionExtents;
	float OceanHeightOffset;
	struct ScalableFloat WaterVelocityRemapInputRange;
	struct ScalableFloat WaterVelocityRemapOutputRange;
	struct ScalableFloat WaterVelocityPerpendicularBias;
	struct ScalableFloat WaterOverrideMaxCharacterForce;
	int WaterPriority;
	bool bIsSwamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWaterBodyExclusionVolume : public WaterBodyExclusionVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWaterBodyIslandActor : public WaterBodyIsland
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWaterFloodSetupActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWaterInteractionComponent : public UActorComponent
{
public:
	bool bIsEnabled;
	bool bTickComponentForces;
	bool bIncludeWaves;
	bool bAllowCachedDataInLargeBodies;
	float WaterVelocityForceMultiplier;
	float WaterVelocityShallowDepth;
	float WaterVelocityShallowMultiplier;
	float WaterVelocityShoreBias;
	float BuoyancyFactor;
	float UpBuoyancyDrag;
	float UpBuoyancyDrag2;
	float DownBuoyancyDrag;
	float DownBuoyancyDrag2;
	float HorizontalDrag;
	float HorizontalDrag2;
	struct FScriptMulticastDelegate OnEnterWaterEvent;
	struct FScriptMulticastDelegate OnExitWaterEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWaypointInfo : public AInfo
{
public:
	TArray<class UClass*> Waypoints;
	TArray<struct Vector> SplineLocations;
	TArray<struct PlayerWaypointContext> ContextArray;
	class UClass* Spline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWaypointVolumeComponent : public UActorComponent
{
public:
	TArray<class UClass*> WaypointGroups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeakPoint : public ABuildingGameplayActor
{
public:
	struct FScriptMulticastDelegate OnWeakPointStateChangedDelegate;
	class UClass* CachedWeakPointCoordinator;
	EFortWeakPointState WeakPointState;
	struct FName WeakPointAttachmentSocketName;
	bool bShouldDisplayHealthBarWhenActive;
	bool bShouldRegisterForAimAssist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeakPointComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate OnWeakpointHit;
	struct FDelegate ShouldKillWeakSpotDynamic;
	EPhysicalSurface PrimarySurfaceType;
	bool bUseComplexForWeakSpots;
	bool bWeakPointsEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeakPointProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeakPointsCoordinatorComponent : public GameFrameworkComponent
{
public:
	struct FScriptMulticastDelegate OnWeakPointStateChangedDelegate;
	TArray<struct FortWeakPointTypeData> WeakPointTypes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeap_BuildingToolBase : public AFortWeapon
{
public:
	class UClass* PencilMeshComponent;
	struct FName BlueprintPaperSocket;
	struct FName BlueprintPencilSocket;
	class UClass* InstigatorController;
	class UClass* InstigatorBotController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeap_BuildingTool : public AFortWeap_BuildingToolBase
{
public:
	class UClass* BlueprintPaperMaterial;
	class UClass* BlueprintDiffuseTextures;
	class UClass* BlueprintEmissiveMaskTextures;
	class UClass* BlueprintPaperPulseCurve;
	class UClass* DefaultMetadata;
	class UClass* BlueprintPaperMID;
	struct Timeline BlueprintPaperPulseTimeline;
	EFortResourceType LastResourceType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeap_EditingTool : public AFortWeap_BuildingToolBase
{
public:
	class UClass* EditActor;
	bool bEditConfirmed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponAdditiveAnimSet : public UDataAsset
{
public:
	struct FortAnimInput_WeaponAdditiveAnimAsset MaleBodyType_AnimAsset;
	struct FortAnimInput_WeaponAdditiveAnimAsset FemaleBodyType_AnimAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponAnimInstance : public UFortBaseAnimInstance
{
public:
	bool bWantsReducedWork;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponAnimSet : public UDataAsset
{
public:
	float DelayBetweenFireAndFullBodySprint;
	struct FortAnimInput_PlayerAnimAsset MaleAnimAsset;
	struct FortAnimInput_PlayerAnimAsset FemaleAnimAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponAttrSet : public FortAttributeSet
{
public:
	struct FortGameplayAttributeData WeaponChanceToNotConsumeAmmo;
	struct FortGameplayAttributeData AccumulatedWeaponChanceToNotConsumeAmmo;
	struct FortGameplayAttributeData WeaponRateOfFire;
	struct FortGameplayAttributeData WeaponHorizontalRecoil;
	struct FortGameplayAttributeData WeaponVerticalRecoil;
	struct FortGameplayAttributeData WeaponSpreadReduction;
	struct FortGameplayAttributeData WeaponReloadSpeed;
	struct FortGameplayAttributeData WeaponAmmoClipSize;
	struct FortGameplayAttributeData WeaponChargeRate;
	struct FortGameplayAttributeData WeaponOverheatMultiplier;
	struct FortGameplayAttributeData WeaponOverheatMaxMultiplier;
	struct FortGameplayAttributeData WeaponOverheatCoolingMultiplier;
	struct FortGameplayAttributeData WeaponOverheatCooldownMultiplier;
	struct FortGameplayAttributeData CharacterItemDurabilityDecayModifier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponAdditionalData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponAdditionalData_AudioVisualizerData : public UFortWeaponAdditionalData
{
public:
	class UClass* AudioVisualizerIconOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponCharmPreviewActor : public AActor
{
public:
	struct CharmPreviewEntry CurrentEntryInfo;
	class UClass* MyCharm;
	class UClass* MyCharmActor;
	class UClass* WeaponAttachMeshComp;
	EFortCustomCharmType CharmSlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponComponent_RecoilCurve : public FortWeaponComponent
{
public:
	struct ScalableFloat InterpSpeed;
	bool bRandomizeHorizFlip;
	bool bRandomizeVertFlip;
	struct ScalableFloat CurveTimeScale;
	TArray<class UClass*> RecoilVectorCurves;
	EFortRecoilCurveType RecoilBehaviorType;
	struct ScalableFloat TargetingMult;
	struct ScalableFloat VertRecoilMult;
	struct ScalableFloat HorizRecoilMult;
	struct ScalableFloat CurveLengthInSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponFireModeData : public UDataAsset
{
public:
	float FireModeDataDelay;
	class UClass* TracerTemplate;
	bool bOverrideImpactSurfaceEffects;
	class UClass* ImpactPhysicalSurfaceEffects;
	TArray<class UClass*> ImpactNiagaraPhysicalSurfaceEffectAssets;
	class UClass* BeamParticleSystem;
	class UClass* BeamNiagaraSystemAsset;
	bool bOverrideImpactSurfaceSounds;
	class UClass* ImpactPhysicalSurfaceSounds;
	class UClass* MuzzleParticleSystem;
	class UClass* MuzzleNiagaraSystem;
	class UClass* PrimaryFireSound1P;
	bool bOverridePrimaryFireSoundArray;
	class UClass* PrimaryFireSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponFxComponent : public GameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponFxComponent_Beam : public FortWeaponFxComponent
{
public:
	bool bAttachBeamToMuzzle;
	bool bUseBeamSmoothing;
	bool bSpawnImpactFXAtInterpedBeamEndpoints;
	float ImpactFxPerSecond;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponFxComponent_ChargeAimLocation : public FortWeaponFxComponent
{
public:
	float AimSmoothingSpeed;
	struct Vector ReplicatedAimOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponMeleeItemDefinition : public FortWeaponItemDefinition
{
public:
	class UClass* ManagedVFX_Defaults;
	struct TSoftClassPtr<UObject> IdleEffect;
	struct TSoftClassPtr<UObject> IdleEffectNiagara;
	struct FName IdleFXSocketName;
	struct TSoftClassPtr<UObject> SwingEffect;
	struct TSoftClassPtr<UObject> SwingEffectNiagara;
	struct FName SwingFXSocketName;
	struct TSoftClassPtr<UObject> AnimTrails;
	struct TSoftClassPtr<UObject> AnimTrailsNiagara;
	struct FName NiagaraSkeletonDIVariableName;
	struct FName AnimTrailsFirstSocketName;
	struct FName AnimTrailsSecondSocketName;
	float AnimTrailsWidth;
	bool bUseAnimTrails;
	bool bAttachAnimTrailsToWeapon;
	Unknown ImpactPhysicalSurfaceEffectsMap;
	TArray<struct TSoftClassPtr<UObject>> ImpactNiagaraPhysicalSurfaceEffects;
	Unknown ImpactNiagaraPhysicalSurfaceEffectsMap;
	TArray<struct AttachedParticleComponentDef> ParticleComponentsDefs;
	TArray<struct TSoftClassPtr<UObject>> WeaponMaterialOverrides;
	struct TSoftClassPtr<UObject> AnimClass;
	struct TSoftClassPtr<UObject> SingleAnimationToPlay;
	Unknown ImpactPhysicalSurfaceSoundsMap;
	Unknown ReloadSoundsMap;
	Unknown PrimaryFireSoundMap;
	struct TSoftClassPtr<UObject> GenericImpactSound;
	bool bNeedsMaterial0MID;
	bool bWatchKills;
	bool bCandyCaneKillReaction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponMeleeDualWieldItemDefinition : public FortWeaponMeleeItemDefinition
{
public:
	struct TSoftClassPtr<UObject> WeaponMeshOffhandOverride;
	struct TSoftClassPtr<UObject> IdleEffectOffhand;
	struct TSoftClassPtr<UObject> IdleEffectOffhandNiagara;
	struct TSoftClassPtr<UObject> SwingEffectOffhand;
	struct TSoftClassPtr<UObject> SwingEffectOffhandNiagara;
	struct TSoftClassPtr<UObject> AnimTrailsOffhand;
	struct TSoftClassPtr<UObject> AnimTrailsNiagaraOffhand;
	struct TSoftClassPtr<UObject> OffhandGenericImpactSound;
	Unknown OffhandImpactPhysicalSurfaceSoundsMap;
	Unknown OffhandImpactPhysicalSurfaceEffects;
	Unknown OffhandImpactNiagaraPhysicalSurfaceEffects;
	Unknown OffhandPrimaryFireSoundMap;
	class UClass* ManagedVFX_OffhandDefaults;
	struct FName AnimTrailsOffhandFirstSocketName;
	struct FName AnimTrailsOffhandSecondSocketName;
	float AnimTrailsOffhandWidth;
	bool bUseAnimTrailsOffhand;
	bool bAttachAnimTrailsOffhandToWeapon;
	struct FName IdleFXOffhandSocketName;
	struct FName SwingFXOffhandSocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponMeleeItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponTooltip : public UFortWorldItemTooltip
{
public:
	class UClass* CachedWeapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponMeleeTooltip : public UFortWeaponTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponModItemDefinition : public FortWorldItemDefinition
{
public:
	TArray<struct FortConditionalIncludeTags> AdditionalGameplayTags;
	struct TSoftClassPtr<UObject> AbilitySet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponPickaxeAthena : public AFortWeapon
{
public:
	class UClass* SwingVFX;
	class UClass* IdleVFX;
	class UClass* AnimTrailsPSC;
	class UClass* AnimTrailsPSCTemplate;
	class UClass* AnimTrailsNiagaraAsset;
	bool bUseAnimTrailsPSC;
	struct FName AnimTrailsFirstSocketName;
	struct FName AnimTrailsSecondSocketName;
	float AnimTrailsWidth;
	struct FName IdleFXSocketName;
	struct FName SwingFXSocketName;
	class UClass* GenericImpactSound;
	class UClass* Material0MID;
	bool bWatchKills;
	float WatchedKills;
	bool bCandyCaneKillReaction;
	class UClass* CQCEnemyAudio;
	TArray<class UClass*> PokeAnimationsToCheckForOnImpact;
	class UClass* PickaxeHarvestingMontage;
	TArray<struct MarshalledVFXRuntimeData> RuntimeMarshalledData;
	class UClass* CachedCosmeticItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponAdditionalData_SingleWieldState : public UFortWeaponAdditionalData
{
public:
	struct GameplayTag AssociatedTagVariant;
	struct TSoftClassPtr<UObject> PrimaryFireAbility_InState;
	struct TSoftClassPtr<UObject> AnimSet_InState;
	struct TSoftClassPtr<UObject> EquipMontage_InState;
	bool bHideOffhandMesh;
	bool bUseWeaponHandSocketOverride;
	struct FName WeaponHandSocketOverride;
	bool bUseSeparatePreviewOffsets;
	struct Vector ImpactFxPreviewOffset;
	struct Vector OffHandPreviewOffset;
	struct Rotator OffHandPreviewRotation;
	struct Rotator InitialPreviewRotation;
	float FrontendPreviewScale;
	struct FortUICameraFrameTargetBounds CameraFramingBounds;
	EFortWeaponCoreAnimation AnimationStyleToUse;
	class UClass* LiveAbility;
	class UClass* LiveAnimSet;
	class UClass* LiveMontage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponPickaxeDualWieldAthena : public AFortWeaponPickaxeAthena
{
public:
	class UClass* WeaponMeshOffhand;
	class UClass* SwingOffhandVFX;
	class UClass* IdleOffhandVFX;
	class UClass* AnimTrailsOffhandPSC;
	class UClass* AnimTrailsOffhandPSCTemplate;
	class UClass* AnimTrailsOffhandNiagaraAsset;
	bool bUseAnimTrailsOffhandPSC;
	struct FName AnimTrailsOffhandFirstSocketName;
	struct FName AnimTrailsOffhandSecondSocketName;
	float AnimTrailsOffhandWidth;
	struct FName IdleFXOffhandSocketName;
	struct FName SwingFXOffhandSocketName;
	class UClass* OffhandGenericImpactSound;
	class UClass* PickaxeOffhandHarvestingMontage;
	class UClass* PickaxeOffhandEquipMontage;
	TArray<class UClass*> OffhandImpactNiagaraPhysicalSurfaceEffectInstances;
	class UClass* OffhandImpactPhysicalSurfaceSounds;
	class UClass* OffhandImpactPhysicalSurfaceEffects;
	TArray<class UClass*> OffhandImpactNiagaraPhysicalSurfaceEffects;
	EFortDualWieldStance CurrentWieldStance;
	class UClass* EffectiveSingleWieldState;
	class UClass* LastAppliedWieldState;
	class UClass* OriginalEquipAnimation;
	class UClass* PrimaryFireAbilityOverrideClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponPickupSpawnAmmoData : public UDataAsset
{
public:
	TArray<struct WeaponPickupAmmoCountData> WeaponPickupAmmoCountArray;
	struct ScalableFloat DefaultWeaponAmmoMultiplier;
	TArray<struct WeaponPickupAmmoMultiplierOverrideData> WeaponPickupAmmoMultiplierOverrideArray;
	TArray<struct SourceToAmmoMultiplierOverrideData> SourceToAmmoMultiplierOverrideArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRanged : public AFortWeapon
{
public:
	struct FScriptMulticastDelegate OnProjectileSpawned;
	class UClass* TracerTemplate;
	bool bAllowAutomaticWeaponCatchup;
	int CurrentNumBullets;
	struct Vector ScopeTargetingMuzzleOffset;
	struct Vector CurrentMuzzleBlockedLocation;
	EFortAbilityTargetingSource CurrentDamageStart;
	struct Rotator MaxTargetingAimAdjustment;
	bool bShouldDisplayAmmoCounter;
	bool bShouldDisplayAmmoCounterDuringSecondaryFire;
	bool bShouldHideReserveAmmo;
	bool bShouldAimFromMuzzleAtCloseRange;
	bool bAlwaysAimFromMuzzle;
	bool bMaintainAimLocationDuringTargeting;
	bool bUseScopeTargeting;
	bool bUseFirstPersonTargeting;
	bool bPersistentFireFX;
	bool bUseBeamParticles;
	bool bActivateRangeAbilityPerBurstShot;
	bool bUseImpactFXForProjectiles;
	bool bUseImpactFXForProjectileOverlaps;
	bool bUseImpactDecals;
	bool bUsePersistentBeam;
	bool bIsMuzzleTraceNearWall;
	float MuzzleTraceNearWallThreshold;
	struct FortEffectDistanceQuality BeamSignificance;
	struct FortEffectDistanceQuality ImpactSignificance;
	struct FortEffectDistanceQuality DecalSignificance;
	float ScopeImpactEffectDistanceOffset;
	class UClass* BeamParticleSystem;
	struct TSoftClassPtr<UObject> BeamNiagaraSystemAsset;
	struct FName BeamSourceSocketName;
	class UClass* FortSpawnPropOverride;
	class UClass* FortSpawnPropAnimOverride;
	struct Vector DecalSizeMin;
	struct Vector DecalSizeMax;
	float DecalLifespanMin;
	float DecalLifespanMax;
	struct LinearColor DecalColorStart;
	struct LinearColor DecalColorEnd;
	class UClass* DecalMaterial;
	class UClass* DecalTexture;
	TArray<EPhysicalSurface> SurfaceAcceptingDecals;
	int ShellReloadCounter;
	struct Rotator TargetingRotAdjustmentTotal;
	float LastTargetingRotAdjustmentWeight;
	bool ScopePostProcessEnabled;
	float ScopePostProcessBlendWeight;
	TArray<struct WeightedBlendable> ScopePostProcessMaterial;
	TArray<struct FortBulletPatternEntry> BulletPattern;
	class UClass* BeamNiagaraSystemInstance;
	bool bUseAthenaRecoil;
	bool bUseAthenaPerfectADSAim;
	bool bFirstShotAccuracyCheckVehicleMovement;
	float FirstShotAccuracyMinWaitTime;
	class UClass* FireAnimation;
	class UClass* FireDownsightsAnimation;
	class UClass* FireFromCrouchWalkAnimation;
	class UClass* CockingAnimation;
	class UClass* WeaponFireMontage;
	class UClass* WeaponFireDownsightsMontage;
	class UClass* WeaponFireFromCrouchWalkMontage;
	class UClass* WeaponCockingMontage;
	class UClass* BeamPSC;
	float CrouchWalkSpeedThreshold;
	bool bEnableRecoilDelay;
	struct FScriptMulticastDelegate OnOverheatValueChanged;
	EFortWeaponOverheatState OverheatState;
	class UClass* OverheatedAnimation;
	class UClass* WeaponOverheatedAnimation;
	bool bCooldownWhileOverheated;
	float OverheatValue;
	float TimeHeatWasLastAdded;
	float TimeOverheatedBegan;
	bool bCacheAimPointOnFire;
	struct Vector CachedAimPoint;
	Unknown CachedLODSettingsManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedForVehicle : public AFortWeaponRanged
{
public:
	struct MountedWeaponInfo MountedWeaponInfo;
	struct MountedWeaponInfoRepped MountedWeaponInfoRepped;
	class UClass* CachedWeaponMeshCompOnVehicle;
	struct Vector WeaponLoc;
	struct Rotator WeaponRot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRanged_Ostrich : public AFortWeaponRangedForVehicle
{
public:
	class UClass* ProjectileTemplate;
	bool bRocketsOnCooldown;
	bool bLocalChargingRockets;
	bool bRocketFireButtonDown;
	int RocketAmmoLocal;
	int ServerLoadedRockets;
	bool bFiringRockets;
	bool bUseShotgunSecondBarrel;
	float RocketFireTimer;
	float RocketChargeTimer;
	struct ScalableFloat FireRate;
	struct ScalableFloat AutofireDelay;
	struct ScalableFloat RocketsCooldown;
	struct ScalableFloat TimeToLoadOneAmmoCharge;
	struct ScalableFloat AimPointCacheRange;
	struct ScalableFloat MinRocketsForFiring;
	struct ScalableFloat AmmoPerCharge;
	struct ScalableFloat MaxRockets;
	struct FName SecondaryFireMuzzleName;
	struct FName SecondaryFireTraceSocket;
	struct FName ShotgunSecondBarrelMuzzleName;
	struct FName StartLoadingSectionName;
	class UClass* RocketChargingLoop;
	class UClass* RocketFullyChargedLoop;
	class UClass* RocketFire;
	class UClass* RocketFireSettle;
	class UClass* RocketCooldownLoop;
	class UClass* RocketCooldownReady;
	class UClass* ShotgunFireSecondBarrel;
	TArray<struct WeaponHudData> GamepadHudKeyActionData;
	struct GameplayTagContainer LoadRocketTag;
	struct TimerHandle AutoFireTimer;
	struct TimerHandle ReloadShotgunTimer;
	struct TimerHandle ServerSideRocketCooldownTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedDual : public AFortWeaponRanged
{
public:
	class UClass* LeftHandWeaponMesh;
	class UClass* LeftHandFireAnimation;
	class UClass* LeftCockingAnimation;
	class UClass* LeftHandFireDownsightsAnimation;
	class UClass* LeftWeaponFireMontage;
	class UClass* LeftWeaponFireDownsightsMontage;
	class UClass* LeftWeaponCockingMontage;
	class UClass* LeftWeaponReloadMontage;
	struct FScriptMulticastDelegate OnHandFired;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedDualForVehicle : public AFortWeaponRangedDual
{
public:
	struct MountedWeaponInfo MountedWeaponInfo;
	struct MountedWeaponInfoRepped MountedWeaponInfoRepped;
	struct Vector LeftWeaponLoc;
	struct Rotator LeftWeaponRot;
	struct Vector RightWeaponLoc;
	struct Rotator RightWeaponRot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedDualFerret : public AFortWeaponRangedDualForVehicle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedDualMountedTurret : public AFortWeaponRangedDualForVehicle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponRangedItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedMountedCannon : public AFortWeaponRangedForVehicle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedOctopusTowhook : public AFortWeaponRangedForVehicle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedSpaghettiTowhook : public AFortWeaponRangedForVehicle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponRangedTooltip : public UFortWeaponTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponRangedTowHook : public AFortWeaponRanged
{
public:
	class UClass* TowHook;
	struct TowhookParams TowhookParams;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponRechargeAmmoItemMapping : public UDataAsset
{
public:
	TArray<struct WeaponRechargeAmmoMappingData> WeaponRechargeAmmoMappingData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWeaponReticleExtensionData : public UDataAsset
{
public:
	Unknown WeaponToReticleExtensionMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeatherAugment : public AFortCarriedObject
{
public:
	struct GameplayTagContainer WeatherTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWeightedActorClassListLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWidgetComponent : public WidgetComponent
{
public:
	bool bClampProjectedLocalPositionToViewport;
	struct Vector2D PreClampedLocalPosition;
	float ClampPaddingTop;
	float ClampPaddingBottom;
	float ClampPaddingLeft;
	float ClampPaddingRight;
	struct FScriptMulticastDelegate OnClampStateChangedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWindManager : public AActor
{
public:
	bool bAllowWindImpulses;
	bool bAllowResponderAudio;
	float SectionWidth;
	float MinimumSectionBlendTime;
	struct TSoftClassPtr<UObject> MaterialDefiningParametersToInterpolate;
	struct FName WindVectorParameterName;
	TArray<struct FName> WindOffsetMaterialParameterNames;
	TArray<struct FName> WindSpeedMaterialParameterNames;
	TArray<struct FName> WindMaterialScalarParameterNamesToInterpolate;
	TArray<struct FName> WindMaterialVectorParameterNamesToInterpolate;
	TArray<struct FortWindImpulseRadius> WindImpulses;
	TArray<struct FortWindImpulseCylinderDelta> WindImpulseCylinderDeltas;
	TArray<struct FortWindImpulseCylinder> WindImpulseCylinders;
	TArray<struct FortWindResponder> WindResponders;
	TArray<int> NearbyCacheIndicesForAudio;
	TArray<int> NearbyCacheIndicesForUpdates;
	int NextNearbyIndexToUpdate;
	struct FortWindResponder ActiveAudioWindResponder;
	Unknown WindActorToWindResponderAudioMap;
	struct FName AudioWindSpeedParameterName;
	float AudioWindInterpSpeed;
	float AudioWindMaxResponderDistance;
	float UpdateWindMaxResponderDistance;
	float ViewerMovementDistanceForRefresh;
	TArray<class UClass*> WindAudioComponentPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorkerTooltip : public UFortCharacterTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldMarker : public UObject
{
public:
	class UClass* MarkerComponent;
	struct FortWorldMarkerData MarkerDataCache;
	class UClass* MarkerActor;
	class UClass* MarkerWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldMarkerIndicatorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldMultiItem : public UFortWorldItem
{
public:
	struct TimerHandle TimeToSwitchHandle;
	struct TimerHandle TimeToEndSwitchHandle;
	struct TimerHandle TimeToRetrySwitchHandle;
	struct TimerHandle TimeToReenableEquipAnim;
	float TimeOfLastSwitch;
	bool bWantsToSwitch;
	bool bTellHasBegun;
	bool bDisableEquipAnimationThisFrame;
	int CurrentSelectedItemIndex;
	float CurrentItemXP;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWorldMultiItemDefinition : public FortWorldItemDefinition
{
public:
	TArray<struct TSoftClassPtr<UObject>> ValidItemsToBecome;
	TArray<struct FortWorldMultiItemInfo> ItemInfos;
	TArray<class UClass*> CachedItemDefinitionList;
	bool bSwitchItemOnTimer;
	bool bSwitchItemAfterFiringEnds;
	bool bSwitchItemInSequenceByPoweringUp;
	bool bPreventSwitchingWhileFiring;
	bool bPreventSwitchingWhileCharging;
	bool bPreventSwitchingWhileReloading;
	bool bPreventSwitchingWhileAiming;
	bool bPreventSwitchingWhileHidden;
	float TimeBetweenSwitchingItems;
	struct GameplayTagContainer ItemActorSwitchingTellCues;
	struct GameplayTagContainer NewItemActorSwitchingCues;
	float TellDuration;
	struct GameplayTag GameplayTagKeyForCurrentSelectedItemIndex;
	struct GameplayTag GameplayTagKeyForCurrentXP;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldMultiItemXPComponent : public UActorComponent
{
public:
	class UClass* OwningWeapon;
	class UClass* OwnerPawn;
	class UClass* OwningMultiItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortWorldRecord : public UFortGenericRecord
{
public:
	struct FortCloudSaveInfo CloudInfo;
	int CurrentZoneIndex;
	TArray<struct FortPlayerRecord> SavedPlayers;
	struct FortZoneInstanceDetails ZoneInstanceInfo;
	struct FString WUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWorldSettings : public AWorldSettings
{
public:
	TArray<class UClass*> ActorsNeedingWorldReady;
	TArray<int> WorldCells;
	struct Vector WorldCellsOrigin;
	int WorldCellsFlags;
	bool bGenerateTestLevelSaves;
	bool bDisableCullDistance;
	bool bUseWorldSpecificCullDistanceOverride;
	bool bPvPUseWidgetRotation;
	bool bOverrideMainMapSettings;
	bool bValidateNavGraphConnectivity;
	bool bLimitNavGraphSkyCells;
	bool bUseProceduralFoliage;
	bool bUseConditionalBuildingFoundations;
	bool bAllowBuildingStreamingData;
	int SplineHLODIndex;
	bool bShowTimeOfDayManager;
	float MinCullObjectSize;
	float MinCullDistance;
	float MaxCullObjectSize;
	float MaxCullDistance;
	class UClass* OverrideMinimapMaterial;
	struct Vector2D PvPMapWorldCenter;
	float MapZOffset;
	struct Rotator MapRotation;
	class UClass* MapInitialMask;
	bool bSpawnVehicleManager;
	bool bSpawnPhysicsObjectManager;
	float MapWorldScale;
	float MiniMapZoom;
	struct SlateBrush AircraftPathBrush;
	struct SlateBrush AircraftMidlinePathBrush;
	struct SlateBrush AircraftPathTeamIndicatorBrush;
	struct SlateBrush SafeZoneFinalPosBrush;
	TArray<struct IntPoint> NavGraphSkyCells;
	class UClass* SearchSpeedOverride;
	class UClass* ResourceRateOverride;
	class UClass* SoundBodyHeadshotRequired;
	bool bSpawnTimeOfDayManager;
	bool bDisableGlobalWeatherEvents;
	struct TSoftClassPtr<UObject> WorldTimeOfDayManager;
	struct TSoftClassPtr<UObject> WorldMusicManager;
	class UClass* WorldMusicManagerBank;
	struct TSoftClassPtr<UObject> DefaultWorldTimeOfDayManager;
	struct TSoftClassPtr<UObject> ZoneThemeTimeOfDayManager;
	struct TSoftClassPtr<UObject> MissionTimeOfDayManager;
	struct TSoftClassPtr<UObject> ZoneThemeMusicManager;
	class UClass* ZoneThemeMusicManagerBank;
	TArray<struct BuildingFoundationStreamingData> BuildingFoundationStreamingData;
	class UClass* TimeOfDayManager;
	class UClass* VehicleManager;
	class UClass* PhysicsObjectManager;
	class UClass* LevelOverlayManager;
	class UClass* ExternalContentManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWrapSkeletalMeshActor : public ASkeletalMeshActor
{
public:
	class UClass* WrapToApply;
	EItemWrapMaterialType WrapMaterialType;
	TArray<struct McpVariantChannelInfo> VariantData;
	class UClass* ItemWrapModifier;
	bool bHasSectionLimit;
	int MaterialSectionMask;
	struct FScriptMulticastDelegate OnWrapApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortZoneRecord : public UFortGenericRecord
{
public:
	int WorldSaveCount;
	int ZoneIndex;
	struct FName PersistentLevelName;
	TArray<struct FortLevelRecord> SavedLevels;
	int NumSavedLevels;
	int ZoneTileSeed;
	TArray<struct StatManagerPeriodRecord> PlayerMapStatManagerPeriods;
	int CloudSaveItemDefContentVersion;
	bool bNeedsFullActorSave;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortZoneTheme : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> TheaterMapTileClass;
	struct TSoftClassPtr<UObject> ZoneToUse;
	struct FText ZoneName;
	struct FText ZoneDescription;
	struct FText AbundantResources;
	EFortZoneType ZoneType;
	struct TSoftClassPtr<UObject> ZoneGameMode;
	struct GameplayTagContainer ZoneTags;
	struct TSoftClassPtr<UObject> LobbyBeaconHostClass;
	struct TSoftClassPtr<UObject> CloudSaveItemDefinition;
	int ZoneIndex;
	int PlaylistId;
	int TeamSize;
	int TeamCount;
	int MaxPartySize;
	int MaxPlayers;
	float CriticalMissionEligibilityLength;
	float CriticalMissionEligibilityGracePeriodLength;
	struct DeployableBaseSupportSettings DeployableBaseSettings;
	bool IgnoreGeneratedRewards;
	struct TSoftClassPtr<UObject> PlayerSpawnPadClass;
	struct GameplayTagContainer InitialPlayerSpawnTags;
	struct GameplayTagContainer BackupPlayerSpawnTags;
	bool bOverrideConningText;
	struct FText ConningOverrideText;
	struct TSoftClassPtr<UObject> MusicManagerClass;
	class UClass* MusicManagerBank;
	struct TSoftClassPtr<UObject> BackgroundImage;
	TArray<struct ZoneThemeDifficultyProperties> DifficultyProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromFortitudeModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromOffenseModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromResistanceModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromTeamFortitudeModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromTeamOffenseModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromTeamResistanceModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromTeamTechModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FromTechModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFrontendAnimInstance : public UFortBaseAnimInstance
{
public:
	bool bIsSkydiving;
	bool bEnableHandIK;
	bool bIsPlayingEmote;
	bool bIsBodyTypeManuallySet;
	bool bIsCharacterCustomizationLoaded;
	bool bLookingAtBackpack;
	bool bIsRebirth;
	struct FortAnimInput_PelvisAdjustment PelvisAdjustmentInput;
	struct FortAnimInput_HandIK HandIKInput;
	EFortPlayerAnimBodyType AnimBodyType;
	struct FortAnimInput_Facial FacialInput;
	struct FortAnimInput_RandomizeMontageSection RandomizeMontageSectionInput;
	float HandIKRetargetingWeight;
	float RightHandIKAlpha;
	float LeftHandIKAlpha;
	float IdlePelvisOffsetAlpha;
	struct Vector IdlePelvisOffset;
	float EmoteHipOffsetAlpha;
	float EmoteHipOffsetInterpSpeed;
	class UClass* FortPlayerPawn;
	EFortDisplayGender Gender;
	class UClass* IntroAnimation_Female;
	class UClass* IntroAnimation_Male;
	class UClass* OutroAnimation_Female;
	class UClass* OutroAnimation_Male;
	class UClass* SelectedAnimation_Female;
	class UClass* SelectedAnimation_Male;
	bool bCanPlayCustomAnimations;
	bool bDontCrossArms;
	bool bNoHandsOnHips;
	struct GameplayTagAnimations GameplayTagAnimations;
	struct GameplayTagAnimations FemaleGameplayTagAnimations;
	struct GameplayTagAnimations MaleGameplayTagAnimations;
	struct FortAnimInput_StandingPawnAnimAsset CurrentAnimSet;
	struct FortAnimInput_StandingPawnAnimAsset DefaultAnimSetMale;
	struct FortAnimInput_StandingPawnAnimAsset DefaultAnimSetFemale;
	struct FortAnimInput_PlayerGliderAnimAsset CurrentGliderAnimSet;
	struct FortAnimInput_Skydiving Skydiving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFrontEndSettings : public AActor
{
public:
	TArray<struct CameraPair> Cameras;
	TArray<class UClass*> LevelStreamingLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameDataBR : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> AnalyticsItemExclusionDataBR;
	TArray<struct TSoftClassPtr<UObject>> LootTierDataTablesBR;
	TArray<struct TSoftClassPtr<UObject>> LootPackageDataTablesBR;
	struct TSoftClassPtr<UObject> QuestEventXPTable;
	TArray<struct TSoftClassPtr<UObject>> RarityTokens;
	struct TSoftClassPtr<UObject> NamedWeightTagQueryTable;
	struct TSoftClassPtr<UObject> AIGoalManagerBR;
	struct TSoftClassPtr<UObject> AIDirectorBR;
	struct TSoftClassPtr<UObject> DefaultDamageReceiverClassBR;
	struct TSoftClassPtr<UObject> FeedbackManagerClassBR;
	struct TSoftClassPtr<UObject> UIFeedbackBankBR;
	struct TSoftClassPtr<UObject> DefaultHeroBR;
	struct TSoftClassPtr<UObject> PlayerAbilitySetBR;
	struct TSoftClassPtr<UObject> CompetitiveIdentityDataTable;
	struct TSoftClassPtr<UObject> FortItemsForEventMapping;
	struct TSoftClassPtr<UObject> FortItemToPickupBGAMapping;
	struct TSoftClassPtr<UObject> WeaponReticleExtensions;
	struct TSoftClassPtr<UObject> FeedbackEventData;
	struct TSoftClassPtr<UObject> DefaultRebootVanIndicatorClass;
	struct TSoftClassPtr<UObject> DefaultContextTutorialIndicatorClass;
	struct TSoftClassPtr<UObject> DefaultEliminationIndicatorClass;
	struct TSoftClassPtr<UObject> CreativeInventoryTable;
	struct TSoftClassPtr<UObject> CreativeRealEstatePlotTable;
	Unknown CachedCreativeInventory;
	TArray<struct PrimaryAssetId> CachedCreativeRealEstatePlots;
	struct TSoftClassPtr<UObject> CreativeTagsTable;
	struct TSoftClassPtr<UObject> CreativeTagCategoriesTable;
	struct TSoftClassPtr<UObject> MapPreloadData;
	struct TSoftClassPtr<UObject> FortWeaponPickupSpawnAmmoData;
	TArray<struct TSoftClassPtr<UObject>> FrontendGameStateComponents;
	struct TSoftClassPtr<UObject> FortFactionMapping;
	struct TSoftClassPtr<UObject> ItemWrapConfigAsset;
	struct TSoftClassPtr<UObject> DefaultGliderAnimSet;
	struct TSoftClassPtr<UObject> UmbrellaGliderAnimSet;
	struct TSoftClassPtr<UObject> ItemDefToItemVariantDataMappingAsset;
	struct TSoftClassPtr<UObject> WeaponUpgradeTable;
	struct TSoftClassPtr<UObject> DefaultGlobalCurrencyItemDefinition;
	struct TSoftClassPtr<UObject> DefaultCurrencyPayoutTable;
	struct TSoftClassPtr<UObject> DefaultLootGroupData;
	struct TSoftClassPtr<UObject> PlayerAttributesClampingDataTable;
	class UClass* FallbackSeason;
	TArray<struct GameplayTagMessage> UnableToPerformActionMessages;
	TArray<struct SettingsHUDVisibilityAndText> HUDVisibilityGameplayTags;
	class UClass* TimeOfDayRGBForPeripherals;
	class UClass* AthenaSoundMix;
	class UClass* AthenaReverbEffect;
	struct FName AthenaReverbEffectTag;
	class UClass* VisualizationSoundMix;
	class UClass* RespawnDataTable;
	class UClass* NamedWeightsByPoi;
	class UClass* AthenaMemoryCostRegister;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameDataCosmetics : public UPrimaryDataAsset
{
public:
	struct TSoftClassPtr<UObject> EmoteGameplayAbility;
	struct TSoftClassPtr<UObject> SprayGameplayAbility;
	struct TSoftClassPtr<UObject> DefaultBackpackCharacterPart;
	TArray<struct TSoftClassPtr<UObject>> DefaultCharacterParts;
	TArray<struct FallbackCharacterPartsMapper> FallbackCharacterParts;
	TArray<struct FallbackAIPawnCustomizationMapper> FallbackCustomizations;
	struct TSoftClassPtr<UObject> BannerIconCategoryData;
	struct TSoftClassPtr<UObject> BannerColorData;
	struct TSoftClassPtr<UObject> BannerColorCategoryData;
	struct TSoftClassPtr<UObject> BannerColorMap;
	struct TSoftClassPtr<UObject> FallbackPickaxe;
	struct TSoftClassPtr<UObject> FallbackDance;
	TArray<struct TSoftClassPtr<UObject>> ShuffleTileItemDefinitions;
	class UClass* STWHeroBackpackItemDefinition;
	class UClass* STWHeroNoDefaultBackpackItemDefinition;
	class UClass* DefaultBattleBusSkin;
	class UClass* DefaultGliderSkin;
	class UClass* DefaultContrailEffect;
	class UClass* DefaultMusicPack;
	TArray<struct PrimaryAssetId> ValidMaleSkinsForAnonymousMode;
	TArray<struct PrimaryAssetId> ValidFemaleSkinsForAnonymousMode;
	TArray<struct PrimaryAssetId> ValidBackPacksForAnonymousMode;
	class UClass* FilterTagTable;
	class UClass* CosmeticMarkupTable;
	struct TSoftClassPtr<UObject> CosmeticPreviewActionList;
	struct TSoftClassPtr<UObject> CharacterPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> EmotePreviewActorClass;
	struct TSoftClassPtr<UObject> EmotePreviewCameraActorClass;
	struct TSoftClassPtr<UObject> ItemWrapPreviewActorClass;
	struct TSoftClassPtr<UObject> ItemWrapPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> LoadingScreenPreviewActorClass;
	struct TSoftClassPtr<UObject> LoadingScreenPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> SprayPreviewActorClass;
	struct TSoftClassPtr<UObject> SprayPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> MusicPackPreviewActorClass;
	struct TSoftClassPtr<UObject> MusicPackPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> SkyDiveContrailPreviewActorClass;
	struct TSoftClassPtr<UObject> SkyDiveContrailPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> SkyDiveContrailAnimation_Male;
	struct TSoftClassPtr<UObject> SkyDiveContrailAnimation_Female;
	struct TSoftClassPtr<UObject> PickaxePreviewMontage_Idle2H;
	struct TSoftClassPtr<UObject> PickaxePreviewMontage_Swing2H;
	struct TSoftClassPtr<UObject> PickaxePreviewMontage_IdleDualWield;
	struct TSoftClassPtr<UObject> PickaxePreviewMontage_SwingDualWield;
	struct TSoftClassPtr<UObject> GliderPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> BodyPartOverridePreviewActorClass;
	struct TSoftClassPtr<UObject> BodyPartPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> CharmPreviewActorClass;
	struct TSoftClassPtr<UObject> CharmPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> WeaponCharmPreviewActorClass;
	struct TSoftClassPtr<UObject> WeaponCharmPreviewCameraActorClass;
	struct TSoftClassPtr<UObject> PickaxeCosmeticPreviewActorClass;
	struct TSoftClassPtr<UObject> PickaxePreviewCameraActorClass;
	struct TSoftClassPtr<UObject> BannerItemPreviewActorClass;
	struct TSoftClassPtr<UObject> CurrencyItemPreviewActorClass;
	struct TSoftClassPtr<UObject> BattlePassItemPreviewActorClass;
	struct TSoftClassPtr<UObject> ToyItemPreviewActorClass;
	struct TSoftClassPtr<UObject> DefaultPreviewActorClass;
	struct TSoftClassPtr<UObject> DefaultPreviewPawnAnimInstanceClass;
	class UClass* MetaTagToPreviewActorAsset;
	float ItemPreviewLODStreamingTimeout;
	Unknown CosmeticPreviewActionMap;
	class UClass* CharmConfigAsset;
	struct TSoftClassPtr<UObject> NoneTexture;
	struct TSoftClassPtr<UObject> DeniedCosmeticThumbnail;
	class UClass* PlaceholderItemToShowForDeniedCosmetics;
	TArray<class UClass*> RandomCharacters;
	class UClass* CameraPositionTransitionCurve;
	float CameraPositionTransitionDuration;
	float CameraPositionTargetMaxLerpDistance;
	float MinPanelSizeForFraming;
	struct FortHarvestingToolMontageOverrides HarvestingToolMontageOverrides;
	TArray<byte> BakedThumbnailData;
	TArray<struct EmoteActivationTrigger> EmoteActivationTriggers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameDataSTW : public UPrimaryDataAsset
{
public:
	struct FText DefaultHeroName;
	struct QuickBarData QuickBarDefinitions;
	float ScoreDisplayFactor;
	int ScoreDivisor;
	int XPMult;
	float GroupScoreRates;
	float ScoreToXPLinearRate;
	int LinearEnd;
	int XpPerAccountLevel;
	float CriticalMatch_XpBonusPercent;
	float PersonalBoost_XpBonusPercent;
	float GroupBoost_XpBonusPercent;
	float GroupBoost_BuffMultiplier;
	float Rest_XpBonusPercent;
	float LowXpConningValue;
	float VeryLowXpConningValue;
	float NoXpConningValue;
	struct FText FullXpConningMsg;
	struct FText LowXpConningMsg;
	struct FText VeryLowXpConningMsg;
	struct FText NoXpConningMsg;
	int MaxCraftQueueSize;
	struct DataTableRowHandle OnboardingCompleteZoneObjective;
	struct DataTableRowHandle ArmoryCollectionBookGatingQuestObjectiveStat;
	struct CurveTableRowHandle PowerPointToRatingConversion;
	struct DataTableRowHandle GameDifficultyRowPIE;
	TArray<struct SettingsHUDVisibilityAndText> HUDVisibilityGameplayTags;
	TArray<struct ItemDefinitionAndCount> DefaultInventoryList;
	TArray<struct ItemDefinitionAndCount> FastLoadDefaultInventoryList;
	TArray<struct FortReplicatedStatMapping> StatMappings;
	float SquadMemberStatBonusMultiplier;
	struct TSoftClassPtr<UObject> PlayerIdleWarningSound;
	struct GameplayTag ExpeditionUnlockedTag;
	struct GameplayTagContainer ExpeditionVehicleTags;
	int DailyMissionAlertQuota;
	struct ConditionalFoundationQuota ConditionalFoundationQuota;
	int MinLevelToPromoteItem;
	int LevelsPerItemPromotion;
	int MaxPromotionsPerItem;
	struct TSoftClassPtr<UObject> TestEncounter;
	struct TSoftClassPtr<UObject> CombatManager;
	struct TSoftClassPtr<UObject> UIMapManagerSTW;
	struct TSoftClassPtr<UObject> DefaultStWLobbyMusic;
	struct TSoftClassPtr<UObject> StWAnalyticsItemExclusionData;
	struct TSoftClassPtr<UObject> DefaultDamageReceiverClass;
	struct TSoftClassPtr<UObject> AccountInventoryBonusToken;
	struct TSoftClassPtr<UObject> WorldInventoryBonusToken;
	struct TSoftClassPtr<UObject> FounderChatUnlockToken;
	struct TSoftClassPtr<UObject> ScoreStylingData;
	struct TSoftClassPtr<UObject> ScoreMultiplierDataTable;
	class UClass* CachedScoreMultiplierDataTable;
	struct TSoftClassPtr<UObject> StWSoundMix;
	TArray<struct TSoftClassPtr<UObject>> HarvestingTools;
	struct FortPlayerSpawnPadPlacementData DefaultPlayerSpawnPadPlacementData;
	TArray<struct DefaultCharacterPartsForPawnClass> DefaultCharacterPartOverridesPerPawnClass;
	TArray<struct TSoftClassPtr<UObject>> CampaignPlayerPawnClasses;
	struct TSoftClassPtr<UObject> AIGoalManagerClass;
	struct TSoftClassPtr<UObject> SharedMissionListsClass;
	float FORTAttributeToPowerMultiplier;
	struct TSoftClassPtr<UObject> BluGloItemDefinition;
	struct TSoftClassPtr<UObject> CriticalMissionRewardItemDefinition;
	struct TSoftClassPtr<UObject> ScoreBonusMultiplerItemDefinition;
	struct TSoftClassPtr<UObject> GenericCampaignEventCurrency;
	struct TSoftClassPtr<UObject> BackpackItemDefinition;
	struct TSoftClassPtr<UObject> MissionRewardPackItemDefinition;
	struct FText OutpostRefundDialogTitle;
	struct FText OutpostRefundDialogText;
	struct FText OutpostRefundButtonText;
	struct TSoftClassPtr<UObject> FortHeroData;
	struct TSoftClassPtr<UObject> FortItemGlobalData;
	struct TSoftClassPtr<UObject> AlterationMigrationMapping;
	struct TSoftClassPtr<UObject> AlterationIntrinsicMapping;
	struct TSoftClassPtr<UObject> AlterationNamedExclusions;
	struct TSoftClassPtr<UObject> AlterationGroups;
	struct TSoftClassPtr<UObject> AlterationSlotDefinitions;
	struct TSoftClassPtr<UObject> AlterationSlotsLoadouts;
	struct TSoftClassPtr<UObject> BasePromotionCosts;
	TArray<struct TagRestrictedTable> LootTierDataTablesSTW;
	TArray<struct TagRestrictedTable> LootPackageDataTablesSTW;
	struct TSoftClassPtr<UObject> WaveSetCollectionData;
	struct TSoftClassPtr<UObject> WaveSetData;
	struct TSoftClassPtr<UObject> ModifierSetData;
	struct TSoftClassPtr<UObject> WaveSetCollectionLootData;
	struct TSoftClassPtr<UObject> PlayerStatClampingData;
	struct GameplayTagContainer NonGameplayRelevantTags;
	struct TSoftClassPtr<UObject> CraftingTimeTable;
	struct TSoftClassPtr<UObject> DefaultCraftingSuccessSound;
	struct TSoftClassPtr<UObject> TeamStatsGameplayEffect;
	struct TSoftClassPtr<UObject> DailyRewardSchedules;
	struct TSoftClassPtr<UObject> ExpeditionCriteriaRequirementsData;
	struct TSoftClassPtr<UObject> DifficultyData;
	struct TSoftClassPtr<UObject> RewardOverrides;
	struct TSoftClassPtr<UObject> ItemToQuestDataTable;
	TArray<struct IronCityRowToRating> IronCityRatingArray;
	TArray<struct IronCityDifficultyInfo> IronCityDifficultyLevels;
	TArray<struct IronCityMatchmakingBuckets> IronCityMatchmakingBuckets;
	struct TSoftClassPtr<UObject> IronCityDifficultyTable;
	struct TSoftClassPtr<UObject> QuestObjectiveStatData;
	struct TSoftClassPtr<UObject> XPAccountLevelsTable;
	struct TSoftClassPtr<UObject> PostMaxAccountLevelRewardsTable;
	struct TSoftClassPtr<UObject> PhoenixLevelRewardsTable;
	struct TSoftClassPtr<UObject> PostMaxPhoenixLevelRewardsTable;
	Unknown CachedPhoenixStats;
	TArray<struct FString> PhoenixEventFlags;
	Unknown PhoenixEventOverlevelXPPerLevel;
	struct TSoftClassPtr<UObject> PhoenixXpItemDefinition;
	struct TSoftClassPtr<UObject> XPAccountItemLevelsTable;
	struct TSoftClassPtr<UObject> XPAccountItemRewardsTable;
	struct TSoftClassPtr<UObject> XPConningTable;
	struct TSoftClassPtr<UObject> WeaponAlterationRarityMappingTable;
	TArray<float> CachedWeaponAlterationRarityMappingInfo;
	struct TSoftClassPtr<UObject> OnboardingQuestItemDefinition;
	struct TSoftClassPtr<UObject> ManualSurvivorSlottingQuestItemDefinition;
	struct TSoftClassPtr<UObject> ArmoryCollectionBookGatingQuestItemDefinition;
	struct TSoftClassPtr<UObject> ArmoryResourcesGatingQuestItemDefinition;
	struct TSoftClassPtr<UObject> QuestAchievementData;
	struct TSoftClassPtr<UObject> QuestMapData;
	struct TSoftClassPtr<UObject> SkillPointItemDef;
	struct TSoftClassPtr<UObject> ResearchPointItemDef;
	TArray<struct TSoftClassPtr<UObject>> CheatInventoryItems;
	struct TSoftClassPtr<UObject> TheaterMapViewerClass;
	struct TSoftClassPtr<UObject> MissionAlertCategories;
	struct TSoftClassPtr<UObject> MyFortData;
	struct TSoftClassPtr<UObject> HomebaseManager;
	struct TSoftClassPtr<UObject> CollectionBookData;
	struct TSoftClassPtr<UObject> SurvivorData;
	struct TSoftClassPtr<UObject> OutpostData;
	struct TSoftClassPtr<UObject> AIDirectorSTW;
	struct TSoftClassPtr<UObject> FeedbackManagerClass;
	struct TSoftClassPtr<UObject> BluGloManagerClass;
	struct TSoftClassPtr<UObject> UIFeedbackBankSTW;
	struct TSoftClassPtr<UObject> StatEventManagerClass;
	struct TSoftClassPtr<UObject> DefaultHero;
	struct TSoftClassPtr<UObject> ThreatVisualsManager;
	struct TSoftClassPtr<UObject> WindManager;
	struct TSoftClassPtr<UObject> GenericPlayerAbilitySet;
	struct TSoftClassPtr<UObject> SquadMemberStatBonusGE;
	struct TSoftClassPtr<UObject> TeamTrapBonusGE;
	struct TSoftClassPtr<UObject> BASEClass;
	struct TSoftClassPtr<UObject> MissionVoteNotificationClass;
	struct TSoftClassPtr<UObject> SessionXPCurveTable;
	struct TSoftClassPtr<UObject> TieredWavesDefenseReqTable;
	struct TSoftClassPtr<UObject> ExpeditionMasterWidgetClass;
	struct TSoftClassPtr<UObject> FortTimeOfDayData;
	TArray<struct TSoftClassPtr<UObject>> FrontendGameStateComponents;
	struct TSoftClassPtr<UObject> MusicManager;
	struct TSoftClassPtr<UObject> MusicManagerBank;
	struct TSoftClassPtr<UObject> ItemWrapConfigAsset;
	Unknown UpgradeRarityUnlockRequirementsText;
	Unknown UpgradeTierUnlockRequirementsText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayCueNotify_BaconSnack_State : public FortGameplayCueNotify_Loop
{
public:
	class UClass* PlayerPawn;
	int MeshDataIndex;
	class UClass* Mesh;
	float StealthMeter;
	float StealthMeterTime;
	class UClass* CachedAlertStateComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayCueNotify_Jetpack_FuelRegen : public FortGameplayCueNotify_Looping
{
public:
	Unknown FortPlayerPawn;
	bool bAudioEnabled;
	class UClass* OnFuelRegenRampComponent;
	float FuelRegenRampVolumeMultiplier;
	struct GameplayAttribute FuelAttribute;
	struct GameplayAttribute FuelMaxAttribute;
	struct GameplayAttribute ReserveFuelAttribute;
	struct GameplayAttribute ReserveFuelMaxAttribute;
	class UClass* SoundOnFuelChangeRamp;
	class UClass* SoundOnFuelRecharged;
	class UClass* FuelRegenRampVolumeCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayCueNotify_Jetpack_Hovering : public FortGameplayCueNotify_Loop
{
public:
	bool bUsesFuel;
	class UClass* OutOfFuelAudioCurve;
	class UClass* AccelAudioComp;
	class UClass* IdleAudioComp;
	class UClass* OutOfFuelAudioComp;
	class UClass* ParticleSystemComp;
	class UClass* PlayerPawn;
	float ActivationTime;
	float UpwardVelocity;
	float FuelVolumeMultiplier;
	bool bPlayedFuelWarning;
	struct GameplayAttribute FuelAttribute;
	struct GameplayAttribute MaxFuelAttribute;
	struct GameplayAttribute UpwardThrustAttribute;
	struct TimerHandle GroundFXTimerHandle;
	TArray<float> BeepTimes;
	class UClass* SoundOnFuelLowWarning;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayCueNotify_OnShowEmoji : public FortGameplayCueNotify_Burst
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayCueNotify_OnDisplayEmoji : public GameplayCueNotify_OnShowEmoji
{
public:
	struct Vector RelativeLocationOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayCueNotify_OnPreviewEmoji : public GameplayCueNotify_OnShowEmoji
{
public:
	struct Vector RelativeLocationOffset;
	struct Vector InitialVelocityOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayEffectVolume : public APhysicsVolume
{
public:
	class UClass* GameplayEffect;
	int GameplayEffectLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayMutatorObserverInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGenerateSkinSwapDetectionsCommandlet : public UCommandlet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGenericMessageQueue : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGliderAnimInstance_MechanicalEngineerGlider : public UFortGliderAnimInstance
{
public:
	struct TSoftClassPtr<UObject> BackpackSkeletalMesh;
	class UClass* FlapBS;
	struct PoseSnapshot BackpackSnapshotPose;
	struct Vector AttachLocation;
	struct Rotator AttachRotation;
	struct Vector Weapon_Attach_Location;
	struct Rotator Weapon_Attrach_Rotation;
	struct Vector Wrench_Offset_Loc;
	struct Rotator Wrench_Offset_Rot;
	struct Vector BackpackOwlSnapshotLocation;
	struct Rotator BackpackOwlSnapshotRotation;
	float FlapPlayRate;
	float FeatherSpeed;
	float DeployAnimAlpha;
	float WingPoseAdditiveAlpha;
	float BackPackPoseCurveValue;
	float BackpackCurveValue;
	bool bBackpacksMatch;
	bool bIsCosmeticPreview;
	bool bUseClosedFromPack;
	bool bHideBackpackOwl;
	bool bSkydiveFreefall;
	bool bTransition_Closed_To_OpenIntoGliderItem;
	bool bTransition_Closed_To_OpenIntoGeyserVent;
	bool bTransition_Closed_To_OpenInto;
	bool bTransition_IdleOpen_To_Flap;
	bool bTransition_To_Closed;
	bool bTransition_OpenInto_To_Flap;
	bool bFlapGateIsAccelerating;
	bool bFlapGateIsNotAccelerating;
	bool bGateFlapEnable;
	bool bGateLookoff;
	bool bGateBlinkOff;
	bool bCanFlap;
	bool bIsFlapping;
	bool bCanFlapTransition;
	bool bCanLook;
	bool bCanCaw;
	bool bCanBlink;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGridSpatialStructureSettings : public UObject
{
public:
	float MinCellDimension;
	int MaxCellDepth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HealthSetExecutionCalculation : public GameplayEffectExecutionCalculation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHeartbeatManager : public UObject
{
public:
	bool bShouldTrackLocation;
	float TrackLocationFrequencySec;
	bool bShouldSendPerMinuteResourceAndDamageEvents;
	bool bShouldSendPerMinuteVehicleEvents;
	class UClass* AnalyticsClientEngagementsManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHiddenFromMinimapComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHighlightableInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHighlightInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHoverDroneMovementComponent : public USpectatorPawnMovement
{
public:
	float RotAcceleration;
	float RotDeceleration;
	float MaxPitchRotSpeed;
	float MaxYawRotSpeed;
	float TurboRotAcceleration;
	float TurboRotDeceleration;
	float TurboMaxPitchRotSpeed;
	float TurboMaxYawRotSpeed;
	struct Vector2D TurboAccelerationRange;
	struct Vector2D TurboAccelerationAltitudeRange;
	float TurboDeceleration;
	float TurboHoverThrustScale;
	float FullAirFrictionVelocity;
	struct Vector CreativeModeBoundsScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHUDLayoutToolConfigurations : public UDeveloperSettings
{
public:
	struct TSoftClassPtr<UObject> LegacyLayoutConverterClass;
	int MaximumCustomLayoutSaveSlots;
	struct GameplayTag DefaultHUDProfilePresetTag;
	struct GameplayTag ActiveHUDPresetContainer;
	TArray<class UClass*> HUDPresetContainerClasses;
	TArray<struct FortMobileHUDPresetHotfix> HUDProfilePresetHotfixes;
	float DefaultButtonVisualSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavArrow : public AActor
{
public:
	class UClass* DestinationTrackerComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AHUDNavArrow : public ANavArrow
{
public:
	struct Vector LocationRelativeToCamera;
	struct ScalableFloat PitchRelativeToCamera;
	struct ScalableFloat ArrowSizeRelativeToScreen;
	struct ScalableFloat ArrowPlacementHeightRelativeToScreen;
	struct ScalableFloat DefaultApproachRadius;
	struct ScalableFloat DefaultDepartRadius;
	class UClass* ScaleCurve;
	class UClass* ArrowComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInfiltrationCarryObjectComponent : public UActorComponent
{
public:
	Unknown ParentSpawnPoint;
	Unknown CachedMutator;
	bool bIsInteractable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInfiltrationCarryObjectCapturePoint : public AActor
{
public:
	struct GameplayTagContainer GameplayTags;
	float UIShowDistance;
	float UIDetailDistance;
	bool bCapturePointEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInfiltrationCarryObjectSpawnPoint : public ABuildingGameplayActor
{
public:
	ESpawnPointState CurrentState;
	struct ScalableFloat IsSpawnPointEnabledFloat;
	class UClass* CachedSceneComponent;
	class UClass* CachedIntelActor;
	class UClass* IntelClassToSpawn;
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInfiltrationRoundInfoMutatorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInfiltrationStatusComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnIntelStateChanged;
	struct FScriptMulticastDelegate OnIsCurrentlyDefendedChanged;
	struct FScriptMulticastDelegate OnGroundTimerChanged;
	struct FScriptMulticastDelegate OnRoundResetEvent;
	struct FScriptMulticastDelegate OnMutatorReadyEvent;
	Unknown CachedMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInstanceMemoryMetric_Legacy : public UObjectMetric_Legacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInteractableBuildingWall : public ABuildingWall
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class InteractionPointWidget : public UserWidget
{
public:
	class UClass* Switcher_Icons;
	TArray<float> IconSwitchDistances;
	class UClass* TextBlock_Distance;
	class UClass* TargetActor;
	bool bScaleIconByDistance;
	float MinIconScale;
	float MinIconScaleDistance;
	float MaxIconScale;
	float MaxIconScaleDistance;
	float HideIconWhenCloseDistance;
	float DistanceUpdateInterval;
	bool bValidSwitcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInventoryManagementLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class IrwinAIController : public AthenaAIController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIslandInspectorCommand : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIslandInspectorLoadIslandCommand : public UIslandInspectorCommand
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIslandInspectorScreenshotCommand : public UIslandInspectorCommand
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIslandInspectorValidateIslandMnemonicCommand : public UIslandInspectorCommand
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UJsonObjectCostAccountantFactory : public UObjectCostAccountantFactory
{
public:
	struct FString FilePath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKairosHeartbeatManager : public UObject
{
public:
	class UClass* FLP;
	float HeartbeatInterval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKeepItemContainer : public ABuildingContainer
{
public:
	int HostUpgradeLevel;
	TArray<Unknown> SearchedBy;
	EKeepContainerType ContainerType;
	bool bUseDefaultLootLogic;
	bool bResetThisWhenKeepResets;
	struct FName ContainerNameKey;
	class UClass* ContainerDataTable;
	bool bShowChoiceUI;
	TArray<EFortItemType> ItemsInChoiceUI;
	EFortRarity BestAvailableRarity;
	int MaxItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULayerAnimInstance_MechanicalEngineerPet : public UAnimInstance
{
public:
	struct TSoftClassPtr<UObject> GliderSkeletalMesh;
	struct TSoftClassPtr<UObject> GliderPlayerAnimSet;
	struct TSoftClassPtr<UObject> UmbrellaAnimSet;
	struct TSoftClassPtr<UObject> HangGliderAnimSet;
	struct FortAnimInput_Skydiving SkydivingState;
	struct PoseSnapshot GliderSnapshotPose;
	struct Vector AttachLocation;
	struct Rotator AttachRotation;
	struct Vector OwlLocationOffset;
	struct Rotator OwlRotationOffset;
	struct Vector GliderOwlSnapshotLocation;
	struct Vector GliderOwlSnapshotLocationStatic;
	struct Vector PlayerRootSnapshotLocationStatic;
	struct Rotator GliderOwlSnapshotRotation;
	float FrontendLocAlpha;
	float OwlFrameAlpha;
	float OwlPoseAlpha;
	struct Vector PlayerRootLocation;
	struct Rotator PlayerRootRotation;
	struct Vector GliderOwlFrameLandingStart;
	struct Vector Owl_GLBase_Location;
	struct Rotator Owl_GLBase_Rotation;
	struct FortAnimInput_AimScrambleDataHelper AimSmooth;
	float SkydiveForward;
	float ClosedAlpha;
	float AdditiveAlpha;
	float Closed_NewCurveValue;
	float GliderCurveValue;
	float WingCorrectiveAdditiveAlpha;
	float LocalVelocityRight;
	bool bSwitchInterpSpeed;
	bool bGateCanPlayLanding;
	bool bGateWrenchTransition;
	bool bOwlIsOnPack;
	bool BlockAnimRule;
	bool bHideOwl;
	bool bDetachFromWrenchTransition;
	bool bSkydiveFreefall;
	bool bIsInLandingPhase;
	bool bCanPlayLandingAnim;
	bool bIsFrontEndContrails;
	bool bUseLayer;
	bool bUsingHangGliderSet;
	bool bUsingUmbrellaGliderSet;
	bool bTransition_ToSkydive;
	bool bTransition_ToClosed;
	bool bTransition_Detach_To_Dive;
	bool bTransition_Detach_To_Glide;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelRecordSpawner : public UObject
{
public:
	struct FScriptMulticastDelegate OnFinishedSpawning;
	class UClass* VolumeCurrentlySpawningWithin;
	class UClass* TaskQueue;
	struct FScriptMulticastDelegate OnFinishedAsyncLoadingActors;
	struct FScriptMulticastDelegate OnFinishedSpawningFromRecords;
	struct FScriptMulticastDelegate OnFinishedPostUpdate;
	TArray<class UClass*> ActorClassesThatWereAlreadyLoaded;
	TArray<class UClass*> SpawnedActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortComponentRecordRedirects : public UObject
{
public:
	TArray<struct ComponentRecordRedirect> ComponentRecordRedirects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveRecordActorClassRedirects : public UObject
{
public:
	TArray<struct AssetManagerRedirect> LevelSaveRecordActorClassRedirects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveRecord : public UObject
{
public:
	struct FName PackageName;
	int16_t SaveVersion;
	bool bCompressed;
	struct Vector Center;
	struct ObjectCostVersion CreateVersion;
	struct Vector HalfBoundsExtent;
	struct Rotator Rotation;
	struct Vector Scale;
	uint64_t LastRecordID;
	Unknown TemplateRecords;
	Unknown ActorInstanceRecords;
	Unknown VolumeInfoActorRecords;
	Unknown LevelStreamedActorsToDelete;
	int PlayerPersistenceUserWipeNumber;
	struct FScriptMulticastDelegate OnFinishedWrite;
	struct FScriptMulticastDelegate OnFinishedRead;
	struct FScriptMulticastDelegate OnFinishedRecordCollapse;
	TArray<struct ActorInstanceRecord> InstanceRecords_LEGACY;
	TArray<struct DeleteActorRecord> DeleteActorRecords_LEGACY;
	struct FScriptMulticastDelegate FinishSpawningDelegate;
	class UClass* TaskQueue;
	TArray<class UClass*> ActiveSpawners;
	struct RecordBucketMap RecordBucketMap;
	struct FScriptMulticastDelegate OnFinishedWriteToBuffer;
	TArray<class UClass*> RecentlySpawnedActors;
	bool bRequiresGridPlacement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveRecordCollection : public UObject
{
public:
	TArray<struct LevelSaveRecordCollectionItem> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveRecordProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveRecordThumbnailGenerator : public UObject
{
public:
	struct TSoftClassPtr<UObject> StageActorClassPtr;
	class UClass* SceneCaptureComponent;
	class UClass* CameraComponent;
	class UClass* ActiveRecordSpawner;
	TArray<class UClass*> SpawnedActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSaveSpawnable : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALevelTestingActorBase : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamPiPBlockManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LobbyBackgroundTakeoverEvent : public FortEventItemDefinitionBase
{
public:
	struct TSoftClassPtr<UObject> StwLobbyBackgroundLevelName;
	struct TSoftClassPtr<UObject> AthenaLobbyBackgroundLevelName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LocalServiceMessageContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULockableInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMapLandComponent : public UActorComponent
{
public:
	struct SlateBrush LandIcon;
	struct Vector LandIconWorldOffset;
	struct Vector MapLocationOverride;
	bool bShadowLayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMatchHeartbeatManager : public UObject
{
public:
	class UClass* OwningGameMode;
	class UClass* SlowStatReader;
	struct MatchHeartbeatManagerTickFunction MatchHearbeatTick;
	int ServerMetricsLOD;
	int HighFrequencyServerMetricsDurationSec;
	int HighFrequencyEventsLOD;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMemoryCategoryMetric : public UCategoryMetric
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimulationCategoryConfiguration : public UObject
{
public:
	TArray<struct FortCreativeBudgetClassInstanceLimit> SavedClassLimits;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAccountantConfiguration : public UObject
{
public:
	struct TSoftClassPtr<UObject> AccountantFactoryClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMetricConfiguration_Legacy : public UObject
{
public:
	TArray<struct TSoftClassPtr<UObject>> CategoryClasses;
	TArray<struct VersionedMetricWrapper> MetricClasses;
	TArray<class UClass*> Metrics;
	Unknown CategoryToMetric;
	TArray<class UClass*> CategoryMetrics;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMinimapHiddenComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionEventParams : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStartMissionParams : public UFortMissionEventParams
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemCollectedParams : public UFortMissionEventParams
{
public:
	class UClass* CollectedItemDefinition;
	class UClass* CollectedBy;
	int AmountCollected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemDroppedParams : public UFortMissionEventParams
{
public:
	class UClass* DroppedItemDefinition;
	class UClass* DroppedBy;
	int AmountDropped;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemCraftedParams : public UFortMissionEventParams
{
public:
	class UClass* SchematicDefinition;
	class UClass* CraftedBy;
	int AmountCrafted;
	bool bItemWasQuickCrafted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEnemyKilledParams : public UFortMissionEventParams
{
public:
	class UClass* KilledPawn;
	class UClass* KilledBy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEnemyDamagedParams : public UFortMissionEventParams
{
public:
	class UClass* DamagedPawn;
	class UClass* DamagedBy;
	float DamageAmount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNewPlayerParams : public UFortMissionEventParams
{
public:
	class UClass* NewPlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAbandonParams : public UFortMissionEventParams
{
public:
	struct UniqueNetIdRepl AbandoningPlayerId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerExitParams : public UFortMissionEventParams
{
public:
	class UClass* ExitingPlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSpawnedParams : public UFortMissionEventParams
{
public:
	class UClass* SpawnedPlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerDiedParams : public UFortMissionEventParams
{
public:
	class UClass* KilledPlayer;
	class UClass* KilledPlayerController;
	class UClass* KilledBy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerDBNOEnterParams : public UFortMissionEventParams
{
public:
	class UClass* KilledPlayer;
	class UClass* KilledBy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerDBNORevivedParams : public UFortMissionEventParams
{
public:
	class UClass* RevivedPlayer;
	class UClass* RevivedBy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDayPhaseChangeParams : public UFortMissionEventParams
{
public:
	class UClass* LightingAndFogManager;
	EFortDayPhase NewDayPhase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerBuiltParams : public UFortMissionEventParams
{
public:
	class UClass* Building;
	EFortBuildingType BuildingType;
	class UClass* Builder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingDestroyedParams : public UFortMissionEventParams
{
public:
	class UClass* Building;
	EFortBuildingType BuildingType;
	class UClass* Destroyer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingEditedParams : public UFortMissionEventParams
{
public:
	class UClass* OriginalBuilding;
	class UClass* NewBuilding;
	EFortBuildingType BuildingType;
	class UClass* Editor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingUpgradedParams : public UFortMissionEventParams
{
public:
	class UClass* OriginalBuilding;
	class UClass* NewBuilding;
	EFortBuildingType BuildingType;
	class UClass* Editor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBuildingDamagedParams : public UFortMissionEventParams
{
public:
	class UClass* Building;
	EFortBuildingType BuildingType;
	class UClass* DamagedBy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionSucceededParams : public UFortMissionEventParams
{
public:
	class UClass* SucceededMission;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionFailedParams : public UFortMissionEventParams
{
public:
	class UClass* FailedMission;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionForceSuccessParams : public UFortMissionEventParams
{
public:
	float FractionCompleted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class UClass* NeutrallyCompletedMission;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortObjectiveSucceededParams : public UFortMissionEventParams
{
public:
	class UClass* SucceededObjective;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortObjectiveFailedParams : public UFortMissionEventParams
{
public:
	class UClass* FailedObjective;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortObjectiveNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class UClass* NeutrallyCompletedObjective;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortToggledCursorModeParams : public UFortMissionEventParams
{
public:
	class UClass* PlayerThatToggledCursorMode;
	bool bInCursorMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortToggledOptionsMenuParams : public UFortMissionEventParams
{
public:
	class UClass* PlayerThatToggledOptionsMenu;
	bool bInOptionsMenu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortToggledEditModeParams : public UFortMissionEventParams
{
public:
	class UClass* PlayerThatToggledEditMode;
	class UClass* EditableActor;
	bool bInEditMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortShutdownParams : public UFortMissionEventParams
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStartLeavingZoneParams : public UFortMissionEventParams
{
public:
	class UClass* PlayerControllerRequestingLeaving;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRiftCreatedParams : public UFortMissionEventParams
{
public:
	class UClass* Rift;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRiftDestroyedParams : public UFortMissionEventParams
{
public:
	class UClass* Rift;
	bool bPauseRift;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeRiftSpawnParams : public UFortMissionEventParams
{
public:
	class UClass* RiftSpawn;
	bool bResumeRift;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeRiftOverlapParams : public UFortMissionEventParams
{
public:
	class UClass* RiftSpawn;
	class UClass* Player;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRiftBeginOverlapPlayerParams : public UFortMissionEventParams
{
public:
	class UClass* Rift;
	class UClass* Player;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRiftEndOverlapPlayerParams : public UFortMissionEventParams
{
public:
	class UClass* Rift;
	class UClass* Player;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNewPlayerHasBegunPlayParams : public UFortMissionEventParams
{
public:
	class UClass* NewPlayerPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerReconnectedParams : public UFortMissionEventParams
{
public:
	class UClass* ReconnectedPlayerPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInstancedPropertyUpgradeMappingBase : public UObject
{
public:
	struct GameplayTag PropertyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInstancedPropertyUpgradeMapping_Float : public UInstancedPropertyUpgradeMappingBase
{
public:
	struct Vector2D LegacyRange;
	struct Vector2D Range;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInstancedPropertyUpgradeMapping_Flag : public UInstancedPropertyUpgradeMappingBase
{
public:
	int Index;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMobileHUDLayoutLegacyConverter : public UObject
{
public:
	struct FText ConvertedProfiletName;
	Unknown GlobalTagClassOverrides;
	TArray<struct WidgetMappingContainer> TagMappings;
	TArray<struct WidgetVisibilityOverride> VisibilityOverrides;
	TArray<struct WidgetPropertyUpgradeData> PropertyUpgradeMappings;
	TArray<struct WidgetLayoutProxy> WidgetLayoutProxies;
	struct Vector2D LegacyCanvasSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovementComp_Tracer : public UMovementComponent
{
public:
	float Speed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMyTownData : public UDataAsset
{
public:
	TArray<struct MyTownWorkerPersonalityData> WorkerPersonalities;
	TArray<struct MyTownWorkerSetBonusData> WorkerSetBonuses;
	class UClass* PersonnelXpItemDefinition;
	class UClass* HeroXpItemDefinition;
	class UClass* VoucherItemDefinition;
	class UClass* SchematicXpItemDefinition;
	class UClass* CurrencyItemDefinition;
	class UClass* SkillPointItemDefinition;
	class UClass* ResearchPointItemDefinition;
	class UClass* TotalRatingGameplayEffect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavGraphDebugActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANightNightBase : public AActor
{
public:
	bool bPrepareClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNoWeaponZoneTrackedData : public UDeviceTrackedData
{
public:
	struct FScriptMulticastDelegate OnResetActorsDestroyedCount;
	class UClass* Minigame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UObjectMemoryMetric_Legacy : public UObjectMetric_Legacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOpenableInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPakWhitelistCommandlet : public UCommandlet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PapayaAnalyticsComponent : public FortPlayspaceComponent
{
public:
	class UClass* ParentAnalyticsComp;
	class UClass* ChildAnalyticsComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PapayaLiveEventComponent : public FortPlayspaceComponent
{
public:
	TArray<class UClass*> ActiveCustomEmotes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PapayaPlayerSpawningComponent : public PlayspaceComponent_PlayerSpawning
{
public:
	TArray<class UClass*> BestSpawnPoints;
	TArray<class UClass*> HighPrioritySpawnPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PapayaPlayspaceHub : public FortPlayspace
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PapayaServerMigrationComponent : public FortPlayspaceComponent
{
public:
	TArray<struct ServerMigrationAlertData> AlertDataList;
	float LastRequestedTimeForMigrationTimerPushback;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APartyDisplayManager : public AActor
{
public:
	TArray<class UClass*> PlacementActors;
	class UClass* VaultPlacementActor;
	class UClass* VaultWeaponPlacementActor;
	struct FScriptMulticastDelegate OnClickedPartyPlayer;
	struct FScriptMulticastDelegate OnBeginCursorOverPartyPlayer;
	struct FScriptMulticastDelegate OnEndCursorOverPartyPlayer;
	struct FScriptMulticastDelegate OnItemDisplayReady;
	struct FScriptMulticastDelegate OnPrefabForCurrentlyDisplayedItemChanged;
	class UClass* PlayerInMatchHoloMaterial;
	bool IsPlayingCelebrateFX;
	Unknown HeroPlayerPawns;
	struct FortAthenaLoadout CurrentlyDisplayedCosmeticLoadout;
	TArray<class UClass*> CurrentContentOnDemandItemDefs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate Completed;
	class UClass* Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPegasusDriver : public UObject
{
public:
	float PollIntervalSeconds;
	float BaseHoursUntilClose;
	class UClass* VideoManager;
	bool bShouldDevBuildsShowFPS;
	float InactivityCheckSecondsInterval;
	float MaxSecondsBetweenVideoExports;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPegasusGameEventCollector : public UActorComponent
{
public:
	float InventoryChangesTimeSpan;
	float EndSkydivePlayerCheckRadius;
	float WeaponExecutedTimeSpan;
	float BuildingBeginPlayTimeSpan;
	float ExpensiveTestInterval;
	float SquadCohesionTestRadius;
	float PlayerResourceEventsTimeSpan;
	float EliminationEventsTimeSpan;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_PerkSystem : public FortControllerComponent
{
public:
	float ServerTimeToRelease;
	int RerollCount;
	TArray<class UClass*> AllSelectedPerks;
	TArray<class UClass*> DefaultPerks;
	TArray<struct PerkItemSet> PerkSelection;
	TArray<class UClass*> SpyTechArray;
	TArray<struct PerkAccoladeInfo> AllPerkAccolades;
	struct PerkMutatorData MutatorData;
	struct GameplayTag CachedFactionTag;
	struct RoundTechDataCache RoundStartCache;
	TArray<struct FortAbilitySetHandle> AbilitySetHandles;
	TArray<struct ActiveGameplayEffectHandle> GEHandles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PetSyncedDanceItemDefinition : public AthenaDanceItemDefinition
{
public:
	struct TSoftClassPtr<UObject> DefaultPetAnimation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayerTrapBonusModMagnitudeCalculation : public FortGameplayModMagnitudeCalculation
{
public:
	struct GameplayAttribute Attribute;
	float AttributeDefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaysetGenerationTask : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaysetGenerationQueue : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPPIDThumbnailGenerationQueue : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlaysetLevelStreamComponent : public UActorComponent
{
public:
	float MaxStreamInDistance;
	bool bAutoLoadLevel;
	bool bAllowUnload;
	bool bWaitOnMessageBeforeLoading;
	class UClass* CurrentPlayset;
	struct FortPlaysetStreamingData ClientPlaysetData;
	TArray<struct UniqueNetIdRepl> PlayersWithValidPlaysetData;
	class UClass* StreamedLevel;
	struct FName ClientLoadedPackageName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayspaceComponent_MeshNetworkEventResponder : public FortPlayspaceComponent
{
public:
	Unknown ActiveEventsToTagsToApplyMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayspaceComponent_SpatialActorTracker : public FortPlayspaceComponent
{
public:
	bool bCheckOverlapsOnStartup;
	bool bSceneQueryOnStartup;
	ESceneQueryShape SceneQueryShape;
	bool bEnableReScanTimer;
	float ReScanFrequencyInSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayspaceComponent_SpatialGameplay : public FortPlayspaceComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPoiNamedWeights : public UDataAsset
{
public:
	Unknown LocationSpecifiedEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPrimitiveModularCrosstalkInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVideoCaptureProfilingHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFrameStatsProfilingHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPrimitiveStatsProfilingHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMemoryStatsProfilingHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimClassProfilingHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreativeProfilingHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPulseIndicatorComponent : public UActorComponent
{
public:
	TArray<struct IndicatedActorDataWithFilter> IndicatedActorFilters;
	struct FString IndicatorGroupIdentifierOverride;
	struct FString StencilGroupIdentifierOverride;
	class UClass* PlayerPingSound;
	struct IndicatedActorParticleSystemData PlayerParticleSystemData;
	struct ScalableFloat PulseTime;
	struct ScalableFloat MarkRadius;
	struct ScalableFloat MarkDuration;
	struct ScalableFloat StepTime;
	struct FString PlayerGroupIdentifier;
	struct FDelegate OnActorAdded;
	struct FDelegate OnActorRemoved;
	class UClass* IndicatingController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UQuestInteractableComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate SetupForServer;
	struct FScriptMulticastDelegate Unavailable;
	struct FScriptMulticastDelegate ClientQuestVisualCreated;
	struct FScriptMulticastDelegate ClientQuestEnabled;
	struct FScriptMulticastDelegate ClientQuestDisabled;
	struct FScriptMulticastDelegate ClientQuestObjectiveComplete;
	struct FString CalendarEnableEvent;
	struct GameplayTagContainer BlockedPlaylistTags;
	class UClass* QuestItemDefinition;
	struct FName ObjectiveBackendName;
	struct TimerHandle DelayUntilCurrentQuestsReady;
	bool bReady;
	TArray<class UClass*> LocalPlayersOnTheQuest;
	struct TSoftClassPtr<UObject> QuestVisualClass;
	bool bDestroyActorWhenUnavailable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AQuestVisual : public AActor
{
public:
	class UClass* OwningLocalPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UQuickHealItemPicker : public UObject
{
public:
	TArray<struct QuickHealPriority> QuickHealPriorities;
	struct GameplayTag HealingItemComparisonTag;
	struct GameplayTag ShieldItemComparisonTag;
	struct GameplayTagContainer SpecialActionTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URegisterWithMutatorComponentManager : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class URegisterWithMutatorComponent : public UActorComponent
{
public:
	struct GameplayTagContainer GameplayTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URenderingCategoryMetric : public UCategoryMetric
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplaySequenceComponentOwner : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplayVideoManager : public UObject
{
public:
	class UClass* ActiveTimelineCollector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RespawnAndSpectatePlayerComponent : public FortControllerComponent
{
public:
	float RespawnFailSafeTime;
	class UClass* ManagingMutator;
	ERespawnAndSpectatePlayerRespawningState RespawningState;
	int ReplicateClientScreenFade_FadeIn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RewardGraphToken : public FortTokenType
{
public:
	struct TSoftClassPtr<UObject> PrimaryCosmeticItem;
	TArray<struct FortCosmeticVariantPreview> ItemVariantPreviews;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARigidBall : public AFortPhysicsPawnObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASafeZoneLocation : public AActor
{
public:
	class UClass* PreviewShieldRing;
	struct GameplayTag LocationTag;
	float PreviewZScale;
	float SafeZoneRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USaveData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USaveDataSubsystem : public ULocalPlayerSubsystem
{
public:
	class UClass* LocalForDevice;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleColorBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionVector ScaleColorByMagnitude;
	struct RawDistributionFloat ScaleAlphaByMagnitude;
	bool bClampAlpha;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleLifetimeBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionFloat ScaleLifetimeByMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleRotationRateBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionFloat ScaleRotationRateByMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleSizeBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionVector ScaleSizeByMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleVelocityBySoundModule : public USoundParticleModuleBase
{
public:
	struct RawDistributionVector ScaleVelocityByMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScriptedPawnBlueprintAction : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate ScriptCompletePin;
	class UClass* WorldContextObject;
	struct Vector SpawnLocation;
	struct Rotator SpawnRotator;
	struct FString ScriptName;
	class UClass* ScriptedPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScriptedPawnRunScriptBlueprintAction : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate RunScriptCompletePin;
	class UClass* WorldContextObject;
	struct Vector SpawnLocation;
	struct Rotator SpawnRotator;
	struct FString ScriptName;
	class UClass* ScriptedPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimulationCategoryMetric : public UCategoryMetric
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USingleIndexSelectionModel : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlowStatReader : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFFTSoundDataProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialGameplayOverlapComponent : public OverlapComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpecialEventHelpers : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpecialEventInputHelperComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate SpecialEventInputUpdateDelegate;
	struct FScriptMulticastDelegate SpecialEventLookInputUpdateDelegate;
	struct FScriptMulticastDelegate SpecialEventInputPressDelegate;
	bool bBlockInput;
	bool bConsumeMoveInput;
	bool bConsumeLookInput;
	class UClass* InputComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplicationGraphNode_SpecialRelevancy : public ReplicationGraphNode_GridSpatialization2D
{
public:
	TArray<struct SpecialRelevancyGroup> RelevancyGroups;
	class UClass* PlayerPawnClass;
	TArray<class UClass*> ProjectileClasses;
	TArray<class UClass*> SpecialActorClasses;
	struct SpecialRelevancyModeData CurrentRelevancyModeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpecialRelevancy : public AFortAthenaMutator
{
public:
	class UClass* RootGridNodeClass;
	TArray<struct SpecialRelevancyMultiSquadControllerGroupsContainer> MultiSquadControllerGroupsContainers;
	struct SpecialRelevancyModeData CurrentRelevancyModeData;
	class UClass* PlayerPawnClass;
	TArray<class UClass*> ProjectileClasses;
	struct GameplayTagContainer TagsToHideOnRelevancyMode;
	class UClass* SpecialRelevancyNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_SpecialRelevancy : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpyRumbleSupplyDropComponent : public UActorComponent
{
public:
	Unknown CachedMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStat : public UObject
{
public:
	struct FName StatName;
	EStatRecordingPeriod HighestPeriodToTrack;
	int AbsoluteMaxValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBaseStatManager : public UObject
{
public:
	TArray<class UClass*> Stats;
	struct FString StatPrefix;
	class UClass* Controller;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStatManager : public UBaseStatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStormCameraModifier : public UCameraModifier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USTWDeveloperSettings : public UDeveloperSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASupplyDropSpawner : public ABuildingProp
{
public:
	float MinSpawnHeightOverride;
	float MaxSpawnHeightOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynchronizedTeleportPlayerComponent : public FortControllerComponent
{
public:
	class UClass* TeleportScreenMusicCue;
	float TeleportScreenFadeoutTime;
	bool bIsServerWaitingForClientToCancelRespawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TargetingFilterTask_Affiliation : public TargetingFilterTask_BasicFilterTemplate
{
public:
	EFortTeamAffiliation AffiliationType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TargetingFilterTask_GameplayTagQuery : public TargetingFilterTask_BasicFilterTemplate
{
public:
	struct GameplayTagQuery GameplayTagQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TargetingFilterTask_GameplayTagRequirements : public TargetingFilterTask_BasicFilterTemplate
{
public:
	struct GameplayTagRequirements GameplayTagReqs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TargetingFilterTask_ObstructedByWorld : public TargetingFilterTask_BasicFilterTemplate
{
public:
	bool bComplexTrace;
	bool bExcludeAllAttachedToTarget;
	bool bExcludeInstigator;
	bool bExcludeAllAttachedToInstigator;
	bool bExcludeAthenaVehicleOfInstigator;
	bool bExcludeAllAttachedToSource;
	bool bExcludeAthenaVehicleOfSource;
	bool bExcludeAthenaVehicleFromObstructionChecks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TargetingSelectionTask_GameMode_AlivePlayers : public TargetingTask
{
public:
	bool bAddPlayerBots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AThreatCloud : public AActor
{
public:
	TArray<class UClass*> LightningSourceAreas;
	struct SlateBrush MiniMapIconBrush;
	float MiniMapIconPercent;
	struct SlateBrush MiniMapFarOffIconBrush;
	struct LinearColor ActiveTint;
	struct LinearColor InActiveTint;
	float ActiveTransitionTime;
	float DeathTimerDuration;
	float CloudMiniMapTickInterval;
	float MiniMapFarOffIconDegreesOfArc;
	struct Box ThreatBoxVolume;
	float GroundLevelUnderCloud;
	TArray<struct Vector> GoalActorLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTutorialSubsystem : public UGameInstanceSubsystem
{
public:
	Unknown TutorialManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUFortContextualTutorialDefinition_GameplayEvent : public UFortContextualTutorialDefinition
{
public:
	struct GameplayTagContainer ActivationEventsToTrack;
	struct GameplayTagContainer CompletionEventsToTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUnicornAthenaPawnSampler : public UActorComponent
{
public:
	bool bShouldListenOutToDBNOEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AUnicornDriver : public AInfo
{
public:
	bool bEnable_MainHighlightReel;
	bool bEnable_ShorterExtendedHighlightReel;
	bool bEnable_ShortHighlightReel;
	bool bEnable_ShortExtendedHighlightReel;
	bool bEnable_MediumHighlightReel;
	bool bEnable_MediumExtendedighlightReel;
	bool bEnable_PlayerSpotlightReel;
	bool bEnable_PlayerSpotlightNoDeathsReel;
	bool bEnable_VATReel;
	float ShorterReelMaxClipDuration;
	float ShorterReelMaxLookback;
	float ShorterReelMaxTailTime;
	float ShorterReelEliminationLookbackTime;
	float ShortReelMaxClipDuration;
	float ShortReelMaxLookback;
	float ShortReelMaxTailTime;
	float ShortReelEliminationLookbackTime;
	float ShortExtendedReelMaxClipDuration;
	float ShortExtendedReelMaxLookback;
	float ShortExtendedReelMaxTailTime;
	float ShortExtendedReelEliminationLookbackTime;
	float MediumReelMaxClipDuration;
	float MediumReelMaxLookback;
	float MediumReelMaxTailTime;
	float MediumExtendedReelMaxClipDuration;
	float MediumExtendedReelMaxLookback;
	float MediumExtendedReelMaxTailTime;
	float VATReelEliminationLookbackTime;
	int MaxHighlightsToSave;
	float MinHighlightScore;
	float DefaultShotLeadTime;
	float DefaultShotTailTime;
	float HighlightAnnotationTime;
	int MinimumPlacementForHighlight;
	bool bEnsureChronologicalHighlights;
	class UClass* SocialComponent;
	class UClass* WebAPIComponent;
	bool bShouldUploadHighlightsPayload;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUnicornSocialComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUnicornWebAPIComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UValetRaisinComponent : public UActorComponent
{
public:
	class UClass* AttenuationSettings;
	class UClass* PresetChain;
	bool bShouldManageOwnAudio;
	class UClass* DynamicAudioComponent;
	class UClass* ReplicatedSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVideoExtractionBootstrapper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterVolume_Shallow : public AGameplayEffectVolume
{
public:
	class UClass* EntrySound;
	class UClass* ExitSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterVolume_Athena : public AWaterVolume_Shallow
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterVolume_Deep : public APhysicsVolume
{
public:
	class UClass* EntrySound;
	class UClass* ExitSound;
	int DamagePerSec;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWeaponHitNotifyAudioBank : public UDataAsset
{
public:
	class UClass* SoundBody;
	class UClass* SoundCrit;
	class UClass* SoundShield;
	class UClass* SoundDeath;
	class UClass* SoundDeathCrit;
	class UClass* SoundBodyReceive;
	class UClass* SoundCritReceive;
	class UClass* SoundDeathReceive;
	class UClass* SoundDeathCritReceive;
	class UClass* SoundFallReceive;
	class UClass* SoundFallDeathReceive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWeaponScopeModifier : public UCameraModifier
{
public:
	struct PostProcessSettings ScopeSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWorkerBoardBase : public AActor
{
public:
	TArray<class UClass*> WorkerPortraitComponents;
	TArray<class UClass*> WorkerItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWorldMapPin : public AActor
{
public:
	class UClass* SceneComponent;
	struct FString TheaterId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWorldMapPinManager : public AActor
{
public:
	class UClass* WorldMapMesh;
	TArray<class UClass*> CurrentPins;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorldTheme : public UDataAsset
{
public:
	TArray<struct TileGroupSelection> TileGroups;
	class UClass* FillerTileGroup;
	int MaxCircuitSize;
	struct TSoftClassPtr<UObject> BorderWorld_I;
	struct TSoftClassPtr<UObject> BorderWorld_IO;
	struct TSoftClassPtr<UObject> BorderWorld_O;
	struct TSoftClassPtr<UObject> BorderWorld_OO;
	struct TSoftClassPtr<UObject> BorderWorld_OOO;
	struct TSoftClassPtr<UObject> BorderWorld_OOOO;
	struct TSoftClassPtr<UObject> BorderWorld_S;
	struct TSoftClassPtr<UObject> BorderWorld_SS;
	struct TSoftClassPtr<UObject> BorderWorld_OS;
	struct TSoftClassPtr<UObject> BorderWorld_SO;
	struct TSoftClassPtr<UObject> BorderWorld_SOO;
	struct TSoftClassPtr<UObject> BorderWorld_U;
	struct TSoftClassPtr<UObject> BorderWorld_R;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWorldTileFoundation : public ABuildingFoundation
{
public:
	byte NumRotations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorldTileGroup : public UDataAsset
{
public:
	struct FString TileID;
	bool bOnlyPlaceDiagonalWithAdjacent;
	TArray<struct TileGroupMapInfo> FlatMapInfos;
	TArray<struct TileGroupMapInfo> InnerMapInfos;
	TArray<struct TileGroupMapInfo> OuterMapInfos;
	TArray<struct TileGroupMapInfo> StraightMapInfos;
	struct TSoftClassPtr<UObject> Sim_FlatWorld;
	struct TSoftClassPtr<UObject> Sim_InnerWorld;
	struct TSoftClassPtr<UObject> Sim_OuterWorld;
	struct TSoftClassPtr<UObject> Sim_StraightWorld;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorldTileManager : public UObject
{
public:
	class UClass* WorldManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWorldTileType : public UDataAsset
{
public:
	struct FString TileID;
	TArray<struct FString> TileGroups;
	int TileWeight;
	EFortTileEdgeType North;
	EFortTileEdgeType East;
	EFortTileEdgeType South;
	EFortTileEdgeType West;
	TArray<struct FString> MapNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWrapPreviewGridActor : public AInfo
{
public:
	class UClass* WrapToApply;
	EItemWrapMaterialType MaterialTypeForRawMeshes;
	struct Vector SpawnAxisX;
	struct Vector SpawnAxisY;
	int WidthInItems;
	struct Vector2D SpawnSpacing;
	struct Rotator SpawnRotation;
	struct Vector IconOffset;
	bool bScanForWeapons;
	bool bShowRangedWeapons;
	bool bShowMeleeWeapons;
	bool bExcludePrototypeRangedWeapons;
	bool bFilterOutRarityDupesForRangedWeapons;
	bool bFilterOutTierDupesForWeapons;
	bool bFilterOutCraftingMaterialDupesForWeapons;
	EWrapPreviewGridLockerMode LockerFilterMode;
	bool bShowOnlyItemsThatDontHaveWrapLockerSlot;
	bool bShowWrapMatchIcon;
	bool bHasSectionLimit;
	int MaterialSectionMask;
	struct DirectoryPath RangedWeaponPath;
	TArray<class UClass*> ListOfActorsToSpawn;
	TArray<class UClass*> ListOfMeshesToSpawn;
	TArray<class UClass*> SpawnedActors;
	TArray<class UClass*> LockerCategoryMarkers;
	class UClass* FailedToMatchLockerMarker;
	float StatusIconSize;
	bool bStatusIconScreenSizeScaled;
	TArray<struct McpVariantChannelInfo> VariantData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaItemManagementInventoryFilterTabLabelInfo : public FortTabButtonLabelInfo
{
public:
	struct FName FilterTabNameId;
	bool bAllowEmptySlotItem;
	struct FText EmptyFilterDisplay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LeaderboardFilter : public PlaylistFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentDisplayInfo : public TableRowBase
{
public:
	struct FText TitleLine1;
	struct FText TitleLine2;
	struct FText ScheduleInfo;
	struct FText FlavorDescription;
	struct FText DetailsDescription;
	struct FText ShortFormatTitle;
	struct FText LongFormatTitle;
	struct FText BackgroundTitle;
	int PinScoreRequirement;
	struct FText PinEarnedText;
	struct LinearColor BaseColor;
	struct LinearColor PrimaryColor;
	struct LinearColor SecondaryColor;
	struct LinearColor HighlightColor;
	struct LinearColor TitleColor;
	struct LinearColor ShadowColor;
	struct LinearColor BackgroundLeftColor;
	struct LinearColor BackgroundRightColor;
	struct LinearColor BackgroundTextColor;
	struct LinearColor PosterFadeColor;
	struct FText AlertText;
	EFortTournamentAlertType AlertType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementInventoryFilterTabLabelInfo : public FortTabButtonLabelInfo
{
public:
	struct FName FilterTabNameId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemDefOptionData : public RadialOptionData
{
public:
	class UClass* ItemDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SquadQuickChatOptionData : public RadialOptionData
{
public:
	struct AthenaQuickChatActiveEntry ChatEntry;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildingCategoryOptionData : public RadialOptionData
{
public:
	EFortBuildingType BuildingType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BuildingOptionData : public RadialOptionData
{
public:
	struct FString ClassSuffix;
	bool ClassMirrored;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemCategoryOptionData : public RadialOptionData
{
public:
	struct FString TemplatePrefix;
	EBuildingAttachmentType BuildingAttachmentType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChatOptionData : public RadialOptionData
{
public:
	struct FText ChatText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MapNoteOptionData : public RadialOptionData
{
public:
	struct FText MapNoteText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteOptionData : public RadialOptionData
{
public:
	struct FName EmoteCommand;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration : public FortItemCard_PowerRatingBlock_Configuration
{
public:
	struct SlateBrush PersonnelPowerRatingIconBrush;
	struct TSoftClassPtr<UObject> PersonnelPowerRatingTextStyle;
	struct SlateBrush SchematicPowerRatingIconBrush;
	struct TSoftClassPtr<UObject> SchematicPowerRatingTextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCard_PowerRatingBlock_ItemInstance_Configuration : public FortItemCard_PowerRatingBlock_Configuration
{
public:
	struct SlateBrush PowerRatingIconBrush;
	struct TSoftClassPtr<UObject> PowerRatingTextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GGCenterDisplayEntry : public FortChangeMonitoringStruct
{
public:
	class UClass* WeaponAt;
	int PlayersAtWeapon;
	bool bIsEnabled;
	bool bShowHarvestingTool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryDropStackSizeRow : public TableRowBase
{
public:
	struct GameplayTagContainer ItemTags;
	int StackSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryItemStatBoundsRow : public TableRowBase
{
public:
	struct GameplayTagContainer ItemTags;
	struct StatBound Damage;
	struct StatBound FireRate;
	struct StatBound MagazineSize;
	struct StatBound ReloadTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLeaderboardData : public TableRowBase
{
public:
	EFortAthenaPlaylist Playlist;
	struct FName PlaylistName;
	ECommonInputType InputType;
	TArray<struct AthenaPlaylistLeaderboardData> Stats;
	bool bExcludePlaylistNames;
	TArray<struct FString> PlaylistNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavigateToBattlePassSubPageMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlaylistMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialScreenMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WebsiteMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChallengeMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SettingsMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavigateToTabMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SmallNewsMOTD : public AthenaMOTDBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPhoenixSeasonDisplayInfoMapRow : public TableRowBase
{
public:
	struct FString EventFlagName;
	class UClass* DisplayInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSubscriptionExpectedRewards : public AthenaSubscriptionMonthlyRewards
{
public:
	EMcpSubscriptionState SubscriptionState;
	struct FText SkinDescription;
	struct FText MtxDescription;
	bool bUsingNextSkin;
	bool bUsingNextBattlepassImage;
	bool bUsingNextBattlepassTexts;
	bool bUsingNextSkinTileImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeItemListCategoryData : public TableRowBase
{
public:
	ECreativeItemCategory Category;
	EFortItemCardSize CardSize;
	bool bCollapseCardBorderPad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeServerDisplayOption : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> Image;
	struct LinearColor Color;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroNamesData : public TableRowBase
{
public:
	struct FString FirstName;
	struct FString NickName;
	struct FString LastName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRefundDescriptionsData : public TableRowBase
{
public:
	struct FString SearchString;
	struct FString TargetReleaseVersion;
	struct FText RefundDescriptionText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UserSelectProfileAction : public UserAction
{
public:
	struct FortMobileHUDProfileBase PreviousProfile;
	struct FortMobileHUDProfileBase NewProfile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UserRenameAction : public UserAction
{
public:
	struct FString PreviousName;
	struct FString NewName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UserGenericAction : public UserAction
{
public:
	struct FortMobileHUDProfileBase ActiveProfile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SquadChatOptionData : public RadialOptionData
{
public:
	struct FText ChatText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionGroupBase : public FortPlayerSurveyCMSDataConditionBase
{
public:
	TArray<struct JsonObjectWrapper> C;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionAnd : public FortPlayerSurveyCMSDataConditionGroupBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionSimpleIntComparisonBase : public FortPlayerSurveyCMSDataConditionBase
{
public:
	EFortPlayerSurveyCMSDataBinaryComparisonOp O;
	int T;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionAthenaMatchStat : public FortPlayerSurveyCMSDataConditionSimpleIntComparisonBase
{
public:
	TArray<EFortPlayerSurveyCMSDataPlaylistCategory> pt;
	Unknown P;
	TArray<struct FString> I;
	struct FString S;
	EFortPlayerSurveyCMSDataAggregateOp ag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionAthenaPoi : public FortPlayerSurveyCMSDataConditionBase
{
public:
	struct FortPlayerSurveyCMSDataGameplayTagQuery Q;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionAthenaSeasonBookState : public FortPlayerSurveyCMSDataConditionBase
{
public:
	bool T;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionAthenaSeasonStat : public FortPlayerSurveyCMSDataConditionSimpleIntComparisonBase
{
public:
	EFortPlayerSurveyCMSDataAthenaSeasonStat S;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionGroupReference : public FortPlayerSurveyCMSDataConditionBase
{
public:
	struct FName ID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionMostRecentlyCompleted : public FortPlayerSurveyCMSDataConditionBase
{
public:
	struct FortPlayerSurveyCMSDataRelativeSurveyKey S;
	EFortPlayerSurveyCMSDataBinaryComparisonOp O;
	double T;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionOr : public FortPlayerSurveyCMSDataConditionGroupBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionPlatform : public FortPlayerSurveyCMSDataConditionBase
{
public:
	Unknown P;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionQuestState : public FortPlayerSurveyCMSDataConditionBase
{
public:
	EFortPlayerSurveyCMSDataGameMode sg;
	struct FString Q;
	TArray<EFortPlayerSurveyCMSDataQuestState> st;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionRandom : public FortPlayerSurveyCMSDataConditionBase
{
public:
	float P;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionSeasonNumber : public FortPlayerSurveyCMSDataConditionSimpleIntComparisonBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataConditionTimesCompleted : public FortPlayerSurveyCMSDataConditionBase
{
public:
	struct FortPlayerSurveyCMSDataRelativeSurveyKey S;
	EFortPlayerSurveyCMSDataBinaryComparisonOp O;
	int T;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataQuestionStandardBase : public FortPlayerSurveyCMSDataQuestionBase
{
public:
	EFortPlayerSurveyCMSDataPresentationStyle S;
	struct FText T;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataQuestionFreeFormText : public FortPlayerSurveyCMSDataQuestionStandardBase
{
public:
	struct FText ht;
	bool R;
	int L;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataQuestionMultipleChoice : public FortPlayerSurveyCMSDataQuestionStandardBase
{
public:
	TArray<struct FortPlayerSurveyCMSDataQuestionChoice> C;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyCMSDataQuestionMultipleSelection : public FortPlayerSurveyCMSDataQuestionStandardBase
{
public:
	TArray<struct FortPlayerSurveyCMSDataQuestionChoice> C;
	int mn;
	int mx;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapEventQuestSideBarData : public TableRowBase
{
public:
	class UClass* QuestItemDefinition;
	TArray<struct FString> EventFlags;
	bool bShowAlways;
	float CycleTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRichTextStyleData : public TableRowBase
{
public:
	struct TextBlockStyle TextStyle;
	bool bHyperlinkStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventStyleInfo : public TableRowBase
{
public:
	struct LinearColor BaseColor;
	struct LinearColor PrimaryColor;
	struct LinearColor SecondaryColor;
	struct LinearColor HighlightColor;
	struct LinearColor TitleColor;
	struct LinearColor ShadowColor;
	struct LinearColor BackgroundLeftColor;
	struct LinearColor BackgroundRightColor;
	struct LinearColor BackgroundTextColor;
	struct LinearColor PosterFadeColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownScoringRuleDisplayInfo : public TableRowBase
{
public:
	struct FText Description;
	struct TSoftClassPtr<UObject> Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OfferPopUpData : public TableRowBase
{
public:
	struct FText FormatedText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIStateTag : public UITag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaUIStateTag : public UIStateTag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStartupUIStateTag : public UIStateTag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIPickerTrapSortModifier : public TableRowBase
{
public:
	struct GameplayTagQuery ItemTagQuery;
	float ScoreBonus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUITutorialData : public TableRowBase
{
public:
	struct FName TutorialWidgetName;
	struct FText Title;
	struct FString DevComment;
	TArray<struct FText> Descriptions;
	TArray<struct TSoftClassPtr<UObject>> PreviewImages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHealthyGamingData : public TableRowBase
{
public:
	float HealthWarningToastInterval;
	struct FText HealthWarningToastDescriptionFormat;
	struct FText HealthWarningScreenText;
	struct FText GameplayRestrictionText;
	float GameplayRestrictionWarningTimeOffset;
	struct FText AntiAddictionTotalDescriptionFormat;
	bool bUsePlayerTimeLimitSystem;
	TArray<struct TSoftClassPtr<UObject>> RatingIcons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadIconData : public TableRowBase
{
public:
	struct FortMultiSizeBrush Brush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HomebaseNodeDisplayData : public TableRowBase
{
public:
	struct FText Title;
	struct FText Description;
	struct TSoftClassPtr<UObject> LargePreviewImage;
	struct TSoftClassPtr<UObject> SmallPreviewImage;
	class UClass* PreviewVideoMediaSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIGameFeatureAction : public GameFeatureAction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHoldableButton : public CommonButtonBase
{
public:
	bool bIsHoldableButton;
	bool bIgnoreLongPress;
	float HoldTime;
	float StartingHoldPercentage;
	float QualifyingHoldTime;
	bool bHoldCancelledFromMovement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActivatablePanel : public CommonActivatablePanelLegacy
{
public:
	bool bIsPushedOnToContentPanelStack;
	bool bIsAlreadyOnContentPanelStack;
	EInputPriority InputPriority;
	bool bIsClosableByPlayerInput;
	struct PrimaryContentSetup PrimaryContentSetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemPreviewScreen : public FortActivatablePanel
{
public:
	struct DataTableRowHandle ItemViewUnifiedSupportsCameraControlInputAction;
	struct DataTableRowHandle ItemViewUnifiedZoomInputAction;
	struct DataTableRowHandle ItemViewZoomOutInputAction;
	struct DataTableRowHandle ItemViewZoomInInputAction;
	struct DataTableRowHandle ItemViewRotateInputAction;
	class UClass* AnimationToHideItemInfo;
	bool bAutoShowDetails;
	bool bItemDetailsHidden;
	float HideItemInfoHeaderDurationSecs;
	bool bAllowItemRotation;
	bool bAllowItemZooming;
	EFrontEndCamera FrontEndCamera;
	struct GameplayTag PreviewSceneChangerTag;
	class UClass* PreviewSceneChanger;
	class UClass* ItemViewObject;
	float CameraEntryTransitionDuration;
	class UClass* CameraEntryTransitionCurve;
	class UClass* Widget_CameraFrame;
	class UClass* Button_PreviewAction;
	class UClass* OverrideFocusWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassScreenBase : public FortItemPreviewScreen
{
public:
	struct DataTableRowHandle RefundGiftToken;
	struct TSoftClassPtr<UObject> SeasonLevelPurchaseScreenClass;
	struct TSoftClassPtr<UObject> SeasonAboutScreenClass;
	struct GameplayTagContainer WrapPreviewExcludedTags;
	EBattlePassView CurrentView;
	class UClass* SeasonData;
	class UClass* CachedVaultWorld;
	class UClass* CurrentDisplayedItem;
	class UClass* LastViewedItem;
	class UClass* CyclingCosmeticItem;
	class UClass* CyclingItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDElementWidget : public CommonUserWidget
{
public:
	struct GameplayTag ElementTag;
	struct GameplayTagContainer HUDElementTag;
	ESlateVisibility HiddenVisibility;
	class UClass* TutorialHighlight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActorIndicatorWidget : public FortHUDElementWidget
{
public:
	class UClass* IndicatedActor;
	class UClass* IndicatedActorComponent;
	struct Vector RelativeLocation;
	float MaxDistance;
	bool bClampOnScreen;
	bool bShowClampToScreenArrow;
	bool bUseScreenSpacePosition;
	struct Vector2D ScreenSpaceRelativeOffset;
	int ScreenPriority;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRadialSlot : public CommonButtonLegacy
{
public:
	class UClass* Image_Icon;
	class UClass* Text_Main;
	class UClass* Overlay_EquippedItem;
	struct TSoftClassPtr<UObject> LockedTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRadialPickerEntry : public FortRadialSlot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuickBarSlotButtonBase : public CommonButtonBase
{
public:
	EFortQuickBars QuickbarIndex;
	int SlotIndex;
	class UClass* ItemIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuickBarSlotExtensionWidgetBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponReticleExtensionWidgetBase : public CommonUserWidget
{
public:
	class UClass* CachedAssociatedWeapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaVehicleDashboardWidget : public FortHUDElementWidget
{
public:
	bool bIsWidgetShowing;
	class UClass* CurrentVehicleActor;
	float CurrentSpeed;
	float TargetFuelPercent;
	float DisplayedFuelPercent;
	float FillBlendSpeed;
	float SpeedTextMaxInterpolationRate;
	struct GameplayTagContainer WidgetTagsToHideWhenVisible;
	float HUDTopSpeed;
	EHorizontalAlignment MobileFuelGaugeHorizontalAlignment;
	EVerticalAlignment MobileFuelGaugeVerticalAlignment;
	struct Margin MobileFuelGaugePadding;
	class UClass* NumericText_Speed;
	class UClass* Overlay_Gauge;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHUDWidgetBehavior : public UObject
{
public:
	struct FText HUDLayoutToolName;
	TArray<class UClass*> HudWidgetContentComponents;
	Unknown CustomPropertyDefaultOverrides;
	TArray<class UClass*> BehaviorExtensions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior : public UHUDWidgetBehavior
{
public:
	TArray<struct FName> ActionNames;
	class UClass* Sprite;
	struct GameplayTag HUDLayoutToolSaveTag_Legacy;
	TArray<class UClass*> ButtonBehaviorComponents;
	int ForcedZOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDElement : public FortHUDElementWidget
{
public:
	struct GameplayTag SizePropertyTag;
	int ForcedZOrder;
	class UClass* ScaleBox_HUDWidgetScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusHUDElement : public FortMobileHUDElement
{
public:
	bool bHideWhenNotUsingTouch;
	bool bUpdatesWithHUDState;
	bool bAlwaysShow;
	EBacchusHUDStateType OnInBuildMode;
	EBacchusHUDStateType OnInCombatMode;
	EBacchusHUDStateType OnInEditMode;
	EBacchusHUDStateType OnInCreativeMode;
	EBacchusHUDStateType OnInBattleLabMode;
	EBacchusHUDStateType IsFreeFalling;
	EBacchusHUDStateType IsGliding;
	EBacchusHUDStateType CanOpenChute;
	EBacchusHUDStateType InLockedBus;
	EBacchusHUDStateType InUnlockedBus;
	EBacchusHUDStateType OnTargeting;
	EBacchusHUDStateType OnUsingScopeTargeting;
	EBacchusHUDStateType OnCanTarget;
	EBacchusHUDStateType OnCanUseScopeTargeting;
	EBacchusHUDStateType OnCrouching;
	EBacchusHUDStateType OnCanUseSecondaryAbility;
	EBacchusHUDStateType OnDBNO;
	EBacchusHUDStateType OnCarryingDBNO;
	EBacchusHUDStateType OnCarryingHeldObject;
	EBacchusHUDStateType OnControllingRCPawn;
	EBacchusHUDStateType OnInVehicle;
	EBacchusHUDStateType OnDrivingVehicle;
	EBacchusHUDStateType OnZiplining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusButton : public BacchusHUDElement
{
public:
	class UClass* DefaultIcon;
	struct LinearColor PressedColor;
	struct LinearColor UnpressedColor;
	EButtonClickMethod ClickMethod;
	EButtonTouchMethod TouchMethod;
	float ButtonSize;
	float ButtonDisplayScale;
	bool ShowRadialProgress;
	struct GameplayTag ListenedGamePlayTag;
	class UClass* Image_Background;
	class UClass* SizeBox_ButtonSize;
	class UClass* SizeBox_ImageSize;
	class UClass* Image_Icon;
	class UClass* RadialButton_ButtonCooldown;
	class UClass* Button_InternalButton;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusActionButton : public BacchusButton
{
public:
	TArray<struct BacchusActionIconMapping> ActionMapping;
	struct FName TempActionMapping;
	TArray<struct GameplayTag> ItemsAllowingClickThrough;
	bool bCapturesInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LTMWidgetBase : public FortHUDElementWidget
{
public:
	class UClass* MutatorClassToWaitFor;
	class UClass* CachedGameplayMutator;
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAboutModal : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate BP_OnAboutModalClosed;
	bool bForceShowPage;
	struct FText Title;
	TArray<struct FText> Entries;
	struct TSoftClassPtr<UObject> HeroImage;
	struct FString BPSTrailerVideoUID;
	struct FString BPSHowToVideoUID;
	struct TSoftClassPtr<UObject> SeasonMovieWidgetClass;
	class UClass* VideoStream_Source;
	class UClass* ScrollBox_Content;
	class UClass* Image_Item;
	class UClass* Button_Close;
	class UClass* Button_Close_Mobile;
	class UClass* Button_BPSTrailer;
	class UClass* Button_BPSTrailer_Mobile;
	class UClass* Button_BPSHowTo;
	class UClass* Button_BPSHowTo_Mobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AlternativeCarryPickupButton : public BacchusActionButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLoadingScreenPreviewPanelBase : public AthenaLoadingScreenPreviewPanel
{
public:
	class UClass* LoadingScreenSlot;
	class UClass* Button_Close;
	class UClass* Button_CloseMobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ApolloIntroLoadingPanel : public AthenaLoadingScreenPreviewPanelBase
{
public:
	class UClass* ApolloIntroPlaylist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ApolloIntroShimBase : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AshtonWidgetBase : public LTMWidgetBase
{
public:
	class UClass* AshtonMutatorRef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncAction_FortPlayerSurveyDispatcherDisplaySurveys : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate Finished;
	class UClass* Dispatcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaAccoladeWrapper : public UObject
{
public:
	struct AthenaAccolades AccoladeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAccoladeListEntryWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAccoladeListWidget : public CommonListView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAccoladesWidget : public FortHUDElementWidget
{
public:
	TArray<struct XPUIEvent> XPEvents;
	struct XPUIEvent CurrentEvent;
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAccountContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChatModalWrapper : public CommonActivatableWidget
{
public:
	class UClass* ChatContainer_Chat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaActivatableChatWidget : public CommonActivatableWidget
{
public:
	class UClass* Activatable_ModalBindings;
	class UClass* Button_HoldToOpen;
	class UClass* InputActionDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAerialFeedback : public FortHUDElementWidget
{
public:
	struct GameplayTagContainer GliderRedeployTags;
	struct GameplayTag AirbagDeployTag;
	class UClass* AirbagItemDefinition;
	class UClass* KeyBind;
	class UClass* Text_Feedback;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAIKillsBase : public FortHUDElementWidget
{
public:
	class UClass* KillsText;
	class UClass* KillsSource;
	bool bCustomKillSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAvailableSquadSlotsListBase : public FortHUDElementWidget
{
public:
	int MaxNumberOfAvailableSquadSlots;
	bool bAlwaysDisplayTopEntryAsDetailed;
	class UClass* EntryBox_AvailableSlotsList;
	class UClass* CachedPlayerVM;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAvailableSquadSlotsListEntryBase : public FortHUDElementWidget
{
public:
	EAvailableSquadSlotsListEntryState CurrentEntryState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaAwardAlertBase : public UserWidget
{
public:
	class UClass* PlayerVM;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattleMapClickHandler : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattleMapNodeTooltip : public CommonUserWidget
{
public:
	class UClass* TextBlock_NodeTitle;
	class UClass* TextBlock_NodeDescription;
	class UClass* TextBlock_NodeTime;
	class UClass* Widget_Selection;
	class UClass* Widget_Scrubbing;
	class UClass* Widget_ScrubbingGamepad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattleMapTimelineWidget : public FortActivatablePanel
{
public:
	class UClass* Button_Forward;
	class UClass* Button_Backward;
	float ForwardButtonPositionAlpha;
	float BackwardButtonPositionAlpha;
	struct DataTableRowHandle ForwardDataTableRow;
	struct DataTableRowHandle BackwardDataTableRow;
	struct DataTableRowHandle StopDataTableRow;
	struct DataTableRowHandle ScrubToDataTableRow;
	struct DataTableRowHandle ExitBattleMapDataTableRow;
	struct DataTableRowHandle ZoomInDataTableRow;
	struct DataTableRowHandle ZoomOutDataTableRow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattlePassItemTracker : public CommonUserWidget
{
public:
	class UClass* Text_Category;
	class UClass* Text_Counter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBattlePassTracker : public CommonUserWidget
{
public:
	class UClass* PassPurchaseScreenClass;
	struct FText OutfitsText;
	struct FText VBucksText;
	struct FText EmotesText;
	struct FText MoreRewardsText;
	struct FText BuyBattlePassTextFormat;
	class UClass* PushedPurchaseScreen;
	class UClass* RichText_PaidItemsCollected;
	class UClass* BattlePassItemTracker_01;
	class UClass* BattlePassItemTracker_02;
	class UClass* BattlePassItemTracker_03;
	class UClass* BattlePassItemTracker_04;
	class UClass* Button_PurchaseBattlePass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastFollowedPlayerInfoBase : public FortHUDElementWidget
{
public:
	class UClass* PlayerWidget;
	class UClass* HitPointBar_Health;
	class UClass* HitPointBar_Shield;
	class UClass* HitPointBar_Vehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGamePhaseWidgetBase : public FortHUDElementWidget
{
public:
	class UClass* StormComingFontMaterial;
	float StormComingWarningTime;
	class UClass* TimeText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastGamePhaseWidget : public AthenaGamePhaseWidgetBase
{
public:
	class UClass* MinigameOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidgetBase : public CommonActivatableWidget
{
public:
	class UClass* WidgetStack_PrimaryContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDBase : public FortUIStateWidgetBase
{
public:
	TArray<class UClass*> MinigameWidgets;
	TArray<class UClass*> WeaponReticleExtensionDatas;
	class UClass* ScalableOverlay;
	class UClass* MapScreenContainer;
	class UClass* AthenaHUDMenu;
	class UClass* AthenaTeamKillsWidget;
	class UClass* TeamInfo;
	class UClass* LocalPlayerHitPointInfo;
	class UClass* AthenaEquippedItemWidget;
	class UClass* SkydivingInfoWidget;
	class UClass* CompassSwitcher;
	class UClass* RetainerBox_TempFrit;
	class UClass* CreativeLinkedVolume;
	class UClass* AthenaIndicatorLayer;
	class UClass* KairosHUDLayerClass;
	TArray<struct MutatorAddedWidgets> MutatorAddedWidgets;
	class UClass* InZoneTitleBar;
	TArray<struct UIExtension> TournamentUIExtensions;
	TArray<struct UIExtension> ArenaTournamentUIExtensions;
	class UClass* CurrentCustomReticleExtension;
	TArray<class UClass*> RecentReticleExtensions;
	struct TSoftClassPtr<UObject> NewEmotePicker;
	struct TSoftClassPtr<UObject> SquadComsPickerClass;
	struct TSoftClassPtr<UObject> WeaponWheelClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastHUDBase : public AthenaHUDBase
{
public:
	struct DataTableRowHandle ToggleMatchStatusActionRowHandle;
	struct DataTableRowHandle ToggleSquadStatusActionRowHandle;
	struct DataTableRowHandle ToggleRemainingPlayersActionRowHandle;
	struct DataTableRowHandle ToggleActiveGridScreenActionRowHandle;
	struct DataTableRowHandle ToggleEliminatedGridScreenActionRowHandle;
	struct DataTableRowHandle ToggleMatchStatusScreenActionRowHandle;
	struct DataTableRowHandle ToggleScoreboardScreenActionRowHandle;
	struct DataTableRowHandle ToggleKillFeedActionRowHandle;
	struct DataTableRowHandle ToggleActionFeedScreenActionRowHandle;
	struct DataTableRowHandle ToggleGotoTimeRowHandle;
	struct DataTableRowHandle TogglePipModeActionRowHandle;
	struct DataTableRowHandle ToggleFollowedPlayerInfoActionRowHandle;
	struct DataTableRowHandle ToggleFullscreenMapActionRowHandle;
	Unknown ExtensionWidgetOverrides;
	class UClass* BroadcastHUDControls;
	class UClass* NameplateLayer;
	class UClass* AthenaBroadcastMapPanel;
	class UClass* EventMatchInfoSwitcher;
	class UClass* Switcher_TopLeft;
	class UClass* TopLeft_Empty;
	class UClass* TopLeft_ViewSettings;
	class UClass* TopLeft_ActionFeed;
	class UClass* TopLeft_GoToTime;
	class UClass* TopLeft_Highlights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastHUDMenuStatusBase : public FortActorIndicatorWidget
{
public:
	float ZOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastHUDMenuStatusLayerBase : public FortHUDElementWidget
{
public:
	class UClass* HUDMenuStatusWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastKillFeedBase : public FortHUDElementWidget
{
public:
	class UClass* KillFeedEntryBox;
	float TimeToShowEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastKillFeedItemBase : public FortHUDElementWidget
{
public:
	struct TSoftClassPtr<UObject> EliminationIcon;
	struct TSoftClassPtr<UObject> StormIcon;
	struct TSoftClassPtr<UObject> FallDamageIcon;
	struct TSoftClassPtr<UObject> ExplosionIcon;
	struct TSoftClassPtr<UObject> DbnoIcon;
	class UClass* Text_InstigatorName;
	class UClass* Text_VictimName;
	class UClass* Image_EntryIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastMapPanelBase : public FortActivatablePanel
{
public:
	class UClass* PlayerList;
	class UClass* AthenaMapLayer;
	class UClass* LhsSwitcher;
	class UClass* Button_CycleSideBar;
	struct DataTableRowHandle CycleSideBarRowHandle;
	class UClass* MapSettingsClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastMatchStatusWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastPlayerEventScoreWidget : public FortHUDElementWidget
{
public:
	class UClass* PlayerEventScoreText;
	class UClass* PlayerEventScoreSwitcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastPlayerLocationWidget : public FortHUDElementWidget
{
public:
	class UClass* PlayerLocationText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastSessionId : public FortHUDElementWidget
{
public:
	class UClass* Text_SessionId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchSquadWidgetBase : public FortHUDElementWidget
{
public:
	Unknown SquadData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaBroadcastSquadStatusWidget : public AthenaEventMatchSquadWidgetBase
{
public:
	struct UniqueNetIdRepl FollowedPlayerUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCareerScreen : public CommonActivatablePanelLegacy
{
public:
	struct TSoftClassPtr<UObject> LeaderboardsScreenClass;
	struct TSoftClassPtr<UObject> ReplayBrowserScreenClass;
	struct DataTableRowHandle BackToSocialTabInputActionRowHandle;
	class UClass* Text_AccountLevel;
	class UClass* Button_Leaderboards;
	class UClass* Button_Replays;
	class UClass* ListView_FeatTimeline;
	class UClass* Text_ChapterContext;
	class UClass* Mobile_CloseButton;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeCountdownDisplay : public UserWidget
{
public:
	struct DateTime UnlockTime;
	ECountdownDisplay DisplayType;
	struct TimerDisplayData DisplayData;
	class UClass* Text_TimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeDateTimeTextBlock : public CommonDateTimeTextBlock
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeDetailBase : public CommonUserWidget
{
public:
	class UClass* ItemInfo_PreviewedItem;
	class UClass* SB_MainContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaChallengeDisplayData : public UDataAsset
{
public:
	int SoonDisplayMinuteThreshold;
	struct LinearColor PartyAssistFontColor;
	struct LinearColor DifficultChallengeFontColor;
	class UClass* PartyAssistIcon;
	class UClass* ExternalPartyAssistIcon;
	struct FortChallengeSetStyle DefaultChallengeStyle;
	struct FortChallengeSetStyle DailyChallengeStyle;
	TArray<struct GameplayTagContainer> PunchCardSortOrder;
	TArray<struct FortChallengePunchCardStyles> ChallengePunchCardStyles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaChallengeDisplayLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeEntry : public UserWidget
{
public:
	class UClass* Text_CurrentTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageGridObject : public UObject
{
public:
	int GridLocation;
	class UClass* BundleData;
	class UClass* QuestItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeImageGridEntry : public CommonButtonLegacy
{
public:
	class UClass* Image_Brush;
	bool bSelected;
	int GridLocation;
	int Column;
	int Row;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeInfoPanelEntry : public CommonUserWidget
{
public:
	class UClass* Image_AssistIcon;
	class UClass* Panel_GroupChallenge;
	class UClass* RichText_AssistTarget;
	class UClass* RichText_ChallengeDesc;
	class UClass* ChallengeProgress_ObjectivesCompleted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeInfoPanel : public CommonUserWidget
{
public:
	EChallengeInfoPage CurrentPage;
	struct DataTableRowHandle CyclePagesInputAction;
	int MaxSuggestedEntries;
	TArray<Unknown> PartyMembersWithAssistedChallenges;
	class UClass* Text_DisplayedChallengeTypes;
	class UClass* EntryBox_Challenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMissionInfoPanel : public CommonUserWidget
{
public:
	class UClass* FrontendChallengeInfoEntry;
	class UClass* MiniChallengeInfoEntry;
	int MaxSuggestedEntries;
	bool bForceToDailyFirst;
	TArray<Unknown> PartyMembersWithAssistedChallenges;
	struct FName PrestigeShimmerParamName;
	struct FName ContextColorParamName;
	struct FName MissionRewardParamName;
	class UClass* Text_DisplayedChallengeTypes;
	class UClass* Text_ChallengeTitle;
	class UClass* Text_ChallengeName;
	class UClass* EntryBox_Challenges;
	class UClass* Button_ViewNextMission;
	class UClass* MissionReward;
	class UClass* Switcher_MissionIcon;
	class UClass* TimerImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInGameChallengeInfoPanel : public CommonUserWidget
{
public:
	int TotalMaxEntries;
	class UClass* ChallengeInfo_PartyAssist;
	class UClass* ChallengeInfo_Daily;
	class UClass* ChallengeInfo_Suggested;
	class UClass* ChallengeInfo_Contextual;
	class UClass* ChallengeInfo_Selected;
	class UClass* Panel_NonSelectedChallenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeRewardDisplayEntry : public UserWidget
{
public:
	class UClass* LazyImage_RewardIcon;
	class UClass* Text_RewardQuantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeRewardDisplay : public UserWidget
{
public:
	class UClass* EntryBox_Rewards;
	class UClass* Image_CompletionIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntryBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeTreeEntry_ChallengeSet : public AthenaChallengeListEntryBase
{
public:
	class UClass* Text_ChallengeSetName;
	class UClass* Text_ChallengeSetContext;
	class UClass* Text_PercentComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntry_Challenge : public AthenaChallengeListEntryBase
{
public:
	bool bHideProgressBar;
	class UClass* RichText_ChallengeDesc;
	class UClass* ChallengeProgress_ObjectivesCompleted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntry_DetailedChallenge : public AthenaChallengeListEntry_Challenge
{
public:
	bool bHasAnyOptionsAvailable;
	bool bIsDisplayingChallengeActions;
	struct DataTableRowHandle BackAction;
	struct DataTableRowHandle CloseChallengeOptionsAction;
	class UClass* BoundAnim_ShowChallengeOptions;
	class UClass* SimpleButton_TopClickArea;
	class UClass* Reward_QuestReward;
	class UClass* Button_PartyAssist;
	class UClass* Button_ReplaceChallenge;
	class UClass* RichText_ActionInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntry_Header : public AthenaChallengeListEntryBase
{
public:
	class UClass* Text_SectionTitle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntry_CompletionReward : public AthenaChallengeListEntryBase
{
public:
	class UClass* Reward_CompletionReward;
	class UClass* RichText_Description;
	class UClass* ChallengeProgress_ObjectivesCompleted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntry_StoreOffer : public AthenaChallengeListEntryBase
{
public:
	struct TSoftClassPtr<UObject> OfferDetailsWidgetClass;
	class UClass* OfferInfo;
	class UClass* SimpleButton_ClickArea;
	class UClass* RichText_Description;
	class UClass* LazyImage_SpecialOffer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListEntry_NpcQuest : public AthenaChallengeListEntryBase
{
public:
	class UClass* RichText_ChallengeDesc;
	class UClass* RichText_ObjectivesCompletedSelected;
	class UClass* RichText_ObjectivesCompletedUnselected;
	class UClass* LazyImage_SourceIcon;
	class UClass* RichText_SourceName;
	class UClass* RichText_FlavorText;
	class UClass* DateTimeText_TimeRemaining;
	class UClass* UserWidget_Rewards;
	class UClass* Text_QuestID;
	struct TSoftClassPtr<UObject> DefaultPortraitDisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeListViewBase : public ListViewBase
{
public:
	float EntrySpacing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeNpcQuestListView : public AthenaChallengeListViewBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeNpcQuestTabList : public CommonUserWidget
{
public:
	class UClass* TabList_ChallengeCategories;
	class UClass* Text_TabName;
	class UClass* TabButtonClass;
	TArray<struct RewardCategoryTabData> RewardTabsData;
	class UClass* DefaultTabDisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeProgressBar : public UserWidget
{
public:
	bool bHideProgressBar;
	class UClass* ProgressBar_StepsCompleted;
	class UClass* RichText_Progress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengePunchCard : public CommonUserWidget
{
public:
	int MaxPunchesAllowed;
	class UClass* Box_PunchSlots;
	class UClass* Text_Title;
	class UClass* Text_Description;
	bool bInitializedWidgetPool;
	bool bBundleIsKnown;
	bool bBangShown;
	Unknown WeakBundleDef;
	struct DateTime MostRecentPunch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengePunchCardEntry : public CommonUserWidget
{
public:
	struct FName IconParamName;
	int SlotIndex;
	bool bIsBeingPlaced;
	class UClass* Text_RewardQuantity;
	class UClass* Text_UnlockDate;
	class UClass* LazyImage_Stamp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeRecapEntry : public CommonUserWidget
{
public:
	class UClass* Text_QuestObjective;
	class UClass* Text_CompletionCount;
	class UClass* Switcher_Progression;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeRewards : public UserWidget
{
public:
	class UClass* LazyImage_RewardIcon;
	class UClass* Text_RewardCount;
	class UClass* Image_RewardBacking;
	class UClass* DynamicBox_MultiMarkers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeRewardsMultiMarker : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeRewardTrackEntry : public CommonUserWidget
{
public:
	struct FName MissionRewardParamName;
	struct TSoftClassPtr<UObject> RewardToRepresent;
	int BundleRewardIndex;
	class UClass* Image_ConnectorLeft;
	class UClass* Image_ConnectorRight;
	class UClass* MissionReward;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeSetListView : public AthenaChallengeListViewBase
{
public:
	struct AthenaChallengeListVisualOptions ListVisualOptions;
	bool bHideHeaders;
	bool bHideCompletionRewards;
	bool bHideQuestRewards;
	bool bUseCompactActionInfo;
	bool bAllowFocus;
	class UClass* SectionHeaderEntryClass;
	class UClass* CompletionRewardEntryClass;
	class UClass* SpecialOfferEntryClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeScreenTileBase : public CommonButtonLegacy
{
public:
	class UClass* Text_ChallengeName;
	class UClass* LazyImage_RewardPreview;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMinimalChallengeInfoEntry : public CommonUserWidget
{
public:
	class UClass* ChallengeProgress_ObjectivesComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeScreenTile_Daily : public AthenaChallengeScreenTileBase
{
public:
	class UClass* Image_PartyAssist;
	class UClass* EntryBox_MinimalInfoDailies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeScreenTile_PunchCard : public AthenaChallengeScreenTileBase
{
public:
	class UClass* PunchCard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeSetTile : public AthenaChallengeScreenTileBase
{
public:
	class UClass* ChallengeProgress_QuestsCompleted;
	class UClass* Text_ChallengeContext;
	class UClass* LazyImage_CustomBackground;
	class UClass* RichText_UnavailableReason;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeSetTile_Event : public AthenaChallengeSetTile
{
public:
	class UClass* Countdown_TimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeSetTile_Weekly : public AthenaChallengeSetTile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeSetTile_Mission : public AthenaChallengeSetTile
{
public:
	int BundleLevel;
	int BundleLevelCompletionPercent;
	struct FName PrestigeShimmerParamName;
	struct FName ContextColorParamName;
	class UClass* Image_MissionCompleted;
	class UClass* Image_ChaseReward;
	class UClass* Text_AvailableInTime;
	class UClass* Countdown_TimeRemaining;
	class UClass* Switcher_LockReason;
	class UClass* Switcher_MissionIcon;
	class UClass* Switcher_Reward;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeSetTile_Style : public AthenaChallengeSetTile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengesWidget : public FortHUDElementWidget
{
public:
	class UClass* Text_Challenges;
	class UClass* DynamicEntryBox_ChallengeEntries;
	struct FortPrioritizedWidgetData PrioritizedWidgetData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaChallengeTreeView : public AthenaChallengeListViewBase
{
public:
	class UClass* SetHeaderEntryClass;
	bool bReturnFocusToSelection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionItemToast : public FortHUDElementWidget
{
public:
	float OpenCollectionScreenInputHoldTime;
	class UClass* Text_ItemNumber;
	class UClass* Text_ItemName;
	class UClass* LazyImage_ItemImage;
	class UClass* Button_MobileClickCatcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionItemToastCharacter : public AthenaCollectionItemToast
{
public:
	struct FText NumLocationsFormat;
	class UClass* RichText_NumLocations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionItemToastFishing : public AthenaCollectionItemToast
{
public:
	struct FText LengthFormat;
	struct FText LeaderLengthFormat;
	class UClass* RichText_Length;
	class UClass* Text_LeaderName;
	class UClass* RichText_LeaderLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionItemToastSwitcher : public FortHUDElementWidget
{
public:
	struct FScriptMulticastDelegate OnResetToast;
	float TimeToShowToast;
	float ActivationDelay;
	struct FortPrioritizedWidgetData PrioritizationData;
	class UClass* WidgetSwitcher_Toasts;
	class UClass* ActiveCollectionItemToastWidget;
	bool bHasPrioritizedWidgetFocus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionLeaderboard : public CommonActivatableWidget
{
public:
	float LeaderboardScrollSpeed;
	float LeaderboardScrollInitialDelay;
	class UClass* ScrollBox_Leaderboard;
	class UClass* EntryBox_Leaderboard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionOverlayEntry : public CommonUserWidget
{
public:
	struct FText EmptyDisplayNameText;
	class UClass* Text_DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionLeaderboardEntry : public AthenaCollectionOverlayEntry
{
public:
	struct FText ValueTextFormat;
	int ValueMinimumFractionalDigits;
	int ValueMaximumFractionalDigits;
	bool bValueIsFloat;
	class UClass* Text_Placement;
	class UClass* RichText_Value;
	class UClass* AvatarIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionLeaderboardEntryFishing : public AthenaCollectionLeaderboardEntry
{
public:
	struct FName ParamName_Has2Stars;
	struct FName ParamName_Has3Stars;
	class UClass* Image_Stars;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionListColumnEntry : public CommonUserWidget
{
public:
	class UClass* EntryBox_ListEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionListEntry : public CommonButtonLegacy
{
public:
	class UClass* Image_Icon;
	class UClass* Text_Number;
	class UClass* Text_ItemName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionListEntryCharacter : public AthenaCollectionListEntry
{
public:
	class UClass* Image_Background;
	struct FName ParamName_ItemIcon;
	struct FName ParamName_IsDiscovered;
	struct FName ParamName_IsComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionListEntryFishing : public AthenaCollectionListEntry
{
public:
	struct FName ParamName_ItemIcon;
	struct FName ParamName_IsDiscovered;
	struct FName ParamName_ItemSize;
	struct FName ParamName_Has2Stars;
	struct FName ParamName_Has3Stars;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionListView : public ListViewBase
{
public:
	float EntrySpacing;
	int NumRows;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionLocationEntry : public AthenaCollectionOverlayEntry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionPlayerProgress : public CommonUserWidget
{
public:
	class UClass* Text_PlayerName;
	class UClass* Text_Progress;
	class UClass* AvatarIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionPlayerProgressContainer : public CommonUserWidget
{
public:
	class UClass* PlayerProgressClass;
	float CycleDelay;
	int ShowLocalPlayerAfterNumEntries;
	TArray<class UClass*> CachedPlayerProgressEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenBase : public CommonActivatableWidget
{
public:
	struct FText CollectionName;
	struct FString CollectionType;
	struct FString CollectionCategory;
	struct FText UnknownText;
	struct FText UnknownDescription;
	struct TSoftClassPtr<UObject> KnownEntryImage;
	struct TSoftClassPtr<UObject> UnknownEntryImage;
	struct TSoftClassPtr<UObject> KnownOverlayImage;
	struct TSoftClassPtr<UObject> UnknownOverlayImage;
	struct FText PersonalBestTextFormat;
	byte PersonalBestMinimumFractionalDigits;
	byte PersonalBestMaximumFractionalDigits;
	struct TSoftClassPtr<UObject> SoftInfoOverlayClass;
	class UClass* ScrollBox_List;
	class UClass* CollectionListView;
	class UClass* Content_InfoOverlayContainer;
	class UClass* Button_ToggleInfoOverlay;
	class UClass* Button_Back;
	class UClass* PlayerProgressContainer;
	bool bWantsToShowInfoOverlay;
	bool bForceOverlayToggleMobile;
	class UClass* InfoOverlay;
	class UClass* CollectionsDataTable;
	class UClass* CollectionData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenCharacter : public AthenaCollectionScreenBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenContainer : public CommonActivatableWidget
{
public:
	TArray<struct AthenaCollectionScreenContainerTabInfo> TabInfos;
	struct DataTableRowHandle NextTabInputAction;
	struct DataTableRowHandle PreviousTabInputAction;
	class UClass* VisibilitySwitcher_Content;
	class UClass* EntryBox_TabButtons;
	class UClass* Text_TabTitle;
	class UClass* MobileCloseButton;
	TArray<struct AthenaCollectionScreenContainerTabInfo> ActiveTabInfos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenContainerTabButton : public CommonButtonLegacy
{
public:
	struct FString CollectionType;
	class UClass* LazyImage_Icon;
	struct Vector2D ImageSize_Mobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenFishing : public AthenaCollectionScreenBase
{
public:
	struct FText RequiresProFishingRodText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenInfoOverlay : public CommonActivatableWidget
{
public:
	struct FName ParamName_ItemIcon;
	struct FName ParamName_IsDiscovered;
	class UClass* RichText_AdditionalInfo;
	class UClass* Image_ItemImage;
	struct FText NumCollectedTextFormat;
	struct FText EmptyDisplayNameText;
	struct DataTableRowHandle ToggleLeaderboardRowHandle;
	class UClass* Text_ItemType;
	class UClass* Text_ItemName;
	class UClass* RichText_Description;
	class UClass* RichText_AdditionalDescription;
	class UClass* Panel_FriendScores;
	class UClass* RichText_NumCollected;
	class UClass* Text_ItemNumber;
	class UClass* Button_Close;
	class UClass* EntryBox_InfoOverlay;
	class UClass* FriendLeaderboard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenInfoOverlayCharacter : public AthenaCollectionScreenInfoOverlay
{
public:
	struct FName ParamName_Progress;
	class UClass* LocationProgress;
	struct FText NumAvailableTextFormat;
	class UClass* RichText_NumAvailable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCollectionScreenInfoOverlayFishing : public AthenaCollectionScreenInfoOverlay
{
public:
	bool bNeedsProFishingRod;
	struct FText NoneText;
	class UClass* RichText_PersonalBest;
	struct FText ScaleRangeTextFormat;
	class UClass* RichText_ScaleRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCommonPrioritizedWidget : public FortHUDElementWidget
{
public:
	bool bAutoManagePriorityByVisibility;
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCompassBase : public FortHUDElementWidget
{
public:
	class UClass* CompassMaterial;
	class UClass* Image_Compass;
	struct SlateBrush MarkerBrush;
	struct SlateBrush HeadingIndicatorBrush;
	struct SlateBrush StormIndicatorBrush;
	float MarkerVerticalOffset;
	struct SlateFontInfo HeadingFont;
	struct SlateBrush TeammateGunshotIndicatorBrush;
	struct SlateBrush EnemyGunshotIndicatorBrush;
	float TimeToShowGunshotIndicators;
	class UClass* GunshotIndicatorScaleOverTime;
	class UClass* GunshotIndicatorScaleByStrength;
	class UClass* GunshotIndicatorAlphaOverTime;
	class UClass* GunshotIndicatorAlphaByHeading;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaConfirmationWindow : public CommonActivatableWidget
{
public:
	class UClass* Text_Title;
	class UClass* RichText_Description;
	class UClass* Image_MainIcon;
	class UClass* EntryBox_Buttons;
	class UClass* Button_Close;
	class UClass* Border_TapToCloseZone;
	struct DataTableRowHandle CancelAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMarkedActorIndicator : public FortActorIndicatorWidget
{
public:
	struct FortWorldMarkerData MarkerData;
	struct MarkedActorDisplayInfo MarkerDisplay;
	class UClass* DetailsTable;
	float FreshLargeItemShowTime;
	float IndicatorDotSizeThreshold;
	class UClass* Switcher_IndicatorSize;
	class UClass* Panel_SmallIndicator;
	class UClass* Panel_LargeIndicator;
	class UClass* Text_Distance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaContextTutorialIndicator : public AthenaMarkedActorIndicator
{
public:
	float OffscreenMaxTreshold;
	class UClass* Overlay_Icon_1;
	float ScreenEdgePaddingSizePercent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaContextualChallengesWidget : public AthenaChallengesWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCosmeticUnlockingInfo : public CommonUserWidget
{
public:
	class UClass* RichText_StaticUnlockingText;
	class UClass* RichText_UnlockingText;
	class UClass* ProgressBar_StepsCompleted;
	class UClass* RichText_ProgressCompletion;
	struct FString EmphasisStyle;
	struct FString ProgressCompletionNumericStyle;
	class UClass* CosmeticItemDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCountdownWidgetBase : public FortHUDElementWidget
{
public:
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaCreativeItemEntryObjectWrapper : public UObject
{
public:
	struct FortItemEntry ItemEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCreativeItemTileButton : public CommonButtonLegacy
{
public:
	class UClass* ParentView;
	class UClass* ItemDefinition;
	struct FortItemEntry ItemEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCreativeItemTileView : public CommonTileView
{
public:
	class UClass* ParentTab;
	class UClass* CurrentlyFocusedItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCurieStatusWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemPickerBase : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnSelectionChangedEvent;
	struct FScriptMulticastDelegate OnSelectionCommittedEvent;
	struct FScriptMulticastDelegate OnItemHoveredEvent;
	struct FScriptMulticastDelegate OnItemUnhovered;
	class UClass* PickerTileView;
	class UClass* ItemListViewWidget;
	bool bConfirmSelectionIfAlreadySelectedAfterOneClick;
	class UClass* NewlySelectedItem;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCustomizationPicker : public FortItemPickerBase
{
public:
	struct FScriptMulticastDelegate OnCosmeticSelectionSaving;
	struct FScriptMulticastDelegate OnCosmeticSelectionSaved;
	struct FScriptMulticastDelegate OnShowSaveButton;
	struct FScriptMulticastDelegate OnHideSaveButton;
	class UClass* FilterTabButtonType;
	class UClass* FilterTabButtonStyle;
	TArray<struct FortAthenaItemManagementInventoryFilterTabLabelInfo> FilterTabLabelInfoArray;
	class UClass* FilterTabList;
	struct FName CurrentFilterName;
	EAthenaCustomizationCategory CustomizeCategory;
	int SubslotIndex;
	bool bAllowUnownedItems;
	bool bAllowCommits;
	bool bOneItemPerSlot;
	class UClass* ItemListeningTo;
	class UClass* LocalCampaignHeroItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticItemTileButton : public CommonButtonLegacy
{
public:
	class UClass* ItemWidget;
	Unknown Item;
	float ItemCardWidth;
	float MobileScalingFactor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCustomizationPickerTileButton : public FortCosmeticItemTileButton
{
public:
	class UClass* Bang;
	class UClass* Image_Favorite;
	class UClass* Image_ClassIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCustomizationScreen : public FortItemPreviewScreen
{
public:
	bool bCustomizationSelectionBeingProcessed;
	struct AthenaCustomizationParams CustomizationParams;
	EAthenaCustomizationCategory InitialCustomizationCategory;
	struct FText CategoryDisplayNames;
	struct FText ItemTypeDisplayNames;
	class UClass* ItemSelectorScreenClass;
	class UClass* ItemSelectorScreen;
	struct DataTableRowHandle OpenNameLoadoutInputAction;
	class UClass* BoundAnim_Intro;
	class UClass* BoundAnim_Outro;
	class UClass* LoadoutSelector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCustomizationScreenBase : public FortItemPreviewScreen
{
public:
	bool bCustomizationSelectionBeingProcessed;
	struct AthenaCustomizationParams CustomizationParams;
	EAthenaCustomizationCategory FirstCustomizationCategory;
	struct FText CategoryDisplayNames;
	struct FText ItemTypeDisplayNames;
	class UClass* ItemSelectorScreenClass;
	class UClass* LoadoutSelectorScreenClass;
	class UClass* BannerSelectModalClass;
	class UClass* NameLoadoutPopupClass;
	class UClass* ProgressModalClass;
	class UClass* ProgressModalInstance;
	class UClass* LastHoveredSlot;
	struct DataTableRowHandle OpenNameLoadoutInputAction;
	TArray<EAthenaCustomizationCategory> BuiltInEmoteCategoryPriorities;
	bool bDisplayBuiltInEmotesInEmoteRow;
	class UClass* BoundAnim_Intro;
	class UClass* BoundAnim_Outro;
	class UClass* Container_Loadouts_GodTileArea;
	class UClass* Button_Loadouts;
	class UClass* Button_SavePreset;
	class UClass* Button_RandomPresets;
	class UClass* Loadout_Selector;
	class UClass* LoadoutCard_AppliedAnimation;
	class UClass* Panel_GearSlotRow;
	class UClass* Slot_Pickaxe;
	class UClass* Slot_Glider;
	class UClass* Slot_Contrail;
	class UClass* Slot_LoadingScreen;
	class UClass* Panel_EmoteSlotRow;
	class UClass* Panel_WrapSlotRow;
	class UClass* Panel_AccountSlotRow;
	class UClass* Banner_Button;
	class UClass* ItemInfo_Display;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaCustomizationSlotSelectorButton : public CommonButtonLegacy
{
public:
	struct FText CategoryDisplayName;
	struct FText CategoryDescription;
	EAthenaCustomizationCategory CustomizationType;
	int SubslotIndex;
	EFortBangType BangType;
	bool bAllowUnownedItems;
	bool bOneItemPerSlot;
	class UClass* OverrideSlotImage;
	class UClass* ItemWidget;
	struct GameplayTag RequiredSlotGameplayTag;
	struct TSoftClassPtr<UObject> DefaultEmptyTexture;
	float CardWidth;
	class UClass* LocalCampaignHeroPartItem;
	class UClass* Image_Favorite;
	class UClass* Image_ClassIcon;
	class UClass* Bang_Wrapper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDiscoverabilityBase : public FortHUDElementWidget
{
public:
	struct FortPrioritizedWidgetData PrioritizationData;
	class UClass* AssociatedComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDiscoveredAreaOverlay : public AthenaDiscoverabilityBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDuelOverlay : public FortHUDElementWidget
{
public:
	class UClass* RichText_Title;
	class UClass* RichText_SubTitle;
	class UClass* Image_ChallengedNPCPortrait;
	class UClass* Image_ElimPortrait;
	class UClass* Image_Reward;
	struct TSoftClassPtr<UObject> DuelStartedSound;
	struct FortPrioritizedWidgetData PrioritizedWidgetData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMtxOfferButtonBase : public CommonButtonLegacy
{
public:
	class UClass* OfferData;
	class UClass* Text_MtxAmount;
	class UClass* Text_RealMoneyPrice;
	class UClass* OptionalSwitcher_CurrencyIcons;
	class UClass* OptionalIMG_StarterKit;
	class UClass* LoadGuardCurrencySpinner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDynamicMtxOfferButton : public AthenaMtxOfferButtonBase
{
public:
	class UClass* Text_DynamicMtxAmount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReloadMtxScreenBase : public FortItemPreviewScreen
{
public:
	class UClass* OfferInfo;
	class UClass* Text_AmountNeeded;
	struct DataTableRowHandle BackAction;
	class UClass* Button_MobileClose;
	class UClass* SmallOfferPreview_Widget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaDynamicReloadMtxScreen : public AthenaReloadMtxScreenBase
{
public:
	class UClass* Text_TotalNeeded;
	class UClass* Text_CurrentBalance;
	class UClass* Switcher_DynamicOptions;
	class UClass* Button_StarterKitOption;
	class UClass* Overlay_MtxRequired;
	class UClass* Overlay_StarterKit;
	class UClass* Button_MtxRequiredOption;
	class UClass* Button_MtxOtherOption;
	class UClass* Button_MoreOptions;
	TArray<struct FName> StorefrontNames;
	class UClass* StaticReloadMtxScreen;
	class UClass* MtxRequiredButtonToFocus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEliminationIndicator : public AthenaMarkedActorIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEliminationOverlayBase : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEndGamePlacementWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEquippedItemBase : public BacchusHUDElement
{
public:
	EEquippedWeaponDisplay CurrentMode;
	int AmountConsideredInfinite;
	class UClass* Switcher_Content;
	class UClass* Panel_ResourceContent;
	class UClass* Panel_AmmoContent;
	class UClass* Panel_UtilityContent;
	class UClass* Image_AmmoIcon;
	class UClass* Image_ResourceIcon;
	class UClass* Image_UtilityIcon;
	class UClass* Text_MagazineAmmoCount;
	class UClass* Text_SurplusAmmoCount;
	class UClass* Text_ResourceCount;
	class UClass* Text_UtilityAmmoCount;
	class UClass* Text_OutOfAmmo;
	ESlateVisibility WeaponEquipVisibility;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEquippedItemInfoWidget : public AthenaEquippedItemBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventGamesBase : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventScreenBase : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchActiveGridScreenBase : public AthenaEventScreenBase
{
public:
	class UClass* TeamWidgetClass;
	TArray<class UClass*> ActiveTeams;
	int MaxNumColumns;
	int MaxTeamCount;
	int MaxTeamSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchEliminatedGridScreenBase : public AthenaEventScreenBase
{
public:
	class UClass* TeamWidgetClass;
	TArray<class UClass*> EliminatedTeams;
	int MaxNumColumns;
	int MaxTeamCount;
	int MaxTeamSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchPlayerWidgetBase : public CommonButtonLegacy
{
public:
	Unknown PlayerData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchScoreboardPlayerWidgetBase : public AthenaEventMatchPlayerWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchScoreboardScreenBase : public AthenaEventScreenBase
{
public:
	struct UIActionTag SortByElimsAction;
	struct UIActionTag SortByPlaceAction;
	struct DataTableRowHandle SortByEliminationsActionRowHandle;
	struct DataTableRowHandle SortByPlaceActionRowHandle;
	TArray<class UClass*> SquadDataArray;
	class UClass* ScoreboardListView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchScoreboardSquadWidget : public AthenaEventMatchSquadWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchStatusScreenBase : public AthenaEventScreenBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaEventMatchTeamWidgetBase : public CommonUserWidget
{
public:
	TArray<class UClass*> PlayerWidgets;
	byte SquadId;
	struct LinearColor TeamColor;
	int MaxTeamSize;
	class UClass* PlayerWidgetClass;
	TArray<Unknown> PlayerDatas;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaExclusiveRewardBanner : public CommonUserWidget
{
public:
	class UClass* RichText_RewardMessage;
	class UClass* Image_RewardIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFeatTimelineListEntry : public CommonUserWidget
{
public:
	class UClass* Panel_FeatInfo;
	class UClass* Panel_Date;
	class UClass* SimpleButton_ClickArea;
	class UClass* Text_FeatName;
	class UClass* Text_FeatDescription;
	class UClass* LazyImage_QuestIcon;
	class UClass* Text_CompletedTime;
	class UClass* RichText_Date;
	bool bIsHovered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFeatTimelineListView : public ListViewBase
{
public:
	float EntrySpacing;
	float EndSpacing;
	float DelayBeforeStartCompleted;
	float DelayBetweenCompletedItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFPSBase : public CommonUserWidget
{
public:
	class UClass* FPS;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFrontEndMapPoiIcon : public CommonUserWidget
{
public:
	class UClass* Text_PoiName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFullScreenMapControlsWidget : public CommonActivatableWidget
{
public:
	class UClass* Button_ToggleQuestIcons;
	class UClass* Button_ResetToPlayer;
	class UClass* Button_Exit;
	class UClass* Text_PlaceMarker;
	struct FText PlaceMarkerText;
	struct FText RemoveMarkerText;
	class UClass* SizeBox_PlaceMarker;
	class UClass* Button_SortToggle;
	class UClass* Button_RemoveSelectedQuest;
	class UClass* SizeBox_RemoveSelectedQuest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFullScreenMapPanel : public CommonActivatablePanelLegacy
{
public:
	class UClass* MapLayerContainer;
	class UClass* Content_GameInfoSlot;
	struct DataTableRowHandle ToggleMapMarkerRowHandle;
	struct TSoftClassPtr<UObject> SoftGameInfoClass;
	struct TSoftClassPtr<UObject> SoftMarkerDetailsTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFullScreenQuestMapPanel : public AthenaFullScreenMapPanel
{
public:
	class UClass* QuestPanel;
	class UClass* ControlsPanel;
	float MapZoomOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGadgetFuelWidget : public CommonUserWidget
{
public:
	Unknown AthenaGadgetItemDefinition;
	EFortFuelGadgetVisualType FortFuelGadgetVisualType;
	class UClass* FuelGaugeProgressImage;
	class UClass* CurrentChargesText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGameFeatureStatus : public CommonUserWidget
{
public:
	struct FText ProgressStatusToastTitle;
	EFortGameFeature GameFeature;
	bool bExtendedDisplay;
	struct FText ExtendedDisplayText;
	struct TSoftClassPtr<UObject> DownloadingIconAsset;
	struct TSoftClassPtr<UObject> InitialToastNotificationIcon;
	struct FName DownloadingIconMaterialParam;
	class UClass* Image_DownloadingIcon;
	class UClass* Text_ProgressPercent;
	class UClass* Text_ExtendedDisplayText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGameOverDisplay : public FortActivatablePanel
{
public:
	class UClass* MatchStatsClass;
	struct DataTableRowHandle Input_ReturnToLobby;
	struct DataTableRowHandle Input_NextTeammate;
	struct DataTableRowHandle Input_PreviousTeammate;
	struct DataTableRowHandle Input_ReportPlayer;
	struct DataTableRowHandle Input_ToggleBattleMap;
	struct DataTableRowHandle Input_ForceStartPostGame;
	class UClass* EliminatedOverlay;
	class UClass* Button_Highlights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGenericHUDTimerWidgetBase : public FortHUDElementWidget
{
public:
	class UClass* TimeText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDSituationalFeedback : public FortHUDElementWidget
{
public:
	class UClass* EntryBox_Feedback;
	bool bPrecreateFeedbackEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGenericKeyBindsFeedback : public AthenaHUDSituationalFeedback
{
public:
	Unknown GenericActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftReceivedPrompt : public CommonActivatableWidget
{
public:
	class UClass* ItemPresentationScreenClass;
	struct TSoftClassPtr<UObject> GiftMaterial;
	class UClass* GiftBoxItem;
	class UClass* Widget_HeaderInfo;
	class UClass* Button_Open;
	class UClass* Image_GiftBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGlobalCurrencyWidget : public CommonUserWidget
{
public:
	class UClass* CurrencyTotalText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMessageReceivedScreen : public FortActivatablePanel
{
public:
	struct FScriptMulticastDelegate OnMessageClosed;
	class UClass* GiftBoxItem;
	class UClass* GiftBoxImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGrantChallengeModal : public FortMessageReceivedScreen
{
public:
	TArray<class UClass*> BundleDefs;
	class UClass* Text_ChallengeName;
	class UClass* Text_ChallengeContext;
	class UClass* Text_BodyCopy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGroupChallengeTag : public UserWidget
{
public:
	class UClass* Anim_Flash;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnLocalPlayerWon;
	struct FScriptMulticastDelegate OnLocalPlayerDeathOnWin;
	struct FScriptMulticastDelegate OnLocalTeamWon;
	struct FScriptMulticastDelegate OnLocalTeamLost;
	struct FScriptMulticastDelegate OnLocalPlayerLost;
	struct FScriptMulticastDelegate OnLocalPlayerKilledPlayer;
	struct FScriptMulticastDelegate OnLocalPlayerDBNOStateChanged;
	struct FScriptMulticastDelegate OnUIGameplayCue;
	struct FScriptMulticastDelegate OnLocalPlayerBeginSkydiving;
	struct FScriptMulticastDelegate OnAthenaAutoFireChanged;
	struct FScriptMulticastDelegate OnClientSettingsShowViewersChanged;
	struct FScriptMulticastDelegate OnAthenaGamePhaseChanged;
	struct FScriptMulticastDelegate OnPlayerFiredWeapon;
	struct FScriptMulticastDelegate OnShowUrgentQuestMessage;
	struct FScriptMulticastDelegate OnDuelChange;
	struct FScriptMulticastDelegate OnLowPerformanceMode;
	struct FScriptMulticastDelegate OnPTTStateChange;
	struct FScriptMulticastDelegate OnCanPTTChange;
	struct FScriptMulticastDelegate ShowMobilePickerDelegate;
	struct FScriptMulticastDelegate OnPlayerNameChangeDelegate;
	struct FScriptMulticastDelegate OnResurrectingNowDelegate;
	struct FScriptMulticastDelegate OnAllWinnersAnnouncedDelegate;
	struct FScriptMulticastDelegate OnSignalQualityChangeDelegate;
	struct FScriptMulticastDelegate OnForwardStartedFalling;
	struct FScriptMulticastDelegate OnSpecialActorListChanged;
	struct FScriptMulticastDelegate OnFireStopped;
	struct FScriptMulticastDelegate OnPostGameWidgetPlacementChange;
	struct FScriptMulticastDelegate OnForceStartPostGameFlow;
	struct FScriptMulticastDelegate OnQuickTimeEventWidgetStarted;
	struct FScriptMulticastDelegate OnQuickTimeEventWidgetStopped;
	struct FScriptMulticastDelegate OnQuickTimeEventFeedbackWidget;
	struct FScriptMulticastDelegate OnForceAllQuickbarsMinimizedChanged;
	struct FScriptMulticastDelegate OnPlaylistExtensionWidgetCreatedNotSupported;
	struct FScriptMulticastDelegate OnClearPlaylistExtensionWidgetNotSupported;
	Unknown MoveButtonWidgetPtr;
	struct AthenaWinnerInfo WinnerInfo;
	bool bMoveButtonMode;
	bool bPendingAttachToHUD;
	bool bLocalPlayerWonMatch;
	class UClass* BoundPlayerPawn;
	class UClass* PlayerViewModel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDFeedbackLine : public FortHUDElementWidget
{
public:
	class UClass* Keybind_Feedback;
	class UClass* RichText_Feedback;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDGamePhaseChangingBase : public FortHUDElementWidget
{
public:
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDInputWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDMenu : public CommonUserWidget
{
public:
	class UClass* Overlay_AllContent;
	class UClass* DualBladeMenu;
	class UClass* InventoryScreenContainer;
	class UClass* BottomBar;
	class UClass* WidgetStack_PrimaryContent;
	class UClass* Container_ServerShutdownTimer;
	class UClass* ScaleBox_Leto;
	struct GameplayTagContainer HideOnMenuTags;
	struct GameplayTagContainer TagsToShow;
	class UClass* GameOverScreenClass;
	class UClass* PostGameScreenRootClass;
	class UClass* PostGameScreenRoot;
	bool bShowingGameOverScreen;
	bool bShowingWinnerScreen;
	bool bStartedPostGame;
	class UClass* GameOverScreen;
	class UClass* InventoryPanelOverride;
	TArray<struct TSoftClassPtr<UObject>> UndismissableModalSoftClasses;
	TArray<class UClass*> UndismissableModalClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaHUDPlayerActionAlertBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPrimaryContentInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaHUDPrimaryContentInterface : public UFortPrimaryContentInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaIGMPartyMemberWidget : public CommonUserWidget
{
public:
	bool bIsLocalPlayerSlot;
	bool bIsInGameSlot;
	class UClass* AvatarIconWidget;
	class UClass* Text_SocialName;
	class UClass* VoiceIcon_Status;
	class UClass* CachedPartyMember;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaIGMSquadMemberWidget : public AthenaIGMPartyMemberWidget
{
public:
	class UClass* Image_SquadMemberPortrait;
	class UClass* Text_SquadMemberName;
	class UClass* CachedSquadMember;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaIndicatorLayerBase : public FortHUDElementWidget
{
public:
	class UClass* GeneralIndicators;
	class UClass* NameIndicators;
	class UClass* PlayerIndicatorClass;
	int PlayerIndicatorPoolSize;
	struct UserWidgetPool PlayerIndicatorWidgetPool;
	class UClass* PlayerVM;
	class UClass* TeamIndicatorMesh;
	bool bWasTargeting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnInventoryItemSelected;
	struct FScriptMulticastDelegate OnInventorySwapStarted;
	struct FScriptMulticastDelegate OnInventorySwapComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryEquipButtonBase : public CommonButtonLegacy
{
public:
	class UClass* ItemWidget;
	class UClass* EmptyImage;
	int SlotIndex;
	TArray<struct Vector2D> ButtonSizeBySlotUsage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemElementWidgetBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryItemInfo : public AthenaItemElementWidgetBase
{
public:
	class UClass* Text_ItemName;
	class UClass* Text_ItemDescription;
	class UClass* Text_ItemRarity;
	class UClass* Text_ItemCategory;
	class UClass* Image_ItemCategory;
	class UClass* ItemIcon;
	class UClass* ItemTierWidget;
	class UClass* ItemStatsWidget;
	struct DataTableRowHandle InspectItemInputRowHandle;
	struct FText ItemRarityTextFormat;
	struct FName CategoryIconTextureParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryItemStatEntry : public CommonUserWidget
{
public:
	class UClass* Text_StatName;
	class UClass* Text_StatValue;
	class UClass* Text_StatDeltaValue;
	struct FText StatDeltaTextFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryItemStatsWidget : public CommonUserWidget
{
public:
	class UClass* EntryBox_Stats;
	class UClass* ItemStatsBoundsTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryItemTileButton : public CommonButtonLegacy
{
public:
	class UClass* ItemIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryPanel : public CommonActivatableWidget
{
public:
	struct FName TabNameID;
	struct FortTabButtonLabelInfo TabButtonLabelInfo;
	struct FortTabButtonLabelInfo CreativeTabButtonLabelInfo;
	class UClass* QuantitySelectorClass;
	class UClass* StackSizeDataTable;
	struct DataTableRowHandle DropItemInputRowHandle;
	struct DataTableRowHandle DropAllInputRowHandle;
	struct DataTableRowHandle DropStackInputRowHandle;
	struct DataTableRowHandle DropHalfInputRowHandle;
	struct FText DropItemsText;
	struct FText ConfirmDropText;
	struct FText DropStackTextFormat;
	struct GameplayTagContainer CurrencyItemTags;
	struct GameplayTagContainer IngredientItemTags;
	class UClass* CurrencyView;
	class UClass* IngredientView;
	class UClass* ResourceView;
	class UClass* AmmoView;
	class UClass* QuickbarEditor;
	TArray<class UClass*> InventorySections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryPanelContainer : public CommonActivatableWidget
{
public:
	struct FName TabNameID;
	struct FortTabButtonLabelInfo TabButtonLabelInfo;
	class UClass* TabButtonClass;
	class UClass* TabList;
	class UClass* Switcher_Tabs;
	class UClass* ItemInfoWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryQuickBarSlotButton : public AthenaQuickBarSlotButtonBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInventoryScreenContainer : public FortActivatablePanel
{
public:
	struct TSoftClassPtr<UObject> MyIslandWidgetClass;
	struct TSoftClassPtr<UObject> CreativeInventoryWidgetClass;
	class UClass* TabButtonClass;
	class UClass* ItemListPanelDataClass;
	struct FName TabId_Creative;
	struct FName TabId_MyIsland;
	TArray<struct FName> BlockedInputActions;
	TArray<struct FName> AdditionalBlockedInputActions;
	class UClass* ScaleBox_Leto;
	class UClass* TabList_Inventory;
	class UClass* Switcher_InventoryTabs;
	class UClass* Panel_MyIslandHost;
	class UClass* Panel_CreativeInventoryHost;
	class UClass* MyIslandWidget;
	class UClass* CreativeInventoryWidget;
	class UClass* InventoryScreenInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemIcon : public AthenaItemElementWidgetBase
{
public:
	class UClass* Image_ItemIcon;
	class UClass* Text_StackCount;
	class UClass* Image_AmmoIcon;
	class UClass* ItemTierWidget;
	bool bUseLargePreviewImage;
	struct FName ItemIconTextureParamName;
	struct FName AmmoIconTextureParamName;
	struct FText InfiniteStackCountText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemListWidget : public FortHUDElementWidget
{
public:
	struct FortItemFilterDefinition ItemFilter;
	struct GameplayTagContainer ItemFilterTags;
	EInventoryContentSortType ItemSortType;
	class UClass* ItemListView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemReceivedPreMessageBase : public CommonActivatableWidget
{
public:
	class UClass* GiftBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaUpgradedPreMessage : public AthenaItemReceivedPreMessageBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemSelectorScreenBase : public FortItemPreviewScreen
{
public:
	class UClass* TabButtonType;
	Unknown ItemCategoryButtonLabelInfo;
	struct FortTabButtonLabelInfo VariantButtonLabelInfo;
	struct DataTableRowHandle ApplyToAllInputActionRow;
	struct DataTableRowHandle ToggleFavoriteActionRow;
	struct DataTableRowHandle ToggleBackActionRow;
	class UClass* Button_ConfirmSelection;
	class UClass* Button_EditStyle;
	class UClass* Button_ConfirmStyle;
	class UClass* Picker_ItemSelector;
	class UClass* ItemInfo;
	class UClass* Item_HeaderInfo;
	bool bVariantZoomUsesSnap;
	class UClass* CurrentPreviewItem;
	class UClass* CurrentPreviewItemDef;
	TArray<struct McpVariantChannelInfo> CurrentPreviewVariantChannels;
	TArray<struct McpVariantChannelInfo> CachedVariantChannels;
	class UClass* Picker_VariantSelector;
	class UClass* UnlockingInfo;
	EAthenaCustomizationCategory CustomizeCategory;
	int SubslotIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopCarousel : public CommonUserWidget
{
public:
	struct TSoftClassPtr<UObject> CarouselTileClass;
	class UClass* Container_CurrentTile;
	class UClass* Container_NextTileToShow;
	class UClass* MobileClickThroughButton;
	class UClass* HBox_NavigationButtons;
	class UClass* Text_NextItem;
	class UClass* Text_PreviousItem;
	class UClass* Image_AutoScrollProgress;
	class UClass* EntryBox_Pips;
	class UClass* SwipePanel_ItemsNavigation;
	class UClass* ButtonGroup_Pips;
	TArray<class UClass*> Tiles;
	struct TimerHandle TileSeenTimerHandle;
	int SelectedItemIndex;
	class UClass* NextTileToShow;
	class UClass* CurrentTile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopCarouselTile : public CommonButtonLegacy
{
public:
	class UClass* Text_Title;
	class UClass* Image_Background;
	class UClass* Image_Foreground;
	class UClass* ExternalMedia;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaItemShopConfiguration : public UDataAsset
{
public:
	struct FString SubscriptionOfferId;
	struct FString CrewBlingOfferId;
	TArray<struct FName> LimitedTimeStorefrontNames;
	struct AthenaItemShopReloadMtxInfo ItemShopReloadMtxInfo;
	struct FName BattlePassSectionId;
	struct FName SubscriptionSectionId;
	class UClass* TileViolatorTextTable;
	struct TSoftClassPtr<UObject> SectionWidgetClass;
	struct TSoftClassPtr<UObject> CarouselWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopNavigationButton : public CommonButtonLegacy
{
public:
	class UClass* Text_Section;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopOfferDetailsWidgetBase : public CommonActivatableWidget
{
public:
	TArray<class UClass*> PagedItems;
	class UClass* OfferData;
	class UClass* Text_CosmeticWarning;
	class UClass* TextUndoAvailability;
	class UClass* Text_UndoBottomBarWarning;
	class UClass* Button_Undo;
	struct DataTableRowHandle UndoAction;
	bool bImmediatelyPurchased;
	class UClass* PurchaseModalClass;
	class UClass* ProgressModalClass;
	class UClass* ProgressModal;
	bool bShowRefundWarningWhileMatchmaking;
	bool bShowRefundWarningWhileInZone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopOfferDetailsPreviewWidget : public AthenaItemShopOfferDetailsWidgetBase
{
public:
	struct DataTableRowHandle BackAction;
	class UClass* ItemPreview_Widget;
	class UClass* Item_InfoHeader;
	float TimeBetweenVariantsRestart;
	float TimeBetweenVariants;
	class UClass* ItemToRepresent;
	TArray<struct FortCosmeticVariantPreview> CachedVariantPreviews;
	struct UnlockableVariantPreviewInfo VariantPreviewInfo;
	class UClass* OfferNavigator_ArrowNavigation;
	class UClass* StorePopup_Details;
	class UClass* Button_SendGift;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStoreFrontOfferInfo : public UObject
{
public:
	class UClass* OfferDisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaItemShopOfferInfo : public UFortStoreFrontOfferInfo
{
public:
	class UClass* ItemShopDisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopOfferInspectionNavigator : public CommonActivatableWidget
{
public:
	class UClass* OwningOfferInspectionWidget;
	class UClass* Button_Next;
	class UClass* Button_Previous;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopOfferStyleScreen : public AthenaItemShopOfferDetailsWidgetBase
{
public:
	struct DataTableRowHandle BackAction;
	class UClass* ItemPreview_Widget;
	class UClass* Header_ItemInfo;
	class UClass* Text_StyleDisclaimer;
	class UClass* Picker_VariantSelector;
	class UClass* Button_Previous;
	class UClass* Button_Next;
	class UClass* Info_LockedNotification;
	class UClass* TriggeringItemDefinition;
	struct DisplayManagerVariantData VariantData;
	TArray<int> OfferIndicesWithVariants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopPurchaseOverlayModal : public AthenaItemShopOfferDetailsWidgetBase
{
public:
	class UClass* HBox_SuccessfullyPurchased;
	class UClass* HBox_SuccessfullyRefunded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopRealMoneyOfferDetails : public AthenaItemShopOfferDetailsWidgetBase
{
public:
	struct DataTableRowHandle BackAction;
	struct DataTableRowHandle PurchaseAction;
	struct DataTableRowHandle VBuckAction;
	struct DataTableRowHandle ReloadMtxAction;
	struct DataTableRowHandle LegalTextAction;
	class UClass* ItemInspectScreenClass;
	class UClass* Button_Purchase;
	class UClass* Button_SendGift;
	class UClass* Button_Inspect;
	class UClass* Button_MobileClose;
	class UClass* Button_MTX;
	class UClass* Container_SimpleMTXDisplay;
	class UClass* Overlay_MobileCloseButton;
	class UClass* ScrollBox_Details;
	struct PrimaryContentSetup PrimaryContentSetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopScreen : public CommonActivatableWidget
{
public:
	bool bShowAvailableMTXBalance;
	struct PrimaryContentSetup PrimaryContentSetup;
	struct DataTableRowHandle OpenMTXStoreAction;
	struct Margin SectionsPadding;
	struct DataTableRowHandle NextCategoryInputAction;
	struct DataTableRowHandle PrevCategoryInputAction;
	struct TSoftClassPtr<UObject> ItemShopOfferDetailsScreenClass;
	struct TSoftClassPtr<UObject> ItemShopRMTOfferInspectScreenClass;
	class UClass* AffiliateModalClass;
	class UClass* StoreSelectionPopupClass;
	float ScrollThreshold;
	class UClass* AffiliateModal;
	class UClass* StoreSelectionPopup;
	class UClass* LastPlayedIntroAnimation;
	class UClass* Overlay_NavigationControl;
	class UClass* ScrollBox_Sections;
	class UClass* VBox_Sections;
	class UClass* InvalidationBox_ItemShop;
	class UClass* Container_AvailableAmount;
	class UClass* Navigator_ShopSections;
	class UClass* SwipePanel_SectionsNavigation;
	class UClass* EntryBox_SectionsPips;
	class UClass* Button_SupportACreator;
	class UClass* Button_ScrollToTop;
	class UClass* Image_DefaultBackground;
	class UClass* SpecialOfferVideoPlayerClass;
	class UClass* ButtonGroup_SectionsPips;
	Unknown ItemShopBackgroundDirector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopSection : public CommonActivatableWidget
{
public:
	float OriginalScale;
	float LargeScale;
	Unknown OfferIdToIndexMap;
	Unknown Analytics_OfferIdToIndex2D;
	TArray<class UClass*> OffersToDisplay;
	class UClass* EntryBox_OfferEntries;
	class UClass* ScrollBox_Offers;
	class UClass* Text_Title;
	class UClass* HBox_Timer;
	class UClass* Text_TimeRemaining;
	class UClass* CircleArrowButton_Next;
	class UClass* CircleArrowButton_Previous;
	class UClass* ScaleBox_Offers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaItemShopSectionInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopSectionNavigator : public CommonUserWidget
{
public:
	class UClass* Button_Next;
	class UClass* Button_Previous;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopTile : public CommonButtonLegacy
{
public:
	class UClass* ThumbnailRenderer;
	TArray<class UClass*> Presentations;
	class UClass* ThumbnailRendererClass;
	class UClass* ItemCaptureActorClass;
	struct Vector CaptureActorStartingPosition;
	float CaptureActorZOffset;
	float TimeBetweenPresentationSwaps;
	struct FText SubInactiveStatusText;
	struct FText SubActiveStatusText;
	struct FText SubPaymentErrorStatusText;
	class UClass* Text_Name;
	class UClass* Text_Details;
	class UClass* Text_Price;
	class UClass* Text_PreviousPrice;
	class UClass* Text_SubInfo;
	class UClass* Overlay_SalePrice;
	class UClass* Image_RarityStripe;
	class UClass* Switcher_OwningStatus;
	class UClass* TileState_Owned;
	class UClass* TileState_NotOwned;
	class UClass* TileState_SubInfo;
	class UClass* Overlay_Violator;
	class UClass* TagRotator_ItemTags;
	class UClass* LoadGuard_Image;
	class UClass* Image_Offer;
	class UClass* Image_NextOffer;
	class UClass* Image_AnimatedWrap;
	class UClass* MaterialBacking_Rarity;
	class UClass* MaterialBacking_NoRarity;
	class UClass* ExternalSubscriptionTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopTileImage : public Image
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemTierPipWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemTierWidget : public AthenaItemElementWidgetBase
{
public:
	class UClass* EntryBox_TierPips;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaKeepPlayingTogetherWidget : public CommonActivatableWidget
{
public:
	float ToLobbyDelayOnError;
	class UClass* LocalPlayerSquadMemberWidget;
	TArray<class UClass*> SquadMemberWidgets;
	class UClass* Button_Skip;
	class UClass* Button_OptIn;
	class UClass* Text_OptInCountdown;
	class UClass* Switcher_MatchmakingStatus;
	class UClass* Container_CountdownStatus;
	class UClass* Container_FindingMatchStatus;
	class UClass* Container_Error;
	class UClass* Container_Waiting;
	class UClass* Text_MatchmakingElapsed;
	class UClass* Text_CountdownCurrent;
	class UClass* Text_CountdownNext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLastKillerInfoWidget : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate ShouldShowDeathReport;
	float TimeToWait;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLeaderboardScreenBase : public FortActivatablePanel
{
public:
	class UClass* LeaderboardTabList;
	class UClass* MatchRotator;
	class UClass* LeaderboardTypeRotator;
	class UClass* RefreshTimeText;
	class UClass* NoDataMessageText;
	class UClass* BorderLocalUserFocus;
	class UClass* Widget_ProfileStats;
	class UClass* AthenaStats_Wins;
	class UClass* AthenaStats_SecondTierFinishes;
	class UClass* AthenaStats_ThirdTierFinishes;
	class UClass* AthenaStats_Eliminations;
	class UClass* AthenaStats_MatchesPlayer;
	class UClass* Button_ChangeFlag;
	class UClass* Image_YourFlag;
	struct FName LTMPlaylistDefaultName;
	class UClass* FortFlagSelectionModalClass;
	Unknown ActiveProfileRows;
	class UClass* PlaylistsData;
	Unknown ActiveTabButtons;
	TArray<class UClass*> RowProxies;
	class UClass* LocalUserRowProxy;
	struct LeaderboardFilter CurrentLeaderboardFilter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLetoLogin : public CommonActivatableWidget
{
public:
	class UClass* Panel_Login;
	class UClass* LoginWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLevelBarBase : public FortActorIndicatorWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLevelEffects : public CommonUserWidget
{
public:
	TArray<struct LevelEffectsData> EffectsData;
	TArray<struct FName> FlameMaterialParameters;
	struct Vector2D FlameMaterialRandomRange;
	class UClass* Border_Container;
	class UClass* Text_LvlDesc;
	class UClass* Text_Level;
	class UClass* LazyImage_Flame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLevelUpWidget : public FortHUDElementWidget
{
public:
	float AmountOfTimeToWait;
	bool bIsLeveling;
	struct FortPrioritizedWidgetData PrioritizationData;
	TArray<int> QueuedLevels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLoadoutEntryWidget : public CommonUserWidget
{
public:
	class UClass* SelectedLoadout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLoadoutWidget : public FortActivatablePanel
{
public:
	TArray<class UClass*> EntryWidgets;
	class UClass* EntryWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyWidget : public FortActivatablePanel
{
public:
	class UClass* SquadPedestalGroup;
	TArray<class UClass*> VisualOrderedPedestals;
	class UClass* Radial_EmotePicker;
	class UClass* PlayerPanel_PlayerOptions;
	struct DataTableRowHandle EmoteInputAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLobbyBase : public FortLobbyWidget
{
public:
	class UClass* Content_MatchmakingWidget;
	class UClass* Notice_Emergency;
	class UClass* FortAthenaMOTDTeaserWidget_Main;
	class UClass* LobbyDetails_Default;
	class UClass* LobbyDetails_Tournament;
	class UClass* LobbyDetails_ShowdownDivision;
	class UClass* ChallengeInfo_Widget;
	class UClass* MissionInfo_Widget;
	class UClass* Switcher_LobbyDetailsMode;
	class UClass* Button_GenericLink;
	class UClass* Button_ShadowPlayHighlights;
	class UClass* SeasonalResources;
	struct TSoftClassPtr<UObject> NewEmotePicker;
	class UClass* CatalogMessaging;
	struct DataTableRowHandle SquadFormationInputAction;
	class UClass* SquadFormationClass;
	class UClass* DefaultMatchmakingWidgetClass;
	class UClass* MatchmakingWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyPlayerPanel : public FortActivatablePanel
{
public:
	class UClass* ManageModalClass;
	class UClass* Button_AddFriend;
	class UClass* Button_InviteParty;
	class UClass* Button_Manage;
	class UClass* Button_Close;
	class UClass* Banner_Player;
	class UClass* RichText_PlayerName;
	class UClass* Text_InviteSent;
	class UClass* Image_PlatformIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLobbyPlayerPanel : public FortLobbyPlayerPanel
{
public:
	class UClass* Button_Mute;
	class UClass* Button_ViewProfile;
	class UClass* Text_BattlePassTier;
	class UClass* LoadoutSelector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerViewModel : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaPlayerViewModel : public UFortPlayerViewModel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaLocalPlayerViewModel : public UAthenaPlayerViewModel
{
public:
	class UClass* PlayerController;
	class UClass* IndicatorCache;
	TArray<class UClass*> ListeningForPawnStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLockerItemInfo : public CommonUserWidget
{
public:
	class UClass* Text_ItemType;
	class UClass* Text_ItemRarity;
	class UClass* Text_ItemName;
	class UClass* RichText_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaLootStoreScreenBase : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapChallengeCategoryTabButton : public CommonButtonLegacy
{
public:
	class UClass* LazyImage_Icon;
	struct Vector2D ImageSize_Mobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapChallengeListEntry : public CommonUserWidget
{
public:
	class UClass* IconWidget;
	class UClass* ChallengeListEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapChallengeListView : public ListViewBase
{
public:
	EOrientation Orientation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapChallengeRewardPreview : public CommonUserWidget
{
public:
	class UClass* RichText_Description;
	class UClass* Text_RewardName;
	class UClass* ItemCard_RewardIcon;
	float CycleDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapGameInfo : public FortHUDElementWidget
{
public:
	class UClass* Text_PlaylistName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapGamePanel : public CommonActivatablePanelLegacy
{
public:
	class UClass* TabList_QuestCategories;
	class UClass* ListView_Quests;
	struct DataTableRowHandle PlaceMarkerBinding;
	struct DataTableRowHandle RemoveMarkerBinding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapIconsOverlay : public Overlay
{
public:
	class UClass* AthenaMapNavigableIconSingleChallengeClass;
	class UClass* AthenaMapNavigableIconStackOfChallengesClass;
	class UClass* AthenaMapNavigableIconStackOfNoLocationChallengesClass;
	bool bShowNoLocationIcon;
	bool bAllowFocusControl;
	class UClass* ChallengeIndicatorCache;
	struct UserWidgetPool WidgetsPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaInGameMapIconsOverlay : public AthenaMapIconsOverlay
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaFrontEndMapIconsOverlay : public AthenaMapIconsOverlay
{
public:
	class UClass* AthenaMapPoiIconClass;
	class UClass* EventLevelInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapLayer : public Widget
{
public:
	class UClass* LocalPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapLayerContainer : public CommonActivatablePanelLegacy
{
public:
	struct Vector2D NormalizedMapWidgetPosition;
	class UClass* AthenaMapLayer;
	class UClass* AthenaMapIconsOverlay_Main;
	class UClass* ListView_NonLocationIconsBelowMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapNavigableIcon : public CommonUserWidget
{
public:
	class UClass* Image_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapNavigableIconSingleChallenge : public AthenaMapNavigableIcon
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapNavigableIconStackOfChallenges : public AthenaMapNavigableIcon
{
public:
	class UClass* CommonActionWidget_Cycle;
	struct DataTableRowHandle CycleStackInputAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapNavigableIconStackOfNoLocationChallenges : public AthenaMapNavigableIconStackOfChallenges
{
public:
	class UClass* Text_AllChallenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapPanel : public CommonActivatablePanelLegacy
{
public:
	class UClass* GamePanel;
	class UClass* MapLayerContainer;
	class UClass* SizeBoxChallenge;
	class UClass* Athena_MapInfo;
	struct DataTableRowHandle CloseMapPanelInputAction;
	struct DataTableRowHandle ToggleMapCursorInputAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapPlayerEliminationsWidget : public CommonUserWidget
{
public:
	struct FName ParamName_PlayerIconTexture;
	struct FName ParamName_PlayerIconBackgroundColor;
	bool bIsLocalPlayer;
	class UClass* Image_PlayerIcon;
	class UClass* Text_PlayerName;
	class UClass* Text_ElimCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapPlayersLeftWidget : public FortHUDElementWidget
{
public:
	class UClass* Text_PlayersTeamsLeft;
	struct FText PlayersTeamsLeftTextFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapScreenContainer : public CommonActivatableWidget
{
public:
	struct GameplayTagContainer HideWithMapTags;
	TArray<struct AthenaMapScreenContainerTabInfo> TabInfos;
	struct TSoftClassPtr<UObject> SoftCreativeScoreboardClass;
	struct DataTableRowHandle NextTabInputAction;
	struct DataTableRowHandle PreviousTabInputAction;
	class UClass* VisibilitySwitcher_Content;
	class UClass* EntryBox_TabButtons;
	class UClass* MobileCloseButton;
	class UClass* Content_CreativeScoreboardContainer;
	TArray<struct AthenaMapScreenContainerTabInfo> ActiveTabInfos;
	int CachedQuestTabIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapScreenContainerTabButton : public CommonButtonLegacy
{
public:
	class UClass* LazyImage_Icon;
	class UClass* Text_Title;
	struct Vector2D ImageSize_Mobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMapScreenContainerTabInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapSquadEliminationsWidget : public FortHUDElementWidget
{
public:
	class UClass* EntryBox_SquadElims;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMapStormInfo : public FortHUDElementWidget
{
public:
	struct ScalableFloat SafeZoneDamageAttribute;
	struct FText SafeZonePhaseFormatText;
	struct FText StormDamageFormatText;
	class UClass* Text_SafeZonePhase;
	class UClass* RichText_StormDamage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMarkerDetails : public FortHUDElementWidget
{
public:
	class UClass* MarkerPointer;
	class UClass* DetailsTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMarkerPointer : public Widget
{
public:
	class UClass* LineMeshMaterial;
	struct Vector2D TargetScreenPosition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMatchReadyDesktopPopup : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameScreen : public CommonActivatableWidget
{
public:
	struct FortPostGameScreenConfig PostGameScreenConfig;
	bool bCanGoBackToThisScreen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMatchXPScreenWidget : public FortPostGameScreen
{
public:
	bool bAutoTransitionScreen;
	struct DataTableRowHandle ToggleMapInputAction;
	int NumWidgetsFinished;
	class UClass* Button_StayTogether;
	class UClass* Button_Back;
	class UClass* Button_NextMatch;
	class UClass* Button_Accolade;
	class UClass* Button_PrevPlayer;
	class UClass* Button_NextPlayer;
	class UClass* Button_PrevTeam;
	class UClass* Button_NextTeam;
	class UClass* Button_Replay;
	class UClass* Button_Cancel;
	class UClass* Button_StatToggle;
	class UClass* CommonWidgetSwitcher_DetailSwitch;
	class UClass* CommonWidgetSwitcher_StatIcon;
	class UClass* Section_DetailsRecap;
	class UClass* Section_XPRecap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMiniChallengeEntry : public CommonUserWidget
{
public:
	class UClass* QuestIcon;
	class UClass* QuestDef;
	class UClass* PendingQuestDef;
	int DisplayGoal;
	int DisplayAchivedCount;
	int PendingGoalCount;
	int PendingLastKnown;
	int PendingAchivedCount;
	int PendingXpValue;
	bool bPendingUpdate;
	bool bIsFirstTimeBoosted;
	struct FName ParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMiniChallenges : public CommonActivatableWidget
{
public:
	class UClass* EntryBox_MiniChallenges;
	bool bPlacedAtEndOfMatch;
	int UpdatingWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMinigameActivityWidget : public CommonUserWidget
{
public:
	Unknown StatFormats;
	class UClass* Text_ActivityName;
	class UClass* Text_Stat;
	class UClass* Text_AddTime;
	class UClass* Text_Score;
	class UClass* Text_Lap;
	class UClass* Text_BestLapTime;
	bool bMinigameActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMinimap : public Widget
{
public:
	struct Vector2D DesiredSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaStaticMtxOfferButton : public AthenaMtxOfferButtonBase
{
public:
	class UClass* Text_BonusMtxAmount;
	class UClass* Text_BonusPercent;
	class UClass* HB_BonusMtxArea;
	class UClass* SB_BonusPercentArea;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMtxOfferListEntryButton : public AthenaStaticMtxOfferButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassPurchaseConfirmationButton : public CommonButtonLegacy
{
public:
	class UClass* Text_FinalCost;
	class UClass* Text_PurchaseTitle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassPurchaseScreenBase : public CommonActivatableWidget
{
public:
	class UClass* SeasonData;
	bool bDoesOwnBattlePass;
	struct GameplayTag SpatialCamera;
	struct FString SourceContextNameFallback;
	struct GameplayTag BattlePassSpatialRoomCamera;
	int CurrentSeasonLevel;
	class UClass* GiftingScreenClass;
	class UClass* MFAModalClass;
	class UClass* PurchaseCompleteModal;
	class UClass* GiftBattlePassButton;
	class UClass* MoreInfo;
	class UClass* Button_DeclinePurchase;
	class UClass* BackButton;
	class UClass* Button_CloseMobile;
	class UClass* Container_CloseButtonMobile;
	class UClass* Overlay_TierBundleDisclaimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPassPurchaseScreen : public BattlePassPurchaseScreenBase
{
public:
	float DelaySubscriptionIntroLength;
	struct TSoftClassPtr<UObject> SeasonMovieWidgetClass;
	struct TSoftClassPtr<UObject> ResolveSubscriptionIssueModalClass;
	struct TSoftClassPtr<UObject> LegalInfoModalClass;
	class UClass* Button_LegalInfo;
	class UClass* Button_InspectPackItems;
	class UClass* Button_MobileInspectPackItems;
	class UClass* MTXButton_PurchaseScreen;
	class UClass* Text_SubscriptionDisclaimer;
	class UClass* Text_PurchasesButtonDisclaimer;
	class UClass* Button_PurchaseBattlePass;
	class UClass* Button_PurchaseSubscription;
	class UClass* Button_MobileConfirmSelection;
	class UClass* Button_PurchaseBattlePassConfirmation;
	class UClass* Button_PurchaseBattlePassBundleConfirmation;
	class UClass* Widget_SubscriptionRewardDetails;
	class UClass* Overlay_SafeZone;
	class UClass* Image_White;
	class UClass* VideoStream_Source;
	class UClass* ItemPairsInspectionScreen;
	class UClass* InspectScreenViewProgressButton;
	class UClass* InspectScreenSubscribeButton;
	struct DataTableRowHandle InspectItemsSubscribeAction;
	struct DataTableRowHandle InspectItemsViewProgressAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPassSelectionButton : public CommonButtonLegacy
{
public:
	bool bShowCallout;
	class UClass* Text_Title;
	class UClass* Text_RealMoneyPrice;
	class UClass* Text_VBuckFinalCost;
	class UClass* Text_Callout;
	class UClass* Switcher_Prices;
	class UClass* Widget_RealMoneyPrice;
	class UClass* Widget_VBuckPrice;
	class UClass* CalloutContainer;
	class UClass* SubtitleContainer;
	struct Color Color_CmsOverrideA;
	struct Color Color_CmsOverrideB;
	struct Color Color_CmsOverrideC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPickingLayer : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerHitPointBarBase : public UserWidget
{
public:
	class UClass* PlayerVM;
	EHealthBarType BarType;
	float ValueCurrent;
	float BeginDeltaInterpDelayMin;
	float BeginDeltaInterpDelayMax;
	float ValueLast;
	float ValueMax;
	float LastToCurrentUpdateRate;
	bool bShouldDisplayShieldBar;
	bool bCanAddExtensionWidgets;
	EUIExtensionSlot ExtensionSlotToUse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerHitPointInfo : public FortHUDElementWidget
{
public:
	class UClass* Overlay_LocalPlayerExtensions;
	bool bUseLargeFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerIndicatorBase : public FortActorIndicatorWidget
{
public:
	struct Vector2D MinMaxSizeDistance;
	struct Vector2D MinMaxScale;
	float FarAwayScaleMultiplier;
	struct Vector RelativeLocationWhenDBNO;
	struct Vector RelativeLocationWhenNotDBNO;
	struct Vector2D UnscaledScreenSpaceRelativeOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerInfoBase : public FortHUDElementWidget
{
public:
	Unknown WeakPSA;
	bool bIsLocalPlayer;
	struct SlateColor Color_PlayerNameAlive;
	struct SlateColor Color_PlayerNameDead;
	struct SlateColor Color_PlayerNameDisconnected;
	class UClass* Image_HealthBar;
	class UClass* Image_ShieldBar;
	class UClass* Content_StormCN;
	class UClass* Image_StormCN;
	class UClass* Image_DBNOBar;
	class UClass* Image_PlatformIcon;
	class UClass* Text_PlayerName;
	class UClass* Image_Marker;
	class UClass* DBNOStateWidget;
	class UClass* Image_DeadIndicator;
	class UClass* Image_DisconnectedIndicator;
	class UClass* Image_ResurrectChip;
	class UClass* Image_ResurrectionChipExpirationBar;
	class UClass* WidgetSwitcher_Avatar;
	class UClass* Icon_AvatarSocial;
	class UClass* Image_AvatarOverride;
	class UClass* SpeakerWidgetAnim;
	class UClass* LevelEffects;
	class UClass* Overlay_HealthAndShieldInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaPlayerInfoBaseWidgetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerKillsBase : public FortHUDElementWidget
{
public:
	class UClass* KillsText;
	class UClass* KillsSource;
	bool bCustomKillSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountWidgetBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerLevelDisplay : public FortAccountWidgetBase
{
public:
	class UClass* Text_Level;
	class UClass* RewardIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayersLeftBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerTeamKillsBase : public FortHUDElementWidget
{
public:
	class UClass* KillsText;
	class UClass* PlayerVM;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPlayerVitalityBarBase : public UserWidget
{
public:
	class UClass* PlayerVM;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPreserveSquadButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProfileStatBox : public SizeBox
{
public:
	struct FScriptMulticastDelegate OnStatViewChanged;
	bool bRespectParentStatView;
	class UClass* StatView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaBaseStatView : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaWeaponStatView : public UAthenaBaseStatView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMatchStatView : public UAthenaBaseStatView
{
public:
	TArray<class UClass*> WeaponStatViews;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaMatchSetStatView : public UAthenaMatchStatView
{
public:
	class UClass* OwningSeason;
	struct FName PlaylistId;
	TArray<class UClass*> BestMatches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProfileStatContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnStatsProfileLoaded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProfileStatListWidgetBase : public CommonButtonLegacy
{
public:
	class UClass* ProfileStatBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProfileStatsBase : public CommonActivatablePanelLegacy
{
public:
	class UClass* ProfileStatBox;
	TArray<class UClass*> StatSets;
	class UClass* CurrentViewedStatSet;
	class UClass* CurrentStatView;
	struct FName CurrentPlaylist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProfileStatsRecentMatchesBase : public CommonActivatablePanelLegacy
{
public:
	TArray<class UClass*> RecentMatches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProfileStatWidgetBase : public CommonUserWidget
{
public:
	struct GameplayTag Stat;
	class UClass* ProfileStatBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaProgressModal : public CommonActivatableWidget
{
public:
	class UClass* Text_Title;
	class UClass* Text_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPunchCard : public FortHUDElementWidget
{
public:
	EPunchType PunchCardLayout;
	int DefaultPunchCardNumForNoPunchCardOnMcp;
	struct FText XpSourceDisplayText;
	TArray<class UClass*> MedalsToPlace;
	class UClass* EntryWidgetClass;
	struct FortPrioritizedWidgetData PrioritizationData;
	EPunchCardLocation PunchCardLocation;
	class UClass* GridPanel_Accolades;
	class UClass* Timer_Countdown;
	class UClass* Timer_FrontendCountdown;
	TArray<struct CardSlotMedalData> MedalPunchData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaPunchCardEntry : public CommonUserWidget
{
public:
	int Index;
	bool bDisableFinishPlacementDelegate;
	class UClass* Text_RewardQuantity;
	class UClass* Text_RewardQuantity_Recap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuestProgression : public CommonUserWidget
{
public:
	class UClass* Text_ChallengeDescription;
	class UClass* RichText_ChallengeCount;
	class UClass* ProgressBar_Challenge_Front;
	class UClass* ProgressBar_Challenge_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuickbarEditorBase : public CommonUserWidget
{
public:
	class UClass* EquipButtonGroup;
	bool bCheckVisibilityBasedOffInventoryCapacity;
	EFortQuickBars QuickbarIndex;
	class UClass* QuickBarSlotButtonClass;
	int FirstQuickBarSlotIndex;
	int NumQuickBarSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuickBarNativeCell : public ContentWidget
{
public:
	struct Vector2D SelectionOffset;
	float SelectionAnimLength_Seconds;
	struct SlateBrush EmptyCell_Brush;
	struct Vector2D EmptyCell_Padding;
	struct SlateBrush SelectedCell_Brush;
	struct SlateBrush InactivePortrait_Brush;
	struct SlateBrush ItemPortrait_Brush;
	struct SlateBrush AmmoType_Brush;
	struct Vector2D AmmoTypeIcon_Size;
	struct Vector2D AmmoTypeIcon_Padding;
	struct SlateFontInfo ItemCount_Font;
	struct LinearColor ItemCount_Color;
	float ItemCount_OutlineAlphaFactor;
	struct SlateBrush GadgetFuel_Brush;
	struct Vector2D GadgetFuel_Padding;
	float GadgetFuelChargeCount_OutlineAlphaFactor;
	struct SlateFontInfo GadgetFuelChargeCount_Font;
	struct LinearColor GadgetFuelChargeCount_Color;
	bool bShowSelectedWhenEmpty;
	bool bSupportsWideItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuickBarSlotBase : public CommonUserWidget
{
public:
	class UClass* SwitcherTopComboSwitcher;
	class UClass* SwitcherBottomComboSwitcher;
	class UClass* KeybindTop;
	class UClass* KeybindBottom;
	class UClass* KeybindBottomCombo1;
	class UClass* KeybindBottomCombo2;
	class UClass* KeybindTopComboArrow1;
	class UClass* KeybindTopComboArrow2;
	class UClass* KeybindBottomComboArrow1;
	class UClass* KeybindBottomComboArrow2;
	class UClass* BottomHoldText;
	class UClass* TopLeftArrowImage;
	class UClass* TopLeftArrowImage2;
	class UClass* TopRightArrowImage;
	class UClass* TopRightArrowImage2;
	class UClass* BottomLeftArrowImage;
	class UClass* BottomLeftArrowImage2;
	class UClass* BottomRightArrowImage;
	class UClass* BottomRightArrowImage2;
	class UClass* EmptyImage;
	class UClass* ItemCardMaximized;
	class UClass* ItemCardMinimized;
	class UClass* QuickbarSlotCooldown;
	class UClass* SlotInteraction;
	class UClass* NativeCell;
	int SlotIndex;
	EFortQuickBars QuickBarType;
	bool bShowBottomArrows;
	bool bShowTopArrows;
	bool bHideKeybindsWhenAbilityUnavailable;
	bool bShouldCollapseItemWidgetBorder;
	bool DoNotPlaySelectionAnimation;
	bool bIsAthenaQuickBar;
	bool bKeybindsHidden;
	EFortItemCardSize ItemCardSize;
	class UClass* Item;
	class UClass* InputData;
	bool bCheckVisibilityBasedOffInventoryCapacity;
	Unknown TutorialHighlight;
	bool bDragAndDropEnabled;
	bool bUseSlotSizeBySlotUsage;
	TArray<struct Vector2D> SlotSizeBySlotUsage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaQuickBarSlot : public FortQuickBarSlotBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReadyUpScreenOverlay : public CommonUserWidget
{
public:
	float ToLobbyDelayOnError;
	class UClass* Button_Cancel;
	class UClass* Button_StartMatch;
	class UClass* Switcher_MatchmakingStatus;
	class UClass* Container_CountdownStatus;
	class UClass* Container_FindingMatchStatus;
	class UClass* Container_Error;
	class UClass* Container_Waiting;
	class UClass* Container_NoStatus;
	class UClass* Text_MatchmakingElapsed;
	class UClass* Text_CountdownCurrent;
	class UClass* Text_CountdownNext;
	class UClass* Button_StayTogether;
	TArray<class UClass*> PartyWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReadyUpScreenWidget : public FortPostGameScreen
{
public:
	class UClass* ReadyUpOverlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReadyUpTooltipTickWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnReadinessChangedDelegate;
	class UClass* CachedPartyMember;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReadyUpTooltipWidget : public CommonUserWidget
{
public:
	TArray<class UClass*> PartyWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRebootCardIndicator : public AthenaMarkedActorIndicator
{
public:
	class UClass* Text_PlayerName;
	class UClass* Image_PlayerMarker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRebootChipDirective : public FortHUDElementWidget
{
public:
	class UClass* PlayerVM;
	TArray<class UClass*> SquadMemebers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRebootVanIndicator : public AthenaMarkedActorIndicator
{
public:
	int SpawnMachineIndex;
	ESpawnMachineState SpawnMachineState;
	float SpawnMachineCooldownStartTime;
	float SpawnMachineCooldownEndTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReloadMtxIntroModalPopup : public FortActivatablePanel
{
public:
	class UClass* Button_Confirm;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReloadMtxScreen : public AthenaReloadMtxScreenBase
{
public:
	class UClass* Button_StarterKitOption;
	class UClass* ListView_MtxOptions;
	class UClass* Switcher_AvailableOptions;
	class UClass* Overlay_AvailableOptions;
	class UClass* Overlay_NoOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaRemotePlayerViewData : public UObject
{
public:
	struct FScriptMulticastDelegate OnPlayerStateChanged;
	struct FScriptMulticastDelegate OnTeamColorChanged;
	struct FScriptMulticastDelegate OnSquadIdChanged;
	struct FScriptMulticastDelegate OnPlayerNameChanged;
	struct FScriptMulticastDelegate OnKillScoreChanged;
	struct FScriptMulticastDelegate OnLocationChanged;
	struct FScriptMulticastDelegate OnHealthHealed;
	struct FScriptMulticastDelegate OnHealthDamaged;
	struct FScriptMulticastDelegate OnShieldHealed;
	struct FScriptMulticastDelegate OnShieldDamaged;
	struct FScriptMulticastDelegate OnDBNOStateChanged;
	struct FScriptMulticastDelegate OnDeadStateChanged;
	struct FScriptMulticastDelegate OnBeingRevivedStateChanged;
	struct FScriptMulticastDelegate OnDisconnectedChanged;
	struct FScriptMulticastDelegate OnPlayerPawnChanged;
	struct FScriptMulticastDelegate OnWeaponChanged;
	struct FScriptMulticastDelegate OnDistanceToStormChanged;
	struct FScriptMulticastDelegate OnPlaceChanged;
	struct FScriptMulticastDelegate OnMaterialCountChanged;
	struct FScriptMulticastDelegate OnIsInRelevancyChanged;
	struct FScriptMulticastDelegate OnIsFollowedPlayerChanged;
	struct FScriptMulticastDelegate OnIsReplayRelevancyPlayerChanged;
	struct FScriptMulticastDelegate OnVehicleHealthHealed;
	struct FScriptMulticastDelegate OnVehicleHealthDamaged;
	struct UniqueNetIdRepl PlayerUID;
	class UClass* PlayerState;
	class UClass* CachedPlayerPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaRemotePlayerViewModel : public UAthenaPlayerViewModel
{
public:
	class UClass* PlayerController;
	TArray<class UClass*> SquadList;
	TArray<class UClass*> NameIndicatedPlayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaRemoteSquadViewData : public UObject
{
public:
	struct FScriptMulticastDelegate OnPlayerAdded;
	struct FScriptMulticastDelegate OnSquadIdChanged;
	struct FScriptMulticastDelegate OnSquadKillscoreChanged;
	struct FScriptMulticastDelegate OnSquadPlaceChanged;
	struct FScriptMulticastDelegate OnSquadColorChanged;
	struct FScriptMulticastDelegate OnSquadEliminated;
	TArray<class UClass*> PlayerDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReplayActionFeedRowBase : public CommonUserWidget
{
public:
	struct TSoftClassPtr<UObject> Texture_EliminationIcon;
	struct TSoftClassPtr<UObject> Texture_DbnoIcon;
	class UClass* Image_EventIcon;
	class UClass* Text_EventTime;
	class UClass* Button_InstigatorButton;
	class UClass* Button_VictimButton;
	class UClass* RowProxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaReplayActionFeedRowProxyInstance : public UObject
{
public:
	struct ReplayEliminationEventInfo RowData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReplayActionFeedScreenBase : public FortActivatablePanel
{
public:
	class UClass* ListView_Entries;
	class UClass* Button_Close;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReplayBrowserEntryWidget : public CommonButtonLegacy
{
public:
	class UClass* Text_Name;
	class UClass* Text_Date;
	class UClass* Text_Length;
	class UClass* Text_Rank;
	class UClass* Text_Eliminations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaReplayBrowserRowProxyInstance : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaReplayBrowserScreenBase : public FortActivatablePanel
{
public:
	class UClass* ViewStreamingReplayModalClass;
	struct DataTableRowHandle RefreshActionRowHandle;
	struct DataTableRowHandle BackActionRowHandle;
	struct DataTableRowHandle ViewStreamingReplayActionRowHandle;
	class UClass* ListView_Replay;
	class UClass* RenameDialog;
	class UClass* Button_OpenReplayFolder;
	class UClass* Button_PlayReplay;
	class UClass* Button_DeleteReplay;
	class UClass* Button_RenameReplay;
	TArray<class UClass*> RowProxies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaResourcesBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRespawnBase : public FortHUDElementWidget
{
public:
	ERespawnUIState RespawnState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRespawnTimer : public FortHUDElementWidget
{
public:
	float MinUpdateTime;
	float CreativeMinUpdateTime;
	class UClass* Text_Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaRewardItemTypeRarityTag : public CommonUserWidget
{
public:
	class UClass* Border_ItemRarity;
	class UClass* Border_RarityTint;
	class UClass* Text_ItemRarity;
	class UClass* Text_ItemType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaScorePopWidgetBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaScrollBox : public ScrollBox
{
public:
	bool bEnableFixedPageOffset;
	bool bEnableClickThrough;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSeasonItemRewardIcon : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSeasonStatusWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaShutdownWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSkydivingInformation : public FortHUDElementWidget
{
public:
	class UClass* PairedComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemBaseWidget : public CommonUserWidget
{
public:
	struct FortItemQuantityPair ItemQuantityPair;
	class UClass* ItemDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSmallOfferPreviewBase : public FortItemBaseWidget
{
public:
	class UClass* OfferData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSocialQuests : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSocialScreenSectionEntryWidget : public CommonButtonBase
{
public:
	bool bIsInActiveState;
	bool bInPeekState;
	bool bForcedHover;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSocialSaveTheDateWidget : public AthenaSocialScreenSectionEntryWidget
{
public:
	class UClass* Image_Background;
	class UClass* Text_Primary;
	class UClass* Text_Secondary;
	class UClass* Text_Tertiary;
	class UClass* Border_EventStatusGoing;
	EFortSocialDateTimeStyle DateStyle;
	EFortSocialDateTimeStyle TimeStyle;
	TArray<class UClass*> EntryBackgrounds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSocialScreen : public CommonActivatablePanelLegacy
{
public:
	class UClass* SaveTheDateSection;
	class UClass* SocialQuestsScreenSection;
	class UClass* WhosGoingSection;
	class UClass* Background_MovieWidget;
	class UClass* Text_BuffetDescription;
	class UClass* Image_RiftBG;
	class UClass* Overlay_BuffetHeader;
	class UClass* ScrollBox_Sections;
	class UClass* Navigator_SocialSections;
	class UClass* Navigator_MobileSocialSections;
	class UClass* MobileVisibilitySwitcher;
	class UClass* ActiveNavigatorSocialActions;
	class UClass* Button_ScrollToTop;
	class UClass* Button_ViewCareer;
	class UClass* EntryBox_SectionsPips;
	class UClass* ButtonGroup_SectionsPips;
	struct FString VideoUID;
	float ScrollThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSocialScreenQuestWidget : public AthenaSocialScreenSectionEntryWidget
{
public:
	class UClass* RichText_ChallengeDesc;
	class UClass* RichText_ObjectivesCompletedSelected;
	class UClass* RichText_ObjectivesCompletedUnselected;
	class UClass* LazyImage_SourceIcon;
	class UClass* RichText_SourceName;
	class UClass* RichText_FlavorText;
	class UClass* DateTimeText_TimeRemaining;
	class UClass* UserWidget_Rewards;
	class UClass* Text_QuestID;
	struct TSoftClassPtr<UObject> DefaultPortraitDisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSocialScreenSection : public CommonActivatableWidget
{
public:
	float SectionHeightOverride;
	bool bAllQuestsAreCompleted;
	bool bIsSectionScrollingEnabled;
	class UClass* Text_Title;
	class UClass* Text_Disclaimer;
	class UClass* ScaleBox_SocialEntries;
	class UClass* EntryBox_SocialEntries;
	class UClass* SizeBox_EntryBox;
	class UClass* SaveTheDateWidgetClass;
	class UClass* WhosGoingWidgetClass;
	class UClass* SocialQuestWidgetClass;
	class UClass* ScrollBox_SocialEntries;
	class UClass* CircleArrowButton_Next;
	class UClass* CircleArrowButton_Previous;
	int WhosGoingSectionFocusableIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSocialWhosGoingWidget : public AthenaSocialScreenSectionEntryWidget
{
public:
	class UClass* Text_PrimaryName;
	class UClass* Text_SecondaryName;
	class UClass* Text_Date;
	class UClass* Text_Time;
	class UClass* Text_OtherTimes;
	class UClass* Border_OnlineStatusIndicator;
	class UClass* Border_PrimaryEventIndicator;
	class UClass* Border_ExtraEvents;
	class UClass* Image_PlatformIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpecialEventChallengeEntry : public AthenaChallengeEntry
{
public:
	float RefreshRate;
	class UClass* TextThreatLevel;
	class UClass* ProgressBarChallengeProgress;
	class UClass* TextChallengeTimer;
	class UClass* WidgetTimerContent;
	class UClass* Text_Distance;
	class UClass* Text_Price;
	class UClass* Image_Price;
	struct FText BountyDistanceFormatText;
	class UClass* WidgetPriceAndDistanceContent;
	class UClass* Image_UrgentIcon;
	class UClass* Image_UrgentAlertBackground;
	class UClass* Text_UrgentIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpecialEventChallengesWidget : public AthenaChallengesWidget
{
public:
	float UrgentQuestMessagingStartBuffer;
	class UClass* AttachedPlayerState;
	TArray<struct UrgentQuestData> ActiveUrgentQuestDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpecialEventStartedOverlay : public FortHUDElementWidget
{
public:
	class UClass* AttachedPlayerState;
	struct FortPrioritizedWidgetData PrioritizedWidgetData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectateMatchModalBase : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorBuildCountBase : public CommonUserWidget
{
public:
	class UClass* BuildingClass;
	ESpectatorBuildCountType BuildCountType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorHitPointBarBase : public CommonUserWidget
{
public:
	EHealthBarType BarType;
	float LastToCurrentUpdateRate;
	bool bIsDBNO;
	Unknown PlayerData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorHUDControlsBase : public CommonUserWidget
{
public:
	class UClass* ReplayTimeline;
	class UClass* Button_FocusTimeline;
	class UClass* IconTextButtonReplay_PlayHighlights;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorInventorySlotBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorPlayerListBase : public CommonActivatableWidget
{
public:
	class UClass* ListView;
	TArray<class UClass*> PlayerDataArray;
	struct DataTableRowHandle SortListRowHandles;
	struct DataTableRowHandle ShowPlayerProfileRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorMapPlayerListBase : public AthenaSpectatorPlayerListBase
{
public:
	struct DataTableRowHandle ToggleOnlyShowMapPlayersRowHandle;
	class UClass* Button_SortBySquadId;
	class UClass* Button_SortByPlayerName;
	class UClass* Button_SortByEliminations;
	class UClass* Button_SortByEventScore;
	class UClass* Button_SortByState;
	class UClass* MapLayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorMaterialCountsBase : public FortHUDElementWidget
{
public:
	bool bIsInBuildMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorNameplateBase : public FortActorIndicatorWidget
{
public:
	float DistanceToCameraOffsetScale;
	float MinZOffset;
	float MaxZOffset;
	bool bOverrideNameplateScaleToMax;
	Unknown PlayerData;
	EAthenaSpectatorNameplateDistanceState CurrentDistanceState;
	EAthenaSpectatorNameplateDetailState CurrentDetailState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorNameplateLayerBase : public FortHUDElementWidget
{
public:
	class UClass* NameplateWidgetClass;
	Unknown NameplateWidgetMap;
	class UClass* Canvas_NameplateIndicators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorPlayerWidgetBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorPlayerListEntryBase : public AthenaSpectatorPlayerWidgetBase
{
public:
	class UClass* Border_SquadColor;
	class UClass* Text_SquadId;
	class UClass* Text_PlayerName;
	class UClass* Text_KillScore;
	class UClass* HitPoint_HealthBar;
	class UClass* HitPoint_ShieldBar;
	class UClass* Text_EventScore;
	class UClass* Image_RecordingPlayerIcon;
	class UClass* Image_FollowedPlayerIcon;
	class UClass* Button;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorPlayerListEntryWidget : public CommonButtonLegacy
{
public:
	class UClass* PlayerListRowData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorPlayerListScreenBase : public CommonUserWidget
{
public:
	TArray<class UClass*> RowDataArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorPlayersLeftBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorQuickbarBase : public FortHUDElementWidget
{
public:
	TArray<class UClass*> ItemSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorTeamTagBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorTrapsLoadoutBase : public FortHUDElementWidget
{
public:
	TArray<class UClass*> ItemSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpectatorUIContext : public BlueprintContextBase
{
public:
	Unknown PlayerDataMap;
	Unknown SquadDataMap;
	class UClass* SpectatingPC;
	struct UniqueNetIdRepl FollowedPlayerUID;
	struct UniqueNetIdRepl ReplayRelevancyPlayerUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaTeamDisplayData : public UDataAsset
{
public:
	TArray<struct AthenaTeamDisplayInfo> SquadStyles;
	struct AthenaTeamDisplayInfo DefaultStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSquadIndicator : public AthenaMarkedActorIndicator
{
public:
	float IndicatorWorldOffsetProperty;
	float IndicatorItemOffset;
	float IndicatorSpecialServerOffset;
	struct Vector2D SmallIndicatorScale;
	float WorldOffsetInterpValue;
	struct FName MIDParam_LocationColor;
	struct FName MIDParam_ItemIcon;
	struct FName MIDParam_ItemRarityColor;
	class UClass* LoadingPlaceholder;
	struct MarkerLargeIndicatorType LocationMarker;
	struct MarkerLargeIndicatorType ItemMarker;
	struct MarkerLargeIndicatorType DangerMarker;
	struct MarkerLargeIndicatorType SpecialLocalMarker;
	struct MarkerLargeIndicatorType SpecialServerMarker;
	class UClass* Image_SmallIndicator;
	class UClass* Image_LocationFlare;
	class UClass* Image_LargeIndicator;
	class UClass* Anim_LocationPlaced;
	class UClass* Anim_DangerPlaced;
	class UClass* Anim_ItemPlaced;
	class UClass* Anim_Hovered;
	class UClass* Image_TrajectoryLargeIndicator;
	class UClass* Image_TrajectorySmallIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSquadListBase : public FortHUDElementWidget
{
public:
	ESlateVisibility LocalPlayerVisibility;
	class UClass* LocalPlayerInfo;
	class UClass* EntryBox_SquadList;
	class UClass* CachedPlayerVM;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamMemberEntryBase : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaMinimalSquadMemberEntry : public FortTeamMemberEntryBase
{
public:
	class UClass* Image_ReadyIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBasicTeamMemberEntry : public FortTeamMemberEntryBase
{
public:
	class UClass* Image_PlatformIcon;
	class UClass* Banner_MemberBanner;
	class UClass* Text_SocialName;
	class UClass* Image_LeaderIcon;
	class UClass* VoiceIcon_Status;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSquadMemberDetailedEntry : public FortBasicTeamMemberEntry
{
public:
	class UClass* AvatarIcon_MemberAvatar;
	class UClass* Text_ParticipationStatus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAthenaSquadPedestalGroup : public AActor
{
public:
	ESubGame UsedSubgame;
	int MonitoredSquadIdx;
	TArray<class UClass*> MemberPedestals;
	class UClass* PedestalChildrenRoot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaStandaloneMtxStore : public CommonActivatableWidget
{
public:
	class UClass* Panel_MTXStore;
	class UClass* Button_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaStarterKitOfferButton : public AthenaMtxOfferButtonBase
{
public:
	class UClass* Text_DisplayName;
	class UClass* Text_OfferContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaStatsScreenBase : public FortActivatablePanel
{
public:
	class UClass* StatsTabList;
	class UClass* WinsTile;
	class UClass* SecondTierTile;
	class UClass* ThirdTierTile;
	class UClass* KillsRow;
	class UClass* MatchesPlayedRow;
	class UClass* LastUpdatedTime;
	class UClass* PlayerName;
	class UClass* SeasonContainer;
	class UClass* AccountContainer;
	class UClass* MainStatsContainer;
	class UClass* PlatformButton;
	class UClass* Image_PlatformIcon;
	class UClass* LTM_Disclaimer;
	class UClass* Button_ChangeFlag;
	class UClass* Image_YourFlag;
	class UClass* Image_OtherUserFlag;
	class UClass* Switcher_FlagDisplay;
	bool bWasLastQuerySuccessful;
	class UClass* PlaylistsData;
	struct FName LTMPlaylistDefaultName;
	class UClass* FortFlagSelectionModalClass;
	struct FText PlatformButtonDisplayText;
	class UClass* QueriedSocialUser;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaStormSurgeWarningBase : public FortHUDElementWidget
{
public:
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaStormSurgeWidgetBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTeamAliveCountBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTeamMemberDBNOCountdown : public CommonUserWidget
{
public:
	class UClass* Image_Timer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTeamMemberDBNOState : public CommonUserWidget
{
public:
	struct TSoftClassPtr<UObject> DBNOIndicatorVisual;
	struct TSoftClassPtr<UObject> RevivingIndicatorVisual;
	class UClass* Switcher_Indicator;
	class UClass* Panel_DefaultIndicator;
	class UClass* Panel_CustomIndicator;
	class UClass* LazyImage_Indicator;
	class UClass* Image_Timer;
	class UClass* LazyWidget_CustomWidgetContainer;
	class UClass* LazyImage_CustomWidgetTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTeamScoreWidgetBase : public FortHUDElementWidget
{
public:
	class UClass* CurrPlayerState;
	int GoalScore;
	int PreviousScore;
	int PreviousScorePlacement;
	int PreviousDeltaScore;
	bool bPreviousIsWinner;
	bool bPreviousHasScore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTeamSquadEntry : public CommonUserWidget
{
public:
	class UClass* EntryBox_Members;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamSquadDetailedEntry : public AthenaTeamSquadEntry
{
public:
	class UClass* RichText_SquadName;
	class UClass* RichText_LockReason;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTeamSquadsEntryBox : public DynamicEntryBoxBase
{
public:
	class UClass* SquadEntryClass;
	bool bDisplayEmptySquads;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTemperatureBase : public CommonUserWidget
{
public:
	class UClass* Temperature;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTimeWidgetBase : public FortHUDElementWidget
{
public:
	struct TimerHandle UpdateTimerHandle;
	struct FText CachedDisplayText;
	struct FName CachedDisplayTextStyle;
	bool bIsDisplaying;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTopBar : public CommonActivatableWidget
{
public:
	struct DataTableRowHandle NextTabInputAction;
	struct DataTableRowHandle PreviousTabInputAction;
	TArray<struct FortTopBarTabButtonInfo> TabsInfo;
	class UClass* ButtonGroup_TopTabs;
	class UClass* Notice_Emergency_Base;
	class UClass* Button_Social;
	class UClass* Button_MainMenu;
	class UClass* Button_MTX;
	class UClass* Text_MobileTabLabel;
	class UClass* EntryBox_TabButtons;
	class UClass* InputActionWidget_Next;
	class UClass* InputActionWidget_Prev;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTransientQuestStartedOverlay : public FortHUDElementWidget
{
public:
	class UClass* Button_MobileClickCatcher;
	struct FortPrioritizedWidgetData PrioritizedWidgetData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaTravelLogFormatting : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaTrickFeedBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaUIStateWidget_Frontend : public FortUIStateWidgetBase
{
public:
	TArray<struct FString> DefaultFlowStepArray;
	TArray<struct FString> FirstTimeSeasonFlowStepArray;
	class UClass* GuidedTutorialFakeLoadingScreenClass;
	struct PrimaryAssetId GuidedTutorialPlaylistId;
	TArray<class UClass*> PendingRemovalGiftboxes;
	struct FText BadMatchPopupTitle;
	struct FText BadMatchPopupDescription;
	struct GameplayTag BattlepassScreenTag;
	struct TSoftClassPtr<UObject> FireModePanelClass;
	class UClass* MOTDWidgetClass;
	struct TSoftClassPtr<UObject> VideoPlayerClass;
	struct VideoWidgetConfig SeasonTrailerConfig;
	struct TSoftClassPtr<UObject> MFAModalClass;
	class UClass* SocialImportPanelClass;
	class UClass* ConfirmationWindowClass;
	class UClass* MiniMapManagerClass;
	class UClass* MapScreenContainerClass;
	Unknown AthenaTabsScreen;
	class UClass* PlayerBannedScreenClass;
	class UClass* PlayerSurveyDispatcher;
	class UClass* MapScreen;
	bool bVideoActive;
	class UClass* TopBar_Widget;
	class UClass* BottomBar;
	class UClass* ChatPanel_Widget;
	class UClass* Button_ToggleChat;
	class UClass* DualBladeMenu_Widget;
	class UClass* NextGiftBox;
	TArray<Unknown> RequestedGiftBoxesToDisplay;
	struct PrimaryAssetId ApolloIntroPlaylist_CurrentPlayerId;
	struct PrimaryAssetId ApolloIntroPlaylist_PastPlayerId;
	struct PrimaryAssetId ApolloIntroPlaylist_NewPlayerId;
	struct PrimaryAssetId ApolloIntroPlaylist_05H95BId;
	struct PrimaryAssetId ApolloIntroPlaylist_20H80BId;
	struct PrimaryAssetId ApolloIntroPlaylist_30H70BId;
	struct PrimaryAssetId ApolloIntroPlaylist_40H60BId;
	struct TSoftClassPtr<UObject> ApolloIntroFakeLoadingScreenClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaVariantPickerConfig : public UDataAsset
{
public:
	Unknown FilterSets;
	Unknown NamedSpecialIcons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaViewStreamingReplayModalBase : public FortActivatablePanel
{
public:
	class UClass* EditableText_SessionSearch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaVisitedAreaDisplay : public AthenaDiscoverabilityBase
{
public:
	class UClass* CommonTextBlock_AvailableChallenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaWatchers : public FortHUDElementWidget
{
public:
	class UClass* Text_Watchers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaWidgetLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaWinConditionMsgBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaWinnerDialogCN : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaWinnersList : public CommonUserWidget
{
public:
	bool bCanDisplayMultiWinners;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaXPBarWidget : public FortHUDElementWidget
{
public:
	int XpDisplayed;
	int XpWaitingToBeEarned;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaXPFeedWidgetEntry : public UserWidget
{
public:
	class UClass* RelatedXPFeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaXPFeedWidget : public FortHUDElementWidget
{
public:
	class UClass* VertBox;
	class UClass* EntryWidgetClass;
	int MaxNumOfEntries;
	TArray<class UClass*> EntryPool;
	TArray<class UClass*> AvailableEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaXPWidgetBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaZebulonDroneWidgetBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusAvailablePickupButton : public BacchusButton
{
public:
	class UClass* ItemCard_BackgroundGradient;
	class UClass* LazyImage_AmmoIcon;
	class UClass* Quantity_Text;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusAvailablePickupsDisplay : public BacchusHUDElement
{
public:
	class UClass* ListCollapsedButtonStyle;
	class UClass* ListVisibleButtonStyle;
	class UClass* Button_ToggleVisibility;
	class UClass* EntryBox_PickupButtons;
	TArray<Unknown> CurrentPickupArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusBoundActionButton : public CommonBoundActionButton
{
public:
	class UClass* KeyboardStyle;
	class UClass* LargeKeyboardStyle;
	class UClass* GamepadStyle;
	class UClass* LargeGamepadStyle;
	bool bUseAdditionalStyle;
	class UClass* KeyboardAdditionalStyle;
	class UClass* LargeKeyboardAdditionalStyle;
	class UClass* GamepadAdditionalStyle;
	class UClass* LargeGamepadAdditionalStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusCloseButton : public CommonButtonLegacy
{
public:
	bool bIgnorePlatform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBacchusDPICustomScalingRule : public UDPICustomScalingRule
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusKillFeed : public BacchusHUDElement
{
public:
	class UClass* MainSizeBox;
	struct TSoftClassPtr<UObject> FireImageRef;
	struct Vector2D FireImageAbsoluteOffset;
	struct FText ShowAllTimeTimePropertyName;
	int NumberOfActiveLines;
	struct FortPrioritizedWidgetData PrioritizationData;
	struct GameplayTag NumberOfKillfeedLinesTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusPluginContentWidget : public BacchusHUDElement
{
public:
	struct FName PluginContentTagName;
	class UClass* MyOverlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusQuickbarBase : public BacchusHUDElement
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusQuickbar : public BacchusQuickbarBase
{
public:
	float SlotSize;
	EComboSlotType SlotType;
	bool bIsBackwards;
	class UClass* BacchusQuickbarPrimary;
	class UClass* BacchusQuickbarSecondary;
	class UClass* BacchusQuickbarCreative;
	class UClass* BarSwitcher;
	struct GameplayTag SlotLocksPropertyTag;
	struct GameplayTag ReversePropertyTag;
	struct GameplayTag SlotTypePropertyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusQuickbarComboSlot : public BacchusQuickbarBase
{
public:
	float SlotSize;
	EComboSlotType SlotType;
	int SlotIndex;
	class UClass* PrimarySlot;
	class UClass* SecondarySlot;
	class UClass* CreativeSlot;
	struct GameplayTag SlotTypePropertyTag;
	struct GameplayTag SlotLockPropertyTag;
	struct GameplayTag SlotNumberPropertyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusQuickbarSlotBase : public AthenaQuickBarSlot
{
public:
	bool bHasOngoingUseAction;
	bool bTapToLockEnabled;
	bool bIsLocked;
	bool bSupportsDragAndDrop;
	bool bDragDetected;
	bool bDragOpStarted;
	bool bInteractionStarted;
	struct SlateColor TouchedColor;
	struct SlateColor UntouchedColor;
	class UClass* SelectionHighlight;
	class UClass* LockIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BacchusSignalQualityWidget : public BacchusHUDElement
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BallerRaceIntroWidget : public LTMWidgetBase
{
public:
	float LengthOfCountdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BananaCoveBase : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BarrierWidgetBase : public FortHUDElementWidget
{
public:
	struct BarrierObjectState FriendlyTeamState;
	struct BarrierObjectState EnemyTeamState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattleLabRewardWidget : public FortHUDElementWidget
{
public:
	TArray<class UClass*> CompletedQuests;
	TArray<class UClass*> NewlyGrantedQuests;
	TArray<struct FortItemQuantityPair> GrantedRewards;
	TArray<class UClass*> OldQuests;
	struct FortPrioritizedWidgetData PrioritizationData;
	struct GameplayTagContainer RequiredTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBattlePassInputData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBattlePassEnabledInputData : public UBattlePassInputData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBattlePassBulkBuyInputData : public UBattlePassInputData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassItemChoiceDisplay : public CommonUserWidget
{
public:
	class UClass* Button_SelectAlter;
	class UClass* Button_SelectEgo;
	class UClass* Button_SelectBase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassLeaderboard : public CommonActivatableWidget
{
public:
	class UClass* Text_SeasonContext;
	class UClass* ListView_Leaderboard;
	class UClass* Button_Close;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassLeaderboardListEntry : public CommonUserWidget
{
public:
	class UClass* RichText_DisplayName;
	class UClass* Text_Level;
	bool bIsEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassLeaderboardListView : public ListViewBase
{
public:
	float FirstEntrySpacing;
	float EntrySpacing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassListViewScreen : public CommonUserWidget
{
public:
	class UClass* FriendLeaderboardClass;
	class UClass* ListView_Rewards;
	class UClass* Text_SocialUserRightCounter;
	class UClass* Text_SocialUserLeftCounter;
	class UClass* CachedSeasonData;
	class UClass* CachedSeasonData_Level;
	TArray<struct BattlePassRewardInfo> AllActiveSeasonRewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassNavigatorTabButton : public CommonButtonLegacy
{
public:
	class UClass* BangWrapper_Seen;
	class UClass* LazyImage_Icon;
	struct Vector2D ImageSize_Mobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassNavigator : public CommonUserWidget
{
public:
	TArray<struct TrackCategoryUI> CreatedTabs;
	class UClass* SeasonData;
	class UClass* SeasonData_Level;
	struct DataTableRowHandle NextTabInputAction;
	struct DataTableRowHandle PreviousTabInputAction;
	class UClass* EntryBoxButtonGroup;
	class UClass* DynamicEntryBox_Categories;
	class UClass* Text_SeasonNumber;
	class UClass* Text_CategoryName;
	TArray<int> ViewedPages;
	struct FString CachedCategoryName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassRewardChallenges : public CommonUserWidget
{
public:
	struct FText BuyBattlePassText;
	struct FText DefaultChallengesTitle;
	struct FText UnlocksInXDaysTextFormat;
	struct FText UnlocksInXHoursTextFormat;
	struct FText UnlocksSoonText;
	struct FText HiddenChallengeText;
	class UClass* Text_PrerequisitesTitle;
	class UClass* Text_ChallengesTitle;
	class UClass* EntryBox_Prerequisites;
	class UClass* EntryBox_Challenges;
	class UClass* Text_UnlocksIn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassRewardChallengesEntry : public CommonUserWidget
{
public:
	class UClass* Text_ObjectiveDescription;
	class UClass* Text_ObjectivesCompleted;
	class UClass* ProgressBar_ObjectivesCompleted;
	class UClass* Image_CompletedObjective;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassRewardViewBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassRewardPagedTrack : public BattlePassRewardViewBase
{
public:
	float UpdateItemCardsDelay;
	TArray<class UClass*> Pips;
	int LastPageIndex;
	int PageIndex;
	int PagesHidden;
	int LocalFocusedIndex;
	class UClass* FocusReward;
	class UClass* DefaultFocusReward;
	TArray<struct BattlePassPageData> PageData;
	struct TimerHandle UpdateItemCardsHandle;
	class UClass* EntryBox_Rewards;
	class UClass* Button_NextPage;
	class UClass* Button_PreviousPage;
	class UClass* EntryBox_Pips;
	class UClass* Text_PageNumbers;
	class UClass* ButtonGroup_Pips;
	class UClass* SwipePanel_ChangePage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassRewardEntry : public CommonButtonLegacy
{
public:
	class UClass* Text_SocialUserName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassScreenListView : public ListViewBase
{
public:
	float StartSpacing;
	float EndSpacing;
	float CycleSocialPlayerRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBattlePassPreviewDisplayData : public UDataAsset
{
public:
	class UClass* CurrencyMaterialInstance;
	TArray<struct BattlePassCharacterPreviewDisplayData> CharacterPreviewDisplayData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassScreenPurchaseButton : public CommonButtonLegacy
{
public:
	class UClass* Text_FinalCost;
	class UClass* Text_PurchaseTitle;
	class UClass* Text_PurchaseSubtitle;
	class UClass* Text_OriginalCost;
	class UClass* Text_DiscountedPercentage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassScreenPreviewRewardWidget : public CommonButtonLegacy
{
public:
	class UClass* Text_RewardName;
	class UClass* Image_Reward;
	class UClass* Text_RewardLevel;
	class UClass* Text_Currency;
	class UClass* Text_AdditionalCurrency;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassScreenPreview : public CommonUserWidget
{
public:
	class UClass* Character_Widget1;
	class UClass* Character_Widget2;
	class UClass* Character_Widget3;
	class UClass* Character_Widget4;
	class UClass* Character_Widget5;
	class UClass* Character_Widget6;
	class UClass* Character_Widget7;
	class UClass* Currency_Widget;
	class UClass* Button_PurchaseBattlePass;
	class UClass* Button_PurchaseBattlePassBundle;
	class UClass* Text_InstantUnlockTotalRewardCount;
	class UClass* Text_InstantUnlockSpecificSummary;
	class UClass* Text_InstantAdditionalRewards;
	class UClass* Widget_VBuckSummary;
	TArray<class UClass*> CharacterWidgets;
	struct PreviewUnlockData PreviewUnlockData;
	class UClass* PreviewDisplayData;
	float PreviewCycleRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassVBuckSummary : public CommonUserWidget
{
public:
	class UClass* Text_TotalEarned;
	class UClass* Text_TotalToBank;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBattlePassViewRewardData : public UObject
{
public:
	class UClass* Reward;
	bool bIsFreeItem;
	bool bIsOwned;
	EBattlePassRewardSource UnlockableSource;
	class UClass* UnlockableSourceItemDef;
	int ItemLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassViewRewardListEntry : public CommonUserWidget
{
public:
	class UClass* Reward;
	class UClass* Text_TierLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BattlePassViewAllRewardsScreen : public FortItemPreviewScreen
{
public:
	class UClass* LastViewedItem;
	TArray<class UClass*> AllRewardItems;
	float StaggerTime;
	class UClass* Text_SortLabel;
	class UClass* Text_ChapterLabel;
	class UClass* Text_SeasonLabel;
	class UClass* Button_CycleSort;
	class UClass* TileView_Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_NUI : public FortActivatablePanel
{
public:
	TArray<struct ContentPushState> StackStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CampaignHUDBase : public FortUIStateWidget_NUI
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CampaignLobbyPlayerPanel : public FortLobbyPlayerPanel
{
public:
	class UClass* Button_ShowHeadAccessory;
	class UClass* Button_ShowBackpack;
	class UClass* Number_PowerLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPhoenixSeasonDisplayInfo : public UPrimaryDataAsset
{
public:
	class UClass* CenterBackgroundImage;
	class UClass* LeftBackgroundImage;
	class UClass* RightBackgroundImage;
	struct LinearColor PowerBackgroundColor;
	struct LinearColor LevelTextColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CampaignTopBar : public FortActivatablePanel
{
public:
	class UClass* PhoenixSeasonDisplayInfoMap;
	class UClass* RatingIcons_RatingIcons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CarmineHUDBase : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SettingsScreen : public FortActivatablePanel
{
public:
	class UClass* Settings_Panel;
	class UClass* Registry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CheatSettingsScreen : public SettingsScreen
{
public:
	class UClass* Button_Close;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ACheckTutorialAndLeavePartyActionBase : public AFortScriptedAction
{
public:
	class UClass* PlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CMSContext : public BlueprintContextBase
{
public:
	struct CmsJsonMessages CachedCmsMessages;
	class UClass* CMSSurveyDataSource;
	class UClass* PlayerSurveyInterpreter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltWidgetBase : public LTMWidgetBase
{
public:
	class UClass* CobaltMutator;
	TArray<struct FText> RoundNames;
	struct FText InvalidRoundText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltAlertWidgetBase : public CobaltWidgetBase
{
public:
	byte LastViewedTeam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltCountdownWidgetBase : public CobaltWidgetBase
{
public:
	struct FText CountdownMessage;
	float CountdownTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltGamePhaseWidgetBase : public LTMWidgetBase
{
public:
	float StormComingWarningTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltPlayerPortraitWidget : public CobaltWidgetBase
{
public:
	class UClass* AvatarImage;
	class UClass* PlayerNameTextWidget;
	class UClass* PlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltPlayersLeftWidgetBase : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltPreRoundWidgetBase : public CobaltWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltRoundCompleteWidgetBase : public CobaltWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltRoundStartWidgetBase : public CobaltWidgetBase
{
public:
	TArray<struct CobaltPlayerPortraitIndexInfo> UpperBannerPortraitIndexInfos;
	TArray<struct CobaltPlayerPortraitIndexInfo> LowerBannerPortraitIndexInfos;
	TArray<class UClass*> PlayerPortraits_Team1;
	TArray<class UClass*> PlayerPortraits_Team2;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltStatusWidgetBase : public CobaltWidgetBase
{
public:
	byte LastViewedTeam;
	class UClass* RoundName;
	float CountdownSoundStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltTournamentBracketNodeWidgetBase : public CobaltWidgetBase
{
public:
	EBracketNodeState CurrentBracketNodeState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CobaltTournamentBracketWidgetBase : public CobaltWidgetBase
{
public:
	TArray<class UClass*> LocalTeamNodes;
	TArray<class UClass*> EnemyTeamNodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CommonTagVisibilityWidget : public ContentWidget
{
public:
	struct GameplayTagContainer HUDElementTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ContentBrowserFilterEntry : public CommonButtonLegacy
{
public:
	struct FScriptMulticastDelegate OnFilterEnabled;
	struct FScriptMulticastDelegate OnFilterSelected;
	class UClass* TextBlock_FilterName;
	bool bFilterActive;
	class UClass* Tag;
	struct FText ButtonText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UContentBrowserTag : public UObject
{
public:
	struct FName TagID;
	struct FText TagName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ContentBrowserFiltersPanel : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnFilterChanged;
	struct FScriptMulticastDelegate OnFocusChanged;
	class UClass* FilterEntryWidgetClass;
	class UClass* Box_Filters;
	class UClass* ScrollBox_FilterScroll;
	class UClass* Button_All;
	class UClass* SearchPanel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativeHUDLContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnRotationAxisChanged;
	struct FScriptMulticastDelegate OnScaleAxisChanged;
	struct FScriptMulticastDelegate OnCreativeGhostChanged;
	struct FScriptMulticastDelegate OnCreativeInvulnerableChanged;
	struct FScriptMulticastDelegate OnCreativeHeatmapToggled;
	struct FScriptMulticastDelegate OnDropToFloorChanged;
	struct FScriptMulticastDelegate OnPrecisionChanged;
	struct FScriptMulticastDelegate OnMoveToolLineOfSightBlockingChanged;
	struct FScriptMulticastDelegate OnMoveToolEquippedChanged;
	struct FScriptMulticastDelegate OnMoveToolScaleModified;
	struct FScriptMulticastDelegate OnCreativeQuickMenuDisplayedChanged;
	struct FScriptMulticastDelegate OnMoveToolRotationModified;
	struct FScriptMulticastDelegate OnCreativeQuickbarEnabledChanged;
	struct FScriptMulticastDelegate OnCreativeModeEnabledChanged;
	struct FScriptMulticastDelegate OnCreativeQuickbarActiveChanged;
	struct FScriptMulticastDelegate OnCreativeQuickbarEquippedChanged;
	struct FScriptMulticastDelegate OnPropPlaySoundCountdownChanged;
	struct FScriptMulticastDelegate OnPropLockInPlaceChanged;
	struct FScriptMulticastDelegate OnIsCreativeModeratorModeActiveChanged;
	class UClass* CurrentMoveTool;
	bool bPropLockedInPlace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativeMinigameProgressWidget : public CommonUserWidget
{
public:
	Unknown CurrentPlayerState;
	struct ScalableFloat bEnabled;
	bool bMinigameActive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePerformanceHUDBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePerformanceHUDHeatmapControlWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePerformanceHUDRunTimeStatsWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class DadBroHealthWidget : public LTMWidgetBase
{
public:
	class UClass* DadBroMutator;
	float BossHealthRatio;
	class UClass* BossAIPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DeimosSurvivalWidgetBase : public FortHUDElementWidget
{
public:
	TArray<struct SurvivalObjectiveText> SurvivalStateDefaultText;
	struct GameplayTag ObjectiveTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DiscoCaptureWidgetBase : public FortHUDElementWidget
{
public:
	struct DiscoCaptureUIData CaptureUIData;
	struct DiscoCaptureUIData PrevCaptureUIData;
	byte LastViewedTeam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DiscoWidgetBase : public FortHUDElementWidget
{
public:
	TArray<struct DiscoCaptureIconData> CapturePointIconList;
	TArray<float> PlayScoreProgressSoundPercentagesMild;
	TArray<float> PlayScoreProgressSoundPercentagesMedium;
	TArray<float> PlayScoreProgressSoundPercentagesStrong;
	float PercentageScoreToPlayCountdown;
	float PercentageScoreToPlayFinalCountdown;
	float ScoreCountdownSoundFrequency;
	bool bLocalTeamIsScoring;
	bool bEnemyTeamIsScoring;
	byte LastViewedTeam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DonutChallengeIdleGame : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnNewHighScore;
	struct FScriptMulticastDelegate OnDistanceScoreChanged;
	struct FScriptMulticastDelegate OnSpeedScoreChanged;
	struct FScriptMulticastDelegate OnStyleScoreChanged;
	struct FScriptMulticastDelegate OnEndMatchScore;
	struct FScriptMulticastDelegate OnDayNightCycleChanged;
	struct LinearColor BoundsColor;
	float DayNightCycleTime;
	float PlayerTopSpeed;
	float BumpyRideSpeedReduction;
	struct Vector2D MapSize;
	struct Vector2D PlayerCollisionOffset;
	struct Vector2D PlayerCollisionSize;
	float MapScale;
	float MaxNumLevels;
	float ObjectSpawnPlacementRadius;
	int NumOfTreeSpawnAttempts;
	int NumOfRockSpawnAttempts;
	int NumOfBigRockSpawnAttempts;
	int NumOfJumpPadSpawnAttempts;
	class UClass* Curve_BonusSpawn_Trees;
	class UClass* Curve_BonusSpawn_SmallBumps;
	class UClass* Curve_BonusSpawn_Bumps;
	class UClass* Curve_BonusSpawn_JumpPads;
	struct FName Param_Player_Direction;
	struct FName Param_Player_FacingLeft;
	struct SlateBrush PlayerBrush;
	struct SlateBrush TreeBrush;
	struct SlateBrush RockBrush;
	struct SlateBrush BigRockBrush;
	struct SlateBrush JumpPadBrush;
	struct SlateBrush TorchBrush;
	struct SlateBrush MonsterBrush;
	struct SlateBrush ChimiBrush;
	struct SlateBrush ArmBrush;
	class UClass* Anim_Jump;
	class UClass* Anim_MediumJump;
	class UClass* Anim_SuperJump;
	class UClass* Anim_BumpyRide;
	class UClass* Image_Player;
	class UClass* Image_MobileInput;
	class UClass* Image_MobileInput_Background;
	class UClass* Button_Jump;
	class UClass* Button_MobileJump;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DonutIdleGameScreen : public FortActivatablePanel
{
public:
	class UClass* Anim_Intro;
	class UClass* Widget_GameLayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialScreen : public CommonActivatableWidget
{
public:
	bool bEnableSpatialInputPreprocessing;
	bool bEnableAnalytics;
	struct GameplayTag OverrideScreenTag;
	class UClass* Button_Back;
	struct GameplayTag ScreenTag;
	class UClass* Button_CloseMobile;
	bool bNeedsBottomBar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DonutChallengeScreen : public AthenaSpatialScreen
{
public:
	class UClass* EventGameStateComponent;
	class UClass* SeasonData;
	struct TSoftClassPtr<UObject> CustomMouseCursorWidget;
	class UClass* HeaderEntryClass;
	class UClass* EntryClass;
	TArray<class UClass*> DonutBundles;
	class UClass* SkinUnlockBundle;
	class UClass* Text_AttractChallengeDescription;
	class UClass* Button_BattlepassUpsell;
	class UClass* ScrollBox_Challenges;
	class UClass* EntryBox_Challenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DonutChallengeEntryHeader : public CommonButtonLegacy
{
public:
	class UClass* Text_Title;
	class UClass* Timer_UnlockTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DonutChallengeEntry : public CommonButtonLegacy
{
public:
	class UClass* Text_Title;
	class UClass* Image_Reward;
	class UClass* Image_Completed;
	class UClass* ProgressBar_Challenge;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ADynamicBackgroundDirector : public AActor
{
public:
	struct FScriptMulticastDelegate BP_OnDonutSequenceInitiated;
	struct FScriptMulticastDelegate BP_OnEnteredItemShop;
	struct FScriptMulticastDelegate BP_OnEnteredStore;
	struct FScriptMulticastDelegate BP_OnDonutSequencePlayDonutDrop;
	struct FScriptMulticastDelegate BP_OnEnvironmentChanged;
	struct FScriptMulticastDelegate BP_OnEnvironmentBackgroundTextureChanged;
	struct FScriptMulticastDelegate BP_OnRequestShowBackground;
	struct FScriptMulticastDelegate BP_OnRequestHideBackground;
	EDynamicBackgroudKey DynamicBackgroundKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EliminatedOverlay : public FortHUDElementWidget
{
public:
	bool bIsWaitingForTeamEliminationForPlacement;
	TArray<struct FText> WinnerNames;
	class UClass* Overlay_PlayerName;
	class UClass* Text_EliminatedBy;
	class UClass* Text_UserId;
	class UClass* Text_SpectatorName;
	class UClass* VBox_PlacementText;
	class UClass* VBox_Winner;
	class UClass* Text_WinnerPoints;
	class UClass* Text_Winner;
	class UClass* Text_MultiWinner;
	class UClass* Text_Placement;
	class UClass* Text_PlaceNumber;
	class UClass* Text_PlacePoints;
	class UClass* Switcher_MultiWinners;
	class UClass* Text_MultiWinner1;
	class UClass* Text_MultiWinner2;
	class UClass* HBox_LoadingBox;
	class UClass* AthenaWinnersList;
	class UClass* Widget_KillCounter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmergencyNoticeBase : public CommonUserWidget
{
public:
	class UClass* Border_TestBG;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteMenuButton : public BacchusActionButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EnableMultiFactorModal : public FortActivatablePanel
{
public:
	bool bHasEnableMFABeenClicked;
	bool bShouldShowConsoleVersion;
	class UClass* Button_EnableMFA;
	class UClass* Button_RemindLater;
	class UClass* Button_OptOut;
	class UClass* Button_ConsoleMFAEnabled;
	class UClass* CT_MFA_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EndOfMatchQuestCategoryWidget : public CommonUserWidget
{
public:
	class UClass* Switcher_CategoryType;
	class UClass* EntryBox_SizeBox;
	class UClass* EntryBox_QuestUpdates;
	TArray<class UClass*> QuestWidgetsToShow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EndOfMatchQuestEntryWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnEndOfMatchQuestIntroFinishedDelegate;
	struct FScriptMulticastDelegate OnEndOfMatchQuestMoveDownFinishedDelegate;
	float MoveDownDuration;
	class UClass* QuestNotification;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EndOfMatchQuestUpdateWidget : public CommonUserWidget
{
public:
	TArray<struct QuestRecapData> QuestUpdates;
	TArray<class UClass*> CreatedWidgets;
	int MaxNumQuestWidgets;
	class UClass* EntryBox_QuestUpdates;
	class UClass* ScrollBox_Quest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AEventCinematicPlaybackAction : public AFortScriptedAction
{
public:
	class UClass* Quest;
	struct FName ObjectiveName;
	class UClass* Player;
	struct DataTableRowHandle ObjectiveStat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GuidedTutorialLoadingScreen : public AthenaLoadingScreenPreviewPanelBase
{
public:
	class UClass* GuidedTutorialPlaylist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FeaturedCreativeContent : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FF2CaptureWarningWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FF2StatusWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilitiesPageTileBase : public CommonButtonLegacy
{
public:
	class UClass* SwitcherAbilityBindingSwitcher;
	class UClass* KeybindAbilityKeybind;
	class UClass* KeybindAbilityKeybindCombo1;
	class UClass* KeybindAbilityKeybindCombo2;
	int QuickBarSlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilitySystemContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountLinkingWindow : public FortActivatablePanel
{
public:
	class UClass* Switcher_Main;
	class UClass* HaveEpicAccountBlur;
	class UClass* SkipSignInBlur;
	class UClass* Switcher_NoThanks;
	class UClass* Throbber_LoginDelay;
	class UClass* Button_Signup;
	class UClass* Button_Login;
	class UClass* Button_NoThanks;
	class UClass* Button_SkipSignInSignup;
	class UClass* Button_SkipSignInLogin;
	class UClass* Button_SkipSignInNoThanks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountNotFound : public CommonActivatablePanelLegacy
{
public:
	class UClass* Text_Desc;
	class UClass* Button_Back;
	class UClass* Button_Web;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountPinLinkingWindow : public FortActivatablePanel
{
public:
	class UClass* Switcher_Main;
	class UClass* Blur_PinGrantCodeInfo;
	class UClass* Blur_InitialRequest;
	class UClass* Blur_SkipSignIn;
	class UClass* Switcher_NoThanks;
	class UClass* Throbber_LoginDelay;
	class UClass* Throbber_GettingPinCode;
	class UClass* Button_CreateEpicAccount;
	class UClass* Button_GoLinking;
	class UClass* Button_SkipLinking;
	class UClass* Button_GenerateCode;
	class UClass* Button_CancelPinRequest;
	class UClass* Button_SkipGoBackLinking;
	class UClass* Button_SkipSignInNoThanks;
	class UClass* Text_PinCode;
	class UClass* Text_ErrorMsg;
	class UClass* Text_ActivationURL;
	class UClass* Text_CodeExpiringTime;
	class UClass* Text_Info;
	class UClass* Text_PinPromptTypeTitle;
	class UClass* Container_ActivationURL;
	class UClass* Container_CreateEpicAccount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAccountStatsContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActivatableMovieWidget : public CommonActivatableWidget
{
public:
	bool bOverwriteSkip;
	struct DataTableRowHandle PressToSkipAction;
	struct DataTableRowHandle HoldToSkipAction;
	class UClass* Image_White;
	bool bShowSubtitles;
	bool bNoAudio;
	class UClass* VideoPlayer;
	class UClass* SoundClass;
	class UClass* SoundComponent;
	class UClass* SubtitlePlayer;
	class UClass* SubtitleOverlays;
	float LastInteractionTime;
	bool bControlsVisible;
	class UClass* Image_VideoTexture;
	struct LinearColor VideoTextureColor;
	class UClass* Subtitles;
	class UClass* Button_Skip;
	class UClass* Image_Throbber;
	class UClass* SafeZonePadding;
	struct LinearColor SafeZoneColor;
	class UClass* ActiveSoundMix;
	class UClass* DefaultSubmix;
	class UClass* LicensedSubmix;
	struct FScriptMulticastDelegate MediaPreEndEvent;
	struct FScriptMulticastDelegate MediaStartedEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActivatableVideoPanel : public FortActivatablePanel
{
public:
	struct FScriptMulticastDelegate OnSkipButtonClicked;
	bool bOverwriteSkip;
	struct FScriptMulticastDelegate OnMediaPlayerEndReached;
	struct FScriptMulticastDelegate OnMediaOpened;
	struct FScriptMulticastDelegate OnMediaOpenFailed;
	bool AutomaticallyDismissPanel;
	bool bAutoPlayOnActivated;
	bool bAllowSkipping;
	bool ControlsVisible;
	float LastInteractionTime;
	class UClass* VideoPlayerWidget;
	class UClass* Button_Skip;
	class UClass* Image_ThrobberBackground;
	class UClass* Image_Throbber;
	class UClass* ActiveSoundMix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActivatableMovieWidget_Monolithic : public FortActivatableVideoPanel
{
public:
	struct FScriptMulticastDelegate MediaOpenedMono;
	class UClass* MediaSourceMono;
	class UClass* StreamedMediaPlayer;
	struct DataTableRowHandle PressToSkipAction;
	struct DataTableRowHandle HoldToSkipAction;
	class UClass* Image_White;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActivatablePanelLTM : public CommonActivatableWidget
{
public:
	class UClass* MutatorClassToWaitFor;
	class UClass* Mutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActivatablePanelWithItemPreview : public FortActivatablePanel
{
public:
	class UClass* ItemViewObject;
	struct DataTableRowHandle ItemViewUnifiedSupportsCameraControlInputAction;
	struct DataTableRowHandle ItemViewUnifiedZoomInputAction;
	struct DataTableRowHandle ItemViewZoomOutInputAction;
	struct DataTableRowHandle ItemViewZoomInInputAction;
	struct DataTableRowHandle ItemViewRotateInputAction;
	bool AllowItemRotation;
	bool AllowItemZooming;
	bool AutomaticallyRegisterCameraView;
	bool OverrideFixedCameras;
	class UClass* ActionDataTable;
	class UClass* AnimationToHideItemInfo;
	bool bAutoShowDetails;
	bool bItemDetailsHidden;
	float HideItemInfoHeaderDurationSecs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActiveFriendsViolator : public CommonUserWidget
{
public:
	class UClass* Text_ActivePlayerCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActorCanvas : public PanelWidget
{
public:
	struct GameplayTagContainer DefaultHUDElementTags;
	bool bDrawElementsInOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortActorCanvasSlot : public PanelSlot
{
public:
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	bool bCanAutoRemove;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAffiliateEntry : public CommonButtonLegacy
{
public:
	class UClass* OptionDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAffiliateEntryData : public UObject
{
public:
	struct FString AffiliateName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAffilateModal : public FortActivatablePanel
{
public:
	class UClass* AcceptButton;
	class UClass* AffiliateKey;
	class UClass* AffiliateSuggestionList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAgeGateFlow : public CommonActivatablePanelLegacy
{
public:
	class UClass* Switcher_AgeGateScreens;
	class UClass* Content_AgeEntryScreen;
	class UClass* Content_GuardianEmailEntryScreen;
	class UClass* Content_GuardianConsentPendingScreen;
	class UClass* ComboBox_Month;
	class UClass* ComboBox_Day;
	class UClass* ComboBox_Year;
	class UClass* Button_AgeEntryContinue;
	class UClass* Button_AgeEntryPrivacyPolicy;
	class UClass* EditableText_GuardianEmailEntry;
	class UClass* Text_InvalidEmail;
	class UClass* Button_GuardianEmailEntryContinue;
	class UClass* Button_GuardianEmailEntryPrivacyPolicy;
	class UClass* Button_GuardianEmailReEntry;
	class UClass* RichText_TimerWarningEmailEntry;
	class UClass* RichText_TimerWarningConsentPending;
	class UClass* Text_EmailEntryChallengeError;
	class UClass* Text_AgeEntryChallengeError;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationButtonWidget : public CommonButtonLegacy
{
public:
	class UClass* AlterationInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationModOptinScreenBase : public CommonActivatablePanelLegacy
{
public:
	class UClass* ItemToOptin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationModScreenBase : public FortActivatablePanel
{
public:
	class UClass* AlterationsToEdit;
	class UClass* AlterationSlotOptions;
	class UClass* ItemInspectionMainItemDetailsHostPanel;
	class UClass* AlterationsExtraDetailsPanel;
	class UClass* AlterationModOptinScreenClass;
	struct DataTableRowHandle BackInputAction;
	Unknown AlterableItem;
	class UClass* CurrentAlterationOptionInternal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationOption : public CommonButtonLegacy
{
public:
	struct AlterationOption AlterationOption;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationOptionsBase : public CommonUserWidget
{
public:
	class UClass* AlterationOptionClass;
	class UClass* AlterationOptionButtons;
	class UClass* Item;
	int SlotIndex;
	bool bUpgradeOptionExists;
	struct AlterationOption UpgradeOption;
	TArray<struct AlterationOption> RespecOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAlterationInfo : public UObject
{
public:
	class UClass* CorrespondingItem;
	int SlotIndex;
	class UClass* AlterationDef;
	int RequiredMinLevel;
	bool bIsUpgrade;
	int CurrentItemLevel;
	bool bFreeAlterationSlot;
	bool bUnlockedByEvolution;
	int UpgradeLevelDelta;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationsWidget : public CommonUserWidget
{
public:
	class UClass* Item;
	EFortAlterationWidgetState State;
	class UClass* ItemToCompareWith;
	bool bUseButtons;
	class UClass* EmptyText;
	class UClass* ButtonGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAlterationWidget : public CommonUserWidget
{
public:
	float MaxPipCount;
	class UClass* AlterationInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAnnouncementWidget : public CommonUserWidget
{
public:
	class UClass* BoundAnnouncement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortArenaLoadingScreen : public CommonUserWidget
{
public:
	class UClass* Text_LeagueName;
	class UClass* Text_Division;
	class UClass* Image_CurrentDivision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownDetailView : public CommonUserWidget
{
public:
	struct FortTournamentDisplayInfo TournamentDisplayInfo;
	struct ShowdownTournamentEntry CMSTournamentData;
	class UClass* Text_TimeRemaining;
	class UClass* Text_DebugId;
	class UClass* Image_PosterFront;
	class UClass* Image_PosterBack;
	class UClass* Image_LoadingScreen;
	class UClass* Image_PlaylistTile;
	struct FText TimeRemainingFormat;
	bool bTimeRemainingShowSeconds;
	bool bTimeRemainingUppercase;
	ETimespanAsTextFormat TimeRemainingFormatType;
	struct Margin TitlePaddingMobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownDivisionEventView : public FortShowdownDetailView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortArenaPersonalDivisionView : public FortShowdownDivisionEventView
{
public:
	class UClass* Image_CurrentDivisionFancy;
	class UClass* Image_CurrentDivisionPlain;
	class UClass* Bar_DivisionProgress;
	class UClass* CommonText_DivisionProgress;
	class UClass* Image_NextDivision;
	class UClass* RichText_TitleName;
	class UClass* CommonText_DivisionRank;
	class UClass* CommonText_TotalHype;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortArenaPersonalViewTab : public CommonActivatableWidget
{
public:
	class UClass* EventView_PersonalHype;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortArmoryScreen : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CheckForStwMfaReward : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnCompleted;
	struct FScriptMulticastDelegate OnFailed;
	class UClass* PlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_CreateWidgetAsync : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_LoadBannerAsset : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate BannerAssetLoadComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_LoadCurrentSubgameProfiles : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;
	class UClass* PlayerController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_SetUIState : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnStateEntered;
	class UClass* WorldContextObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate DialogResult;
	class UClass* WorldContextObject;
	class UClass* TargetLocalPlayer;
	struct FortDialogDescription_NUI Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_ShowConfirmation_NUI : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate DialogResult;
	class UClass* WorldContextObject;
	class UClass* TargetLocalPlayer;
	struct FortDialogDescription_NUI Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchmakingWidgetBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaCreativeMatchmakingWidget : public FortMatchmakingWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaHelpPanel : public FortActivatablePanel
{
public:
	class UClass* TreeView_Help;
	class UClass* ScrollBox_HelpEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMatchmakingOptions : public FortActivatablePanel
{
public:
	class UClass* AthenaMatchmakingKnobsModalClass;
	class UClass* TileItemClass;
	class UClass* LoadingContentModalClass;
	class UClass* HardcoreChallengesScreenClass;
	class UClass* MatchmakingTileGroup;
	struct AthenaPlaylistEntry RepresentedPlaylistCMSEntry;
	struct PlaylistFrontEndData RepresentedPlaylist;
	class UClass* StandardGameModeBox;
	class UClass* LTMGameModeBox;
	class UClass* LTMGameModeBox2;
	class UClass* Overlay_LTMGameModeBox2;
	class UClass* ModeDescriptionScrollBox;
	class UClass* Button_HardcoreChallenges;
	class UClass* TeamFillButton;
	class UClass* SpectateButton;
	class UClass* Button_ServerPrivacy;
	class UClass* MatchmakingKnobsButton;
	class UClass* MatchmakingWarningText;
	class UClass* Text_MatchmakingSmallPoolWarning;
	class UClass* Text_FillDisabledHardcoreModifiersWarning;
	class UClass* Text_HardcoreModifiersDisabledForPlaylistWarning;
	class UClass* Text_LimitedPoolsDescription;
	float ScheduleTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMatchmakingTile : public CommonButtonLegacy
{
public:
	class UClass* GameModeImage;
	class UClass* AdSpace;
	class UClass* AdText;
	class UClass* SpecialAdText;
	class UClass* GameModeName;
	class UClass* SubGameModeName;
	int BorderDisplayStyle;
	struct AthenaPlaylistEntry CMSPlaylistEntry;
	class UClass* Violator_ActiveFriends;
	struct PlaylistFrontEndData TilePlaylistData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMatchmakingWidgetLegacy : public FortMatchmakingWidgetBase
{
public:
	EFortMatchmakingViolatorStyle NewModeStyleOverride;
	struct FString HighPriorityEventId;
	struct FString HighPriorityTournamentId;
	struct FText RegionLockTitle;
	struct TSoftClassPtr<UObject> MatchmakingOptionsClassRef;
	class UClass* Button_Play;
	class UClass* Button_Cancel;
	class UClass* Button_StartMatch;
	class UClass* Button_CancelContentDownload;
	class UClass* Button_MatchmakingMode;
	class UClass* ContentBeaconDownloadContainer;
	class UClass* ContentDownloadProgressBar;
	class UClass* TextBlock_MatchmakingHeader;
	class UClass* TextBlock_MatchmakingMessage;
	class UClass* TextBlock_PartySizeWarning;
	class UClass* OptionalTextBlock_BlackoutCountdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMOTDSimpleNewsWidget : public CommonActivatableWidget
{
public:
	class UClass* CMSImage_NewsImage;
	class UClass* RichTextBlock_NewsTitle;
	class UClass* RichTextBlock_NewsBody;
	class UClass* CommonButton_Close;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMOTDTeaserWidget : public CommonUserWidget
{
public:
	class UClass* MOTDWidgetClass;
	class UClass* MOTDSimpleNewsWidgetClass;
	class UClass* FortAthenaMOTDTileListView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMOTDTile : public CommonButtonLegacy
{
public:
	class UClass* CMSImage_NewsImage;
	class UClass* RichTextBlock_NewsTitle;
	class UClass* Border_AdSpace;
	class UClass* RichTextBlock_AdSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMOTDTileListView : public ListViewBase
{
public:
	bool bAllowFocus;
	bool bReturnFocusToSelection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaMOTDNewsChildren : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaMOTDWidget : public CommonActivatableWidget
{
public:
	class UClass* MOTDButtonGroup;
	class UClass* MOTDTileClass;
	class UClass* NewVideoPlayerClass;
	EFrontEndCamera ActivationFrontendCamera;
	struct PrimaryContentSetup PrimaryContentSetup;
	struct GameplayTag BattlepassScreenTag;
	struct DataTableRowHandle NavigateLeftInputAction;
	struct DataTableRowHandle NavigateRightInputAction;
	TArray<class UClass*> OfferInfoOwnershipArray;
	class UClass* Button_SpecialAction;
	class UClass* Button_NormalAction;
	class UClass* CMSImage_SelectedNewsImage;
	class UClass* CMSImage_SelectedNewsImage_Blurred;
	class UClass* RichTextBlock_SelectedNewsTitle;
	class UClass* RichTextBlock_SelectedNewsBody;
	class UClass* Button_Close;
	class UClass* EntryBox_MOTDEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaNewsPanel : public FortActivatablePanel
{
public:
	class UClass* NewsWidget_Main;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaNewsTile : public CommonUserWidget
{
public:
	class UClass* CMSImage_NewsImage;
	class UClass* Text_NewsTitle;
	class UClass* Text_NewsBody;
	class UClass* Border_AdSpace;
	class UClass* Text_AdSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaNewsWidget : public CommonUserWidget
{
public:
	class UClass* NewsTileClass;
	class UClass* SpotlightNewsTileClass;
	class UClass* SpecialEventNewsTileClass;
	class UClass* SpotlightSpecialEventNewsTileClass;
	class UClass* SpecialEvent2NewsTileClass;
	class UClass* SpotlightSpecialEvent2NewsTileClass;
	TArray<class UClass*> NewsTiles;
	class UClass* CommonText_NewsHeader;
	class UClass* ScrollBox_NewsContainer;
	class UClass* HorizontalBox_NewsContainer;
	class UClass* VerticalBox_SpotlightNewsContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaReward : public CommonButtonLegacy
{
public:
	class UClass* SecondaryItemDefToRepresent;
	class UClass* RepresentedItemDefinition;
	class UClass* ItemCard;
	class UClass* Widget_ClaimedImage;
	class UClass* Widget_LockedImage;
	class UClass* Widget_UnearnedTintOverlay;
	class UClass* Widget_OwnedBorder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTabsScreenBase : public CommonActivatableWidget
{
public:
	TArray<EFortUIFeature> TabsUIFeature;
	class UClass* TabContentSwitcher;
	class UClass* StoreMain_Root;
	struct GameplayTag SeasonTrailerAutoplayEndingCamera;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialBaseInteraction : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialButton : public FortAthenaTutorialBaseInteraction
{
public:
	ETutorialButtonInteractionType InteractionType;
	class UClass* Button_Tutorial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialHUD : public CommonActivatableWidget
{
public:
	TArray<struct GameplayTag> HighlightTagArray;
	class UClass* TutorialManager;
	class UClass* CurrentTrackedActor;
	class UClass* Overlay_TutorialScreen;
	class UClass* Athena_Tutorial_Skip_Mobile;
	class UClass* Athena_Tutorial_TargetCounter;
	class UClass* Athena_Tutorial_ProgressBar;
	class UClass* Athena_Tutorial_ModalPopup;
	class UClass* TextPrompt_Tutorial;
	class UClass* Overlay_Finger;
	class UClass* Overlay_Gradient;
	class UClass* Widget_EasyInteractFinger;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialHUDContainer : public BacchusHUDElement
{
public:
	class UClass* CurrentScreen;
	class UClass* TutorialManager;
	class UClass* TutorialHUD;
	struct TSoftClassPtr<UObject> TutorialHUDWidgetSoftClass;
	class UClass* Overlay_TutorialHUD;
	class UClass* TutorialScreenData;
	int CurrentTutorialStep;
	int CurrentTutorialSubstep;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialProgressBar : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialScreen : public UserWidget
{
public:
	bool bLimitedDisplayDuration;
	float DisplayDuration;
	TArray<struct FName> InputAction_NameArray;
	TArray<struct FName> GamepadInputAction_NameArray;
	struct DataTableRowHandle DataTableRow;
	class UClass* Interaction_TutorialStep;
	class UClass* InteractionRegular_TutorialStep;
	class UClass* MoveableHighlight;
	class UClass* MoveableHighlight_Regular;
	class UClass* Switcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaTutorialScreenData : public UDataAsset
{
public:
	TArray<struct FortAthenaTutorialStepInfo> TutorialSteps;
	TArray<struct FortAthenaTutorialStandaloneStepInfo> StandaloneTutorialSteps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialSkipPopupElement : public UserWidget
{
public:
	struct SlateBrush StepIconSlateBrush;
	struct FText StepDescription;
	class UClass* Step_TextBlock;
	class UClass* Step_ImageIcon;
	class UClass* Checkmark_Image;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialSwipeZone : public FortAthenaTutorialBaseInteraction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialTargetCounter : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaTutorialTextPrompt : public UserWidget
{
public:
	struct FText TextToDisplay;
	struct FText GamepadTextToDisplay;
	TArray<class UClass*> Array_FortKeybindWidget;
	class UClass* RichText_TopPrompt;
	class UClass* RichText_BottomPrompt;
	class UClass* RichText_ExtraInputPrompt;
	class UClass* ActionWidget_InputFeedback;
	class UClass* Action_KeybindWidget;
	class UClass* Action_KeybindWidget_1;
	class UClass* Action_KeybindWidget_2;
	class UClass* Action_KeybindWidget_3;
	class UClass* Action_KeybindWidget_4;
	class UClass* Tutorial_NextButton_Input;
	class UClass* Overlay_AllWidgets;
	class UClass* Overlay_ActionWidgets;
	class UClass* Overlay_KeybindWidgets;
	class UClass* Overlay_ExtraText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaVehicleDashboardWidget_Ferret : public FortAthenaVehicleDashboardWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaVehicleDashboardWidget_Meatball : public FortAthenaVehicleDashboardWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaViewQuestsButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUserWidget : public UserWidget
{
public:
	bool bConsumePointerInput;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAttributeList : public FortUserWidget
{
public:
	class UClass* AttributeItemClass;
	bool bHoverEnabledOnElements;
	class UClass* AttributeContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAttributeList_NUI : public CommonUserWidget
{
public:
	class UClass* AttributeItemClass;
	bool bHoverEnabledOnElements;
	TArray<class UClass*> ShownAttributeWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAttributeListItem : public UserWidget
{
public:
	bool bHoverEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAttributeListItem_NUI : public CommonUserWidget
{
public:
	bool bHoverEnabled;
	struct GameplayTag StatTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAutorunLockZone : public BacchusHUDElement
{
public:
	bool bIsInZone;
	bool bIsAutorunLockEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBacchusControlsHelp : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBangWrapperOld : public ContentWidget
{
public:
	EFortBangSize Size;
	struct Vector2D Offset;
	EFortBangType BangType;
	struct FName TutorialNameID;
	EFortTutorialGlowType TutorialGlowType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBangWrapper_NUI : public CommonUserWidget
{
public:
	EFortBangType BangType;
	struct FName TutorialNameID;
	class UClass* ContentSlot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBangWrapperContentButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBangWrapperContentInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBangWrapperContentWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBannerSelectModal : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBannerSelectorBase : public CommonActivatablePanelLegacy
{
public:
	class UClass* BannerName;
	int BannerNameMaxLength;
	class UClass* ErrorBorder;
	class UClass* ErrorText;
	bool bFilterHomeBaseNameWithOSS;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBannerSlotButton : public CommonButtonLegacy
{
public:
	class UClass* PlayerBanner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortButtonStyle : public UObject
{
public:
	struct FortStateStyle NormalBase;
	struct FortStateStyle NormalHovered;
	struct FortStateStyle NormalPressed;
	struct FortStateStyle SelectedBase;
	struct FortStateStyle SelectedHovered;
	struct FortStateStyle SelectedPressed;
	struct FortStateStyle Disabled;
	struct FortMultiSizeMargin ButtonPadding;
	struct FortMultiSizeFont Font;
	struct FortMultiSizeMargin CustomPadding;
	struct SlateSound PressedSlateSound;
	struct SlateSound HoveredSlateSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBaseButton : public FortUserWidget
{
public:
	struct FScriptMulticastDelegate EnabledChanged;
	struct FScriptMulticastDelegate SelectedChanged;
	struct FScriptMulticastDelegate ButtonClicked;
	EFortBangSize BangSize;
	struct Vector2D BangOffset;
	EFortBangType BangType;
	struct FName TutorialNameID;
	EFortTutorialGlowType TutorialGlowType;
	class UClass* Style;
	EFortBrushSize BrushSize;
	struct SlateSound PressedSlateSoundOverride;
	struct SlateSound HoveredSlateSoundOverride;
	bool bSelectable;
	struct FName SelectionGroup;
	bool bToggleable;
	bool bClickable;
	EButtonClickMethod ClickMethod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassReward : public CommonButtonLegacy
{
public:
	struct FName ImageParamName;
	class UClass* Image_RewardIcon;
	class UClass* Image_RewardLockedTint;
	class UClass* Image_ChaseRewardSpacer;
	class UClass* Image_SelectionBorder;
	class UClass* Switcher_EarnedRewardState;
	class UClass* Switcher_RewardTrackType;
	class UClass* Switcher_TrackNumber;
	class UClass* Overlay_NewTechInfo;
	class UClass* Text_FreeLevelNumber;
	class UClass* Text_PaidLevelNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassVideoAnnotationWidget : public CommonUserWidget
{
public:
	class UClass* IntroOutroCurve;
	class UClass* Text_ItemSource;
	class UClass* Text_ItemName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBattlePassVideoDisplay : public CommonVideoPlayer
{
public:
	class UClass* AnnotationWidgetClass;
	TArray<struct FortBattlePassVideoAnnotation> VideoAnnotations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBladeMenu : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBladeMenu_MainMenu : public FortBladeMenu
{
public:
	class UClass* VBox_MainMenuButtons;
	class UClass* Button_BackToHub;
	class UClass* Button_Settings;
	class UClass* Button_Subscription;
	class UClass* Button_MobileBack;
	class UClass* Button_SubgameSelection;
	class UClass* RatingIcons_RatingIcons;
	class UClass* VerticalBox_ExtensionContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBladeMenu_SocialPanel : public FortBladeMenu
{
public:
	class UClass* SocialPanel_UserLists;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBluGloCounter : public FortUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBorderStyleList : public CommonUserWidget
{
public:
	struct FName BordersPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBoundActionButton : public CommonBoundActionButton
{
public:
	class UClass* KeyboardStyle;
	class UClass* LargeKeyboardStyle;
	class UClass* GamepadStyle;
	class UClass* LargeGamepadStyle;
	class UClass* MobileStyle;
	class UClass* LargeMobileStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBroadcasterMapSettings : public CommonActivatableWidget
{
public:
	class UClass* PlayerIndicatorsRotator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBroadcastViewSettings : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuffetInfo : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalUserEntry : public CommonButtonLegacy
{
public:
	class UClass* LocalUserSettingsMenuClass;
	class UClass* LocalUserSettingsMenu;
	class UClass* SocialAvatarIcon;
	class UClass* Image_Crown;
	class UClass* Text_UserName;
	class UClass* Text_VoiceChannel;
	class UClass* MenuAnchor_LocalUserSettingMenu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuffetLocalUserEntry : public FortLocalUserEntry
{
public:
	class UClass* BuffetInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuildingInfoIndicatorWidget : public FortActorIndicatorWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBuildWatermark : public FortHUDElementWidget
{
public:
	class UClass* Text_BuildWatermark;
	class UClass* Text_McpVersion;
	class UClass* Text_CalendarOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortButtonInternalWidget : public Button
{
public:
	bool IsClickable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCalibrateBrightnessScreen : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCameraTargetPedestal : public AActor
{
public:
	struct GameplayTag CameraTargetTag;
	class UClass* PedestalBaseComponent;
	class UClass* CurrentPrimaryItem;
	class UClass* ItemPreviewActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberEntry : public FortTeamMemberEntryBase
{
public:
	int RepresentedMemberIndex;
	EFortMemberConnectionState CurrentConnectionState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignHUDTeamMemberInfo : public FortCampaignTeamMemberEntry
{
public:
	class UClass* Image_HeroIcon;
	class UClass* PowerRating_MemberRating;
	class UClass* Text_BluGloCount;
	class UClass* VoiceIcon_Status;
	class UClass* Text_MemberName;
	class UClass* Image_LeaderIcon;
	class UClass* Image_PlatformIcon;
	class UClass* Image_HealthBar;
	class UClass* Image_ShieldBar;
	struct SlateColor Color_PlayerNameAlive;
	struct SlateColor Color_PlayerNameDead;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignMap : public CommonUserWidget
{
public:
	struct FortSwipeDetector SwipeDetector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignMatchmakingBase : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignMinimap : public Widget
{
public:
	struct Vector2D DesiredSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignPurchaseScreen : public CommonActivatableWidget
{
public:
	TArray<class UClass*> ImageCycle;
	float ImageCycleTime;
	bool bAllowCodeRedemption;
	class UClass* BoundAnim_Intro;
	class UClass* BoundAnim_Outro;
	class UClass* Image_ProductLogo;
	class UClass* Text_Tagline;
	class UClass* Text_Description;
	class UClass* Button_Purchase;
	class UClass* Button_RedeemCode;
	class UClass* Button_Back;
	class UClass* Image_UpsellImage;
	class UClass* ActivatableSwitcher_PreviewOrStore;
	class UClass* StoreScreenClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberBanner : public FortCampaignTeamMemberEntry
{
public:
	class UClass* Banner_MemberBanner;
	class UClass* Image_LeaderIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberItemTracker : public FortCampaignTeamMemberEntry
{
public:
	TArray<struct FString> TemplateIdsToTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberXpBoost : public FortCampaignTeamMemberItemTracker
{
public:
	struct FText NoPartyMemberString;
	struct FText LocalPlayerXpBoostConfirmationTitle;
	struct FText LocalPlayerXpBoostConfirmationText;
	struct FText RemotePlayerXpBoostConfirmationTitle;
	struct FText RemotePlayerXpBoostConfirmationText;
	class UClass* Banner_MemberBanner;
	class UClass* Text_MemberName;
	class UClass* Text_Boost;
	class UClass* Image_BoostIcon;
	class UClass* Button_ActivateBoost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberDailyBonusXpBoost : public FortCampaignTeamMemberItemTracker
{
public:
	class UClass* Text_Boost;
	class UClass* Image_BoostIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberInfo : public FortCampaignTeamMemberEntry
{
public:
	class UClass* Button_MenuButton;
	class UClass* Banner_MemberBanner;
	class UClass* PowerRatingWidgetSwitcher;
	class UClass* PowerRating_MemberRating;
	class UClass* Moonbeam_PowerRating_MemberRating;
	class UClass* Phoenix_PowerRating_MemberRating;
	class UClass* Text_MemberName;
	class UClass* Image_LeaderIcon;
	class UClass* Image_PlatformIcon;
	class UClass* VoiceIcon_Status;
	class UClass* RichText_Fortitude;
	class UClass* RichText_Offense;
	class UClass* RichText_Resistance;
	class UClass* RichText_Technology;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCampaignTeamMemberResult : public FortCampaignTeamMemberEntry
{
public:
	class UClass* Button_Stats;
	class UClass* Banner_MemberBanner;
	class UClass* PowerRatingWidgetSwitcher;
	class UClass* PowerRating_MemberRating;
	class UClass* Moonbeam_PowerRating_MemberRating;
	class UClass* Image_PlatformIcon;
	class UClass* Text_MemberName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChargedWeaponReticleExtensionWidget : public FortWeaponReticleExtensionWidgetBase
{
public:
	float UpdateFrequencySecs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChatContainer : public SocialChatContainer
{
public:
	Unknown CacheChannelForPlatformMessage;
	class UClass* CombinedChannel;
	class UClass* ActionMenuClass;
	class UClass* ActionMenu;
	class UClass* MenuAnchor_MessageActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChatMessageEntry : public SocialChatMessageEntry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChatPanel : public FortActivatablePanel
{
public:
	class UClass* ChatContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChatWidget : public NativeWidgetHost
{
public:
	bool MinimizeEnabled;
	bool AutoReleaseFocus;
	bool AllowEmotes;
	float ListFadeTime;
	int MinimizedChatMessageNum;
	bool ThrottleChat;
	float ThrottleTicketTime;
	int ThrottleTicketCount;
	struct FScriptMulticastDelegate OnChatEnteredEvent;
	struct FScriptMulticastDelegate OnUserListChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortChildNavigatableScrollBox : public ScrollBox
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortClickThroughButton : public Button
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCMSInfoCarousel : public FortActivatablePanel
{
public:
	Unknown MessageWidgetLayoutMap;
	class UClass* Carousel;
	class UClass* CarouselNavBar;
	struct FString CMSInfoId;
	float AutoScrollInterval;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCodeOfConductScreen : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookGenericRewardWidget : public CommonUserWidget
{
public:
	bool bUpdateVisibilityBasedOnRewardExistence;
	ESlateVisibility VisibilityWhenNoRewardSpecified;
	ESlateVisibility VisibilityWhenRewardSpecified;
	class UClass* RewardCardWidget;
	ECollectionBookRewardStatus RewardStatus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookHelpWidget : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPopupMenu : public CommonPopupMenuLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookItemPopupMenu : public FortPopupMenu
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookOverviewWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnCollectionBookPageSelected;
	struct FScriptMulticastDelegate OnCollectionBookPageClicked;
	class UClass* LastSelectedPage;
	class UClass* LastSelectedCategory;
	TArray<class UClass*> CategoryObjectPool;
	class UClass* PageTreeViewWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPageCompletionRewardWidget : public FortCollectionBookGenericRewardWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPageDetailsWidget : public CommonUserWidget
{
public:
	class UClass* PageCompletionText;
	class UClass* ProgressBar;
	class UClass* PageRewardWidget;
	class UClass* RewardDetailsButton;
	class UClass* DetailsPage;
	struct TSoftClassPtr<UObject> RewardDetailsModalWidgetClass;
	struct FText ModalTitle;
	class UClass* RewardDetailsModalWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPageListWidget : public CommonButtonLegacy
{
public:
	class UClass* PageNameWidget;
	class UClass* AvailableSlotsWidget;
	class UClass* PageCompletionWidget;
	Unknown AssociatedPageOrCategory;
	bool bIsExpanded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPicker : public FortItemPickerBase
{
public:
	class UClass* MulchConfirmationModalClass;
	class UClass* CurrentSlottedItem;
	class UClass* MulchConfirmationModal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookPrimaryPanel : public CommonActivatablePanelLegacy
{
public:
	struct FScriptMulticastDelegate OnCollectionBookPageSelectedDelegate;
	struct FScriptMulticastDelegate OnCollectionBookPageClickedDelegate;
	struct FScriptMulticastDelegate OnCollectionBookSectionClickedDelegate;
	struct DataTableRowHandle BackActionRowHandle;
	struct DataTableRowHandle SummonInfoPanelActionRowHandle;
	class UClass* OverviewWidget;
	class UClass* SectionTileViewWidget;
	ECollectionBookPrimaryNavTarget CurrentNavTarget;
	class UClass* LastClickedSection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookProgressionRewardDetailInspectWidget : public CommonUserWidget
{
public:
	class UClass* LevelTextWidget;
	class UClass* RewardWidget;
	class UClass* CheckmarkImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookProgressionRewardsModalWidget : public FortActivatablePanel
{
public:
	struct TSoftClassPtr<UObject> RewardWidgetClass;
	struct Margin RewardWidgetPadding;
	int NumRewardsToShow;
	class UClass* RewardBoxWidget;
	class UClass* MajorRewardBoxWidget;
	class UClass* XPTextWidget;
	class UClass* LevelTextWidget;
	class UClass* ButtonGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookProgressionRewardsPreviewWidget : public CommonUserWidget
{
public:
	class UClass* NextRewardWidget;
	class UClass* NextMajorRewardWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookProgressionRewardWidget : public FortCollectionBookGenericRewardWidget
{
public:
	class UClass* LevelTextWidget;
	class UClass* DisplayNameWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookProgressWidget : public CommonUserWidget
{
public:
	int CachedXPLevel;
	float CachedXPCompletionPct;
	struct TSoftClassPtr<UObject> RewardDetailsModalWidgetClass;
	class UClass* ProgressionRewardsPreviewWidget;
	class UClass* XPTextWidget;
	class UClass* LevelTextWidget;
	class UClass* DetailsButtonWidget;
	class UClass* PageDetailsWidget;
	class UClass* DetailsModalWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookRecycleSlotResultsWidget : public CommonUserWidget
{
public:
	class UClass* RecycleResultsWidget;
	EFortItemCardSize ItemCardSize;
	class UClass* ItemToRecycle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookRewardCardWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnDisplayedItemChangedEvent;
	class UClass* ItemCardWidget;
	class UClass* MultiItemRewardOverlay;
	class UClass* ChoiceRewardOverlay;
	class UClass* CheckmarkImage;
	float UpdateCardInterval;
	EFortItemCardSize ItemCardSize;
	bool bDisplayAsRewardCard;
	struct FortRewardInfo RepresentedRewards;
	TArray<class UClass*> DummyItems;
	struct TimerHandle UpdateCardTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookRewardModalWidget : public CommonActivatablePanelLegacy
{
public:
	class UClass* TitleWidget;
	class UClass* RewardWidget;
	class UClass* ProgressBar;
	class UClass* ProgressTextWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSectionCompletionRewardWidget : public FortCollectionBookGenericRewardWidget
{
public:
	class UClass* RewardDetailsButton;
	struct TSoftClassPtr<UObject> RewardDetailsModalWidgetClass;
	struct FText ModalTitle;
	class UClass* RewardDetailsModalWidget;
	class UClass* Section;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSectionPanel : public CommonActivatablePanelLegacy
{
public:
	struct FScriptMulticastDelegate OnSectionCloseRequest;
	struct FScriptMulticastDelegate OnPreviewXPChangeEvent;
	class UClass* SectionNameTextWidget;
	class UClass* SlotViewWidget;
	class UClass* SlotItemPicker;
	class UClass* ContextOverlayWidget;
	class UClass* ContextTextWidget;
	class UClass* SectionRewardWidget;
	class UClass* ItemAcquisitionSourceContainerWidget;
	class UClass* ItemAcquisitionSourceDescWidget;
	class UClass* ItemAcquisitionSourceDesc2Widget;
	class UClass* ResearchRecruitUnslotContainerWidget;
	class UClass* PersonRecruitUnavailableMessageWidget;
	class UClass* ItemResearchUnavailableMessageWidget;
	class UClass* UnslotUnavailableMessageWidget;
	struct DataTableRowHandle BackActionRowHandle;
	struct DataTableRowHandle CloseActionRowHandle;
	struct DataTableRowHandle SlotItemActionRowHandle;
	struct DataTableRowHandle InspectItemActionRowHandle;
	struct DataTableRowHandle InspectCollectionBookItemActionRowHandle;
	struct DataTableRowHandle InspectPreviewItemActionRowHandle;
	struct DataTableRowHandle OpenPickerActionRowHandle;
	struct DataTableRowHandle LogAllowedItemsActionRowHandle;
	struct DataTableRowHandle ResearchItemActionRowHandle;
	struct DataTableRowHandle RecruitActionRowHandle;
	struct DataTableRowHandle UnslotItemActionRowHandle;
	ECollectionBookSectionNavTarget CurrentNavTarget;
	class UClass* AssociatedSection;
	bool bHasSummonedPanel;
	struct FortDialogExternalLatentActionHandle SlotConfirmationDialogLatentHandle;
	struct FScriptMulticastDelegate OnShowItemDetailEvent;
	struct FScriptMulticastDelegate OnSlotItemConfirmEvent;
	struct FScriptMulticastDelegate OnResearchItemConfirmEvent;
	struct FScriptMulticastDelegate OnUnslotItemConfirmEvent;
	struct FScriptMulticastDelegate OnInspectItemEvent;
	class UClass* SlotConfirmationModalClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSectionTileWidget : public CommonButtonLegacy
{
public:
	struct TSoftClassPtr<UObject> SlotWidgetClass;
	struct Margin SlotWidgetPadding;
	EHorizontalAlignment SlotWidgetHorizontalAlignment;
	EVerticalAlignment SlotWidgetVerticalAlignment;
	int MaxNumSlotsSupported;
	class UClass* SlotBoxWidget;
	class UClass* SectionNameWidget;
	class UClass* SectionRewardWidget;
	class UClass* AssociatedSection;
	TArray<class UClass*> SlotWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotButton : public CommonButtonLegacy
{
public:
	class UClass* CollectionBookSlotWidget;
	class UClass* PopupMenuAnchor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotConfirmationModal : public FortActivatablePanel
{
public:
	class UClass* CurrentlySlottedItem;
	class UClass* NewItemToSlot;
	class UClass* Text_SlottingDescription;
	class UClass* ItemCard_NewlySlottedItem;
	class UClass* RecycleSlotResultsWidget;
	class UClass* Button_SlotItem;
	class UClass* Button_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotDetailsWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotView : public CommonUserWidget
{
public:
	struct TSoftClassPtr<UObject> CollectionBookButtonClass;
	class UClass* CollectionBookButtonBox;
	class UClass* CollectionBookSlotButtonGroup;
	TArray<class UClass*> CollectionBookSlotButtons;
	class UClass* AssociatedSection;
	int PreviousSelectedButtonIdx;
	int CurrentSelectedButtonIdx;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookSlotWidget : public CommonUserWidget
{
public:
	EFortItemCardSize ItemCardSize;
	bool bIsRewardCard;
	class UClass* ItemCardWidget;
	class UClass* UnslottedOverlayWidget;
	class UClass* ReadyToSlotOverlayWidget;
	class UClass* UnslottedButReadyOverlayWidget;
	struct FName SlotRowName;
	struct FText ItemAvailableToSlotText;
	struct FText NoItemsAvailableToSlotText;
	struct FText HigherQualityItemsAvailableToSlotAndUpgradeAvailableText;
	struct FText HigherQualityItemsAvailableToSlotAndEvolveAvailableText;
	struct FText HigherQualityItemsAvailableToSlotText;
	struct FText ItemInSlotFullyUpgradedText;
	struct FText ItemInSlotCanBeUpgradedText;
	struct FText ItemInSlotCanBeEvolvedText;
	class UClass* SlottedItemRepresentation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCollectionBookWidget : public FortActivatablePanel
{
public:
	class UClass* ProgressWidget;
	class UClass* MainWidgetSwitcher;
	class UClass* PrimaryPanelWidget;
	class UClass* SectionPanelWidget;
	int PrimaryPanelIdx;
	int SectionPanelIdx;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortColorPicker : public CommonActivatableWidget
{
public:
	class UClass* GridPanel_Swatches;
	class UClass* SwatchTileClass;
	class UClass* ButtonGroup_Swatches;
	class UClass* Button_CustomColor;
	class UClass* Swatch_CustomColor;
	class UClass* ColorComponent_Component1;
	class UClass* ColorComponent_Component2;
	class UClass* ColorComponent_Component3;
	class UClass* Button_SaveColor;
	class UClass* Swatch_CustomColorPreview;
	TArray<struct LinearColor> Swatches;
	bool bNullOptionAvailable;
	bool bAutoSelectColorOnInitialize;
	struct LinearColor StartingCustomColor;
	int SwatchRowCount;
	struct LinearColor NullOptionColor;
	EColorPickerType ColorPickerType;
	bool bInitializeCustomColorFromSelectedSwatch;
	EColorPickerColorRepresentation CustomColorRepresentation;
	class UClass* HueMaterial;
	struct FName HueMaterialParam;
	class UClass* SaturationMaterial;
	struct FName SaturationMaterialParam;
	class UClass* ValueMaterial;
	struct FName ValueMaterialParam;
	struct LinearColor CurrentColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortColorPickerComponent : public CommonUserWidget
{
public:
	class UClass* Text_ComponentName;
	class UClass* Text_CurrentValue;
	class UClass* ColorSlider_Component;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortColorPickerConfiguration : public UDataAsset
{
public:
	bool bNoColorOptionAvailable;
	EColorPickerType ColorPickerType;
	bool bInitializeCustomColorFromSelectedSwatch;
	EColorPickerColorRepresentation CustomColorRepresentation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortColorPickerSlider : public AnalogSlider
{
public:
	class UClass* DynamicSliderMaterialInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortColorPickerSwatchTile : public CommonButtonLegacy
{
public:
	class UClass* Image_Color;
	class UClass* Image_Locked;
	class UClass* Image_Selected;
	struct FName ImageColorParam;
	struct LinearColor SwatchColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommittableButtonGroup : public CommonButtonGroupLegacy
{
public:
	struct FScriptMulticastDelegate OnButtonCommitted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingAvailableVotesWidget : public CommonUserWidget
{
public:
	class UClass* TextBlock_CurrentVoteNumber;
	class UClass* TextBlock_NextVoteNumber;
	class UClass* DateTimeTextBlock_VoteCountdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingCountdown : public UserWidget
{
public:
	class UClass* Text_TimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingFeedback : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCommunityVotingManager : public UObject
{
public:
	TArray<class UClass*> CachedDisplayAssets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingModalPopup : public FortActivatablePanel
{
public:
	struct DataTableRowHandle buttonInputAction;
	class UClass* VotingScreenClass;
	class UClass* CandidateClass;
	class UClass* Button_VoteNow;
	class UClass* Button_Close;
	class UClass* Border_TapToCloseZone;
	class UClass* EntryBox_Options;
	class UClass* TextBlock_Title;
	class UClass* TextBlock_Banner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingOption : public CommonButtonLegacy
{
public:
	class UClass* VotingManager;
	class UClass* PreviewDetailWidgetClass;
	class UClass* ComOptionVote;
	class UClass* ComOptionDetails;
	class UClass* FlameCounter;
	class UClass* VoteFeedbackClass;
	class UClass* ComOptionPreview;
	class UClass* ComVoteFeedbackContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingOptionPreview : public CommonUserWidget
{
public:
	class UClass* VotingManager;
	class UClass* Image_Main;
	class UClass* Text_Name;
	class UClass* Text_ShortDescription;
	class UClass* CommonBorder_Owned;
	class UClass* VerticalBox_Owned;
	class UClass* LoadGuard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingOptionReveal : public CommonUserWidget
{
public:
	class UClass* VotingManager;
	class UClass* Image_Main;
	class UClass* Image_Duplicate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingRevealScreen : public FortActivatablePanel
{
public:
	float MaxRevealPlayRate;
	float MinRevealPlayRate;
	class UClass* VotingManager;
	TArray<class UClass*> GeneratedOption;
	TArray<class UClass*> LoserOptions;
	class UClass* WinnerOption;
	class UClass* WinnerOfferInfo;
	class UClass* EntryBox_Options;
	class UClass* Button_Close;
	class UClass* Button_Detail;
	class UClass* RichText_ItemReturns;
	class UClass* BorderRarityColored;
	class UClass* ComOptionRevealWinner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingScreen : public FortActivatablePanel
{
public:
	struct FText RevealWinnerPopupTitle;
	struct FText RevealWinnerPopupBanner;
	class UClass* CommunityVotingModalPopupClass;
	class UClass* CommunityVotingModalTutorialPopupClass;
	struct DataTableRowHandle BackInput;
	class UClass* VotingManager;
	class UClass* HighlightedOption;
	class UClass* Countdown_RemainingTime;
	class UClass* EntryBox_Options;
	class UClass* ComBackButton;
	class UClass* AvailableSparksWidget;
	class UClass* Switcher_VotingTip;
	class UClass* Com_ThanksForVotingMessage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingTab : public CommonUserWidget
{
public:
	class UClass* ContainedWidgetClass;
	class UClass* HorizontalBox_LargeTile;
	class UClass* DateTimeTextBlock_Countdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingThanksPopup : public CommonUserWidget
{
public:
	class UClass* ThanksForVoting_Countdown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreFrontTileWidgetBase : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingTile : public FortStoreFrontTileWidgetBase
{
public:
	class UClass* VotingScreenClass;
	class UClass* RevealScreenClass;
	class UClass* CandidateClass;
	class UClass* VotingManager;
	TArray<class UClass*> GenerateCandidates;
	struct FText EventTileTitle;
	class UClass* Text_Name;
	class UClass* AvailableSparksWidget;
	class UClass* EntryBox_Candidates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingTileCandidate : public UserWidget
{
public:
	class UClass* Image_Candidate;
	class UClass* LoadGuard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingTutorialPopup : public FortActivatablePanel
{
public:
	int NumberOfSlide;
	float DelayBetweenSlide;
	float DelayOutAnimation;
	struct DataTableRowHandle ButtonNextInputAction;
	struct DataTableRowHandle ButtonCloseInputAction;
	class UClass* Button_NextStep;
	class UClass* Button_Close;
	class UClass* Buttons_Switcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCommunityVotingVoteCounter : public CommonUserWidget
{
public:
	bool HasOneOrMoreVote;
	class UClass* TextBlock_CurrentVoteNumber;
	class UClass* TextBlock_NextVoteNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMultiSizeImage : public Widget
{
public:
	struct FortMultiSizeBrush MultiSizeBrush;
	EFortBrushSize BrushSize;
	struct LinearColor ColorAndOpacity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortComparisonResultIndicator : public FortMultiSizeImage
{
public:
	bool bShouldCollapseWhenNotShown;
	EFortBuffState ComparisonResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeaderboardListViewWrapper : public CommonActivatableWidget
{
public:
	class UClass* ListView_LeaderboardEntries;
	class UClass* Content_LoadingEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeaderboardViewTab : public CommonActivatableWidget
{
public:
	class UClass* Switcher_LeaderboardEntries;
	class UClass* ActivatableContent_LeaderboardListWrapper;
	class UClass* Content_NoLeaderboardEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCompetitiveLeaderboardScreen : public CommonActivatableWidget
{
public:
	float TimeDelayToShowDetails;
	TArray<class UClass*> LeaderboardEntries;
	class UClass* MyEntryData;
	class UClass* EntryToShowDetails;
	class UClass* ActivatableContent_LeaderboardTab;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventLeaderboardEntryData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLeaderboardTeammateEntry : public CommonUserWidget
{
public:
	class UClass* Text_PlayerName;
	class UClass* IdentityFlag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLeaderboardEntry : public CommonButtonLegacy
{
public:
	class UClass* FlagImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConfirmationWindow : public FortActivatablePanel
{
public:
	class UClass* EntryBox_SimpleButtons;
	class UClass* EntryBox_ComplexChoiceButtons;
	class UClass* Panel_LeftOptionalWidget;
	class UClass* Panel_OptionalWidget;
	class UClass* ScrollBox_Description;
	class UClass* CommonTextBlock_Title;
	class UClass* CommonTextBlock_Description;
	class UClass* Image_MainIcon;
	class UClass* CommonLoadGuard_LatentSpinner;
	TArray<struct FortConfirmationButtonInfo> ConfirmationButtons;
	class UClass* DeclineButton;
	struct FortDialogDescription_NUI ConfirmationDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialListUserEntryBase : public SocialListUserEntryBase
{
public:
	class UClass* Image_EncourageEpicFriend;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConnectionsUserListEntry : public FortSocialListUserEntryBase
{
public:
	class UClass* Text_MutualFriends;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortConsoleProfileWidget : public UserWidget
{
public:
	class UClass* Text_Prefix;
	class UClass* Text_DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingRegistry : public UObject
{
public:
	TArray<class UClass*> TopLevelSettings;
	TArray<class UClass*> RegisteredSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContentControlSettingRegistry : public UFortSettingRegistry
{
public:
	class UClass* ContentControlSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortContentOnDemand : public CommonUserWidget
{
public:
	float ReEnableSettingDelay;
	bool bEnabled;
	int64_t LastReminder;
	struct Timespan TimespanToRemind;
	bool bSendErrorReports;
	bool bSendOutOfMemoryErrorReports;
	TArray<EFortGameFeature> GameFeaturesToListenFor_Config;
	TArray<EFortGameFeature> GameFeaturesToListenFor;
	TArray<EFortGameFeature> OptionalGameFeaturesToListenFor_Config;
	TArray<EFortGameFeature> OptionalGameFeaturesToListenFor;
	TArray<class UClass*> ActiveCosmeticDownloads;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerActionsMenu : public CommonPopupMenuLegacy
{
public:
	class UClass* MenuEntryClass;
	class UClass* EntryBox_BindableActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerActionsMenuEntry : public CommonButtonLegacy
{
public:
	class UClass* Text_Action;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProgressModal : public FortActivatablePanel
{
public:
	struct FText Title;
	struct FText Description;
	struct SlateBrush Icon;
	bool bIntroOutroEnabled;
	bool bAutoInitialize;
	bool bFocusSelf;
	bool bConsumeAnalogInput;
	class UClass* ProgressWidget_Main;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerDisconnectedModal : public FortProgressModal
{
public:
	class UClass* HBox_SwitchUser;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticItemCard : public CommonUserWidget
{
public:
	bool bIsReward;
	bool bIsItemIconEnabled;
	bool bIsDetailIconEnabled;
	bool bIsQuantityEnabled;
	float WidthToHeightRatio;
	float RewardWidthToHeightRatio;
	float CardWidth;
	float RewardCardWidth;
	class UClass* DefaultItemCardMaterial;
	float MinWidgetWidthForLargeAsset;
	float MinWidgetWidthForLargeAssetMobile;
	class UClass* SizeBox_NewItemCard;
	class UClass* Image_NewItemCard;
	class UClass* LoadGuard;
	class UClass* ItemToRepresent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticLoadoutCard : public CommonUserWidget
{
public:
	struct FortAthenaLoadout RepresentedLoadout;
	EFortLoadoutCardType CardType;
	struct FString LoadoutName;
	bool bSaved;
	float WidthToHeightRatio;
	float CardWidth;
	class UClass* WipedownAnimation;
	class UClass* SizeBox_Card;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticLoadoutCardButton : public CommonButtonLegacy
{
public:
	class UClass* Card_Loadout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCosmeticLoadoutListData : public UObject
{
public:
	class UClass* Loadout;
	EFortLoadoutCardType CardType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticLoadoutListEntry : public FortCosmeticLoadoutCardButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticLoadoutScreen : public FortActivatablePanel
{
public:
	struct DataTableRowHandle BackAction;
	class UClass* NameLoadoutPopupClass;
	class UClass* ProgressModalClass;
	class UClass* ProgressModalInstance;
	EFortCosmeticLoadoutScreenMode ScreenMode;
	class UClass* AthenaConfirmationClass;
	struct FText UnsavedPresetConfirmationTitle;
	struct FText UnsavedPresetConfirmationDescriptionFormat;
	struct FText UnsavedPresetConfirmationContinueButtonText;
	struct FText UnsavedPresetConfirmationBackButtonText;
	class UClass* NewlySelectedItem;
	class UClass* PreviewedLocker;
	class UClass* ListView_Loadouts;
	class UClass* Button_MobileClose;
	class UClass* Button_RenameLoadout;
	class UClass* Button_DeleteLoadout;
	class UClass* SimpleFeatured_YellowButton;
	class UClass* Card_SelectedPreset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCosmeticLoadoutSelector : public CommonUserWidget
{
public:
	class UClass* NameLoadoutPopupClass;
	class UClass* HBox_InternalVisibilitySetter;
	class UClass* Button_Prev;
	class UClass* Button_Next;
	class UClass* Text_LoadoutName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNameLoadoutPopup : public FortActivatablePanel
{
public:
	class UClass* TargetLoadout;
	class UClass* Text_EditableLoadoutName;
	class UClass* Button_Accept;
	class UClass* Button_Cancel;
	class UClass* Button_CloseMobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCraftingBarWidget : public FortHUDElementWidget
{
public:
	class UClass* CraftingText;
	class UClass* CraftingProgressBar;
	float CompletedRemainVisibleTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeAdsView : public UserWidget
{
public:
	TArray<struct CreativeAdData> CreativeAdList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeAdTile : public CommonUserWidget
{
public:
	class UClass* Image_CreativeAd;
	struct CreativeAdData CMSAdEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeAffiliatePanel : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameWidgetBase : public FortHUDElementWidget
{
public:
	bool bDisplayCaptureObjectiveRow;
	class UClass* CurrentMinigame;
	class UClass* CurrentGameState;
	class UClass* CurrentVolumeManager;
	class UClass* CurrentVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeBossInfo : public MinigameWidgetBase
{
public:
	bool bShowHealthbarIfLocalPlayerIsBoss;
	class UClass* Text_PlayerName;
	class UClass* Image_HealthBar;
	class UClass* Image_ShieldBar;
	class UClass* Image_DBNOBar;
	class UClass* BossPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeCaptureScreenshotHUD : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeOptionsCategory : public UserWidget
{
public:
	struct CreativeOptionCategoryData OptionCategory;
	TArray<class UClass*> CreativeOptions;
	class UClass* GlobalOptionsUI;
	class UClass* ListView_Options;
	class UClass* Text_CategoryText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeGlobalOptions : public FortActivatablePanel
{
public:
	int CachedLastUsedIndexInCategory;
	class UClass* OptionsAsset;
	class UClass* Category_Player;
	class UClass* Category_MoveTool;
	class UClass* Button_Accept;
	class UClass* Button_Cancel;
	class UClass* Text_ToolTipText;
	class UClass* Image_DisplayImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeVolumeWidget : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeHeatmapOverBudgetWidget : public FortCreativeVolumeWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeInfoIndicatorWidget : public FortActorIndicatorWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandDetailsPanel : public CommonUserWidget
{
public:
	class UClass* Image_Island;
	class UClass* Image_LoadingSpinner;
	class UClass* ScrollBox_Details;
	class UClass* Text_IslandDescription;
	class UClass* Text_Creator;
	class UClass* Text_IslandName;
	class UClass* Text_PublishedIslandCode;
	class UClass* Text_MaximumNumberOfPlayers;
	class UClass* Text_MatchmakingDescription;
	struct SlateBrush DefaultImageIslandBrush;
	struct FText MaxNumberOfPlayerTextFormat;
	struct FText MatchmakingOffText;
	struct FText MatchmakingKeepFullText;
	struct FText MatchmakingRespectPartiesTextFormat;
	struct DataTableRowHandle ScrollUpInputRowHandle;
	struct DataTableRowHandle ScrollDownInputRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeIslandLink : public UObject
{
public:
	struct FString Mnemonic;
	int Version;
	struct FString CreatorUsername;
	struct FString SupportCode;
	struct FString Title;
	struct FString Tagline;
	TArray<struct FString> DescriptionTags;
	struct FString Introduction;
	struct FString ImageUrl;
	EFortCreativeIslandLinkCategory Category;
	bool bDummyLink;
	int Matchmaking_MaximumNumberOfPlayers;
	struct FString Matchmaking_MMSType;
	int Matchmaking_PlayersPerTeam;
	struct DateTime SortDate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandLinkEntry : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandLinkScreen : public FortActivatablePanel
{
public:
	int NumDebugIslandLinks;
	struct FScriptMulticastDelegate OnCreativeIslandCodeConfirmed;
	struct FScriptMulticastDelegate OnEditableTextIslandLinkModified;
	struct FText MatchmakingOffDescription;
	struct FText MatchmakingKeepFullDescription;
	struct FText MatchmakingRespectPartiesDescription;
	class UClass* EditableText_IslandLink;
	class UClass* ListView_IslandLinks;
	class UClass* LastLinkQueried;
	class UClass* UserEnteredIslandLink;
	class UClass* Button_Select;
	class UClass* Button_CloseMobile;
	class UClass* Button_Cancel;
	class UClass* Button_Refresh;
	class UClass* Button_Remove;
	class UClass* Switcher_Tabs;
	struct CachedIslandsGroup FavoriteIslands;
	struct CachedIslandsGroup IslandHistory;
	class UClass* TargetPortal;
	struct DateTime LastRefreshTime;
	struct FString LastTestedMnemonic;
	bool bCodeLookupRequestInFlight;
	bool bFriendsGetRequestInFlight;
	bool bFavoritesOnlyMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandLinkScreenServerBrowser : public FortCreativeIslandLinkScreen
{
public:
	class UClass* LastSelectedIsland;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandPanel : public FortHUDElementWidget
{
public:
	struct FScriptMulticastDelegate OnSupportCreator;
	class UClass* PanelInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelect : public FortActivatablePanel
{
public:
	class UClass* TabButtonGroup;
	class UClass* ListView_IslandList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandNamingModal : public FortActivatablePanel
{
public:
	struct FText InitialDisplayText;
	class UClass* FilteredTextEntryWidget_Name;
	class UClass* Button_Confirm;
	class UClass* TemplateRealEstatePlotDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandGeneration : public FortActivatablePanel
{
public:
	class UClass* IslandTemplateDataTable;
	TArray<class UClass*> FilteredIslandTemplateDefinitions;
	class UClass* StartingIslandsTileView;
	class UClass* TemplateIslandsTileView;
	class UClass* AcceptButton;
	class UClass* IslandTemplateNameText;
	class UClass* IslandDescriptionText;
	class UClass* PublishedIslandName;
	class UClass* PublishedIslandCode;
	class UClass* PublishedIslandAuthor;
	class UClass* PublishedIslandBulletOne;
	class UClass* PublishedIslandBulletTwo;
	class UClass* PublishedIslandBulletThree;
	class UClass* TabButtonGroup;
	struct CachedIslandsGroup CachedTemplateIslands;
	TArray<class UClass*> IslandLinks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandTemplateButton : public AthenaCreativeItemTileButton
{
public:
	struct Vector2D FeaturedIslandTemplateImageSize;
	class UClass* TemplateImage;
	struct SlateBrush DefaultFeaturedTemplateImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelectTab : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelectCodeTab : public FortCreativeIslandSelectTab
{
public:
	class UClass* Button_Select;
	class UClass* EditableText_IslandLink;
	class UClass* IslandDetailsPanel;
	class UClass* Button_Favorite;
	class UClass* Widget_LaunchError;
	class UClass* ActivityProvider;
	class UClass* LastActivityQueried;
	class UClass* UserEnteredActivity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelectV2 : public CommonActivatableWidget
{
public:
	TArray<class UClass*> TabData;
	class UClass* IslandSelect_Base;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelectDiscovery : public FortCreativeIslandSelectV2
{
public:
	class UClass* Manager;
	struct FName DiscoverySurfaceName;
	class UClass* SurfaceWidget;
	uint32_t InsertDiscoveryTabsAtIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelectListTab : public FortCreativeIslandSelectTab
{
public:
	class UClass* ListView_Activities;
	class UClass* Button_Select;
	class UClass* Button_Remove;
	class UClass* Button_Favorite;
	class UClass* Switcher_IslandsList;
	class UClass* Overlay_IslandListContent;
	class UClass* Overlay_NoIslandsContent;
	class UClass* Overlay_NoFavorites;
	class UClass* Text_NoIslands;
	class UClass* Widget_LaunchError;
	class UClass* Image_LoadingIndicator;
	class UClass* IslandDetailsPanel;
	class UClass* ActivityProvider;
	class UClass* LastItemToTriggerLoading;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeIslandSelectScreen : public UserWidget
{
public:
	class UClass* Tab_Group;
	class UClass* Widget_Switcher;
	class UClass* Button_CloseMobile;
	class UClass* Button_Cancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeIslandSelectTabData : public UPrimaryDataAsset
{
public:
	EFortCreativeIslandSelectTabType TabType;
	struct FText Title;
	struct FText EmptyTabDescription;
	int IndexOverride;
	class UClass* WidgetClass;
	class UClass* DataProvider;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeItemListMenu : public CommonActivatableWidget
{
public:
	class UClass* PanelDataClass;
	class UClass* ItemListSource;
	class UClass* ItemListCategorySource;
	class UClass* ItemListPanelData;
	class UClass* InventoryTabClass;
	class UClass* InventoryTabButton;
	class UClass* TabList_Categories;
	struct FScriptMulticastDelegate BP_OnItemSelected;
	class UClass* ChestTabPanel;
	class UClass* FNStudioTabPanel;
	class UClass* SubItemsTabPanel;
	class UClass* Switcher_Categories;
	class UClass* Switcher_NoItemInChest;
	class UClass* Switcher_CommandBar;
	class UClass* MenuQuickbar_QuickBars;
	class UClass* Button_ResetChest;
	class UClass* Button_CreateChest;
	class UClass* Button_AddToQuickBar;
	class UClass* Button_OpenItem;
	class UClass* Button_PlaceNow;
	class UClass* Button_Equip;
	class UClass* Button_AddToChest;
	class UClass* Button_CreateLlama;
	class UClass* Button_RemoveFromChest;
	class UClass* FiltersPanel;
	int LastUsedSlot;
	struct DataTableRowHandle ItemDetailsInputRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeItemListPanelData : public UObject
{
public:
	TArray<class UClass*> AllItems;
	TArray<struct ItemListCategoryArray> CategoryList;
	struct FScriptMulticastDelegate OnLoadItemsComplete;
	class UClass* ItemListTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeItemListTabPanel : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate OnSelectionChanged;
	struct FScriptMulticastDelegate OnSourceItemCountChanged;
	class UClass* CreativeTileView_ItemOptions;
	struct FortItemEntry CurrentItemEntry;
	struct FScriptMulticastDelegate OnItemCountChanged;
	struct FName TabName;
	struct FText TabLabel;
	TArray<struct FortItemEntry> Items;
	TArray<struct FortItemEntry> SourceItems;
	TArray<struct FName> LastFilters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeItemListWrapper : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeMenuQuickbar : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate OnFocusChanged;
	struct FScriptMulticastDelegate OnEquipItem;
	class UClass* CurrentItemDefinition;
	EFortCreativeItemType CurrentType;
	class UClass* Switcher_QuickBars;
	class UClass* AthenaQuickbar_Creative;
	class UClass* AthenaQuickbar_Trap;
	class UClass* AthenaQuickbar_Primary;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemListOptionProxy : public UFortUserOptionProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchmakingKnobsModal : public FortActivatablePanel
{
public:
	float MobileOptionListEntrySpacing;
	class UClass* Machine;
	TArray<struct FString> ScrolledOffWhitelistedPlayers;
	TArray<class UClass*> LoadedPlayerArray;
	TArray<class UClass*> PermissionsUserList;
	class UClass* OptionsAsset;
	TArray<class UClass*> OptionDataProviders;
	struct PlaylistFrontEndData FrontEndData;
	Unknown LoadedOptionValues;
	class UClass* CurrentPlaylist;
	class UClass* OptionsList;
	class UClass* AcceptButton;
	class UClass* TextBlock_HeaderText;
	class UClass* TextBlock_TitleText;
	class UClass* TextBlock_DescriptionText;
	class UClass* Image_DisplayImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeMessageKnobsDialog : public FortMatchmakingKnobsModal
{
public:
	class UClass* LegacyEntryWidgetClass;
	class UClass* AdvancedEntryWidgetClass;
	TArray<struct FortItemListOptionBucket> ItemListOptionBuckets;
	struct FScriptMulticastDelegate OnFilterListCompleted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeMiniGameInfo : public UserWidget
{
public:
	struct FScriptMulticastDelegate OnSupportCreator;
	struct FScriptMulticastDelegate OnToggleDetails;
	class UClass* Text_Name;
	class UClass* Text_CreatorName;
	class UClass* Text_SupportCode;
	class UClass* Text_Bullet1;
	class UClass* Text_Bullet2;
	class UClass* Text_Bullet3;
	int SizeFont_Bullet_Mobile;
	class UClass* PanelInputComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeMoreInfoPanel : public FortActivatablePanel
{
public:
	bool bShouldClearName;
	class UClass* FilteredTextEntryWidget_Name;
	class UClass* FilteredTextEntryWidget_0;
	class UClass* FilteredTextEntryWidget_1;
	class UClass* FilteredTextEntryWidget_2;
	class UClass* Button_Apply;
	class UClass* Button_Preview;
	class UClass* Button_Clear;
	class UClass* Hbox_SetPhoto;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeOptionsDisplay : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeSpawnDisplay : public FortActivatablePanel
{
public:
	TArray<struct RarityArray> ItemArray;
	TArray<class UClass*> AllItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativePermissionOptions : public FortMatchmakingKnobsModal
{
public:
	EFortCreativePlotPermission CurrentPermissionsEnum;
	TArray<struct FortCreativeWhitelistUserEntry> WhitelistedUsers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativePlayerInfoIndicator : public FortActorIndicatorWidget
{
public:
	struct Vector RelativeLocationWhileDBNO;
	struct Vector RelativeLocationWhileAlive;
	struct Vector2D ScreenSpaceOffsetToScale;
	TArray<EFortMinigameState> ValidMinigameTypesToShowIndicator;
	bool bKeepTargetUntilNewValidTarget;
	class UClass* Image_HealthBar;
	class UClass* Image_ShieldBar;
	class UClass* Image_DBNOBar;
	class UClass* TrackedPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativePlayOptions : public FortActivatablePanel
{
public:
	class UClass* View_CreativeOptionsServers;
	class UClass* Button_Play;
	class UClass* Button_Cancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyKnobEntryBase : public CommonButtonLegacy
{
public:
	struct FScriptMulticastDelegate OnKnobEntryEditWidgetStateChanged;
	class UClass* EntryEditWidget;
	class UClass* FallbackEditWidget;
	class UClass* FallbackUserOptionEditWidget;
	class UClass* FallbackStringUserOptionEditWidget;
	class UClass* FallbackMusicUserOptionEditWidget;
	class UClass* FallbackMessageComponentEditWidget;
	class UClass* FallbackDeviceButtonComponentEditWidget;
	class UClass* PanelWidget_SummaryBox;
	class UClass* PanelWidget_ContentBox;
	class UClass* TextBlock_EntryDisplayName;
	class UClass* TextBlock_EntryDisplayedValue;
	class UClass* TextBlock_EntryDisplayedDebugData;
	class UClass* Switcher_Content;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyEditWidgetBase : public UserWidget
{
public:
	TArray<struct FText> AvailableStepperValueLabels;
	int CurrentIndexInStepperValue;
	class UClass* Button_Collapse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyEditWidgetUserOptionBase : public CreativePropertyEditWidgetBase
{
public:
	class UClass* OptionDataObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyEditWidgetStringBase : public CreativePropertyEditWidgetUserOptionBase
{
public:
	class UClass* FilteredTextEntry_Widget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyEditWidgetMusicTrackBase : public CreativePropertyEditWidgetUserOptionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyEditWidgetMessageComponentBase : public CreativePropertyEditWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreativePropertyEditWidgetDeviceButtonComponentBase : public CreativePropertyEditWidgetBase
{
public:
	class UClass* DeviceButtonComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativePublishModal : public FortActivatablePanel
{
public:
	int DescriptionEntryCharLimit;
	int NameEntryCharLimit;
	bool bFakePublishingFlow;
	bool DescriptionTextOkForSubmit;
	bool NameTextOkForSubmit;
	int NumTagsRequiredToPublish;
	class UClass* Container_YoutubeStuff;
	class UClass* Switcher_Content;
	class UClass* Text_IslandCode;
	class UClass* Text_ErrorInNameField;
	class UClass* Text_ErrorInDescriptionField;
	class UClass* Text_ErrorInRequiredTags;
	class UClass* Text_ErrorInIslandBudget;
	class UClass* Text_ErrorOnPublish;
	class UClass* Text_CharCountTitle;
	class UClass* Text_CharCountDesc;
	class UClass* Text_IslandPublishedSuccess;
	class UClass* Button_Submit;
	class UClass* Button_CopyCode;
	class UClass* CheckBox_ClearAllPlayersData;
	class UClass* EditText_Name;
	class UClass* MultiLineEditText_Description;
	class UClass* EditText_Description;
	class UClass* EditText_YoutubeVideoId;
	class UClass* VolumeToPublish;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativePublishOptions : public FortActivatablePanel
{
public:
	EFortCreativePlotPermission CurrentPermissionsEnum;
	TArray<struct FortCreativeWhitelistUserEntry> WhitelistedUsers;
	class UClass* IslandRestoreBox;
	class UClass* CheckpointBox;
	class UClass* Switcher_IslandPublish;
	class UClass* HorizontalBox_IslandPublish;
	class UClass* HorizontalBox_HowToPublish;
	class UClass* SaveComponent;
	class UClass* Text_RestoreTime;
	class UClass* Text_OnCooldown;
	class UClass* Button_Backup;
	class UClass* Button_Restore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeQuestHUDWidget : public MinigameWidgetBase
{
public:
	class UClass* LastKnownQuestComponent;
	class UClass* Text_CurrentAmount;
	class UClass* Text_TargetAmount;
	class UClass* Text_QuestName;
	class UClass* Text_QuestDetails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeServerOptionTile : public CommonButtonLegacy
{
public:
	class UClass* Text_JoinServerType;
	class UClass* Text_JoinServerPlayerCount;
	class UClass* Server;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCreativeServerInfo : public UObject
{
public:
	int CurrentPlayerCount;
	int MaxPlayerCount;
	TArray<struct FString> MatchFriendsList;
	struct FString OwnerName;
	class UClass* FriendInMatch;
	EFortCreativeServerPrivacySetting PrivacySetting;
	bool IsNewServer;
	struct FText ServerTypeText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeServersView : public CommonUserWidget
{
public:
	int MaxSuggestedServers;
	bool bShowDebugServers;
	class UClass* TileItemClass;
	class UClass* ServerButtonGroup;
	class UClass* ScrollBox_ServerList;
	TArray<class UClass*> ServerList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeSettingsFlow : public FortActivatablePanel
{
public:
	class UClass* TabButtonGroup;
	class UClass* IslandName;
	class UClass* PublishedIslandCode;
	class UClass* IslandBulletOne;
	class UClass* BulletPointImageOne;
	class UClass* IslandBulletTwo;
	class UClass* BulletPointImageTwo;
	class UClass* IslandBulletThree;
	class UClass* BulletPointImageThree;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeSimplePlayerMetricInformationWidget : public FortCreativeVolumeWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeTabGroup : public UserWidget
{
public:
	struct FScriptMulticastDelegate OnCurrentTabChanged;
	class UClass* TabButtonClass;
	class UClass* TabOnHoveredSound;
	class UClass* TabOnPressedSound;
	class UClass* TabButtonStyle;
	class UClass* Tab_Box;
	class UClass* TabGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeTeamSelectWidget : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeVolumePerformanceMetricWidget : public FortCreativeVolumeWidget
{
public:
	struct VolumePerformanceMetrics LastVolumePerformanceMetrics;
	EFortBudgetCategory VolumePerformanceMetricCategory;
	int LastCostPreviewOfSelectedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreditsScreen : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCustomMatchmakingKeyModal : public FortActivatablePanel
{
public:
	class UClass* EditableText_MatchmakingKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDailyChallengeStickyNoteWidget : public CommonActivatableWidget
{
public:
	int MyDailyChallengeIndex;
	class UClass* Button_RerollChallenge;
	class UClass* RichText_ChallengeDesc;
	class UClass* RichText_Progress;
	class UClass* SizeBox_ContentEnforcedSize;
	class UClass* RichText_NextChallengeTime;
	class UClass* ConfirmationWindowClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDailyRewards : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDailyRewardsItem : public CommonUserWidget
{
public:
	struct FortDailyRewardsItemData ItemData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDailyRewardsSchedule : public CommonUserWidget
{
public:
	struct FortDailyRewardsScheduleData ScheduleData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderConfigPanel : public CommonActivatablePanelLegacy
{
public:
	Unknown SelectedDefenderItem;
	Unknown SelectedWeaponItem;
	Unknown SelectedAmmoItem;
	int SelectedAmmoQuantity;
	Unknown DefenderTrap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemTileButton : public CommonButtonLegacy
{
public:
	class UClass* ItemWidget;
	Unknown Item;
	EFortItemCardSize ItemCardSize;
	bool IsRewardCard;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderItemTileButton : public FortItemTileButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemTileView : public CommonTileView
{
public:
	bool bShouldShowNullItemListEntry;
	bool bAutomaticallyLoadItemDetails;
	EItemListViewDisplayType DisplayType;
	bool bShouldOverrideChildItemWidgetCardSize;
	EFortItemCardSize ChildItemWidgetCardSizeOverride;
	float ChildCosmeticItemCardWidthOverride;
	struct FScriptMulticastDelegate OnInventoryUpdatedEvent;
	TArray<Unknown> CustomItemList;
	TArray<Unknown> ItemsForListView;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderItemTileView : public FortItemTileView
{
public:
	Unknown DefenderConfigPanel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderSlotButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderSlotItemPicker : public FortItemPickerBase
{
public:
	EFortDefenderSlotType DefenderSlotType;
	TArray<EInventoryContentSortType> SortTypesList;
	EInventoryContentSortType CurrentSortType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderSlotView : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderSlotWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSelectorButton : public CommonButtonLegacy
{
public:
	class UClass* SquadManagementScreenType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDefenderSquadSelectorButton : public FortSquadSelectorButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreFrontOfferDetailsWidgetBase : public FortActivatablePanelWithItemPreview
{
public:
	struct DataTableRowHandle EnterViewModeInputActionRowHandle;
	bool IsInItemViewMode;
	bool ShouldAllowItemViewModeAction;
	bool bImmediatelyPurchased;
	TArray<class UClass*> PagedItems;
	class UClass* OfferData;
	class UClass* Picker_VariantSelector;
	class UClass* TextUndoAvailability;
	class UClass* Text_UndoBottomBarWarning;
	class UClass* Button_Undo;
	class UClass* Text_CosmeticWarning;
	class UClass* ProgressModalClass;
	class UClass* PurchaseModalClass;
	class UClass* ProgressModal;
	class UClass* ItemToRepresent;
	class UClass* SecondaryItemDefinition;
	float TimeBetweenVariantsRestart;
	float TimeBetweenVariants;
	bool bShowRefundWarningWhileMatchmaking;
	bool bShowRefundWarningWhileInZone;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDirectAcquisitionOfferDetailsWidget : public FortStoreFrontOfferDetailsWidgetBase
{
public:
	class UClass* VoteFeedbackClass;
	class UClass* Item_InfoHeader;
	class UClass* Button_CastVote;
	class UClass* FlameCounter;
	class UClass* AvailableSparksWidget;
	class UClass* ComVoteFeedbackContainer;
	class UClass* Button_SendGift;
	class UClass* Switcher_MtxAndVote;
	class UClass* Com_ThanksForVotingMessage;
	class UClass* OfferNavigator_ArrowNavigation;
	class UClass* StorePopup_Details;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreFrontOfferWidgetBase : public FortStoreFrontTileWidgetBase
{
public:
	TArray<class UClass*> GroupedOffers;
	class UClass* MainImageLoadGuard;
	class UClass* ThumbnailRendererClass;
	class UClass* OfferData;
	class UClass* ThumbnailRenderer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDirectAcquisitionOfferWidget : public FortStoreFrontOfferWidgetBase
{
public:
	bool bIsBattlePass;
	class UClass* ItemShopDetailsScreenClass;
	class UClass* NoPreviewItemShopDetailsScreenClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMtxStoreRootBase : public FortActivatablePanel
{
public:
	class UClass* MtxStoreSelectionWidget;
	class UClass* MtxStoreSelectionClass;
	TArray<class UClass*> AcquisitionOfferData;
	TArray<struct FString> StorefrontNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDirectAcquisitionWidgetBase : public FortMtxStoreRootBase
{
public:
	bool bShowIneligible;
	class UClass* FirstOfferGenerated;
	class UClass* HorizontalBox_LargeTile;
	class UClass* GridPanel_SmallTile;
	class UClass* HorizontalBox_ReorderedItems;
	class UClass* VerticalBox_FeatureItems;
	class UClass* VerticalBox_DailyItems;
	class UClass* ScaleBox_Main;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDisableSidekickListEntry : public SocialListInteractableEntryBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDisplayNameWidget : public CommonActivatablePanelLegacy
{
public:
	struct FText ButtonDisableReason;
	struct FText NameTakenText;
	struct FText NameInvalidFormatText;
	struct FText NameTooShortText;
	class UClass* Button_Enter;
	class UClass* Text_Error;
	class UClass* EditText_DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDivisionDetailsScreen : public FortActivatablePanel
{
public:
	class UClass* DetailsInfo;
	class UClass* PayoutInfo;
	class UClass* Text_Title;
	class UClass* WidgetSwitcher_MainContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDivisionLobbyPanel : public FortShowdownDivisionEventView
{
public:
	struct DataTableRowHandle EventDetailsAction;
	class UClass* Image_CurrentDivisionFancy;
	class UClass* Image_CurrentDivisionPlain;
	class UClass* Image_NextDivision;
	class UClass* Button_EventDetails;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPageDotItem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDottedPagination : public UserWidget
{
public:
	bool bUseWrapping;
	class UClass* ListView_Dots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDualBladeMenu : public CommonActivatableWidget
{
public:
	struct UIActionTag OpenSocialPanelActionTag;
	struct UIActionTag OpenMainMenuActionTag;
	struct UIActionTag SwitchProfileActionTag;
	struct DataTableRowHandle TriggeringSocialPanelInputAction;
	struct DataTableRowHandle TriggeringMainMenuInputAction;
	struct DataTableRowHandle SwitchProfileInputAction;
	class UClass* BladeMenu_SocialPanel;
	class UClass* BladeMenu_MainMenu;
	class UClass* Button_BackBoard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDynamicEntryBox : public DynamicEntryBox
{
public:
	int MaximumEntries;
	EDynamicEntryPatternDirection PatternDirection;
	TArray<float> RenderOpacityPattern;
	TArray<struct WidgetTransform> RenderTransformPattern;
	TArray<struct Vector2D> RenderTransformPivotPattern;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDynamicHUDPlayerProxy : public ULocalPlayerSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDynamicHUDWorldProxy : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEliminationScreen : public FortPostGameScreen
{
public:
	float ScreenDuration;
	bool bShouldAutoAdvance;
	class UClass* Widget_KillerInfo;
	class UClass* Button_Continue;
	class UClass* Button_ReportPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEmotePicker : public CommonActivatableWidget
{
public:
	Unknown CategoryIcons;
	TArray<struct FortPickerSubCategoryIdentifier> SubCategoryIdentifiers;
	struct PrimaryContentSetup PrimaryContentSetup;
	TArray<struct DataTableRowHandle> QuickSelectBindings;
	struct DataTableRowHandle FrontEndOpenAction;
	struct DataTableRowHandle PreviousWheelInputAction;
	struct DataTableRowHandle NextWheelInputAction;
	struct DataTableRowHandle PreviousCategoryInputAction;
	struct DataTableRowHandle NextCategoryInputAction;
	class UClass* Button_PreviousWheel;
	class UClass* Button_NextWheel;
	class UClass* Button_CategoryMinusOne;
	class UClass* Button_CategoryMinusTwo;
	class UClass* Button_CategoryPlusOne;
	class UClass* Button_CategoryPlusTwo;
	class UClass* Text_ItemName;
	class UClass* Text_WheelLabel;
	class UClass* Keybind_Confirm;
	class UClass* Button_EmoteFrontend;
	class UClass* Button_Cancel;
	class UClass* Overlay_InGameEmoteBinding;
	class UClass* Image_CategoryIcon;
	class UClass* PickerOverlay_EmoteWheel;
	class UClass* VisibilitySwitcher_Pagination;
	class UClass* DottedPagination_Category;
	class UClass* Text_Pagination;
	class UClass* Text_ItemDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortErrorWindow : public FortActivatablePanel
{
public:
	class UClass* CommonText_Title;
	class UClass* CommonText_MainError;
	class UClass* ScrollBox_MainError;
	class UClass* TextBlock_MainErrorCode;
	class UClass* TextBlock_OverflowErrorCodes;
	class UClass* WidgetSwitcher_SeverityImage;
	class UClass* Image_Mild;
	class UClass* Image_Severe;
	class UClass* CommonButton_Close;
	TArray<struct FText> MildTitles;
	TArray<struct FText> SevereTitles;
	uint32_t MaxOverflowErrorCodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEulaTab : public CommonActivatableWidget
{
public:
	struct FString EULAKeyToShow;
	class UClass* Text_EULA;
	class UClass* Switcher_TextSpinner;
	class UClass* ScrollBox_EULAText;
	class UClass* Image_Spinner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEulaWidget : public CommonActivatablePanelLegacy
{
public:
	class UClass* Text_Title;
	class UClass* Text_Description;
	class UClass* ScrollBox_License;
	class UClass* Button_Confirm;
	class UClass* Button_Decline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventDateTimeTextBlock : public CommonTextBlock
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLeaderboardScreen : public FortCompetitiveLeaderboardScreen
{
public:
	ETournamentDisplayType EventDisplayType;
	struct DataTableRowHandle TabViewLeftAction;
	struct DataTableRowHandle TabViewRightAction;
	class UClass* EntryBox_ViewButtons;
	class UClass* ActionWidget_TabLeft;
	class UClass* ActionWidget_TabRight;
	class UClass* Button_ViewLiveGames;
	class UClass* ViewButtonGroup;
	Unknown TabButtonToTournamentIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLevelNavigationActorIndicator : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialFrontend : public CommonActivatableWidget
{
public:
	class UClass* Lazy_ActiveScreen;
	class UClass* NavActor_Details;
	struct GameplayTag StartingActiveCamera;
	struct GameplayTag ChallengesCameraTag;
	struct DataTableRowHandle SelectObjectInputAction;
	class UClass* EventGameStateComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventLevelScreen : public AthenaSpatialFrontend
{
public:
	class UClass* EventLevelScreenData;
	class UClass* CinematicMovieWidgetInstance;
	struct TimerHandle StreamedVideoOpeningTimer;
	bool bCollapseTopbar;
	bool bCollapseBottombar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventLevelData : public UDataAsset
{
public:
	struct FString EventLevelStoreFrontName;
	struct TSoftClassPtr<UObject> EventLevelRewards;
	class UClass* CinematicMovieWidget;
	class UClass* ElectraMediaSource;
	class UClass* StreamedMediaPlayer;
	struct FName CinematicVideoName;
	struct DataTableRowHandle InteractionHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventPlayerStatProfileSelectorEntryData : public UObject
{
public:
	struct FString AccountId;
	struct FString DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventPlayerStatProfileSelectorEntry : public CommonButtonLegacy
{
public:
	class UClass* PlayerName;
	class UClass* FlagImage;
	class UClass* ProfileData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventPlayerStatProfileSelector : public FortActivatablePanel
{
public:
	class UClass* ProfileList;
	class UClass* HoveredName;
	class UClass* StatsScreenClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortEventTeamMatchHistoryEntryData : public UObject
{
public:
	int MatchNumber;
	int Eliminations;
	int Placement;
	int SecondsAlive;
	bool bIsLive;
	bool bIsReplayAvailable;
	struct FString SessionId;
	TArray<struct FString> TeamAccountIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventTeamMatchHistoryEntry : public CommonButtonLegacy
{
public:
	class UClass* Text_MatchNumber;
	class UClass* Text_TimeAlive;
	class UClass* Text_Eliminations;
	class UClass* Text_Placement;
	class UClass* Overlay_OnlineStatus;
	class UClass* Border_InteractionContent;
	class UClass* MatchData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEventTeamMatchHistoryModal : public FortActivatablePanel
{
public:
	class UClass* ListView_MatchHistory;
	class UClass* Text_TeamNames;
	class UClass* LeaderboardEntryData;
	class UClass* LastClickedMatchHistoryEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSimpleItemConditionIconIndicator : public FortMultiSizeImage
{
public:
	bool bShouldCollapseWhenConditionIsFalse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEvolveIndicator : public FortSimpleItemConditionIconIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionBuildSquadWidget : public CommonActivatablePanelLegacy
{
public:
	Unknown Item;
	struct FName CurrentSquadId;
	class UClass* ExpeditionSquadSlotsView;
	class UClass* ExpeditionSquadSlotDetails;
	class UClass* ExpeditionSquadSlotPicker;
	class UClass* ItemViewContext_ExpeditionSlotsView;
	class UClass* ItemViewContext_ExpeditionSlotItemPicker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionDetailsWidget : public CommonUserWidget
{
public:
	Unknown Item;
	class UClass* ExpeditionSquadSlotsView;
	struct FName CurrentSquadId;
	class UClass* ItemViewContext_ExpeditionSlotsView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionExpiresWidget : public CommonUserWidget
{
public:
	Unknown Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionListItemWidget : public CommonButtonLegacy
{
public:
	Unknown Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionListViewWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnExpeditionSelected;
	struct FScriptMulticastDelegate OnExpeditionListViewRefreshed;
	class UClass* ExpeditionListView;
	struct FName CurrentTabNameId;
	EFortExpeditionListSort SortType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionMasterWidget : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionOverviewWidget : public CommonUserWidget
{
public:
	class UClass* TabButtonType;
	TArray<struct ExpeditionTabInfo> TabListRegistrationInfo;
	class UClass* ExpeditionTabList;
	class UClass* ExpeditionListView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionPickVehicleWidget : public CommonActivatablePanelLegacy
{
public:
	Unknown Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionReturnsWidget : public CommonUserWidget
{
public:
	Unknown Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionRewardsWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnAllExpeditionsCollected;
	class UClass* RewardsTileView;
	bool bPendingCollection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionSummaryWidget : public CommonUserWidget
{
public:
	int AvailableExpeditions;
	int CompletedExpeditions;
	int LandVehiclesTotal;
	int LandVehiclesAvailable;
	int AirVehiclesTotal;
	int AirVehiclesAvailable;
	int SeaVehiclesTotal;
	int SeaVehiclesAvailable;
	int LandExpeditionsTotal;
	int LandExpeditionsAvailable;
	int AirExpeditionsTotal;
	int AirExpeditionsAvailable;
	int SeaExpeditionsTotal;
	int SeaExpeditionsAvailable;
	TArray<class UClass*> InProgressExpeditions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortExpeditionUtilities : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortExpeditionVehicleTileItemWidget : public CommonButtonLegacy
{
public:
	Unknown SquadId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFavoriteIndicator : public FortSimpleItemConditionIconIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestUpdateEntry : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate FinishedDisplayingQuests;
	class UClass* ObjectivesBox;
	int NumberOfObjectivesToDisplayAtTheSameTime;
	int NumberOfWidgetsToPreCreateWhenDisplayingAllObjectives;
	class UClass* QuestItem;
	class UClass* SubEntryClass;
	TArray<class UClass*> QuestObjectiveEntryPool;
	TArray<class UClass*> AvailableQuestObjectiveEntryArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFeatUpdateEntry : public FortQuestUpdateEntry
{
public:
	class UClass* Image_QuestIcon;
	class UClass* Text_QuestName;
	class UClass* Text_QuestDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFeatureUnlockWidget : public FortActivatablePanel
{
public:
	class UClass* MediaSwitcher;
	class UClass* VideoContent;
	class UClass* ImageContent;
	class UClass* VideoWidget;
	class UClass* ImageWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLazyImage : public CommonLazyImage
{
public:
	bool bApplyDropShadow;
	struct LinearColor ShadowColorAndOpacity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFlagImage : public FortLazyImage
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFlagSelectionModal : public FortActivatablePanel
{
public:
	class UClass* SelectedFlag;
	float FlagConfirmSpinnerDelay;
	class UClass* Text_Confirmation;
	class UClass* Text_CurrentFlagRegionName;
	class UClass* CurrentFlagImage;
	class UClass* ConfirmationCurrentFlagImage;
	class UClass* ConfirmationTargetFlagImage;
	class UClass* TileView_FlagOptions;
	class UClass* Text_FlagRegionName;
	class UClass* Text_ChangeRegionBlock;
	class UClass* Button_Change;
	class UClass* Button_ConfirmationCancel;
	class UClass* Button_ConfirmationConfirm;
	class UClass* Button_Cancel;
	class UClass* Button_CloseMobile;
	class UClass* Image_Spinner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFlagObject : public UObject
{
public:
	struct FString RegionId;
	struct FText DisplayName;
	struct TSoftClassPtr<UObject> FlagTexture;
	bool bSelected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFlagTileButton : public CommonButtonLegacy
{
public:
	struct FName IconParamName;
	class UClass* SourceObject;
	class UClass* FlagImage;
	class UClass* Image_Active;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantEditorWidgetBase : public CommonUserWidget
{
public:
	class UClass* LogicalOuter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFloatSliderVariantPicker : public FortVariantEditorWidgetBase
{
public:
	float CommitDelay;
	class UClass* FloatVariant;
	class UClass* Text_VariantName;
	class UClass* Text_Value;
	class UClass* Slider_Value;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileShareButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFriendCodeEntryBase : public FortMobileShareButton
{
public:
	struct FriendCode FriendCode;
	class UClass* LinkDataTextBox;
	struct FString DebugName;
	int LengthOfCode;
	struct FText SharedMessage;
	struct FText SharedMessageNoInvite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFriendCodeListBase : public FortActivatablePanel
{
public:
	TArray<struct FriendCode> BacchusFriendCodes;
	class UClass* FriendCodeEntryClass;
	class UClass* EntryBox_FriendCodes;
	class UClass* WarningText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFriendLinkPanel : public FortActivatablePanel
{
public:
	class UClass* Button_ShareButton;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFriendSubscriptionNudge : public UFortUINotification
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortToastWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFriendSubscriptionToastWidget : public FortToastWidget
{
public:
	class UClass* Anim_SimplePopup;
	Unknown CachedSubscriptionNudgeInputComponent;
	float DisplayTime;
	float HoldDuration;
	uint32_t DebounceHours;
	class UClass* Text_Nudge;
	class UClass* Button_Cursor;
	class UClass* Button_Hold;
	class UClass* Switcher_InputButtons;
	class UClass* Action_HoldKeybindWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFrontEndContext : public UFortLocalPlayerSubsystem
{
public:
	struct FScriptMulticastDelegate OnLobbyPlayerGadgetsClicked;
	struct FScriptMulticastDelegate OnRadialPickerStatusChanged;
	struct FScriptMulticastDelegate OnFrontEndCameraChanged;
	struct FScriptMulticastDelegate OnTheaterPinClicked;
	struct FScriptMulticastDelegate OnSetPreviewedSceneTheater;
	struct FScriptMulticastDelegate OnTheaterSelected;
	struct FScriptMulticastDelegate OnTheaterDataChanged;
	struct FScriptMulticastDelegate OnTheaterTileClicked;
	struct FScriptMulticastDelegate OnTheaterTileDoubleClicked;
	struct FScriptMulticastDelegate OnTheaterTileFocused;
	struct FScriptMulticastDelegate OnTheaterTileUnfocused;
	struct FScriptMulticastDelegate OnShouldShowPhoenixDisplayChanged;
	struct FScriptMulticastDelegate OnVaultItemViewed;
	struct FScriptMulticastDelegate OnVaultItemsViewed;
	struct FScriptMulticastDelegate OnSeasonTabVariantPreviewInfoChanged;
	struct FScriptMulticastDelegate OnPlayerLoggedOut;
	struct FScriptMulticastDelegate OnMainTabSelected;
	struct FScriptMulticastDelegate OnSocialImportClosed;
	struct FortFrontEndFeatureStruct Features;
	struct FString OfferIdToFocusInItemShop;
	struct UnlockableVariantPreviewInfo SeasonTabVariantPreviewInfo;
	class UClass* ServerBrowserHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortFrontendLevelScriptActor : public AFortLevelScriptActor
{
public:
	struct TSoftClassPtr<UObject> CommanderPreviewPedestalActor;
	struct TSoftClassPtr<UObject> HeroLoadoutPreviewPedestalActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGadgetsWidgetBase : public CommonUserWidget
{
public:
	class UClass* GadgetIcon1;
	class UClass* GadgetIcon2;
	TArray<class UClass*> Gadgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameCheatsRegistry : public UFortSettingRegistry
{
public:
	TArray<struct CheatMenuSection> SeasonalSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameEventNotifications : public FortHUDElementWidget
{
public:
	class UClass* DefaultEntryClass;
	bool bHasPrioritizedWidgetFocus;
	bool bShowFeatQuests;
	bool bFeatShowNonVisibleObjectives;
	class UClass* ActiveWidget;
	TArray<class UClass*> WidgetQueue;
	class UClass* NotificationUpdatesBox;
	TArray<struct NotificationWidgetClass> NotificationClassPoolData;
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGamePadCustomActionSelectorPanel : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGamepadCustomListItem : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGamePadInfoSelectorPanel : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOptionsTab : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate OnTabSettingChanged;
	struct FScriptMulticastDelegate OnTabActivated;
	struct FScriptMulticastDelegate OnTabDeactivated;
	ESettingTab TabType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInputOptions : public FortOptionsTab
{
public:
	TArray<class UClass*> InputData;
	class UClass* InputCommonListView;
	class UClass* TooltipDisplay;
	class UClass* InputCategoryWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGamepadInputOptions : public FortInputOptions
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGamepadMappingInfo : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGameSettingRegistry : public UFortSettingRegistry
{
public:
	class UClass* VideoSettings;
	class UClass* AudioSettings;
	class UClass* GameplaySettings;
	class UClass* MouseAndKeyboardSettings;
	class UClass* MouseAndKeyboardBindings;
	class UClass* ControllerSettings;
	class UClass* ControllerButtonMappingSettings;
	class UClass* TouchAndMotionSettings;
	class UClass* HudSettings;
	class UClass* AccountSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftBoxButton : public CommonButtonLegacy
{
public:
	class UClass* GiftBoxDefinition;
	class UClass* Image_Gift;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingScreen : public FortItemPreviewScreen
{
public:
	struct DataTableRowHandle GiftingPolicyAction;
	struct DataTableRowHandle BackAction;
	struct FText RegularGiftingPolicy;
	struct FText BattlePassGiftingPolicy;
	class UClass* TabButtonGroup;
	class UClass* OfferInfo;
	class UClass* RequiredOfferInfo;
	TArray<class UClass*> UserDetailArray;
	class UClass* LocalPlayerDetails;
	TArray<struct GiftingErrorText> GiftingErrorMessages;
	struct GiftingErrorText GiftingErrorMessageDefault;
	TArray<class UClass*> SelectedUsers;
	class UClass* Text_ItemName;
	class UClass* Image_RecipientCurrency;
	class UClass* Text_Price;
	class UClass* Text_GiftCount;
	class UClass* Button_Continue;
	class UClass* Button_GetVBucks;
	class UClass* Button_Send;
	class UClass* Button_TabRecipients;
	class UClass* Button_MobileClose;
	class UClass* ListView_ChosenRecipients;
	class UClass* Activatable_PersonalizeTab;
	class UClass* Activatable_RecipientsTab;
	class UClass* VBox_Recipients;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUserDetails : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingUserItem : public CommonButtonLegacy
{
public:
	class UClass* ItemData;
	class UClass* Text_DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftRecipientsTab : public CommonActivatableWidget
{
public:
	class UClass* Text_FriendCount;
	class UClass* ListView_Friends;
	class UClass* OfferInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGlobalActionDetailsDataSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResourceCountWidget : public FortHUDElementWidget
{
public:
	class UClass* Text_ResourceCount;
	class UClass* ResourceItemDefinition;
	class UClass* Text_ResourceName;
	class UClass* LazyImage_ResourceIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGlobalCashWidget : public FortResourceCountWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGlobalSeasonResourceWidget : public CommonUserWidget
{
public:
	class UClass* Text_BattleStarsAmount;
	class UClass* Text_StylePointsAmount;
	class UClass* Border_StylePointsRewardsTag;
	class UClass* Border_BattleStarsRewardsTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGlobalUIContext : public UFortLocalPlayerSubsystem
{
public:
	struct FScriptMulticastDelegate SubGameChanged;
	bool bShouldSubgameSelectStartOnCampaignUpsell;
	struct FScriptMulticastDelegate OnKeybindsChanged;
	struct FScriptMulticastDelegate OnInputActionHoldStarted;
	struct FScriptMulticastDelegate OnInputActionHoldStopped;
	struct FScriptMulticastDelegate OnRefreshHUDForRespawn;
	struct FScriptMulticastDelegate OnEnterVehicleDriver;
	struct FScriptMulticastDelegate OnEnterVehiclePassenger;
	struct FScriptMulticastDelegate OnExitVehicle;
	struct FScriptMulticastDelegate OnScoreReportChanged;
	struct FScriptMulticastDelegate OnLoadingScreenVisibilityChanged;
	struct FScriptMulticastDelegate OnLocalPlayerControllerConnectionChanged;
	Unknown MessageManagersByName;
	Unknown Features;
	class UClass* AthenaMatchReadyNotificationWidget;
	class UClass* ActiveContextSpecificHelpItem;
	bool bIsUIVisible;
	bool bShowRateWidget;
	Unknown IsAllContentInstalledCacheMap;
	struct FText FeedbackTitle;
	struct DateTime FirstLoginTime;
	struct TimerHandle AddictionMsgTimer;
	struct UniqueNetIdRepl CurrentLocalPlayerUniqueNetId;
	bool bQuestMapTabRequested;
	struct GameplayTag QuestMapChallengeTabRequested;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGridWidgetBase : public ContentWidget
{
public:
	class UClass* ClearWidgetType;
	float TileWidth;
	float TileHeight;
	int TilesAcross;
	int TilesDown;
	bool bShrinkToFit;
	float PeekOverflowTilePercentage;
	struct Margin TilePadding;
	struct SlateBrush GridBackground;
	struct Margin GridBackgroundPadding;
	TArray<class UClass*> DataProvider;
	struct FScriptMulticastDelegate OnTileGenerated;
	struct FScriptMulticastDelegate OnTileClicked;
	struct FScriptMulticastDelegate OnMouseEnterTile;
	struct FScriptMulticastDelegate OnMouseLeaveTile;
	class UClass* TileWidgetType;
	EGridSortKind SortKind;
	bool bReversed;
	struct FDelegate GetSortKeyFor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGridPickerButton : public FortGridWidgetBase
{
public:
	EMenuPlacement GridPlacement;
	class UClass* GridWidget;
	bool bCloseOnTileClicked;
	struct FDelegate GridWidgetDelegate;
	struct FScriptMulticastDelegate OnGridPickerOpenChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGridPickerGrid : public FortUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGridPickerTile : public FortUserWidget
{
public:
	class UClass* Data;
	class UClass* Owner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGridWidget : public FortGridWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHaveInviteSelect : public CommonActivatablePanelLegacy
{
public:
	class UClass* Button_Yes;
	class UClass* Button_No;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHelpTreeItemBase : public CommonButtonLegacy
{
public:
	class UClass* HelpItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroAbilitiesAndGadgetsBase : public FortTeamMemberEntryBase
{
public:
	bool bHideAbilities;
	bool bHideGadgets;
	int AssignedMemberIndex;
	class UClass* HorizontalAbilitiesList;
	class UClass* GadgetsWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDetailElementWidget : public CommonUserWidget
{
public:
	Unknown ItemToDetail;
	Unknown ItemToCompareWith;
	bool bShouldPreviewUpgradingItem;
	int UpgradeLevelDelta;
	Unknown ItemViewContext;
	EFortItemInspectionMode CurrentInspectMode;
	int QuantityOverride;
	bool bIsUpdatingSuspended;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutAbilitiesDetailPanel : public FortItemDetailElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutGadgetPicker : public FortItemPickerBase
{
public:
	Unknown TargetLoadoutItem;
	int TargetSlotIndex;
	TArray<class UClass*> TemporaryGadgetItemInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutGadgetTileBase : public CommonUserWidget
{
public:
	class UClass* Text_GadgetName;
	class UClass* Image_Icon;
	class UClass* RichText_Description;
	class UClass* GadgetToRepresent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutHeroPicker : public FortItemPickerBase
{
public:
	class UClass* ExternalFilterTabList;
	Unknown TargetLoadoutItem;
	struct FName TargetSlotName;
	class UClass* FilterTabButtonType;
	Unknown TabButtonLabelInfoMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHeroLoadoutHeroPickerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutInGameScreenBase : public CommonActivatablePanelLegacy
{
public:
	TArray<struct FortInGamePerkDisplayData> PerksDisplayData;
	class UClass* TileClass;
	class UClass* ScrollBox_Content;
	class UClass* ItemDetailsHostPanel_Header;
	class UClass* GridPanel_Perks;
	class UClass* GadgetTile_Gadget1;
	class UClass* GadgetTile_Gadget2;
	TArray<class UClass*> GadgetTiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPlacementActor : public AActor
{
public:
	class UClass* WidgetComponent_LoadingIndicator;
	bool bIsActorHovered;
	class UClass* CurrentPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewPedestal : public AFortItemPlacementActor
{
public:
	Unknown ContextualPlayerController;
	class UClass* TemporaryHeroInstance;
	TArray<class UClass*> AdditionalCharacterParts;
	class UClass* WeaponPlacementComponent;
	class UClass* PreviewActorComponent;
	class UClass* PreviewStaticMeshComponent;
	class UClass* PreviewSkelMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHeroLoadoutPedestal : public AFortItemPreviewPedestal
{
public:
	struct FName SlotName;
	Unknown HeroLoadout;
	bool bIsSlotFocusedInUI;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutPerkTileBase : public CommonUserWidget
{
public:
	EFortBrushSize BrushSize;
	bool bShowSummaryDescription;
	class UClass* Text_PerkName;
	class UClass* Text_Description;
	class UClass* Image_PerkIcon;
	class UClass* Hbox_PerkDetails;
	struct FText ActiveText;
	struct FText InactiveText;
	float InactiveOpacity;
	float ActiveOpacity;
	class UClass* AbilityKit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutScreenBase : public FortActivatablePanelWithItemPreview
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutSlotButton : public CommonButtonLegacy
{
public:
	struct FName SlotName;
	int SlotIndex;
	EHeroLoadoutSlotType SlotType;
	struct FScriptMulticastDelegate OnRequestChangeHero;
	struct FScriptMulticastDelegate OnContextMenuOpenChanged;
	class UClass* ContextMenuAnchor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutSwitcherBase : public CommonUserWidget
{
public:
	class UClass* HBox_LoadoutPagingContainer;
	class UClass* HeroLoadoutCommanderDetailsHostPanel;
	class UClass* HeroAbilitiesAndGadgets;
	class UClass* TextBlock_LoadoutDisplayName;
	class UClass* Button_PageLeft;
	class UClass* Button_PageRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroLoadoutTeamPerkPicker : public FortItemPickerBase
{
public:
	Unknown TargetLoadoutItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadStatDetailsWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroSquadBonusPerksWidgetBase : public FortSquadStatDetailsWidget
{
public:
	class UClass* SupportBonusPerkWidget;
	class UClass* TacticalBonusPerkWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadManagementScreenBase : public FortActivatablePanel
{
public:
	bool bReadOnlyModeWIFE;
	class UClass* SquadStatsWidget;
	class UClass* SquadSlotsView;
	class UClass* SelectedSlotDetailsPanel;
	class UClass* SelectedSlotItemPicker;
	struct DataTableRowHandle InspectInputActionRowHandle;
	struct DataTableRowHandle ManageInputActionRowHandle;
	struct DataTableRowHandle BackInputActionRowHandle;
	struct DataTableRowHandle InventoryInputActionRowHandle;
	struct DataTableRowHandle InventoryCloseInputActionRowHandle;
	struct DataTableRowHandle ClosePickerInputActionRowHandle;
	struct DataTableRowHandle SelectPickerSlotActionRowHandle;
	struct DataTableRowHandle CyclePickerSortActionRowHandle;
	struct DataTableRowHandle PreviousSquadActionRowHandle;
	struct DataTableRowHandle NextSquadActionRowHandle;
	struct DataTableRowHandle ClearAllActionRowHandle;
	struct DataTableRowHandle HelpScreenActionRowHandle;
	class UClass* DisableAutoSlottingToClearSquadPromptAction;
	class UClass* ItemViewContext_SquadSlotsView;
	class UClass* ItemViewContext_SquadSlotItemPicker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroSquadManagementScreen : public FortSquadManagementScreenBase
{
public:
	struct DataTableRowHandle ManageDefendersInputActionRowHandle;
	class UClass* BonusPerksWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIconWithLabel : public Widget
{
public:
	bool ShouldShowIcon;
	bool ShouldCollapseIconWhenNotShown;
	EFortBrushSize IconBrushSize;
	bool ShouldShowLabel;
	class UClass* LabelTextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroSupportPerkIndicator : public FortIconWithLabel
{
public:
	Unknown ItemToRepresent;
	EFortSupportBonusType SupportTypeToRepresent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHeroSupportPerkWidget : public UserWidget
{
public:
	Unknown HeroToRepresent;
	EFortSupportBonusType SupportTypeToRepresent;
	EFortSupportPerkWidgetState SupportPerkWidgetState;
	class UClass* PerkImage;
	class UClass* NameText;
	class UClass* DescriptionText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHighlightAnnotation : public CommonUserWidget
{
public:
	float FadeOutTime;
	class UClass* TextBlock_MainText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHighlightWidget : public UserWidget
{
public:
	bool bDisableHighlightNotification;
	class UClass* Text_Header;
	class UClass* Text_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseNodeItemTooltip : public UFortItemTooltip
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHomebaseNodeItemUtilities : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDisableAutoSlottingPromptAction : public UObject
{
public:
	Unknown OwningPlayerController;
	Unknown RegisteredWithGameInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHomebaseUIContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnShouldAutoSlotSurvivorSquadsChanged;
	struct FScriptMulticastDelegate OnSquadSlotChanged;
	struct FScriptMulticastDelegate OnSurvivorSquadsAutoSlotted;
	struct FScriptMulticastDelegate OnNodePurchased;
	struct FScriptMulticastDelegate OnSlottedPrimaryHeroChanged;
	struct FScriptMulticastDelegate OnDifferentHeroLoadoutViewed;
	struct FScriptMulticastDelegate OnDifferentHeroLoadoutSlotFocused;
	struct TSoftClassPtr<UObject> SquadIconDataTableAsset;
	Unknown GadgetDefinitionToInstanceMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHousepartyMemberActionMenu : public SocialInteractionMenu
{
public:
	class UClass* Button_Mute;
	class UClass* Button_Report;
	class UClass* Text_DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDBuildingPossessionWidget : public FortHUDElementWidget
{
public:
	class UClass* DotImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDCenterPopupMessageWidget : public FortHUDElementWidget
{
public:
	struct TSoftClassPtr<UObject> CenterPopupModalWidgetClass;
	class UClass* CenterPopupModalWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnCursorModeChanging;
	struct FScriptMulticastDelegate OnCursorModeChanged;
	struct FScriptMulticastDelegate OnRequestPromptDisplay;
	struct FScriptMulticastDelegate OnGameViewportActivationChanged;
	struct FScriptMulticastDelegate OnMgmtMenuTabChangeRequested;
	struct FScriptMulticastDelegate OnIndicatorModeChanged;
	struct FScriptMulticastDelegate OnContextualReticleChanged;
	struct FScriptMulticastDelegate OnVehicleFocused;
	struct FScriptMulticastDelegate OnBuildingFocused;
	struct FScriptMulticastDelegate OnActorFocusedForCreative;
	struct FScriptMulticastDelegate OnFocusedBuildingStateChanged;
	struct FScriptMulticastDelegate OnFocusedBuildingHealthChanged;
	struct FScriptMulticastDelegate OnFocusedBuildingBigHealthChanged;
	struct FScriptMulticastDelegate OnFocusedBuildingRepairCostChanged;
	struct FScriptMulticastDelegate OnFocusedBuildingAttachedTrapDurabilityChanged;
	struct FScriptMulticastDelegate OnFocusedBuildingAttachedTrapChanged;
	struct FScriptMulticastDelegate OnDamagedResourceBuilding;
	struct FScriptMulticastDelegate OnDamagedResourceVehicle;
	struct FScriptMulticastDelegate OnPlayerCanInteract;
	struct FScriptMulticastDelegate OnInteractUpdated;
	struct FScriptMulticastDelegate OnPlayerTargetingChanged;
	struct FScriptMulticastDelegate OnScoreChanged;
	struct FScriptMulticastDelegate OnScoreStatChanged;
	struct FScriptMulticastDelegate OnZoneCompleted;
	struct FScriptMulticastDelegate OnPawnSet;
	struct FScriptMulticastDelegate OnDamageReceived;
	struct FScriptMulticastDelegate OnUnableToPerformAction;
	struct FScriptMulticastDelegate OnLocalPlayerMaxHealthChanged;
	struct FScriptMulticastDelegate OnLocalPlayerHealthChanged;
	struct FScriptMulticastDelegate OnLocalPlayerDied;
	struct FScriptMulticastDelegate OnLocalPlayerSpawned;
	struct FScriptMulticastDelegate OnLocalPlayerRevived;
	struct FScriptMulticastDelegate OnLocalPlayerKillsChanged;
	struct FScriptMulticastDelegate OnLocalPlayerPlaceChanged;
	struct FScriptMulticastDelegate OnLocalPlayerViewTargetChanged;
	struct FScriptMulticastDelegate OnToggledBattleMapLive;
	struct FScriptMulticastDelegate OnLocalPlayerMaxShieldChanged;
	struct FScriptMulticastDelegate OnLocalPlayerShieldChanged;
	struct FScriptMulticastDelegate OnLocalPlayerMaxStaminaChanged;
	struct FScriptMulticastDelegate OnLocalPlayerStaminaChanged;
	struct FScriptMulticastDelegate OnToggleScoreboard;
	struct FScriptMulticastDelegate OnEndOfDayRecap;
	struct FScriptMulticastDelegate OnWaveCombatStart;
	struct FScriptMulticastDelegate OnWaveBasedModifiersApplied;
	struct FScriptMulticastDelegate OnActiveGameplayModifiersChanged;
	struct FScriptMulticastDelegate OnHordeTierInitialized;
	struct FScriptMulticastDelegate OnHordeTierComplete;
	struct FScriptMulticastDelegate OnHordeWaveComplete;
	struct FScriptMulticastDelegate OnBuildingMaterialCycled;
	struct FScriptMulticastDelegate OnHighlightsCountChanged;
	struct FScriptMulticastDelegate OnHUDStateRefreshed;
	struct FScriptMulticastDelegate OnShouldTriggerCooldownUpdate;
	struct FScriptMulticastDelegate OnRequestSetInZoneTitleBarVisibility;
	struct FScriptMulticastDelegate OnWeaponEquippedDelegate;
	struct FScriptMulticastDelegate OnWeaponHudKeyActionUpdated;
	struct FScriptMulticastDelegate OnAbilityDecisionWindowStackUpdated;
	struct FScriptMulticastDelegate OnWorldDaysElapsedChanged;
	struct FScriptMulticastDelegate OnNumSurvivorsRescuedChanged;
	struct FScriptMulticastDelegate OnEarnedBadgesChanged;
	struct FScriptMulticastDelegate OnPotentialBadgesChanged;
	struct FScriptMulticastDelegate OnMissionManagerCreated;
	struct FScriptMulticastDelegate OnMissionsUpdated;
	struct FScriptMulticastDelegate OnFocusedMissionChanged;
	struct FScriptMulticastDelegate OnTheaterUniqueIDChanged;
	struct FScriptMulticastDelegate OnZoneDifficultyInfoRowChanged;
	struct FScriptMulticastDelegate OnDifficultyIncreaseRewardTierChanged;
	struct FScriptMulticastDelegate OnDifficultyIncreaseRewardsChanged;
	struct FScriptMulticastDelegate OnMissionGeneratorChanged;
	struct FScriptMulticastDelegate OnMissionRewardsChanged;
	struct FScriptMulticastDelegate OnPointOfInterestAdded;
	struct FScriptMulticastDelegate OnPointOfInterestRemoved;
	struct FScriptMulticastDelegate OnHUDElementVisibilityChanged;
	struct FScriptMulticastDelegate OnLocalChallengesVisibilityChanged;
	struct FScriptMulticastDelegate OnDebugHUDObjectiveHeightChangedDelegate;
	struct FScriptMulticastDelegate OnBuildModeChanged;
	struct FScriptMulticastDelegate OnPersonalVehicleModeChanged;
	struct FScriptMulticastDelegate OnPlayerVehicleStateChanged;
	struct FScriptMulticastDelegate OnClientSettingsShowViewersChanged;
	bool bDebugHudObjectiveHeight;
	bool bPendingAttachToHUD;
	class UClass* OwningPlayerState;
	class UClass* CurFocusedBuilding;
	class UClass* CurFocusedTrap;
	class UClass* BuildingFocusCandidates;
	class UClass* BoundPlayerPawn;
	class UClass* CachedCurrentWeapon;
	class UClass* CachedPreviousWeapon;
	Unknown TouchControlRegion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHudContextTutorialIndicatorBall : public FortHUDElementWidget
{
public:
	bool bCanArrowAnimationPlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHudContextTutorialTipsBase : public CommonActivatableWidget
{
public:
	TArray<struct ContextPosition> PositionPerPlatform;
	struct FortPrioritizedWidgetData PrioritizationData;
	class UClass* CanvasPanel_Container;
	class UClass* CanvasPanel_Ball;
	class UClass* Overlay_Container;
	class UClass* ContextTutorialBall;
	class UClass* ContextTutorialBallParented;
	class UClass* TipActionWidget;
	float MaxLerpSpeedPercentPerSecond;
	struct DataTableRowHandle CloseObjectInputAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDEquipProgressBase : public FortHUDElementWidget
{
public:
	class UClass* Image_ProgressBar;
	class UClass* Text_TimeRemaining;
	struct GameplayTagContainer RelevantGameplayCueTags;
	struct FName ProgressBarMaterialParamName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHUDObjectiveSizeInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDPointCounter : public CommonUserWidget
{
public:
	class UClass* Text_ScoreValue;
	class UClass* Text_DebugId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDScoringAlert : public FortHUDElementWidget
{
public:
	class UClass* ScoringDataDisplay;
	struct FText PointGainFormat;
	class UClass* HUDPointCounter;
	class UClass* Text_ScoreDesc;
	class UClass* Text_PointCount;
	class UClass* Icon_Scoring;
	class UClass* AbandonMatchClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHUDShutdownTimerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDTagPromptWidgetBase : public FortHUDElementWidget
{
public:
	struct FScriptMulticastDelegate OnOpenedOrClosed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDTagPromptContainerWidget : public FortHUDElementWidget
{
public:
	class UClass* TagMappingData;
	float CoolDownTime;
	struct FScriptMulticastDelegate OnOpenedOrClosed;
	Unknown TagToTimeMap;
	struct FortHUDTagPromptData PromptDataToShow;
	class UClass* OverlayWidget;
	struct FortPrioritizedWidgetData PrioritizationData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHUDTargetUnderReticleWidget : public CommonUserWidget
{
public:
	Unknown Target;
	bool bKeepTargetUntilNewValidTarget;
	struct GameplayTagContainer TargetRequiredTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHUDVisibilityData : public UDataAsset
{
public:
	struct GameplayTag HUDVisibilityGameplayTag;
	struct FText DisplayText;
	struct FText ToolTipText;
	bool Visible;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortIncomingFriendRequestToast : public FortToastWidget
{
public:
	class UClass* Text_NumMutualFriends;
	class UClass* Text_RelationshipStatus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInfoWindow : public FortActivatablePanel
{
public:
	class UClass* InfoEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInGameChallengeScreen : public CommonActivatablePanelLegacy
{
public:
	class UClass* TreeView_Challenges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInGameMatchmakingPanel : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortInputControllerData : public UCommonInputBaseControllerData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInteractionIndicatorWidget : public FortActorIndicatorWidget
{
public:
	class UClass* Switcher_PrimaryContext;
	class UClass* Switcher_SecondaryContext;
	Unknown PrimaryContextOverrideMap;
	Unknown SecondaryContextOverrideMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventoryContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnMcpWorldItemsChanged;
	struct FScriptMulticastDelegate OnMcpOutpostItemsChanged;
	struct FScriptMulticastDelegate OnWorldItemListChanged;
	struct FScriptMulticastDelegate OnOutpostItemListChanged;
	struct FScriptMulticastDelegate OnItemPickedUp;
	struct FScriptMulticastDelegate OnQuickbarContentsChanged;
	struct FScriptMulticastDelegate OnQuickbarRecordsChanged;
	struct FScriptMulticastDelegate OnQuickbarSlotFocusChanged;
	struct FScriptMulticastDelegate OnQuickbarSecondarySlotFocusChanged;
	struct FScriptMulticastDelegate OnQuickbarForceFullUpdate;
	struct FScriptMulticastDelegate OnWorldItemsChanged;
	struct FScriptMulticastDelegate OnSchematicsLockedChanged;
	struct FScriptMulticastDelegate OnSchematicUnlocked;
	struct FScriptMulticastDelegate OnCraftItemStarted;
	struct FScriptMulticastDelegate OnCraftItemFailed;
	struct FScriptMulticastDelegate SetWorldResourceWidgetVisibility;
	struct FScriptMulticastDelegate OnVaultItemLimitStateChangedEvent;
	struct FScriptMulticastDelegate OnInventoryFiltersWithUnseenItemsChanged;
	struct FScriptMulticastDelegate OnItemTypesWithUnseenItemsChanged;
	Unknown SchematicLockedStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInventoryOverflowIndicator : public FortSimpleItemConditionIconIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortInWorldTouchInteractionLayer : public CommonUserWidget
{
public:
	class UClass* WidgetInteractor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemAutoMulchActivatablePanel : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemAutoMulchSettingRow : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemWidget_NUI : public Widget
{
public:
	Unknown ItemToRepresent;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCardBase : public FortItemWidget_NUI
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemCardMaterialPooler : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemCardUtilities : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCategoryIndicator : public FortIconWithLabel
{
public:
	Unknown ItemToRepresent;
	EFortItemCategoryOrdinal OrdinalOfCategoryToRepresent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCooldownWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnCooldownStartedEvent;
	struct FScriptMulticastDelegate OnCooldownStoppedEvent;
	struct FScriptMulticastDelegate OnCooldownUpdatedEvent;
	struct FScriptMulticastDelegate OnAmmoRegenerationUpdated_Delegate;
	class UClass* CooldownText;
	class UClass* CooldownImage;
	class UClass* CooldownChargingImage;
	struct FName CooldownMaterialParameterName;
	TArray<EFortItemCooldownType> CooldownTypesSupported;
	class UClass* CooldownPercentageMID;
	bool bAmmoRegenAvailableState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCountTextBlock : public CommonNumericTextBlock
{
public:
	class UClass* ItemDefinition;
	EFortItemCountStyle CountStyle;
	float ItemCountMaxInterpolateDuration;
	float ItemCountMinInterpolateRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCraftingOptionsActivatablePanel : public FortActivatablePanel
{
public:
	class UClass* BaseItem;
	class UClass* TargetItem;
	int MaxCraftingTierIndex;
	int TargetCraftingTierIndex;
	int TargetPromotionTierIndex;
	int MaxQuantity;
	int SelectedQuantity;
	bool CanCraftTargetItem;
	class UClass* TierImageParent_1;
	class UClass* TierImageParent_2;
	class UClass* TierImageParent_3;
	class UClass* TierImageParent_4;
	class UClass* TierImageParent_5;
	class UClass* TierImage_1;
	class UClass* TierImage_2;
	class UClass* TierImage_3;
	class UClass* TierImage_4;
	class UClass* TierImage_5;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDetailsActivatablePanel : public CommonActivatablePanelLegacy
{
public:
	Unknown ItemToDetail;
	Unknown ItemToCompareWith;
	Unknown HostItemManagementScreen;
	class UClass* ItemToDetailLoadingWrapper;
	class UClass* ItemToDetailLoadGuard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDetailsModeActivatablePanel : public FortItemDetailsActivatablePanel
{
public:
	class UClass* DetailPanelWidgetSwitcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemCompareModeActivatablePanel : public FortItemDetailsActivatablePanel
{
public:
	class UClass* ComparisonModeLeftItemDetailsPanel;
	class UClass* ComparisonModeRightItemDetailsPanel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemMulchModeActivatablePanel : public FortItemDetailsActivatablePanel
{
public:
	class UClass* MulchModeItemDetailsPanel;
	class UClass* MulchDetailsPanel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDetailsHostPanel : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnItemChanged;
	Unknown ItemToDetail;
	Unknown ItemToCompareWith;
	bool bShouldPreviewUpgradingItem;
	int UpgradeLevelDelta;
	class UClass* ScrollBox;
	class UClass* DetailsContainerSlotWidget;
	class UClass* HighRarityBorder;
	Unknown ItemViewContext;
	EFortItemInspectionMode CurrentInspectMode;
	int QuantityOverride;
	class UClass* ItemToDetailLoadingWrapper;
	class UClass* ItemToCompareLoadingWrapper;
	class UClass* ItemToDetailLoadGuard;
	class UClass* ItemToCompareLoadGuard;
	bool bAsyncLoadTooltipData;
	bool bIsUpdatingSuspended;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDetailsPanel : public CommonUserWidget
{
public:
	Unknown ItemToDetail;
	Unknown ItemToCompareWith;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemDisplayNameText : public CommonTextBlock
{
public:
	Unknown ItemToRepresent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemInfoPresentationWidget : public CommonUserWidget
{
public:
	class UClass* AthenaRewardItemTypeRarityTag;
	class UClass* Text_Name;
	class UClass* Text_DescReward;
	class UClass* Text_Variance;
	class UClass* Text_DescVariance;
	class UClass* Overlay_MainView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemInfoWidget : public CommonUserWidget
{
public:
	class UClass* Text_Name;
	class UClass* Text_ItemType;
	class UClass* Text_Desc;
	class UClass* Overlay_MainView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemInspectionScreen : public FortActivatablePanelWithItemPreview
{
public:
	EFortItemInspectionMode CurrentInspectMode;
	Unknown InspectedItem;
	bool UpgradeAllowed;
	bool EvolveAllowed;
	bool FavoriteAllowed;
	bool RarityUpgradingAllowed;
	bool IsPreviewing;
	bool bHasSeenRefundHelpPrompt;
	class UClass* CycleWidget;
	struct GameplayTagQuery InspectAnimationTag;
	class UClass* AlterationModOptinScreenClass;
	class UClass* AlterationModScreenClass;
	struct TSoftClassPtr<UObject> RefundDescriptionsDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemInspectCycleWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnItemToRepresentChanged;
	Unknown ItemTileView;
	Unknown ItemToRepresent;
	struct DataTableRowHandle PreviousItemActionRowHandle;
	struct DataTableRowHandle NextItemActionRowHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemListEntryButton : public CommonButtonLegacy
{
public:
	class UClass* ItemWidget;
	Unknown Item;
	EFortItemCardSize ItemCardSize;
	bool IsRewardCard;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNullItem : public UFortItem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemListPreviewWidget : public CommonActivatableWidget
{
public:
	class UClass* TileView_Items;
	class UClass* Container_Items;
	class UClass* Button_PreviewVariants;
	class UClass* VerticalBox_AdditionalButtons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemListView : public CommonListView
{
public:
	bool bShouldShowNullItemListEntry;
	bool bAutomaticallyLoadItemDetails;
	EItemListViewDisplayType DisplayType;
	struct FScriptMulticastDelegate OnInventoryUpdatedEvent;
	struct FScriptMulticastDelegate OnLoadItemsBegin;
	struct FScriptMulticastDelegate OnLoadItemsEnd;
	TArray<Unknown> CustomItemList;
	TArray<Unknown> ItemsForListView;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemListViewInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemListEntryWidgetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementCustomFilterModalWidget : public FortActivatablePanel
{
public:
	Unknown HostItemManagementScreen;
	TArray<EFortInventoryCustomFilter> AvailableFilters;
	Unknown LocalCustomFilterSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementEquipSlot : public FortUserWidget
{
public:
	int SlotIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementInventoryPanel : public CommonUserWidget
{
public:
	struct FName CurrentFilterName;
	EInventoryContentSortType CurrentSortType;
	class UClass* FilterTabButtonType;
	class UClass* FilterTabButtonStyle;
	TArray<struct FortItemManagementInventoryFilterTabLabelInfo> FilterTabLabelInfoArray;
	class UClass* FilterTabList;
	class UClass* TileViewLoadGuard;
	class UClass* TileView;
	class UClass* CraftingPanel;
	class UClass* CraftingTileViewLoadGuard;
	class UClass* CraftingTileView;
	class UClass* StoragePanel;
	class UClass* StorageTileViewLoadGuard;
	class UClass* StorageTileView;
	class UClass* MulchRestrictionReasonText;
	EFortItemCardSize SmallTileSize;
	EFortItemCardSize LargeTileSize;
	Unknown HostItemManagementScreen;
	bool bCanDragItems;
	class UClass* InventoryContext;
	class UClass* WidgetToCenter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementItemPopupMenu : public FortPopupMenu
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementItemTileButton : public FortItemTileButton
{
public:
	Unknown HostItemManagementScreen;
	bool HasTheItemToDetail;
	bool HasTheItemToCompareDetailsWith;
	bool HasAnItemMarkedForMulching;
	int MulchCount;
	class UClass* NotCraftableOverlay;
	class UClass* PopupMenuAnchor;
	bool ShowCollectionBookIndicator;
	bool ShowRefundIndicator;
	class UClass* InventoryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementItemDetailsPanel : public FortItemDetailsHostPanel
{
public:
	bool HasItemMarkedForMulching;
	Unknown HostItemManagementScreen;
	class UClass* InventoryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementMulchDetailsPanel : public CommonUserWidget
{
public:
	class UClass* ResourceList;
	Unknown HostItemManagementMulchPanel;
	class UClass* InventoryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementModeDetailsPanel : public CommonUserWidget
{
public:
	class UClass* ModeWidgetSwitcher;
	class UClass* DetailsModeItemDetailsPanel;
	class UClass* ComparisonModeItemDetailsPanel;
	class UClass* MulchModeItemDetailsPanel;
	Unknown HostItemManagementScreen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemManagementMulchPanel : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortFrontendInventoryFilterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemManagementScreen : public FortActivatablePanel
{
public:
	struct FScriptMulticastDelegate OnItemViewRefreshed;
	EFortItemManagementMode Mode;
	EFortFrontendInventoryFilter FrontendInventoryFilter;
	bool bReadOnlyModeWIFE;
	bool ConsumeItemRequestInProgress;
	class UClass* InventoryPanel;
	class UClass* ModeDetailsPanel;
	Unknown ItemToDetail;
	class UClass* MulchConfirmationModalClass;
	class UClass* CustomFilterModalClass;
	class UClass* MulchConfirmationModal;
	class UClass* CustomFilterModal;
	class UClass* InventoryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemNotification : public FortActivatablePanel
{
public:
	TArray<struct FortReceivedItemLootInfo> ItemDefs;
	float BodyTextWrapWidth;
	class UClass* Button_Close;
	class UClass* ItemPresentationGenericRewardHeader;
	class UClass* ItemPresentationEntry;
	class UClass* ItemInfoPresentationWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemPairsInspectionScreen : public FortItemPreviewScreen
{
public:
	class UClass* Button_Back;
	class UClass* Button_MobileClose;
	class UClass* Switcher_PresentationMode;
	class UClass* Widget_ItemList;
	class UClass* Widget_VariantList;
	class UClass* Widget_ItemInfoHeader;
	class UClass* ItemPopup_Details;
	class UClass* UnlockingInfo;
	float DefaultVariantCyclingDelay;
	float TimeBetweenVariants;
	class UClass* PresentedItemDefinition;
	EPresentationMode PresentationMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemPresentationDisplayData : public UDataAsset
{
public:
	Unknown HeaderOverrideStrings;
	Unknown BodyOverrideStrings;
	Unknown ViolatorOverrideStrings;
	Unknown SubheaderOverrideStrings;
	struct TSoftClassPtr<UObject> BattlePassUnownedIcon;
	struct TSoftClassPtr<UObject> BattlePassOwnedIcon;
	struct FText DefaultBackgroundMessageText;
	Unknown TagRestrictionData;
	Unknown ItemTemplateIdToContextActionMap;
	struct TSoftClassPtr<UObject> ItemPresentationScreenClass;
	struct TSoftClassPtr<UObject> GiftReceivedPromptClass;
	struct TSoftClassPtr<UObject> ItemNotificationPromptClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemPresentationEntry : public CommonButtonLegacy
{
public:
	class UClass* ItemCard;
	class UClass* Text_Count;
	class UClass* FortItem;
	struct TSoftClassPtr<UObject> RewardTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemPresentationScreen : public FortItemPreviewScreen
{
public:
	class UClass* ItemCardClass;
	TArray<struct FortReceivedItemLootInfo> ItemDefs;
	TArray<struct FortReceivedItemLootInfo> PaidBattlePassItemDefs;
	class UClass* CurrentItemSelected;
	class UClass* EntryBoxButtonGroup;
	TArray<struct FText> BackgroundMessageTexts;
	TArray<class UClass*> GiftboxCustomLeftsideContentWidgetClasses;
	int MaxItemsInView;
	float HotItemDisplayTime;
	struct FText MultipleItemPurchaseHeaderTitle;
	struct FText SingleItemPurchaseHeaderTitle;
	struct FText PurchaseHeaderBody;
	bool bShowingBattlePassItems;
	struct DataTableRowHandle HoldToCloseScreen;
	class UClass* Button_Equip;
	class UClass* Button_Next;
	class UClass* Button_BattlePassRewards;
	class UClass* Button_BattlePassCustomization;
	class UClass* Text_ItemsCollected;
	class UClass* ItemInfoPresentationWidget;
	class UClass* ItemHeaderWidget;
	class UClass* BattlePassTracker;
	class UClass* Text_UnownedBaseItemMessage;
	class UClass* Image_Lock;
	class UClass* DynamicEntryBox_Items;
	class UClass* ListView_Items;
	class UClass* ListView_PaidItems;
	class UClass* Border_InputBlocker;
	class UClass* Button_LeftScrollArrow;
	class UClass* Button_RightScrollArrow;
	class UClass* Banner_TokenDescription;
	class UClass* CustomContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AItemPreviewScene : public AActor
{
public:
	class UClass* FocusCameraTargetComponent;
	class UClass* FocusCameraTargetPedestal;
	TArray<class UClass*> BackgroundCameraTargetPedestals;
	struct FortItemViewSettings ItemViewSettings;
	TArray<Unknown> PedestalsLoading;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewSceneChanger : public AActor
{
public:
	class UClass* TransitionCameraComponent;
	class UClass* PrimarySceneComponent;
	class UClass* SecondarySceneComponent;
	struct GameplayTag SceneChangerTag;
	bool bHasEtherealBackground;
	class UClass* SceneChangeRootComponent;
	class UClass* PrimaryScene;
	class UClass* SecondaryScene;
	class UClass* SceneTransitioningTo;
	class UClass* ActiveScene;
	float ZoomLevel;
	struct Rotator PedestalRotationOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortItemPreviewWorld : public AActor
{
public:
	struct GameplayTag PreviewSceneChangerTag;
	class UClass* BackgroundMaterial;
	class UClass* BackgroundMaterialDynamic;
	class UClass* SceneBackgroundComponent;
	class UClass* SceneBackground;
	class UClass* SceneChangerComponent;
	class UClass* PreviewSceneChanger;
	struct TrackDynamicBackground CachedBackgroundData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemQuantityListEntryBase : public CommonUserWidget
{
public:
	int Quantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemQuantityListBase : public CommonUserWidget
{
public:
	EFortItemInspectionMode CurrentInspectMode;
	bool bListenToInventoryChanges;
	class UClass* ListEntryWidgetType;
	TArray<class UClass*> ItemObjectsToKeepAlive;
	TArray<class UClass*> FortItemDefinitions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemRatingIndicator : public CommonUserWidget
{
public:
	Unknown ItemToRepresent;
	Unknown ItemToCompareWith;
	struct FortMultiSizeBrush RatingTypeIcon;
	int RatingValue;
	EFortBuffState ComparisonResult;
	bool ShouldAppearEnchanted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemReceivedHeaderBase : public CommonUserWidget
{
public:
	class UClass* Image_Icon;
	class UClass* Text_Violator;
	class UClass* Text_Title;
	class UClass* Text_Subtitle;
	class UClass* Text_Body;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemReceivedWidgetBase : public FortActivatablePanelWithItemPreview
{
public:
	TArray<struct FortReceivedItemLootInfo> ItemDefs;
	class UClass* GiftBoxItem;
	struct FString FromUsername;
	class UClass* HeaderContainer;
	class UClass* GiftScrollBox;
	class UClass* ItemCardClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemReceivedScreen : public FortItemReceivedWidgetBase
{
public:
	struct FScriptMulticastDelegate OnFinalGiftingComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPresentationItemLootInfo : public UObject
{
public:
	struct FortReceivedItemLootInfo ItemReceivedInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemReceivedHeaderBase : public UserWidget
{
public:
	class UClass* GiftBoxItem;
	struct FString FromUsername;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemReceivedPrePrompt : public FortItemReceivedWidgetBase
{
public:
	struct FScriptMulticastDelegate OnPrePromptClosed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortGiftInfo : public UObject
{
public:
	struct GiftBoxInfo GiftBoxInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ItemCardWidgetBase : public Button
{
public:
	class UClass* LootInfo;
	class UClass* FortMultiSizeItemCard_Widget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemShopSubsystem : public UWorldSubsystem
{
public:
	class UClass* VotingManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemTransform : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemView : public UObject
{
public:
	struct DataTableRowHandle UnifiedSupportsCameraControlInputAction;
	struct DataTableRowHandle UnifiedZoomInputAction;
	struct DataTableRowHandle ZoomOutInputAction;
	struct DataTableRowHandle ZoomInInputAction;
	struct DataTableRowHandle RotateInputAction;
	struct FScriptMulticastDelegate OnItemRotationChanged;
	struct FScriptMulticastDelegate OnItemZoomLevelChanged;
	TArray<struct DataTableRowHandle> RegisteredInputActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemViewContextInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortItemWidget : public FortBaseButton
{
public:
	struct FDelegate OnGetItemToCompareDelegate;
	struct FName CooldownMaterialParameterName;
	class UClass* CooldownMaterial;
	int LastCooldownTimeInSeconds;
	float LastCooldownPct;
	bool LastIsActivatable;
	int QuantityOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortJoinablePartyActionMenu : public SocialInteractionMenu
{
public:
	struct Color SecondNameColor;
	uint32_t SecondNameFontSize;
	class UClass* RichText_DisplayNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortJoinablePartyListEntry : public SocialListInteractableEntryBase
{
public:
	struct Color InviteTextColor;
	struct Color DimmerInviteColor;
	struct Color DimmerDefaultColor;
	uint32_t SecondNameFontSize;
	class UClass* Text_DisplayNames;
	class UClass* Text_PartyPresence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortJournalQuestDetails : public CommonUserWidget
{
public:
	class UClass* CurrentQuest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortJournalQuestProgressBar : public CommonUserWidget
{
public:
	Unknown QuestObjectiveInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortKeybindWidget : public CommonUserWidget
{
public:
	struct FName BoundAction;
	float AxisScale;
	struct Key BoundKeyFallback;
	ECommonInputType InputTypeOverride;
	ECommonGamepadType GamepadTypeOverride;
	struct FName PresetNameOverride;
	bool bForcedHoldKeybind;
	EFortKeybindForcedHoldStatus ForcedHoldKeybindStatus;
	bool bIsHoldKeybind;
	bool bShowKeybindBorder;
	struct Vector2D FrameSize;
	bool bShowTimeCountDown;
	struct Key BoundKey;
	struct SlateBrush HoldProgressBrush;
	struct SlateBrush KeyBindTextBorder;
	bool bShowUnboundStatus;
	struct SlateFontInfo KeyBindTextFont;
	struct SlateFontInfo CountdownTextFont;
	struct MeasuredText CountdownText;
	struct MeasuredText KeybindText;
	struct Margin KeybindTextPadding;
	struct Vector2D KeybindFrameMinimumSize;
	struct FName PercentageMaterialParameterName;
	class UClass* ProgressPercentageMID;
	EFortBrushSize BrushSize;
	struct FortMultiSizeBrush FrameMultiBrush;
	struct SlateBrush CachedKeyBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLayoutQuestNode : public CommonUserWidget
{
public:
	class UClass* QuestTile;
	int QuestNodeIndex;
	struct FortQuestMapNode QuestMapNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeaderboardContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeaderboardEntryDetails : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeaderboardEntryWidget : public CommonButtonLegacy
{
public:
	class UClass* LeaderboardEntryObject;
	class UClass* Container_PlatformSocialCard;
	class UClass* Text_PlatformSocialCard;
	class UClass* Image_PlatformSocialCard;
	class UClass* QueriedSocialUser;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeaveDialog : public FortActivatablePanel
{
public:
	struct FScriptMulticastDelegate OnLeft;
	struct FScriptMulticastDelegate OnCanceled;
	class UClass* VBox_PartyOptions;
	class UClass* PartyRadioButtonGroup;
	class UClass* Text_Title;
	class UClass* Text_Description;
	class UClass* Button_LeavePartyRadio;
	class UClass* Button_StayWithPartyRadio;
	class UClass* Button_Leave;
	class UClass* Button_Cancel;
	class UClass* Button_MobileClose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeavePartyListEntry : public SocialListInteractableEntryBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLeavePartyMenu : public SocialActionMenu
{
public:
	class UClass* Button_Confirm;
	class UClass* Button_Decline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLegacySlateBridgeWidget : public NativeWidgetHost
{
public:
	EFortLegacySlateWidget ContainedWidgetType;
	float DPIScaleFactor;
	struct FDelegate OnClose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLegalInfoWidget : public FortActivatablePanel
{
public:
	class UClass* WidgetSwitcher_Legal;
	class UClass* TabList_LegalOptions;
	class UClass* Button_MobileClose;
	class UClass* Button_Close;
	class UClass* Button_PrivacyPolicy;
	class UClass* Button_FanContentPolicy;
	class UClass* Button_TermsOfService;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLevelIndicator : public Widget
{
public:
	Unknown ItemToRepresent;
	Unknown ItemForComparison;
	bool ShouldShowLabel;
	class UClass* TextStyle;
	bool ShouldShowMaximumLevel;
	int CurrentLevel;
	int MaximumLevel;
	bool IsComparingLevels;
	EFortBrushSize ComparisonResultIndicatorSize;
	int CurrentLevelForComparison;
	int MaximumLevelForComparison;
	class UClass* LabelTextBlock;
	class UClass* CurrentLevelNumericTextBlock;
	class UClass* DivisionOperatorTextBlock;
	class UClass* MaximumLevelNumericTextBlock;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLiveStreamGrantWindowExpires : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLlamaStoreData : public UPrimaryDataAsset
{
public:
	TArray<struct FText> RandomLoadingTexts;
	class UClass* ProgressModalClass;
	struct FName NotEnoughCurrencyDialogCloseAction;
	class UClass* InspectWidgetClass;
	float ShowOfferDelay;
	class UClass* StoreOpeningCardPackClass;
	class UClass* UnopenedCardpacksModalClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLlamaStoreBase : public FortDirectAcquisitionWidgetBase
{
public:
	TArray<struct OfferGroup> OfferCategoriesToDisplay;
	class UClass* OfferEntryBox;
	class UClass* OfferButtonGroup;
	class UClass* OfferDetails;
	class UClass* StoreData;
	class UClass* Button_UnopenedLlamas;
	class UClass* ProgressModal;
	class UClass* PendingPurchaseOffer;
	class UClass* StoreOpeningCardPack;
	bool bHideSoldOffers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLlamaStoreDetailsBase : public CommonUserWidget
{
public:
	class UClass* OfferInfo;
	class UClass* ItemTileView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLlamaStoreInspectionScreen : public FortStoreFrontOfferDetailsWidgetBase
{
public:
	class UClass* GrantedItemTileView;
	bool bIsInChoiceViewMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLlamaStoreOfferInfo : public UFortStoreFrontOfferInfo
{
public:
	class UClass* LlamaOfferDisplayAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLlamaStoreOfferWidgetBase : public FortStoreFrontOfferWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLoadingOnDemandContentModal : public CommonActivatableWidget
{
public:
	class UClass* Button_Cancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLoadingVideoPlayer : public UObject
{
public:
	class UClass* VideoPlayer;
	class UClass* VideoTexture;
	class UClass* SoundComponent;
	class UClass* MediaSource;
	class UClass* FileMediaSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLoadoutSaveConfirmation : public FortActivatablePanel
{
public:
	class UClass* Button_SaveCurrent;
	class UClass* Button_SaveAsNew;
	class UClass* Button_Cancel;
	class UClass* Button_MobileClose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLobbyAddPlayer : public FortTeamMemberEntryBase
{
public:
	class UClass* Button_EmptySlot;
	class UClass* PartySuggestion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalPlayerParticipation : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalUserSettingButton : public CommonButtonLegacy
{
public:
	class UClass* RichText_DisplayName;
	class UClass* Image_CurrentSelectedArrow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalUserSettingTitleButton : public CommonButtonLegacy
{
public:
	class UClass* RichText_Title;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalUserSettingsSection : public UserWidget
{
public:
	class UClass* TitleButton;
	class UClass* EntryBox_Options;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLocalUserSettingsMenu : public CommonActivatableWidget
{
public:
	struct Color SettingTextColor;
	class UClass* OwningMenuAnchor;
	class UClass* Section_OnlineStatus;
	class UClass* Section_Privacy;
	class UClass* Section_Participation;
	class UClass* Section_VoiceChannel;
	class UClass* Section_FriendSubscription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLockerBuiltInEmoteWidget : public CommonButtonLegacy
{
public:
	class UClass* Card_Item;
	class UClass* EmoteDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLoginCredentialSelect : public CommonUserWidget
{
public:
	class UClass* Button_Epic;
	class UClass* Button_Facebook;
	class UClass* Button_Google;
	class UClass* Button_PS;
	class UClass* Button_XB;
	class UClass* Button_Erebus;
	class UClass* Button_CreateAccount;
	class UClass* Button_NoXB;
	class UClass* Button_NoSony;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLoginInteractions : public CommonActivatablePanelLegacy
{
public:
	class UClass* Button_Back;
	class UClass* Switcher_Input;
	class UClass* PlayedBefore_Select;
	class UClass* Credential_Select;
	class UClass* SignIn_Credentials;
	class UClass* Redirect_EpicAccount;
	class UClass* Account_NotFound;
	class UClass* DisplayName_Create;
	class UClass* MFA_Auth;
	class UClass* EULA_Accept;
	class UClass* Account_Link;
	class UClass* Account_PinLink;
	class UClass* Web_Login;
	class UClass* AgeGateFlow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLoginStatus : public FortActivatablePanel
{
public:
	class UClass* Button_Continue;
	class UClass* Button_Quit;
	class UClass* Text_Title;
	class UClass* Text_Status;
	class UClass* Button_Status;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileActionButton : public FortMobileHUDElement
{
public:
	struct GameplayTag IconSizePropertyTag;
	struct GameplayTag ClickthroughPropertyTag;
	struct LinearColor PressedColor;
	struct LinearColor ReleasedColor;
	struct LinearColor DisabledColor;
	class UClass* ButtonBehavior;
	TArray<struct InputActionKeyMapping> InputActionKeyMappings;
	class UClass* SizeBox_HitboxSize;
	class UClass* SizeBox_VisualSize;
	class UClass* Overlay_ButtonContents;
	class UClass* Image_Background;
	class UClass* Image_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLookStickV2 : public FortMobileActionButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLTMVictoryWidgetBase : public FortUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMainMenu : public CommonUserWidget
{
public:
	struct FText DefaultHelpText;
	class UClass* Text_CountDownTimer;
	class UClass* Button_MobileBack;
	class UClass* LeaveButton;
	class UClass* ContextualHelpText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMainMenuButton : public CommonButtonLegacy
{
public:
	struct FText DefaultText;
	struct SlateBrush DefaultBrush;
	int NormalButtonHeight;
	int MobileButtonHeight;
	class UClass* MobileStyle;
	class UClass* Text_Content;
	class UClass* Image_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMainMenuLeaveButton : public FortMainMenuButton
{
public:
	class UClass* Text_CountDownTimer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMainTabsScreenBase : public CommonActivatablePanelLegacy
{
public:
	Unknown FeaturesTabsMap;
	class UClass* TopTabContainer;
	class UClass* TopTabList;
	class UClass* MainTabSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchmakingGameModeButton : public UserWidget
{
public:
	class UClass* IconTextButton_Play;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUserPermissions : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchmakingKnobsSpinnerButton : public CommonRotator
{
public:
	struct FScriptMulticastDelegate OnKnobDataInitialized;
	struct FScriptMulticastDelegate OnHandleOptionWidgetGenerated;
	class UClass* OptionDataObj;
	class UClass* AssociatedPlayerState;
	class UClass* RepresentedPlayer;
	class UClass* CreativeOption;
	class UClass* DisplayImageMaterial;
	class UClass* SocialUser;
	class UClass* SizeBox_TextEntry;
	class UClass* FilteredTextEntry_Widget;
	class UClass* TextBlock_OptionDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchmakingSpecialButton : public UserWidget
{
public:
	class UClass* Button_LimitedTimeGameMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchStatsScreen : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchXPDetails : public CommonActivatableWidget
{
public:
	class UClass* Section_MatchStats;
	class UClass* Section_MedalList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchXPRecap : public CommonActivatableWidget
{
public:
	class UClass* ListView_PostGameMenu;
	class UClass* MatchXP_MedalEntry;
	class UClass* MatchXP_SurvivalBonus;
	class UClass* MatchXP_CombatBonus;
	class UClass* MatchXP_MatchXp;
	class UClass* MatchXP_TotalEntry;
	class UClass* MatchCash_TotalEntry;
	class UClass* Widget_QuestRecap;
	class UClass* Leto_IGMMWrapper;
	class UClass* Overlay_ChallengeSection;
	class UClass* CommonSwitcher_PostGameOptions;
	class UClass* KeepPlayingTogetherWidget;
	class UClass* SizeBoxNavigationOptions;
	TArray<struct FString> KeepPlayingTogetherWhitelist;
	class UClass* Text_MemberOptedOut;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMatchXPTotalEntry : public FortHUDElementWidget
{
public:
	bool bIsTotal;
	struct FText XPType;
	struct FText XPSymbol;
	class UClass* NumericText_XPValue;
	class UClass* TextBlock_XPType;
	class UClass* TextBlock_XPSymbol;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMaterialProgressBarStyle : public UObject
{
public:
	struct FName BackgroundColorParamName;
	struct LinearColor BackgroundColor;
	struct FortMaterialProgressBarSectionStyle BarSectionStyles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMaterialProgressBar : public CommonUserWidget
{
public:
	class UClass* Style;
	struct FName BackgroundColorParamName;
	struct LinearColor BackgroundColor;
	EFortMaterialProgressBarSectionOverflowBehavior OverflowBehavior;
	struct FortMaterialProgressBarSectionInfo BarSectionInfo;
	class UClass* ProgressBar;
	class UClass* ProgressBarMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMicIndicatorWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissedInvitesActionMenu : public SocialActionMenu
{
public:
	class UClass* Button_NeverShowAgain;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissedInvitesListEntry : public SocialListInteractableEntryBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMissionActivationInfo : public UObject
{
public:
	bool bIsMultiplayer;
	class UClass* FortPC;
	class UClass* GameStateZone;
	class UClass* DifficultyIncreaseBluGloCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionActivationWidgetPanel : public CommonUserWidget
{
public:
	class UClass* InfoObject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionActivationWidget : public FortActivatablePanel
{
public:
	class UClass* InfoObject;
	struct GameplayTagContainer ReadyUpObjectiveHandle;
	class UClass* DifficultyIncreaseBluGloCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionObjectiveProgressBase : public CommonUserWidget
{
public:
	class UClass* ObjectiveProgressBar;
	class UClass* ProgressBarText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionSelect : public CommonActivatablePanelLegacy
{
public:
	struct FScriptMulticastDelegate OnNavigation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionTracker : public FortHUDElementWidget
{
public:
	class UClass* MissionTrackerList;
	class UClass* MainQuestList;
	class UClass* PinnedQuestsList;
	class UClass* AdditionalEntriesIndicator;
	class UClass* DebugHeightEstimate;
	float AllowedSize;
	bool bEnforceHeightLimit;
	bool bEnableMainQuestList;
	bool bEnablePinnedQuestList;
	int VisibleMissionCategories;
	bool bSizeEstimateNeedsRefresh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionTrackerEntry : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnMissionEntryVisibilityChanged;
	class UClass* SubEntryClass;
	bool bConfigureAsHUD;
	bool bHiddenByHeightConstraint;
	class UClass* MissionNameText;
	class UClass* ObjectivesListBox;
	class UClass* UpperSeparator;
	class UClass* TrackedMission;
	struct FScriptMulticastDelegate OnSizeEstimateChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionTrackerList : public CommonUserWidget
{
public:
	class UClass* MissionEntryClass;
	bool bConfigureAsHUD;
	class UClass* MissionsListBox;
	class UClass* SecondaryMissionsListBox;
	struct FScriptMulticastDelegate OnMissionTrackerListVisibilityChanged;
	int VisibleMissionCategories;
	struct FScriptMulticastDelegate OnSizeEstimateChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionTrackerSubEntry : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnMissionSubEntryVisibilityChanged;
	bool bConfigureAsHUD;
	bool bHiddenByHeightConstraint;
	class UClass* TrackedObjective;
	struct FScriptMulticastDelegate OnSizeEstimateChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMissionVoteHUDElementWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetBehaviorExtension : public UObject
{
public:
	TArray<class UClass*> HudWidgetContentComponents;
	class UClass* OwnerWidgetBehavior;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehaviorExtension : public UFortMobileHUDWidgetBehaviorExtension
{
public:
	TArray<struct FName> ActionNames;
	TArray<class UClass*> ButtonBehaviorComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionBBE_GravyGoblinRotate : public UFortMobileActionButtonBehaviorExtension
{
public:
	struct EventMessageTag HeldObjectRotatableTag;
	struct EventMessageTag HeldObjectUnrotatableTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_AlternateUse : public UFortMobileActionButtonBehavior
{
public:
	class UClass* DBNOHoistSprite;
	class UClass* DBNOPlaceSprite;
	class UClass* HeldObjectPlaceSprite;
	class UClass* CraftSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_BattleLabDeviceMenu : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeGhostMode : public UFortMobileActionButtonBehavior
{
public:
	class UClass* GhostModeOffSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeGlobalOptions : public UFortMobileActionButtonBehavior
{
public:
	bool bCreativeQuickMenuDisplayed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativePhone : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativePropLockInPlace : public UFortMobileActionButtonBehavior
{
public:
	class UClass* LockedSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeRotationAxis : public UFortMobileActionButtonBehavior
{
public:
	class UClass* RotateXAxisSprite;
	class UClass* RotateYAxisSprite;
	class UClass* RotateZAxisSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeRotationReset : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeScaleAxis : public UFortMobileActionButtonBehavior
{
public:
	class UClass* GrowSprite;
	class UClass* WidthResizeSprite;
	class UClass* HeightResizeSprite;
	class UClass* DepthResizeSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeScaleReset : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_CreativeToggleGravity : public UFortMobileActionButtonBehavior
{
public:
	class UClass* GravityOffSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_Jump : public UFortMobileActionButtonBehavior
{
public:
	class UClass* ThrowSprite;
	class UClass* AbilitySystemComponent;
	struct GameplayTagContainer PawnTagsCollapse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_OctopusToggleGrapple : public UFortMobileActionButtonBehavior
{
public:
	class UClass* GrappleStopSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_PushToTalk : public UFortMobileActionButtonBehavior
{
public:
	class UClass* VoiceActiveSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_QuickHeal : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_SecondaryAbility : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_Shoot : public UFortMobileActionButtonBehavior
{
public:
	class UClass* PlaceItemSprite;
	class UClass* ThrowSprite;
	class UClass* PickaxeSprite;
	struct GameplayTagContainer DefaultIconOverrideItems;
	TArray<struct IconPicker> PawnSpriteOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_Use : public UFortMobileActionButtonBehavior
{
public:
	class UClass* DoorSprite;
	class UClass* InterrogateSprite;
	class UClass* CancelSprite;
	struct GameplayTag CreativeMatchmakingPortalComparisonTag;
	class UClass* GasketTomatoHenchmanHackSprite;
	struct GameplayTag GasketTomatoHenchmanTag;
	TArray<struct IconPicker> PawnSpriteOverrides;
	struct GameplayTagContainer ReceiverTagsRequiringVisibilityOverride;
	struct GameplayTagContainer InstigatorTagsRequiringVisibilityOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_Zoom : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent : public UObject
{
public:
	class UClass* ButtonBehavior;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_IconPicker : public UFortMobileButtonBehaviorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_TagIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker
{
public:
	TArray<struct IconPicker> SpriteOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_AbilityIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{
public:
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_Visibility : public UFortMobileButtonBehaviorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_TagVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{
public:
	TArray<struct TagVisibility> TagVisibilities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_AbilityTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_ActionBindingIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker
{
public:
	TArray<struct ActionBindingIconPicker> ActionBindingSpriteOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_ActionBindingVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{
public:
	TArray<struct ActionBindingVisibility> ActionBindingVisibilites;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_BlockedAbilityTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_ContextIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{
public:
	class UClass* ContextTracker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_ContextTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:
	class UClass* ContextTracker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_GameplayMessageTagVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{
public:
	TArray<struct GameplayMessageVisibility> GameplayMessageVisibilities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_HeldObjectTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:
	class UClass* AbilityComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_HUDVisibilityIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_InteractionIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{
public:
	class UClass* InteractionComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_InteractionTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:
	class UClass* InteractionComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_PlayerTagIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_PlayerTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_PlaylistTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_WeaponIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileButtonBehaviorComponent_WeaponTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileCustomizableHUD : public CommonUserWidget
{
public:
	class UClass* BaseHUDWidgetRegistry;
	class UClass* HUDWidgetRegistry;
	struct FortMobileHUDLayoutProfile LayoutProfile;
	class UClass* HUDLayer_HUDWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileEditableText : public EditableText
{
public:
	float MobileFontSizeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDContextModel : public UDataAsset
{
public:
	struct FText ContextLayoutName;
	int DisplayOrderPriority;
	bool bIsEditingContextByDefault;
	class UClass* ContextIcon;
	struct GameplayTag ContextLayoutSaveTag;
	struct FortMobileContextFilter ContextFilter;
	struct GameplayTagContainer UseableHUDWidgetTags;
	TArray<struct FortMobileHUDContextModelExtension> Extensions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDElementProxy : public FortMobileHUDElement
{
public:
	struct FText WidgetName;
	bool AppendWidgetAndBehaviorNames;
	struct LinearColor InBoundsHighlightColor;
	struct LinearColor OutOfBoundsProxyHighlightColor;
	class UClass* Image_SelectionHighlight;
	class UClass* Image_OutOfBoundsIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDLayer : public PanelWidget
{
public:
	TArray<class UClass*> ActiveHUDWidgets;
	TArray<class UClass*> InactiveHUDWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDLayoutToolV2 : public CommonActivatablePanelLegacy
{
public:
	float OverlapPercentageToColapsePanels;
	float NonEditableHUDWidgetOpacity;
	float PanelOpacityWhenDragedOver;
	float OnOpenSubPanelAnimPlaybackSpeed;
	struct PrimaryContentSetup PrimaryContentSetup;
	class UClass* HUDWidgetRegistry;
	class UClass* HudLayoutToolPopupClass;
	class UClass* HudLayoutToolTutorialPopupClass;
	struct HUDLayoutToolV2_PopupContent ExitHudLayoutToolPopupContent;
	struct HUDLayoutToolV2_PopupContent DeleteOutOfBoundsHUDProxiesPopupContent;
	struct HUDLayoutToolV2_PopupContent RevertAllProxiesPopupContent;
	struct HUDLayoutToolV2_PopupContent SwitchHUDProfileSavePopupContent;
	struct HUDLayoutToolV2_PopupContent SwitchHUDProfileDeletePopupContent;
	struct HUDLayoutToolV2_PopupContent CreateNewCustomLayoutPopupContent;
	struct HUDLayoutToolV2_PopupContent CustomLayoutSlotsFullPopupContent;
	struct HUDLayoutToolV2_ToastNotificationContent SuccessToasterContent;
	struct HUDLayoutToolV2_ToastNotificationContent FailureToasterContent;
	struct HUDLayoutToolV2_ToastNotificationContent LocalFailureToasterContent;
	struct HUDLayoutToolV2_ToastNotificationContent CloudFailureToasterContent;
	struct GameplayTag AnchorsCustomPropertyTag;
	float DoubleClickDelay;
	struct FortMobileHUDLayoutProfile LayoutProfile;
	struct FortMobileHUDLayoutProfile CachedSavedLayoutProfile;
	class UClass* SelectedWidgetProxy;
	TArray<class UClass*> QueuedPopups;
	class UClass* VirtualCanvas_WidgetLayer;
	class UClass* HUDLayer_HUDWidgetProxies;
	class UClass* Overlay_VirtualCanvasWorkspace;
	class UClass* Grid_Visual;
	class UClass* Text_ProfileName;
	class UClass* Text_WidgetName;
	class UClass* Text_ContextName;
	class UClass* Button_Exit;
	class UClass* Button_ResetVirtualCanvas;
	class UClass* Button_ToggleControlPanel;
	class UClass* Button_ToggleWidgetCatalog;
	class UClass* CanvasPanel_ControlsContainer;
	class UClass* VerticalBox_ControlPanelContainer;
	class UClass* ControlPanel_Controls;
	class UClass* ProfileSelectionPanel_Profiles;
	class UClass* WidgetCatalog_Catalog;
	class UClass* LinkAcrossPanel_LinkManagementWindow;
	class UClass* Anim_ControlPanelToggle;
	class UClass* Anim_ToggleWidgetCatalog;
	class UClass* Toaster_Notifications;
	class UClass* TooltipLayer_Messages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDLayoutToolV2_ControlPanel : public CommonUserWidget
{
public:
	float PanelOpacityWhenDragedOver;
	class UClass* Button_Save;
	class UClass* Button_RevertAll;
	class UClass* Button_Exit;
	class UClass* Button_OpenProfileSelectionPanel;
	class UClass* Button_SwitchContexts;
	class UClass* Button_SwitchProperties;
	class UClass* GridSnapOption_Controls;
	class UClass* Switcher_Controls;
	class UClass* ContextSelector_ContextLayouts;
	class UClass* PropertyPanel_WidgetProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDLayoutToolV2_PresetEditorTool : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileHUDLayoutToolV2_WidgetCatalog : public CommonUserWidget
{
public:
	class UClass* HUDWidgetRegistry;
	float PanelOpacityWhenDragedOver;
	class UClass* Image_LayoutIcon;
	class UClass* Text_ContextName;
	class UClass* Button_DisplayButtonPreviews;
	class UClass* Button_DisplayWidgetPreviews;
	class UClass* Switcher_Previews;
	class UClass* EntryBox_ButtonPreviews;
	class UClass* EntryBox_WidgetPreviews;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHudWidgetContentComponent : public UObject
{
public:
	class UClass* WidgetBehavior;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHudWidgetContentComponent_Highlight : public UFortMobileHudWidgetContentComponent
{
public:
	struct GameplayTag HighlightTag;
	struct TSoftClassPtr<UObject> HighlightWidgetSoftClass;
	class UClass* CurrentHighlight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHudWidgetContentComponent_RadialCooldown : public UFortMobileHudWidgetContentComponent
{
public:
	struct TSoftClassPtr<UObject> RadialCooldownSoftClass;
	struct GameplayTag GameplayTagToListen;
	class UClass* CurrentRadialCooldownWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetCustomPropertyModel : public UObject
{
public:
	bool bIsVisibleToTheUser;
	struct FString PropertyDevName;
	struct FText PropertyDisplayName;
	struct GameplayTag PropertyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetCustomPropertyModel_Anchors : public UFortMobileHUDWidgetCustomPropertyModel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetCustomPropertyModel_Bool : public UFortMobileHUDWidgetCustomPropertyModel
{
public:
	bool DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetCustomPropertyModel_Number : public UFortMobileHUDWidgetCustomPropertyModel
{
public:
	int DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetCustomPropertyModel_Scalar : public UFortMobileHUDWidgetCustomPropertyModel
{
public:
	double DefaultValue;
	double PropertyLowerBound;
	double PropertyUpperBound;
	double PropertyStepSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetCustomPropertySettingRegistry : public UFortSettingRegistry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileHUDWidgetRegistry : public UFortMobileHUDWidgetRegistryBase
{
public:
	TArray<struct HUDWidgetBehaviorRegistryEntry> HUDWidgetBehaviorRegistry;
	TArray<struct HUDWidgetRegistryEntry> HUDWidgetRegistry;
	TArray<class UClass*> ContextLayoutModels;
	TArray<struct FortMobileHUDContextModelExtension> ContextLayoutModelExtensions;
	TArray<struct HUDWidgetBehaviorExtensionsRegistryEntry> HUDWidgetBehaviorExtensions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileImage : public Image
{
public:
	float MobileSizeMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMobileKeyButton : public FortMobileHUDElement
{
public:
	class UClass* KeybindWidget;
	class UClass* Behavior;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileKeyButtonBehavior : public UHUDWidgetBehavior
{
public:
	struct Key Key;
	Unknown Button;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortModalContainerData : public UDataAsset
{
public:
	TArray<struct FortModalContainerSizeEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortModalContainerWidget : public Widget
{
public:
	EModalContainerSize SizeConstraint;
	TArray<struct FortModalContainerSizeEntry> DefaultSizeEntries;
	class UClass* OverrideSizeEntries;
	class UClass* TopContent;
	class UClass* MiddleContent;
	class UClass* BottomContent;
	class UClass* BackgroudContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMOTDWidget : public CommonActivatablePanelLegacy
{
public:
	class UClass* Text_Header;
	class UClass* Text_Body;
	class UClass* Button_Close;
	class UClass* ScrollBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMediaInfo : public UObject
{
public:
	class UClass* MediaPlayer;
	class UClass* MediaSource;
	bool bVideoStreamed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMovieWidget : public FortUserWidget
{
public:
	struct FScriptMulticastDelegate OnMediaOpened;
	class UClass* MediaPlayer;
	class UClass* MediaTexture;
	bool bIncludeAudio;
	class UClass* SoundComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMTXButton : public CommonButtonLegacy
{
public:
	class UClass* Text_Amount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMtxOfferData : public UPrimaryDataAsset
{
public:
	struct FText DisplayName;
	struct FText ShortDisplayName;
	struct FText ShortDescription;
	struct FText SubTitleText;
	struct FText DisclaimerText;
	TArray<struct FortItemQuantityPair> GrantOverride;
	struct SlateBrush TileImage;
	struct SlateBrush BadgeImage;
	struct SlateBrush DetailsImage;
	struct SlateBrush SimpleImage;
	class UClass* DetailsBadge;
	TArray<struct FortMtxDetailsAttribute> DetailsAttributes;
	struct FortMtxGradient Gradient;
	struct LinearColor Background;
	struct SlateBrush BackgroundImage;
	struct LinearColor UpsellPrimaryColor;
	struct LinearColor UpsellSecondaryColor;
	struct LinearColor UpsellTextColor;
	bool bUseBaseColors;
	EFortMtxOfferDisplaySize DisplaySize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMtxStoreSelectionPopup : public CommonActivatablePanelLegacy
{
public:
	class UClass* Button_Epic;
	class UClass* Button_Epic_NonCTA;
	class UClass* Switcher_EpicButton;
	class UClass* Button_Samsung;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMulchItemTileButton : public FortItemTileButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMulchConfirmationModalWidget : public FortActivatablePanel
{
public:
	Unknown HostItemManagementMulchPanel;
	class UClass* RecycleItemTileView;
	class UClass* RecycleDetailsPanel;
	class UClass* CommonLoadGuard_LatentSpinner;
	class UClass* HorizontalBox_Buttons;
	class UClass* InventoryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMultiFactorAuthWidget : public CommonActivatablePanelLegacy
{
public:
	class UClass* Button_Continue;
	class UClass* Button_Cancel;
	class UClass* Text_Error;
	class UClass* EditText_MultiFactorCode;
	class UClass* Text_Prompt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMultiSizeItemCard : public FortItemWidget_NUI
{
public:
	EFortItemCardSize BPItemCardSize;
	bool ShouldDisplayItemAsReward;
	int QuantityOverride;
	EFortRarity RarityOverride;
	EFortItemType EmptyItemType;
	bool ShouldSuppressItemTypeIcon;
	bool ShouldSuppressTierMeter;
	bool ShouldCollapseBorderPadding;
	bool ShouldCollapseItem;
	bool ShouldAutoHideDurability;
	bool ShouldCollapseQuantity;
	bool ShouldShowDurabilityRepairMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNavigatablePage : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNewAccountWarning : public CommonActivatablePanelLegacy
{
public:
	class UClass* Button_NewAccount;
	class UClass* Button_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNodeCanvasEntityInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNodeCanvasInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate FinishedDisplayingNotification;
	float DisplayTime;
	float MinDisplayTime;
	bool bRushDisplay;
	int RushWidgetThreshold;
	class UClass* LinkedNotification;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_AssistedPlayer : public FortNotificationEntry
{
public:
	class UClass* Text_Header;
	class UClass* Text_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_LevelUp : public FortNotificationEntry
{
public:
	class UClass* Text_Header;
	class UClass* Text_Description;
	class UClass* Text_RewardType;
	class UClass* Reward_Preview;
	class UClass* Reward_Preview_Shadow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_MiniChallenge : public FortNotificationEntry
{
public:
	Unknown CompletedQuest;
	class UClass* MiniChallenge;
	class UClass* XpSubNotification;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMultipleReceivedItemWidget : public CommonUserWidget
{
public:
	class UClass* Reward_Preview;
	class UClass* Reward_Preview_Shadow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_MultipleReceivedItem : public FortNotificationEntry
{
public:
	bool bWillReceiveBonus;
	class UClass* Text_Header;
	class UClass* DisplayItem_1;
	class UClass* DisplayItem_2;
	class UClass* DisplayItem_3;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_PunchCard : public FortNotificationEntry
{
public:
	Unknown CompletedQuest;
	class UClass* PunchCard;
	class UClass* XpSubNotification;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_Quest : public FortNotificationEntry
{
public:
	int GoalCount;
	int CurrentCount;
	int PreviousCount;
	bool bNeedsTurnInNotification;
	class UClass* LazyImage_SourceIcon;
	class UClass* Text_Header;
	class UClass* DateTimeText_TimeRemaining;
	class UClass* Text_Description;
	class UClass* RichText_ObjectivesCompleted;
	class UClass* Text_FlavorText;
	class UClass* Border_AssistedBy;
	class UClass* XpSubNotification;
	Unknown WeakQuest;
	struct TSoftClassPtr<UObject> DefaultPortraitDisplayAsset;
	struct FName ObjectiveName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNotificationEntry_ReceivedItem : public FortNotificationEntry
{
public:
	class UClass* Text_RewardType;
	class UClass* Text_Header;
	class UClass* Text_Description;
	class UClass* Reward_Preview;
	class UClass* Reward_Preview_Shadow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNumericTextBlock : public TextBlock
{
public:
	struct FScriptMulticastDelegate CountFinished;
	int StartingValue;
	int DestValue;
	bool bUseGrouping;
	bool bAsCurrency;
	float EaseOutExp;
	float UpdateInterval;
	float ShrinkTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOpenCardPackModal : public FortActivatablePanel
{
public:
	class UClass* CardPackList;
	class UClass* OpenAllButton;
	class UClass* CancelButton;
	struct FScriptMulticastDelegate BPOnRequestOpenCardPack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOptionsCategoryHeader : public UObject
{
public:
	struct FText DisplayText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOptionsMenu : public FortActivatablePanel
{
public:
	struct DataTableRowHandle ApplyInputAction;
	struct DataTableRowHandle ApplyAndTestInputAction;
	struct DataTableRowHandle TestInputAction;
	struct DataTableRowHandle ToggleModeInputAction;
	struct DataTableRowHandle ResetToDefaultInputAction;
	struct DataTableRowHandle InputsResetToDefaulInputAction;
	struct DataTableRowHandle BackDataInputAction;
	class UClass* VideoTabClass;
	struct TSoftClassPtr<UObject> TabVideoOptions;
	class UClass* GameplayTabClass;
	class UClass* HUDTabClass;
	class UClass* TouchOptionsClass;
	class UClass* KeyboardMouseClass;
	class UClass* ControllerSensitivityTabClass;
	struct TSoftClassPtr<UObject> ControllerSettingsOptions;
	class UClass* AudioOptionsClass;
	class UClass* InputTabClass;
	struct TSoftClassPtr<UObject> TabInputOptions;
	class UClass* GamepadTabClass;
	class UClass* GamepadTabClassV2;
	struct TSoftClassPtr<UObject> TabGamepadOptions;
	struct TSoftClassPtr<UObject> TabGamepadOptionsV2;
	class UClass* AccountTabClass;
	struct TSoftClassPtr<UObject> TabAccountOptions;
	class UClass* BorderBackgroundStyle;
	class UClass* ProgressModalClass;
	class UClass* IconTabButtonClass;
	class UClass* SavingModalInstance;
	TArray<struct FName> TabIds;
	TArray<struct FortTabButtonLabelInfo> TabLabels;
	TArray<class UClass*> TabWidgets;
	struct TimerHandle ResetVideoOptionsTimer;
	struct SlateBrush VideoBrush;
	struct SlateBrush GameplayBrush;
	struct SlateBrush GameUIBrush;
	struct SlateBrush TouchOptionsBrush;
	struct SlateBrush KeyboardMouseBrush;
	struct SlateBrush ControllerSensitivityBrush;
	struct SlateBrush AudioBrush;
	struct SlateBrush InputBrush;
	struct SlateBrush GamepadOptionsBrush;
	struct SlateBrush AccountPrivacyBrush;
	struct GameplayTagContainer HUDHideOnMenuTags;
	bool bVideoTabSelected;
	bool bApplyVisible;
	class UClass* SizeBox_HeadingLeto;
	class UClass* TabList_Categories;
	class UClass* SettingTabSwitcher;
	class UClass* Text_Title;
	class UClass* SavingLayer;
	class UClass* Message;
	class UClass* Button_Close;
	class UClass* VideoSettingsAccept;
	class UClass* VideoSettingsCancel;
	class UClass* Border_Background;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortOptionsMenuInputData : public UDataAsset
{
public:
	struct FName ActionName;
	struct FText DisplayText;
	struct FText PrimaryText;
	struct FText SecondaryText;
	int ElementNumber;
	class UClass* TabText;
	struct FortActionKeyMapping ActionKeyMapping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOptionsMenuSetting : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate SettingValueChanged;
	ESettingType SettingType;
	struct FText NameText;
	class UClass* TabTooltipText;
	struct FText HoverText;
	struct TimerHandle TooltipTimer;
	int MinIntegralDigits;
	int MaxIntegralDigits;
	int MinFractionalDigits;
	int MaxFractionalDigits;
	float MinSensitivityValue;
	float MaxSensitivityValue;
	float PreviousSettingValue;
	bool bDisplayRenderScale;
	bool HideLabelText;
	bool HideSpaceRight;
	class UClass* Slider_Menu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingInfo : public UObject
{
public:
	ESettingType SettingType;
	class UClass* SettingWidgetType;
	struct FText OptionDisplayText;
	struct FText OptionHoverText;
	int MinIntegralDigits;
	int MaxIntegralDigits;
	int MinFractionalDigits;
	int MaxFractionalDigits;
	float StepSize;
	float MinSensitivityValue;
	float MaxSensitivityValue;
	ERoundingMode RoundingMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOptionsTab_NewSystemShim : public FortOptionsTab
{
public:
	class UClass* Settings_Panel;
	class UClass* Registry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabVideoOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabAudioOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabGameplayOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabHUDOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabMouseAndKeyboardOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabMouseAndKeyboardBindingsOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabGamepadOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabGamepadButtonMappingOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabTouchOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabAccountOptions_TempNew : public FortOptionsTab_NewSystemShim
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortOutpostStorageItemPicker : public FortItemPickerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPageNavigationButton : public CommonButtonBase
{
public:
	class UClass* Text_ButtonLabel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPageNavigator : public CommonActivatableWidget
{
public:
	class UClass* Button_Next;
	class UClass* Button_Previous;
	class UClass* SwipePanel_PagesNavigation;
	class UClass* ScrollBox_Pages;
	class UClass* VBox_Pages;
	bool bEnableSnapScrolling;
	float SnapScrollingThreshold;
	class UClass* EntryBox_PagesPips;
	class UClass* ButtonGroup_PagesPips;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls : public FortActivatablePanel
{
public:
	class UClass* Details_Settings;
	class UClass* Button_CloseScreen;
	class UClass* Button_CloseMobile;
	class UClass* Switcher_SubViews;
	class UClass* SubView_EnterPin;
	class UClass* SubView_SetupPin;
	class UClass* SubView_AskToEnableControls;
	class UClass* SubView_VerifyEmail;
	class UClass* SubView_SetupEmail;
	class UClass* SubView_DisplaySettings;
	class UClass* SubView_DisableParentalControls;
	class UClass* SubView_AskToReEnable;
	class UClass* SubView_Renabling;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControlsSubScreen : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_PinSubScreen : public FortParentalControlsSubScreen
{
public:
	class UClass* Button_SubmitPin;
	class UClass* Text_Pin_FailReason;
	class UClass* EditableText_Pin_Entry;
	class UClass* EditableText_Pin_SecondEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_SettingModifyingSubScreen : public FortParentalControlsSubScreen
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_EnterPin : public FortParentalControls_PinSubScreen
{
public:
	class UClass* Button_ForgotPin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_SetupPin : public FortParentalControls_PinSubScreen
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_AskToEnableControls : public FortParentalControlsSubScreen
{
public:
	class UClass* Button_AskToEnableControls;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_VerifyEmail : public FortParentalControlsSubScreen
{
public:
	class UClass* Button_VerifyEmail_Next;
	class UClass* Button_ChangeEmail;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_SetupEmail : public FortParentalControlsSubScreen
{
public:
	class UClass* Button_SetupEmail_Next;
	class UClass* Button_SetupEmail;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_DisplaySettings : public FortParentalControls_SettingModifyingSubScreen
{
public:
	class UClass* Text_SaveFail;
	class UClass* Button_SaveSettings;
	class UClass* Button_MoreSettings;
	class UClass* Button_DisableParentalControls;
	class UClass* Panel_Settings;
	class UClass* Registry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_DisableParentalControls : public FortParentalControls_SettingModifyingSubScreen
{
public:
	class UClass* Button_DisableParentalControlsConfirm;
	class UClass* Button_DisableParentalControlsCancel;
	class UClass* Text_DisablingParentalControlsStatus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_AskToReEnable : public FortParentalControlsSubScreen
{
public:
	class UClass* Button_AskToReEnable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortParentalControls_Renabling : public FortParentalControls_SettingModifyingSubScreen
{
public:
	class UClass* Text_ReEnableFail;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPresenceUserListEntry : public FortSocialListUserEntryBase
{
public:
	class UClass* Avatar_MemberIcon;
	class UClass* BuffetInfo;
	class UClass* Border_OnlineStatusIndicator;
	class UClass* Border_Background;
	class UClass* Border_Highlight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartyMemberListEntry : public FortPresenceUserListEntry
{
public:
	class UClass* Image_Crown;
	class UClass* VoiceIcon_Status;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPartySuggestionButton : public CommonButtonLegacy
{
public:
	class UClass* Image_PartySize;
	class UClass* Text_SocialName;
	class UClass* Text_Description;
	class UClass* Text_ActionText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPCBInfoPanel : public UserWidget
{
public:
	bool bDisplayPCBData;
	struct FText PCB_Header;
	struct FText PCB_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPerksWidget_NUI : public CommonUserWidget
{
public:
	class UClass* Hero;
	EFortPerksWidgetState State;
	class UClass* EvolutionOption;
	class UClass* PerkTierWidgetType;
	class UClass* PerkWidgetType;
	class UClass* TooltipContext;
	class UClass* PerksListLoadGuard;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPerkTierWidget_NUI : public CommonUserWidget
{
public:
	struct FortUIPerkTier FortPerkTier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPerkVictoryScreen : public FortPostGameScreen
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPerkWidget_NUI : public CommonUserWidget
{
public:
	struct FortUIPerk Perk;
	class UClass* CachedTooltipContext;
	bool bShouldUseSummaryTooltip;
	class UClass* CachedTooltipLoadingWrapper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ChallengeScreenCategoryTab : public CommonButtonLegacy
{
public:
	class UClass* Text_TabName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPersistentLeaderboardScreen : public FortCompetitiveLeaderboardScreen
{
public:
	struct DataTableRowHandle ColorSchemeRowHandle;
	struct DataTableRowHandle TabViewLeftAction;
	struct DataTableRowHandle TabViewRightAction;
	class UClass* Button_Close;
	class UClass* Button_Back;
	class UClass* EntryBox_ViewButtons;
	class UClass* ActionWidget_TabLeft;
	class UClass* ActionWidget_TabRight;
	class UClass* Switcher_ViewTabs;
	class UClass* ActivatableContent_MeViewTab;
	class UClass* GlobalTabButton;
	class UClass* MeTabButton;
	class UClass* ViewButtonGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPersonalizeGiftTab : public CommonActivatableWidget
{
public:
	int PersonalizedMessageLength;
	struct FText DefaultGiftMessage;
	TArray<struct TSoftClassPtr<UObject>> GiftBoxes;
	class UClass* SelectedGiftBoxButton;
	TArray<class UClass*> GiftBoxItemDefs;
	class UClass* TileView_GiftBoxes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPhoenixLevelProgressionWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPickerContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnShowPicker;
	struct FScriptMulticastDelegate OnPickerConfirm;
	struct FScriptMulticastDelegate OnPickerCancel;
	struct FScriptMulticastDelegate OnPickerOptionMoved;
	struct FScriptMulticastDelegate OnPickerOptionChosen;
	struct FScriptMulticastDelegate OnPickerRefreshItems;
	TArray<struct ItemDefOptionData> CustomPickerMenuItems;
	TArray<struct SquadQuickChatOptionData> SquadChatMenuItems;
	Unknown TrackedTrapsMap;
	class UClass* PickerData;
	TArray<class UClass*> AccountTrapSchematics;
	TArray<struct FortPickerTemporaryWheel> AvailableWheels;
	int CurrentWheelIndex;
	Unknown ConsumableStackCount;
	Unknown CategoryTitles;
	TArray<struct GameplayTag> CategoryTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPickerData : public UDataAsset
{
public:
	TArray<struct BuildingCategoryOptionData> BuildingCategories;
	TArray<struct BuildingOptionData> WallOptions;
	TArray<struct BuildingOptionData> FloorOptions;
	TArray<struct BuildingOptionData> StairOptions;
	TArray<struct BuildingOptionData> RoofOptions;
	TArray<struct ItemCategoryOptionData> TrapCategories;
	TArray<struct ItemCategoryOptionData> WeaponCategories;
	TArray<struct RadialOptionData> SocialCategories;
	TArray<struct ChatOptionData> ChatOptions;
	TArray<class UClass*> SquadChatOptionBanks;
	TArray<struct MapNoteOptionData> MapNoteOptions;
	TArray<struct EmoteOptionData> EmoteOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPickerOverlay : public CommonActivatableWidget
{
public:
	struct FName GamepadActionName;
	struct FName KBMActionName;
	bool bRememberLastItem;
	struct DataTableRowHandle VirtualAcceptInputAction;
	class UClass* RadialMenu_Picker;
	class UClass* Image_RadialHighlight;
	struct FName RadialSelectionMaterialParameterName;
	class UClass* RadialHighlightMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayedBeforeSelect : public CommonUserWidget
{
public:
	class UClass* Button_Yes;
	class UClass* Button_No;
	class UClass* BackgroundBlur_PendingSpinner;
	class UClass* Text_Title;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerBanned : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialBanModal : public CommonActivatablePanelLegacy
{
public:
	class UClass* Button_CloseModal;
	class UClass* RichText_TimeRemaining;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerBanner : public Widget
{
public:
	bool bShowBorder;
	bool bUseLargeTexture;
	bool bSquareShape;
	struct Vector2D DesiredSize;
	class UClass* DefaultBorderlessBannerMaterial;
	class UClass* DefaultBorderlessSquareBannerMaterial;
	struct SlateBrush BannerBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerPowerRating : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnPowerRatingUpdated;
	EFortPlayerPowerRatingType PowerRatingType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerPowerRatingToast : public FortToastWidget
{
public:
	class UClass* Text_PowerDifference;
	class UClass* Banner_MemberBanner;
	class UClass* Text_PowerRating;
	class UClass* Text_Title;
	class UClass* Text_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerProfileBannerEditor : public CommonUserWidget
{
public:
	ESaveProfileForBanners ProfileToSave;
	bool bCanCloseBannerEditor;
	TArray<struct FName> IconCategories;
	TArray<struct FName> ColorCategories;
	struct FName ChosenIcon;
	struct FName ChosenIconCategory;
	struct FName ChosenColor;
	struct FName ChosenColorCategory;
	class UClass* Button_CloseEditorButton;
	class UClass* Button_EditIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerProfileBannerEditorTile : public CommonButtonLegacy
{
public:
	Unknown Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerProfileModalWidget : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyAnswerWidgetBase : public CommonActivatableWidget
{
public:
	class UClass* CurrentAnswerContainer;
	class UClass* Question;
	struct DateTime StopwatchStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyAnswerWidgetDataTable : public UPrimaryDataAsset
{
public:
	Unknown Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyMultipleChoiceAnswerWidgetBase : public FortPlayerSurveyAnswerWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyButtonGroupMultipleChoiceAnswerWidgetBase : public FortPlayerSurveyMultipleChoiceAnswerWidgetBase
{
public:
	class UClass* ButtonGroup;
	TArray<class UClass*> ButtonContainerWidgets;
	TArray<class UClass*> ButtonWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyMultipleSelectionAnswerWidgetBase : public FortPlayerSurveyAnswerWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyButtonListMultipleSelectionAnswerWidgetBase : public FortPlayerSurveyMultipleSelectionAnswerWidgetBase
{
public:
	TArray<struct FortPlayerSurveyButtonListMultipleSelectionAnswerWidgetBaseInternalButtonData> ButtonWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyCheatManager : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyResponseWidget : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyChoiceResponseWidget : public FortPlayerSurveyResponseWidget
{
public:
	class UClass* DynamicEntryBox_Responses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyCMSScheduler : public UObject
{
public:
	class UClass* CMSSurveyDataSource;
	class UClass* SurveyTracker;
	class UClass* SurveyManager;
	class UClass* Player;
	TArray<class UClass*> ActiveSurveyList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyCMSSurveyDataSource : public UObject
{
public:
	class UClass* CMSManager;
	class UClass* CMSContext;
	Unknown FactoryMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyCMSSurveyFactory : public UObject
{
public:
	TArray<class UClass*> Questions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyCMSSurveyLegacy : public UFortPlayerSurveyBase
{
public:
	class UClass* Parent;
	struct FortPlayerSurveyConditionsContextLegacy ConditionsContext;
	struct FScriptMulticastDelegate OnDescriptionChangedDelegate;
	struct FScriptMulticastDelegate OnQuestionChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyCMSTracker : public UObject
{
public:
	class UClass* Player;
	class UClass* McpProfile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnDisplayOneSurveyRequested;
	class UClass* SurveyManager;
	class UClass* SurveyTracker;
	class UClass* SurveyScheduler;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyDispatcher : public UObject
{
public:
	class UClass* WidgetClass;
	class UClass* OwningPlayer;
	class UClass* SurveyContext;
	class UClass* CurrentWidget;
	struct FScriptMulticastDelegate OnAllSurveysFinishedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyFreeFormTextAnswerWidgetBase : public FortPlayerSurveyAnswerWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyInterpreter : public UObject
{
public:
	class UClass* CMSManager;
	class UClass* CMSContext;
	class UClass* CMSTracker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyMultipleChoiceResponseBase : public FortPlayerSurveyChoiceResponseWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyPanelBase : public FortActivatablePanel
{
public:
	struct FScriptMulticastDelegate OnPanelDismissed;
	class UClass* Survey;
	class UClass* PanelContents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyQuestionDisplayWidgetBase : public CommonUserWidget
{
public:
	class UClass* AnswerWidgetDataTable;
	class UClass* CurrentQA;
	class UClass* CurrentAnswerWidget;
	Unknown MapOfWidgets;
	class UClass* Widget_Empty;
	class UClass* Switcher_Main;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyRatingChoiceBase : public CommonButtonBase
{
public:
	class UClass* Text_RatingValue;
	class UClass* Text_Label;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyRatingResponseBase : public FortPlayerSurveyResponseWidget
{
public:
	class UClass* ResponseGroup;
	class UClass* DynamicEntryBox_Responses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyResponseChoiceBase : public CommonButtonBase
{
public:
	class UClass* Text_Response;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveySingleChoiceResponseBase : public FortPlayerSurveyChoiceResponseWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerSurveyStatsPrecacher : public UObject
{
public:
	class UClass* GameInstance;
	class UClass* GameStateAthena;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyWidgetBase : public CommonActivatableWidget
{
public:
	class UClass* Text_Title;
	class UClass* Text_Question;
	class UClass* CanvasPanel_ResponseFrame;
	class UClass* Button_Skip;
	class UClass* Switcher_NextButton;
	class UClass* Button_NextQuestion;
	class UClass* Button_Submit;
	class UClass* Text_QuestionCount;
	struct DataTableRowHandle DeselectInputAction;
	struct DataTableRowHandle ExitInputAction;
	Unknown ResponseWidgetMap;
	Unknown ResponseWidgetInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerSurveyWidgetBaseLegacy : public UserWidget
{
public:
	struct FText QuestionFormatText;
	class UClass* QuestionSelectorClass;
	class UClass* Survey;
	class UClass* ActiveQuestionSelector;
	class UClass* Widget_AnswerSelector;
	class UClass* Text_SurveyTitle;
	class UClass* Text_QuestionNumber;
	class UClass* Text_Question;
	class UClass* Text_Subtitle;
	class UClass* Switcher_NextButton;
	class UClass* Button_NextQuestion;
	class UClass* Button_Finish;
	class UClass* Button_Cancel;
	class UClass* Button_Close;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaylistUIExtensionLoader : public UObject
{
public:
	Unknown ObjectBoundWidgets;
	TArray<class UClass*> OrphanWidgets;
	TArray<class UClass*> MinigameWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPrioritizedWidgetSwitcher : public CommonWidgetSwitcherLegacy
{
public:
	float CachingTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaylistUIExtensionPrioritizedWidgetSwitcher : public FortPrioritizedWidgetSwitcher
{
public:
	EHorizontalAlignment ContentHorizontalAlignment;
	EVerticalAlignment ContentVerticalAlignment;
	TArray<EUIExtensionSlot> ExtensionSlots;
	class UClass* PlaylistUIExtensionLoader;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaylistUIExtensionSlot : public DynamicEntryBox
{
public:
	TArray<EUIExtensionSlot> ExtensionSlots;
	class UClass* PlaylistUIExtensionLoader;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlaysetInventoryPanelData : public UFortCreativeItemListPanelData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPopUpCenterMessageModalPanel : public FortActivatablePanel
{
public:
	class UClass* Button_Leave;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPortalHUDDetails : public FortActorIndicatorWidget
{
public:
	class UClass* MarkerPointer;
	class UClass* MobileInfo_Matchmaking_Switcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameMenuEntryOverlay : public UserWidget
{
public:
	class UClass* Text_Name;
	class UClass* InputAction_Select;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameMenuEntry : public CommonButtonLegacy
{
public:
	struct DataTableRowHandle HoldInputAction;
	class UClass* Overlay_Entry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameMenuItemShopEntry : public FortPostGameMenuEntry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameMenuListView : public ListViewBase
{
public:
	class UClass* EntryClass;
	class UClass* ItemShopEntryClass;
	float EntrySpacing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameMobileButtonOverlay : public CommonUserWidget
{
public:
	class UClass* Button_PushToTalk;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameNewQuestsWidget : public CommonUserWidget
{
public:
	float NewQuestsEntryBoxDisplayTime;
	class UClass* EntryBox_NewQuests;
	TArray<class UClass*> UpdatedQuestObjectiveInfoDisplaying;
	TArray<class UClass*> UpdatedQuestObjectiveInfoToDisplay;
	struct FScriptMulticastDelegate OnPlayNewQuestsIntroFinishedDelegate;
	struct FScriptMulticastDelegate OnPlayNewQuestsEntryBoxIntroFinishedDelegate;
	struct FScriptMulticastDelegate OnPlayNewQuestsEntryBoxOutroFinishedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameScreenContainer : public Widget
{
public:
	int ScreenPreviewIndex;
	TArray<class UClass*> AllScreens;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPostGameScreenRoot : public CommonActivatableWidget
{
public:
	class UClass* PreviewPlaylistUIInfo;
	class UClass* DefaultScreenOrder;
	TArray<class UClass*> PostGameScreenClassesToCreate;
	TArray<class UClass*> PostGameScreens;
	class UClass* Spacer_ClickCatcher;
	class UClass* Overlay_Placement;
	class UClass* PostGameScreenContainer_Main;
	class UClass* HUD_CinematicBars;
	class UClass* ScaleBox_CinematicBars_UserSpecified;
	class UClass* ScaleBox_PlacementOverlay_UserSpecified;
	class UClass* HUD_NewQuestsWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPrioritizedWidget : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPrivacyBase : public FortActivatablePanel
{
public:
	class UClass* AllowFriendsOfFriendsButton;
	class UClass* AllowFriendsOfFriendsContainer;
	class UClass* ButtonGroup;
	Unknown PrivacyButtonMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProfileStatsMainTile : public CommonUserWidget
{
public:
	class UClass* ValueTextBlock;
	class UClass* NameTextBlock;
	int TileTier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProfileStatsRow : public CommonUserWidget
{
public:
	class UClass* Name;
	class UClass* Value;
	struct FText StatName;
	struct FString BaseGameplayTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProgressArrowButton : public CommonButtonLegacy
{
public:
	struct SlateColor ArrowColor;
	struct SlateColor HoverColor;
	struct SlateColor ShadowColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortProgressWidget : public CommonUserWidget
{
public:
	class UClass* Text_Title;
	class UClass* Text_Description;
	class UClass* Image_MainIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPurchaseHistoryEntry : public CommonButtonLegacy
{
public:
	class UClass* ItemCardClass;
	float CardWidthOverride;
	class UClass* Text_Name;
	TArray<struct FString> LootEntryItemTypesToExclude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPurchaseHistoryListView : public ListViewBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReturnReasonDataWrapper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPurchaseHistoryScreen : public CommonActivatablePanelLegacy
{
public:
	struct DataTableRowHandle PreviousStepRowHandle;
	class UClass* RefundConfirmationClass;
	class UClass* RefundConfirmationWidget;
	TArray<struct FText> ReturnReasons;
	TArray<class UClass*> WrapperArray;
	TArray<class UClass*> SelectedItemDefs;
	class UClass* TabButtonGroup;
	bool bRefundConfirmationProcessing;
	class UClass* ListView_Purchases;
	class UClass* ListView_Reasons;
	class UClass* Text_Desc;
	class UClass* Text_RefundCount;
	class UClass* Button_RequestRefund;
	class UClass* RichText_WarningMsg;
	class UClass* Text_RefundValue;
	class UClass* Text_RefundReason;
	class UClass* ScrollBox_ItemsToReturn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPurchaseOverlayModal : public FortStoreFrontOfferDetailsWidgetBase
{
public:
	class UClass* HBox_SuccessfullyPurchased;
	class UClass* HBox_SuccessfullyRefunded;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPurchaseUnavailableModal : public FortActivatablePanel
{
public:
	class UClass* Image_OfferIcon;
	class UClass* Button_Confirm;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuantitySelector : public FortActivatablePanel
{
public:
	class UClass* Button_Confirm;
	class UClass* Button_Cancel;
	class UClass* Item;
	int CurrentQuantity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestExpiresWidget : public CommonUserWidget
{
public:
	Unknown Item;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapCosmeticListWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapDetailsPanelBase : public CommonUserWidget
{
public:
	class UClass* QuestConversationClass;
	float QuestUpdateDelayTime;
	struct TimerHandle QuestUpdateTimerHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapDetailsPanel : public FortQuestMapDetailsPanelBase
{
public:
	struct DataTableRowHandle PlayButtonTriggeringAction;
	TArray<class UClass*> PriorityActivatablePanelClassList;
	class UClass* CurrentQuestBorder;
	class UClass* CompletedQuestBorder;
	class UClass* Panel_JournalDetails;
	class UClass* Text_QuestTitle;
	class UClass* Text_QuestDescription;
	class UClass* Text_Header;
	class UClass* Text_NotOwnedHeader;
	class UClass* Text_InactiveQuestName;
	class UClass* Image_QuestIcon;
	class UClass* List_Tasks;
	class UClass* Border_Header;
	class UClass* Switcher_Body;
	class UClass* Widget_FutureQuestRewardInfo;
	class UClass* ScrollBox_Quest;
	class UClass* ScrollBox_NoQuest;
	TArray<class UClass*> VisibleObjectives;
	class UClass* CurrentQuestItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapEventCallout : public FortActivatablePanel
{
public:
	class UClass* BangWrapper_GoButton;
	class UClass* Button_LeftNav;
	class UClass* Button_RightNav;
	class UClass* Button_SwitchMode;
	class UClass* BangWrapper_Arrow;
	class UClass* Sequence_EventProgress;
	class UClass* HorizontalBox_NavButtons;
	class UClass* Text_Header;
	class UClass* Text_Body;
	class UClass* Image_Callout;
	class UClass* BangWrapper_UnHover;
	class UClass* DefaultSound;
	class UClass* DefaultRequiredCompletedQuest;
	class UClass* OverrideSound;
	class UClass* SoundLoop;
	class UClass* QuestMapData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapEventDetailsPanel : public FortQuestMapDetailsPanelBase
{
public:
	class UClass* CurrentQuestBorder;
	class UClass* CompletedQuestBorder;
	class UClass* FutureQuestBorder;
	class UClass* VBox_QuestContainer;
	class UClass* VBox_CompletedQuestContainer;
	class UClass* Switcher_Quests;
	class UClass* Border_NextQuest;
	class UClass* Text_QuestName;
	class UClass* Text_QuestDescription;
	class UClass* Text_Title;
	class UClass* List_Tasks;
	class UClass* Image_QuestIcon;
	class UClass* ScrollBox_SideBar;
	class UClass* EventQuestTable;
	class UClass* SideBarEntryClass;
	class UClass* UnlockEventQuestDefinition;
	class UClass* CurrentQuestDef;
	TArray<class UClass*> VisibleObjectives;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapEventDot : public CommonUserWidget
{
public:
	class UClass* Image_ActiveDot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapEventSequence : public CommonUserWidget
{
public:
	class UClass* HorizontalBox_DotBox;
	class UClass* DotWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapEventSideEntry : public CommonUserWidget
{
public:
	class UClass* Switcher_Rewards;
	class UClass* List_SideTasks;
	class UClass* Text_SideQuestTitle;
	class UClass* Image_Arrow;
	class UClass* Image_QuestComplete;
	struct Margin RewardPadding;
	class UClass* CurrentQuestItemDef;
	class UClass* CurrentQuestItem;
	TArray<class UClass*> RewardSwitchers;
	struct TimerHandle RewardAnimationTimer;
	TArray<class UClass*> SideQuestObjectives;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapNewBangWrapper : public FortBangWrapper_NUI
{
public:
	class UClass* Switcher_Bangs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapNodeLayout : public UserWidget
{
public:
	class UClass* Panel_NodeLayout;
	class UClass* ButtonPrevious;
	class UClass* ButtonNext;
	class UClass* StartArrow;
	class UClass* EndArrow;
	class UClass* QuestButtonGroup;
	class UClass* ParentScreen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapQuestTile : public CommonUserWidget
{
public:
	class UClass* QuestButton;
	struct FortQuestMapNode QuestNodeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapScreen : public CommonActivatablePanelLegacy
{
public:
	class UClass* CampaignDetailsPanel;
	class UClass* EventDetailsPanel;
	class UClass* EventCalloutPanel;
	class UClass* QuestMapViewer;
	EQuestMapScreenMode CurrentMode;
	bool bEventsActive;
	class UClass* CampaignQuestMapDataTable;
	class UClass* CutoffQuest;
	class UClass* CurrentQuestMapDataTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestMapViewer : public CommonUserWidget
{
public:
	class UClass* Button_PageRight;
	class UClass* Button_PageLeft;
	class UClass* Text_Title;
	class UClass* Text_Page;
	class UClass* SizeBox_Viewer;
	class UClass* CanvasPanel_Cosmetic;
	class UClass* ParentScreen;
	class UClass* NodeLayout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortQuestNotificationHandler : public UFortDialogNotificationHandler
{
public:
	class UClass* Quest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestObjectiveEntry : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnFinishedDisplaying;
	class UClass* MyObjectiveInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestPlayButton : public CommonUserWidget
{
public:
	class UClass* QuestItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTrackerEntry : public CommonUserWidget
{
public:
	class UClass* QuestNameText;
	class UClass* ObjectivesList;
	class UClass* TrackedQuest;
	struct FScriptMulticastDelegate OnHUDQuestFinalObjectiveHiddenDelegate;
	TArray<class UClass*> HUDCachedObjectiveInfos;
	bool bConfigureAsHUD;
	struct FScriptMulticastDelegate OnSizeEstimateChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTrackerList : public CommonUserWidget
{
public:
	bool bConfigureAsHUD;
	class UClass* QuestList;
	TArray<class UClass*> HUDCachedQuests;
	struct FScriptMulticastDelegate OnSizeEstimateChangedDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTrackerSubEntry : public CommonUserWidget
{
public:
	class UClass* TrackedObjective;
	struct FScriptMulticastDelegate OnSizeEstimateChangedDelegate;
	struct FScriptMulticastDelegate OnHUDQuestObjectiveCompletedDelegate;
	bool bConfigureAsHUD;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestTreeItemWidget : public CommonButtonLegacy
{
public:
	Unknown QuestOrCategory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestUpdatesLog : public FortHUDElementWidget
{
public:
	class UClass* QuestEntryClass;
	int MaxDisplayedQuestUpdates;
	int MaxDisplayedQuestObjectives;
	bool bShowFeatQuests;
	bool bFeatShowNonVisibleObjectives;
	class UClass* QuestUpdatesBox;
	struct FortPrioritizedWidgetData PrioritizationData;
	TArray<class UClass*> QueuedQuestObjectiveInfos;
	TArray<class UClass*> QuestUpdateWidgets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuickbarBase : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRadialMenu : public CommonUserWidget
{
public:
	class UClass* EntryWidgetClass;
	float JoystickDeadZone;
	float MouseDeadZoneRadiusPercentage;
	float JoystickMaximumMagnitude;
	struct RadialBoxSettings RadialBoxSettings;
	EFortRadialControllingStick ControllingStick;
	class UClass* EntryBox_ContextRadial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRadialPicker : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRealMoneyOffer : public FortStoreFrontOfferWidgetBase
{
public:
	class UClass* PurchaseUnavailableModalClass;
	class UClass* ItemPreviewDetailsClass;
	class UClass* ItemShopItemPreviewDetailsClass;
	class UClass* RealMoneyDetailsClass;
	class UClass* ItemShopRealMoneyDetailsClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRealMoneyOfferDetails : public FortStoreFrontOfferDetailsWidgetBase
{
public:
	struct DataTableRowHandle UndoAction;
	struct DataTableRowHandle BackAction;
	struct DataTableRowHandle PurchaseAction;
	struct DataTableRowHandle VBuckAction;
	struct DataTableRowHandle ReloadMtxAction;
	class UClass* ItemInspectScreenClass;
	class UClass* Button_Purchase;
	class UClass* Button_SendGift;
	class UClass* Button_Inspect;
	class UClass* Button_MobileClose;
	class UClass* Button_MTX;
	class UClass* Container_SimpleMTXDisplay;
	class UClass* Overlay_MobileCloseButton;
	class UClass* ScrollBox_Details;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRebootCardsCollectedWidget : public CommonUserWidget
{
public:
	int NumCardsCollected;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRedeemCodeBase : public FortActivatablePanel
{
public:
	class UClass* EditableText_FriendCodeEntry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRedirectToEpicAccountWidget : public CommonActivatablePanelLegacy
{
public:
	TArray<struct PlatformSupportDesc> SupportedPlatforms;
	struct PlatformSupportDesc DefaultValues;
	class UClass* Text_Title;
	class UClass* Text_Desc;
	class UClass* Button_CreateAccount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRefundConfirmation : public CommonActivatablePanelLegacy
{
public:
	class UClass* Text_AreYouSure;
	class UClass* Button_Yes;
	class UClass* Button_No;
	class UClass* Button_CloseMobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRejoinWindowBase : public CommonActivatablePanelLegacy
{
public:
	class UClass* Text_RejoinTime;
	class UClass* Text_Description;
	class UClass* Button_Rejoin;
	class UClass* Button_Retry;
	class UClass* Button_Abandon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRelativeAnchorCanvasSlot : public PanelSlot
{
public:
	Unknown AnchorWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRelativeAnchorCanvas : public PanelWidget
{
public:
	int ZLayerOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayBase : public FortHUDElementWidget
{
public:
	class UClass* ReplayContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayBrowserRenameDialog : public CommonActivatableWidget
{
public:
	int MaxReplayNameLength;
	class UClass* TextBox_Name;
	class UClass* Button_Confirm;
	class UClass* Button_Decline;
	class UClass* Button_TapToClose;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayGoToTimeDialogue : public CommonActivatablePanelLegacy
{
public:
	class UClass* EditableText_GoToSeconds;
	class UClass* Button_Confirm;
	class UClass* Button_Close;
	class UClass* Text_HowTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayHighlightItemBase : public CommonButtonLegacy
{
public:
	class UClass* Image_Icon;
	class UClass* TextBlock_Title;
	class UClass* TextBlock_Duration;
	Unknown IconMap;
	struct SlateBrush DefaultIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayHighlightsWindow : public FortActivatablePanel
{
public:
	class UClass* HighlightItemClass;
	class UClass* VerticalBox_ItemContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayPlayerListPanel : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayTimelineMarker : public CommonButtonLegacy
{
public:
	struct TSoftClassPtr<UObject> MarkerIcons;
	class UClass* LazyImage_MarkerIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReplayViewSettingsTabBase : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReportActioned : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResearchMenuBase : public FortActivatablePanel
{
public:
	class UClass* ResearchRespecToken;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResearchStatTileWidget : public UserWidget
{
public:
	class UClass* PersonalStatItemDefinition;
	class UClass* TeamStatItemDefinition;
	struct FName StatCostCurveName;
	struct FName StatPersonalDeltaCurveName;
	struct FName StatPersonalCumulativeCurveName;
	struct FName StatTeamDeltaCurveName;
	struct FName StatTeamCumulativeCurveName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResourceFeed : public FortHUDElementWidget
{
public:
	float ResourceGainedTime;
	class UClass* CurrentItemDefinition;
	class UClass* Widget_ResourceCount;
	class UClass* Widget_ResourceGained;
	class UClass* Widget_Glow;
	class UClass* Panel_Animations;
	class UClass* Image_ResourceIcon;
	class UClass* Text_ResourceCount;
	class UClass* Text_ResourceGained;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRespawnPromptWidget : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResponsivePanel : public PanelWidget
{
public:
	bool bCanStackVertically;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResponsivePanelSlot : public PanelSlot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRestartClientModal : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResultsBadgeLootWidget : public FortUserWidget
{
public:
	class UClass* Border_LeechWarning;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResultsSummaryScreenWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResultsTeleportScreenWidget : public CommonUserWidget
{
public:
	float ExitTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortResultsWidget : public CommonActivatablePanelLegacy
{
public:
	int AdditionalGrantedMissionPoints;
	TArray<class UClass*> RewardedBadges;
	TArray<class UClass*> MissedBadges;
	TArray<class UClass*> RewardedItems;
	TArray<class UClass*> RewardedAccountItems;
	class UClass* Radial_Picker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReticle : public FortHUDElementWidget
{
public:
	class UClass* ReticleWeaponCooldownMI;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReturnReasonEntry : public CommonButtonLegacy
{
public:
	class UClass* InternalData;
	class UClass* Text_Name;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardNotificationData : public UObject
{
public:
	EFrontEndRewardType RewardType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardCollectionBookData : public UFortRewardNotificationData
{
public:
	struct FortCollectionBookRewards CollectionBookRewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardNotificationSubWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnTransitionInComplete;
	struct FScriptMulticastDelegate OnTransitionOutComplete;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardConversationWidget : public FortRewardNotificationSubWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardDifficultyIncrease : public UFortRewardNotificationData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardEpicQuestData : public UFortRewardNotificationData
{
public:
	class UClass* Quest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardExpeditionData : public UFortRewardNotificationData
{
public:
	class UClass* Expedition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardExpeditionWidget : public FortRewardNotificationSubWidget
{
public:
	struct FScriptMulticastDelegate OnMcpError;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardGiftBoxData : public UFortRewardNotificationData
{
public:
	class UClass* GiftBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardInfoButton : public CommonButtonLegacy
{
public:
	class UClass* ItemCardPanel;
	EFortItemCardSize ItemCardSize;
	bool bDisplayAsRewardCard;
	class UClass* ItemInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardInfoWidget : public CommonUserWidget
{
public:
	class UClass* RewardListWidget;
	struct Margin RewardWidgetPadding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	bool bShowDescription;
	bool bAllowItemInteraction;
	int MaxNumRewardsShown;
	class UClass* OrWidgetType;
	class UClass* RewardInfoButtonType;
	class UClass* ButtonGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardItemCacheData : public UFortRewardNotificationData
{
public:
	class UClass* ItemCache;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardMissionAlertData : public UFortRewardNotificationData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardMissionData : public UFortRewardNotificationData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardNewQuestWidget : public FortRewardNotificationSubWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRewardNotificationWidget : public CommonActivatablePanelLegacy
{
public:
	TArray<class UClass*> NotificationDataList;
	class UClass* OverlayMain;
	struct FortSwipeDetector SwipeDetector;
	class UClass* MulchConfirmationModalClass;
	class UClass* MulchConfirmationModal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardPhoenixLevelUpData : public UFortRewardNotificationData
{
public:
	int PhoenixLevel;
	TArray<struct FortItemInstanceQuantityPair> Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRewardQuestData : public UFortRewardNotificationData
{
public:
	class UClass* Quest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRichTextBlockKeybind : public CommonRichTextBlock
{
public:
	class UClass* KeybindWidgetClass;
	struct Vector2D DesiredKeybindWidgetSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRichTextBlockLegacy : public Widget
{
public:
	struct FText Text;
	class UClass* StyleSet;
	struct Margin TextMargin;
	float WrapTextAt;
	bool AutoWrapText;
	ETextJustify Justification;
	struct ButtonStyle HyperlinkButtonStyle;
	struct ScrollBarStyle ScrollBarStyle;
	bool DisableTouchInput;
	bool AllowContextMenu;
	class UClass* KeybindWidgetClass;
	struct TextBlockStyle DefaultTextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLetoLayoutBorder : public CommonUserWidget
{
public:
	class UClass* Text_PlayerName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRootViewportLayout : public CommonUserWidget
{
public:
	class UClass* CurrentStateWidget;
	class UClass* NotificationManager;
	TArray<struct FortDialogDescription_NUI> ConfirmationQueue;
	class UClass* CurrentLegacyStateWidget;
	class UClass* LetoLayoutBorderClass;
	class UClass* WidgetQueue_ModalContent;
	class UClass* AthenaProgressModal;
	class UClass* ConfirmationWindow_ConfirmationWidget;
	class UClass* ErrorWindow_Errors;
	class UClass* ProgressModal_ControllerDisconnected;
	class UClass* RestartModal;
	class UClass* ToastDisplayArea_ToastHandler;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRootViewportLayout_Athena : public FortRootViewportLayout
{
public:
	class UClass* WebPurchaseScreenWidgetClass;
	class UClass* WebPurchaseWidget_RuntimeSpawned;
	struct DataTableRowHandle LetoToggleDormancyAction;
	TArray<struct ForcedIntroEntry> ForcedIntroWidgetClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRotatingItemTileButton : public FortItemTileButton
{
public:
	float TimeBetweenRotations;
	bool bNeedsItemRotateAnimation;
	TArray<class UClass*> ItemsToRotate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSafeZoneEditor : public CommonActivatablePanelLegacy
{
public:
	bool bCanCancel;
	class UClass* Switcher_SafeZoneMessage;
	class UClass* RichText_Default;
	class UClass* RichText_SwitchHandheldWarning;
	class UClass* Button_Back;
	class UClass* Button_Done;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEditableFilteredCountedTextBox : public UserWidget
{
public:
	int EntryCharLimit;
	EVirtualKeyboardTrigger VirtualKeyboardTrigger;
	int EnforcedEntryCharLimit;
	struct FText SuggestionText;
	bool bReplaceUserTextWithSanitizedString;
	bool bAllowSanitizedStrings;
	bool bUseToxicityServiceSanitization;
	struct FText DefaultSanitizationErrorText;
	struct FText AdditionalValidationErrorText;
	bool bCurrentlyValid;
	class UClass* EditText;
	class UClass* Text_CharCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSeasonDataWidget : public UserWidget
{
public:
	float CurrentProgress;
	int CurrentXp;
	int XpToNextLevel;
	int CurrentLevel;
	class UClass* LevelRewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSeasonLevelConfirmationScreen : public FortItemPreviewScreen
{
public:
	struct DataTableRowHandle CloseScreenRowHandle;
	struct GameplayTag SpatialCamera;
	class UClass* Mobile_CloseButton;
	class UClass* Button_IncreasePurchaseTier;
	class UClass* Button_DecreasePurchaseTier;
	class UClass* Text_Header;
	class UClass* Text_TierBundleOffer_Header;
	class UClass* Text_RewardCount;
	class UClass* Text_PurchasePrice;
	class UClass* Text_TierBundleOriginalPrice;
	class UClass* Text_TierBundlePurchasePrice;
	class UClass* Text_RefundDisclaimer;
	class UClass* EntryBox_RewardIcons;
	class UClass* Button_Purchase;
	class UClass* Button_TierBundlePurchase;
	class UClass* SB_TierBundle;
	class UClass* Widget_TierBundleWarning;
	struct FText RefundDisclaimerSingleOffer;
	struct FText RefundDisclaimerMultipleOffer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSelectableAttributeListItem_NUI : public CommonButtonLegacy
{
public:
	class UClass* AttributeListItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerBrowser : public CommonActivatableWidget
{
public:
	TArray<class UClass*> SupportedActions;
	TArray<struct TSoftClassPtr<UObject>> ExcludedSupportedActions;
	struct TSoftClassPtr<UObject> DefaultSelectedAction;
	class UClass* ListView_ServerBrowser;
	struct DataTableRowHandle NavigateLeftInputAction;
	struct DataTableRowHandle NavigateRightInputAction;
	class UClass* Button_Cancel;
	class UClass* Button_Close;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortServerBrowserActionData : public UPrimaryDataAsset
{
public:
	EFortServerBrowserAction ActionType;
	struct FText Title;
	struct FText Description;
	struct SlateBrush TileImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortServerBrowserActionDataPopup : public UFortServerBrowserActionData
{
public:
	struct TSoftClassPtr<UObject> PopupClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerBrowserBattleLab : public FortServerBrowser
{
public:
	class UClass* Button_ResetIsland;
	class UClass* Button_MatchmakingKnobs;
	class UClass* Modal_MatchmakingKnobs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerBrowserCreative : public FortServerBrowser
{
public:
	struct TSoftClassPtr<UObject> DefaultActionIfDiscoveryDisabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortServerBrowserHelper : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerBrowserListView : public ListViewBase
{
public:
	EOrientation Orientation;
	float EntrySpacing;
	class UClass* CreativeServerInfoTileEntryClass;
	class UClass* ServerActionTileEntryClass;
	class UClass* OwnServerActionTileEntryClass;
	class UClass* PlaylistSelectionActionTileEntryClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerBrowserPlayground : public FortServerBrowser
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerInfoFriendEntry : public CommonUserWidget
{
public:
	class UClass* Text_FriendName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerTileBase : public CommonButtonLegacy
{
public:
	class UClass* Text_ServerWarning;
	class UClass* Button_Launch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerActionTile : public FortServerTileBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNamedServerActionTile : public FortServerActionTile
{
public:
	class UClass* Text_ActionTitle;
	class UClass* Text_ActionDescription;
	class UClass* Image_Background;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlaylistSelectionActionTile : public FortNamedServerActionTile
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerInfoTileBase : public FortServerTileBase
{
public:
	class UClass* Text_PlayerCount;
	class UClass* EntryBox_ServerFriendList;
	class UClass* Text_OwnerName;
	class UClass* VerticalBox_Ownership;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortCreativeServerInfoTile : public FortServerInfoTileBase
{
public:
	class UClass* Text_FriendsPlaying;
	class UClass* RichText_RemainingFriends;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortServerMessageWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSetting : public UObject
{
public:
	class UClass* LocalPlayer;
	class UClass* SettingParent;
	class UClass* OwningRegistry;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingAction : public UFortSetting
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValue : public UFortSetting
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueScalar : public UFortSettingValue
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueScalarDynamic : public UFortSettingValueScalar
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueScalarDynamic_SafeZoneValue : public UFortSettingValueScalarDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingAction_SafeZoneEditor : public UFortSettingAction
{
public:
	class UClass* SafeZoneValueSetting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingCollection : public UFortSetting
{
public:
	TArray<class UClass*> Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingCollectionPage : public UFortSettingCollection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingControllerInput : public UFortSettingValue
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingDetailExtension : public UserWidget
{
public:
	class UClass* Setting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingDetailView : public UserWidget
{
public:
	class UClass* VisualData;
	struct UserWidgetPool ExtensionWidgetPool;
	class UClass* CurrentSetting;
	class UClass* Text_SettingName;
	class UClass* RichText_Description;
	class UClass* RichText_DynamicDetails;
	class UClass* RichText_WarningDetails;
	class UClass* RichText_DisabledDetails;
	class UClass* Box_DetailsExtension;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingKeyboardInput : public UFortSettingValue
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsContext : public BlueprintContextBase
{
public:
	float MinGammaValue;
	float MaxGammaValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsDeadzoneExtension : public FortSettingDetailExtension
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntryBase : public CommonUserWidget
{
public:
	class UClass* Setting;
	class UClass* Background;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntry_Setting : public FortSettingsListEntryBase
{
public:
	class UClass* Text_SettingName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntrySetting_Discrete : public FortSettingsListEntry_Setting
{
public:
	class UClass* DiscreteSetting;
	class UClass* Panel_Value;
	class UClass* Rotator_SettingValue;
	class UClass* Button_Decrease;
	class UClass* Button_Increase;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntrySetting_Scalar : public FortSettingsListEntry_Setting
{
public:
	class UClass* ScalarSetting;
	class UClass* Panel_Value;
	class UClass* Slider_SettingValue;
	class UClass* Text_SettingValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntrySetting_KeyboardInput : public FortSettingsListEntry_Setting
{
public:
	class UClass* KeyboardInputSetting;
	class UClass* PressAnyKeyPanelClass;
	class UClass* PreviewActionUnbindClass;
	class UClass* Button_PrimaryKey;
	class UClass* Button_SecondaryKey;
	class UClass* Button_Clear;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntrySetting_Action : public FortSettingsListEntry_Setting
{
public:
	class UClass* ActionSetting;
	class UClass* Button_Action;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntrySetting_ControllerButton : public FortSettingsListEntry_Setting
{
public:
	class UClass* BindingMenuClass;
	class UClass* ControllerInputSetting;
	class UClass* Key_ControllerButton;
	class UClass* MenuAnchor_BindableActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListEntrySetting_Navigation : public FortSettingsListEntry_Setting
{
public:
	class UClass* CollectionSetting;
	class UClass* Button_Navigate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsListView : public ListView
{
public:
	class UClass* VisualData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsPanel : public CommonUserWidget
{
public:
	class UClass* Registry;
	TArray<class UClass*> VisibleSettings;
	class UClass* LastHoveredOrSelectedSetting;
	struct FortSettingsFilterState FilterState;
	TArray<struct FortSettingsFilterState> FilterNavigationStack;
	class UClass* ListView_Settings;
	class UClass* Details_Settings;
	struct FScriptMulticastDelegate BP_OnExecuteNamedAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsPreferredItemSlotsExtension : public FortSettingDetailExtension
{
public:
	TArray<class UClass*> SlotItemIconImages;
	TArray<class UClass*> HighlightImages;
	class UClass* HorizontalBox_ItemSlotContainer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsPressAnyKey : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsPreviewActionUnbind : public UserWidget
{
public:
	class UClass* Text_Action;
	class UClass* Text_PrimaryKey;
	class UClass* Text_SecondaryKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSettingsRotator : public CommonRotator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete : public UFortSettingValue
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_AllowCrossplay : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_AndroidStore : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_AppearOnPublicLeaderBoards : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_AutoMulchMode : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_CanReceiveGifts : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_ControllerHardware : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_ControllerPresets : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_FortReleaseVersion : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_HUDVisibility : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_Language : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_MobileFPSType : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_SocialBool : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_Notifications : public UFortSettingValueDiscrete_SocialBool
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_OverallQualityPresets : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_Region : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscrete_Resolution : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic : public UFortSettingValueDiscrete
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_Bool : public UFortSettingValueDiscreteDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_Number : public UFortSettingValueDiscreteDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_Enum : public UFortSettingValueDiscreteDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_Color : public UFortSettingValueDiscreteDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_Vector2D : public UFortSettingValueDiscreteDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_Anchors : public UFortSettingValueDiscreteDynamic_Vector2D
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_AudioOutputDevice : public UFortSettingValueDiscreteDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueDiscreteDynamic_QuickbarLocks : public UFortSettingValueDiscreteDynamic_Number
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingValueScalarDynamic_Mobile3DResolution : public UFortSettingValueScalarDynamic
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSettingVisualData : public UDataAsset
{
public:
	Unknown EntryWidgetForClass;
	Unknown EntryWidgetForName;
	Unknown ExtensionsForClasses;
	Unknown ExtensionsForName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShotTitleScreen : public CommonUserWidget
{
public:
	float FadeOutTime;
	class UClass* TextBlock_MainText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownCurrentEventView : public FortShowdownDetailView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownDivisionRankButton : public CommonButtonLegacy
{
public:
	class UClass* Image_DivisionIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownDivisionRankProgressView : public CommonUserWidget
{
public:
	class UClass* Image_DivisionIcon;
	class UClass* Bar_DivisionProgress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDivisionDetailsInfo : public FortShowdownDivisionEventView
{
public:
	class UClass* EntryBoxes_DivisionProgressRanks;
	class UClass* ResetTimeContainer;
	class UClass* Text_ResetTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortDivisionPayoutInfo : public FortShowdownDivisionEventView
{
public:
	class UClass* EntryBoxes_DivisionRanksButtons;
	class UClass* Button_Left;
	class UClass* Button_Right;
	class UClass* EntryBox_Payouts;
	class UClass* Text_League;
	class UClass* Text_DivsionRank;
	class UClass* PayoutDisplayInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPayoutInfoEntry : public CommonUserWidget
{
public:
	class UClass* Text_Points;
	class UClass* Text_PointsLabel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownPin : public FortShowdownDetailView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownScreen : public FortActivatablePanel
{
public:
	struct DataTableRowHandle HypeLeaderboardActionRowHandle;
	class UClass* HypeLeaderboardScreenClass;
	class UClass* TileItemClass;
	class UClass* TournamentModalClass;
	class UClass* TournamentTileGroup;
	class UClass* ScrollBox_TournamentList;
	class UClass* Button_Details;
	class UClass* CommonTextBlock_RegionText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortShowdownTournamentTile : public CommonButtonLegacy
{
public:
	class UClass* ShowdownDetailView_Violator;
	class UClass* ShowdownDetailView_Poster;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSidekickVoiceChatMemberListEntry : public SocialListInteractableEntryBase
{
public:
	class UClass* Text_DisplayName;
	class UClass* Text_RichPresence;
	class UClass* VoiceIcon_Status;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSignInConsole : public CommonActivatablePanelLegacy
{
public:
	class UClass* Email;
	class UClass* Button_SendCode;
	class UClass* Passcode;
	class UClass* Text_Error;
	class UClass* Button_SubmitCode;
	class UClass* Switcher_Main;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSignInWidget : public CommonActivatablePanelLegacy
{
public:
	class UClass* NormalBorderStyle;
	class UClass* HighlightBorderStyle;
	struct FString ForgotPasswordURL;
	class UClass* EditText_Email;
	class UClass* EditText_Password;
	class UClass* Border_Email;
	class UClass* Border_Password;
	class UClass* Button_SignIn;
	class UClass* Button_ForgotPassword;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSimpleFeaturedYellowButton : public CommonButtonLegacy
{
public:
	int FontSize;
	struct Margin PaddingOverrideMargin;
	float DelayShine;
	bool bFontSizeOverride;
	bool bPaddingOverride;
	bool bUseShineSwipe;
	bool bShearText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSimpleMaterialProgressBar : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnFillAnimationFinished;
	bool bOverrideDefaultColorA;
	struct LinearColor CachedColorA;
	bool bOverrideDefaultColorB;
	struct LinearColor CachedColorB;
	bool bOverrideDefaultColorBackground;
	struct LinearColor CachedColorBackground;
	bool bOverrideDefaultSegments;
	int Segments;
	bool bOverrideDefaultSegmentEdge;
	float SegmentEdge;
	bool bOverrideDefaultFillEdgeSoftness;
	float FillEdgeSoftness;
	bool bOverrideDefaultGlowEdge;
	float GlowEdge;
	bool bOverrideDefaultGlowSoftness;
	float GlowSoftness;
	bool bOverrideDefaultOutlineScale;
	float OutlineScale;
	bool bUseStroke;
	class UClass* StrokeMaterial;
	class UClass* NoStrokeMaterial;
	class UClass* Image_Bar;
	class UClass* BoundAnim_FillBar;
	class UClass* CachedMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSimpleMTXDisplay : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSimpleWidgetAnimationsPanel : public ContentWidget
{
public:
	struct FScriptMulticastDelegate OnAnimationsFinished;
	TArray<struct FortSimpleWidgetAnimations> Animations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSimpleWidgetAnimationsSlot : public PanelSlot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSlottedRadialMenu : public FortRadialMenu
{
public:
	ERadialOrderingMode OrderingMode;
	TArray<ECardinalPoint> CustomOrdering;
	bool bUseAsManySlotsAsItems;
	int NumSlotsSupported;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialAvatarIcon : public FortLazyImage
{
public:
	class UClass* AvatarMaterial;
	class UClass* SocialUser;
	class UClass* AvatarTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialButton : public CommonButtonLegacy
{
public:
	class UClass* Text_NumFriends;
	class UClass* Image_ActiveInviteBang;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSocialDisplayData : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> LoadingActiveChannelSpeakContainerClass;
	struct TSoftClassPtr<UObject> LoadingOverrideSpeakerClass;
	struct LinearColor OnlineIndicatorOnline;
	struct LinearColor OnlineIndicatorAway;
	struct LinearColor OnlineIndicatorOffline;
	struct LinearColor OnlineIndicatorBlocked;
	struct LinearColor UserNameOnline;
	struct LinearColor UserNameOfflineAway;
	struct LinearColor UserNameBlocked;
	struct LinearColor RichPresenceOnline;
	struct LinearColor RichPresenceOfflineAway;
	struct LinearColor RichPresenceBlocked;
	struct LinearColor FocusHighlightOnline;
	struct LinearColor FocusHighlightOfflineAway;
	struct LinearColor PortraitBackgroundColorNormal;
	struct LinearColor PortraitBackgroundColorAttendingEvent;
	struct LinearColor PortraitEmptyFillColorNormal;
	struct LinearColor PortraitEmptyFillColorAttendingEvent;
	struct LinearColor PortraitEmptyHighlightColorNormal;
	struct LinearColor PortraitEmptyHighlightColorAttendingEvent;
	class UClass* BackgroundOnline;
	class UClass* BackgroundOfflineAway;
	Unknown SidekickReactionPathMap;
	Unknown PlatformPrefixIconMap;
	class UClass* GenericPlatformIcon;
	class UClass* SocialBanModalClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSocialDisplayLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialImportPanel : public FortActivatablePanel
{
public:
	struct FScriptMulticastDelegate OnSocialImportPanelClosed;
	class UClass* Switcher_AddFriends;
	class UClass* Button_Import;
	class UClass* Button_Cancel;
	class UClass* Button_Add;
	class UClass* Button_NotNow;
	class UClass* Button_OptOut;
	class UClass* Border_OuterBorder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortEditNicknameButton : public CommonButtonLegacy
{
public:
	struct Color CharacterLimitWarningColor;
	class UClass* EditableText_EditNickname;
	class UClass* RichText_CharacterCounter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialInteractionMenu : public SocialInteractionMenu
{
public:
	class UClass* Text_SocialName;
	class UClass* RichText_PlatformNames;
	class UClass* Text_Presence;
	class UClass* Button_EditNickname;
	class UClass* Text_ErrorMessage;
	class UClass* Button_CancelEdit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialMenuSlateWrapperWidget : public Widget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialNameTextBlock : public SocialNameTextBlock
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialNotificationWidget : public FortToastWidget
{
public:
	class UClass* Action_HoldKeybindWidget;
	class UClass* Text_NumMutualFriends;
	class UClass* Text_RelationshipStatus;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialPanel : public FortActivatablePanel
{
public:
	class UClass* PanelView_UserLists;
	struct DataTableRowHandle CloseInputAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialPanelView_FriendLinkButton : public CommonButtonLegacy
{
public:
	class UClass* Border_ScreenTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialPanelView_Groups : public UserWidget
{
public:
	class UClass* TreeView_Groups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialTab : public CommonButtonLegacy
{
public:
	class UClass* TabIcon;
	struct FText TabName;
	struct SlateColor InviteTintColor;
	class UClass* Image_TabIcon;
	class UClass* Text_TabName;
	class UClass* Text_Number;
	class UClass* Text_Bang;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortFriendSearchButton : public CommonButtonLegacy
{
public:
	class UClass* EditableText_AddFriend;
	class UClass* RichText_SocialBanTimerText;
	class UClass* Button_ClearQuery;
	class UClass* Button_SubmitQuery;
	class UClass* Switcher_SocialBan;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortJoinVoiceChannelButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceChannelHeaderButton : public SocialListEntryBase
{
public:
	class UClass* Text_ChannelTitle;
	class UClass* Text_ChannelInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialPanelView_UserLists : public CommonActivatableWidget
{
public:
	TArray<struct FortUserListHeaderInfo> ListHeaderInfos;
	class UClass* ButtonGroup_SocialTabs;
	struct DataTableRowHandle NextTabInputAction;
	struct DataTableRowHandle PreviousTabInputAction;
	struct FText PartyVoiceMessage_PSN;
	struct FText PlatformPartyChatMessageHeader_PSN;
	struct FText LeavePlatformPartyInstructions_PSN;
	struct FText PartyVoiceMessage_XBL;
	struct FText PlatformPartyChatMessageHeader_XBL;
	struct FText LeavePlatformPartyInstructions_XBL;
	class UClass* UserEntry_LocalPlayer;
	class UClass* Button_FriendSearch;
	class UClass* Switcher_UserLists;
	class UClass* SocialTab_AddFriends;
	class UClass* SocialTab_Friends;
	class UClass* SocialTab_VoiceChat;
	class UClass* UserTree_FriendsLists;
	class UClass* UserTree_VoiceChat;
	class UClass* VoiceChannelSettings;
	class UClass* UserTree_AddFriends;
	class UClass* Button_AddWeGameFriends;
	class UClass* Switcher_VoiceChatState;
	class UClass* VBox_VoicePlatformPartyWithSwitchButton;
	class UClass* VBox_VoicePlatformPartyInstructions;
	class UClass* Button_JoinVoiceChat;
	class UClass* Button_LeavePlatformVoiceChat;
	class UClass* Button_EnableVoiceChat;
	class UClass* Text_PartyVoiceMessage;
	class UClass* RichText_SocialBanDescription;
	class UClass* RichText_SocialBanRemainingTime_VoiceTab;
	class UClass* RichText_PlatformPartyChatMessageHeader;
	class UClass* RichText_LeavePlatformPartyInstructions;
	class UClass* Switcher_AddFriends;
	class UClass* UserTree_SearchResults;
	class UClass* Text_SearchingForUsers;
	class UClass* Text_SearchFailed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSocialStyle : public UDataAsset
{
public:
	struct SocialStyle Style;
	class UClass* OverrideStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialUserListEntry : public FortPresenceUserListEntry
{
public:
	class UClass* Image_Lock;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSocialUserTreeView : public SocialUserTreeView
{
public:
	class UClass* PartyMemberEntryWidgetClass;
	class UClass* TeamMemberEntryWidgetClass;
	class UClass* VoiceChatMemberEntryWidgetClass;
	class UClass* JoinablePartyEntryWidgetClass;
	class UClass* MissedInviteEntryWidgetClass;
	class UClass* UserSearchResultEntryWidgetClass;
	class UClass* LeavePartyEntryWidgetClass;
	class UClass* SuggestedFriendEntryWidgetClass;
	class UClass* JoinRequestEntryWidgetClass;
	class UClass* SidekickMemberEntryWidgetClass;
	class UClass* DisableSidekickEntryWidgetClass;
	class UClass* VoiceChannelHeaderEntryWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatedPlayerSwitcher : public UserWidget
{
public:
	int MaxPlayersToShow;
	TArray<struct PotentialSpectatorTarget> DisplayedTargets;
	TArray<struct PotentialSpectatorTarget> AvailableTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorCameraSettingsTab : public FortReplayViewSettingsTabBase
{
public:
	class UClass* Rotator_PlayerOutlines;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorLensSettingsTab : public FortReplayViewSettingsTabBase
{
public:
	class UClass* Rotator_AutoExposure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorNameplateSettingsTab : public FortReplayViewSettingsTabBase
{
public:
	class UClass* Rotator_NameplatesEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpectatorRebootWidget : public FortHUDElementWidget
{
public:
	class UClass* PlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSplashScreenWidget : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadComsPicker : public CommonActivatableWidget
{
public:
	class UClass* QuickChatOptionsBank;
	struct PrimaryContentSetup PrimaryContentSetup;
	class UClass* Text_ItemName;
	class UClass* Text_WheelLabel;
	class UClass* Keybind_Confirm;
	class UClass* Button_Cancel;
	class UClass* PickerOverlay_SquadComs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadIcon : public CommonUserWidget
{
public:
	struct FName Name;
	EFortBrushSize ImageSize;
	class UClass* Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadLandingPageDefenderSquadDetails : public CommonUserWidget
{
public:
	class UClass* OutpostName;
	class UClass* PowerRating;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadLandingPageDefenderSquadDetailsLocked : public CommonUserWidget
{
public:
	class UClass* OutpostName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadLandingPageDefenderSummary : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadLandingPageSurvivorSummary : public CommonUserWidget
{
public:
	class UClass* FortitudeStatValue;
	class UClass* OffenseStatValue;
	class UClass* ResistanceStatValue;
	class UClass* TechStatValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSquadManagementItemViewContextBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemViewContext_SquadSlotsView : public UFortSquadManagementItemViewContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemViewContext_SquadSlotItemPicker : public UFortSquadManagementItemViewContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemViewContext_ExpeditionSquadSlotsView : public UFortItemViewContext_SquadSlotsView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemViewContext_ExpeditionSquadSlotItemPicker : public UFortItemViewContext_SquadSlotItemPicker
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSelectionMenu : public CommonActivatableWidget
{
public:
	struct DataTableRowHandle ExitInputAction;
	class UClass* ButtonGroup;
	class UClass* TeamEntryBox_Squads;
	class UClass* Button_ConfirmMove;
	class UClass* Button_CancelMove;
	class UClass* RichText_ActionPrompt;
	class UClass* Button_ChangeParticipation;
	class UClass* Switcher_Buttons;
	class UClass* Mobile_Overlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotDetailsPanel : public CommonUserWidget
{
public:
	class UClass* ItemDetailsPanel;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotItemDetailElementWidget : public FortItemDetailElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotItemDetailsHostPanel : public FortItemDetailsHostPanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotItemPicker : public FortItemPickerBase
{
public:
	struct FScriptMulticastDelegate OnSortChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotItemPickerTileButton : public FortItemTileButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotSelectorPopupMenu : public FortPopupMenu
{
public:
	bool bReadOnlyModeWIFE;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotSurvivorTraitMatchesDetailWidget : public FortSquadSlotItemDetailElementWidget
{
public:
	bool IsSquadLeaderSlot;
	bool LeaderMatchesSquadType;
	int SubordinatePersonalityMatchCount;
	bool MatchesLeaderPersonality;
	int MatchingSetBonusCount;
	int SetBonusSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotSelectorButton : public CommonButtonLegacy
{
public:
	struct FScriptMulticastDelegate OnRequestOpenSquadSlotEvent;
	struct FScriptMulticastDelegate OnRequestViewInAllEvent;
	class UClass* SquadSlotWidget;
	class UClass* PopupMenuAnchor;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotsView : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnDifferentSquadSlotSelectedEvent;
	struct FScriptMulticastDelegate OnRequestOpenSquadSlotEvent;
	struct FScriptMulticastDelegate OnRequestViewInAllEvent;
	bool bReadOnlyModeWIFE;
	int IndexOfSelectedSquadSlot;
	bool bSlotButtonsRequireSelection;
	bool bInPreviewMode;
	Unknown SquadSlotSortTypesMap;
	class UClass* DisableAutoSlottingToOpenSquadSlotPromptAction;
	class UClass* SquadSlotButtonGroup;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadSlotWidget : public Widget
{
public:
	EFortItemCardSize ItemCardSize;
	class UClass* SlottedItemCard;
	Unknown ItemViewContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadStatsWidgetBase : public CommonUserWidget
{
public:
	TArray<class UClass*> OverviewStats;
	class UClass* DetailedStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadStatValueWithIcon : public CommonUserWidget
{
public:
	struct GameplayAttribute Attribute;
	struct GameplayAttribute TeamAttribute;
	EFortBrushSize ImageSize;
	class UClass* Value;
	class UClass* Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSquadTypeLandingPageBase : public FortActivatablePanel
{
public:
	bool bReadOnlyModeWIFE;
	EFortHomebaseSquadType SquadType;
	struct DataTableRowHandle BackInputActionRowHandle;
	EFortFrontendInventoryFilter ItemManagementScreenFilter;
	TArray<Unknown> SquadSelectorButtons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStandaloneFrontend : public CommonActivatableWidget
{
public:
	bool bCosmeticRefreshOnClose;
	class UClass* PocketLevel;
	class UClass* PocketLevelInstance;
	struct Vector CameraLevelLocation;
	struct DataTableRowHandle BackActionRowHandle;
	class UClass* Switcher_TabContent;
	class UClass* Content_LoadingIndicator;
	class UClass* OptionalTabList_MainContent;
	struct FortAthenaLoadout InitialLoadoutData;
	class UClass* Button_CloseMobile;
	struct FScriptMulticastDelegate OnMenuClosed;
	struct PrimaryContentSetup PrimaryContentSetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStandaloneModalPopup : public FortActivatablePanel
{
public:
	struct DataTableRowHandle buttonInputAction;
	class UClass* Button_Details;
	class UClass* Button_Close;
	class UClass* Border_TapToCloseZone;
	class UClass* ItemShopStandaloneOfferPreview;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStandardGlobalActionDetailsDataSource : public UObject
{
public:
	class UClass* GlobalUIContext;
	class UClass* CommonInputSubsystem;
	class UClass* FortPlayerController;
	struct FortGlobalActionDetailsFunctionContext ActionDetailsContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStatIcon : public CommonUserWidget
{
public:
	struct GameplayAttribute Attribute;
	EFortBrushSize ImageSize;
	class UClass* Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStatsOverviewDetailsBase : public CommonUserWidget
{
public:
	TArray<class UClass*> OverviewStats;
	class UClass* DetailedStats;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreBanner : public CommonUserWidget
{
public:
	class UClass* Text_BannerMessage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnStoreStateChange;
	struct FScriptMulticastDelegate OnStoreSkipOpenChanged;
	TArray<struct CardPackOffer> Offers;
	TArray<struct Card> CardList;
	int CardIndex;
	struct OpenedCardPack OpenedCardPack;
	EFortRarity LastCardRarity;
	TArray<struct Card> PurchasedItemList;
	TArray<class UClass*> PurchasedCardPacks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortStoreDisplayData : public UDataAsset
{
public:
	TArray<struct FString> AthenaRMTStorefrontNames;
	TArray<struct FString> CampaignRMTStorefrontNames;
	struct FString RequiredTokenOfferMetaKey;
	struct FString GiftableOfferStorefront;
	struct TSoftClassPtr<UObject> StandaloneMTXStoreClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStorefront : public FortUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreRootBase : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSkinDetailsPopup : public CommonActivatableWidget
{
public:
	class UClass* OfferTagTable;
	class UClass* RichText_ItemPrompt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStoreCardObject : public UObject
{
public:
	struct Card Card;
	int OriginalIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSummary : public CommonActivatablePanelLegacy
{
public:
	TArray<class UClass*> StoreCardObjects;
	class UClass* TileView;
	class UClass* MulchConfirmationModalClass;
	class UClass* MulchConfirmationModal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSummaryItemButton : public CommonButtonLegacy
{
public:
	bool HasAnItemMarkedForMulching;
	class UClass* PopupMenuAnchor;
	class UClass* StoreCardObject;
	class UClass* InventoryContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSummaryItemPopupMenu : public FortPopupMenu
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreTabs : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStWEquippedItemReticle : public FortHUDElementWidget
{
public:
	Unknown BoundWeapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubgameSelectScreen : public CommonActivatableWidget
{
public:
	bool bDebugVariable1;
	class UClass* SelectedTile;
	class UClass* LeavingPartyOrMatchmakingModalInstance;
	class UClass* Sound_OnActivated;
	class UClass* Sound_OnSelectedSubGame;
	class UClass* BoundAnim_Intro;
	class UClass* BoundAnim_Outro;
	class UClass* SelectModeIdle;
	class UClass* Image_SpinnerImage;
	class UClass* XboxOneProfileWidget_ProfileDisplay;
	class UClass* SubgameTile_BattleRoyale;
	class UClass* SubgameTile_Creative;
	class UClass* SubgameTile_Campaign;
	class UClass* RichText_PerfModeWarning;
	class UClass* Button_AccountPicker;
	class UClass* CampaignPurchaseScreenClass;
	class UClass* LeavingPartyOrMatchmakingModal;
	class UClass* LoadingContentModal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubgameTile : public CommonButtonLegacy
{
public:
	ESubgameTileType SubgameType;
	ESubgameLoadFromCMS CMS_LoadType;
	class UClass* KeyArt;
	struct FText Title;
	struct FText Description;
	struct FText StandardMessageLine1;
	struct FText StandardMessageLine2;
	struct LinearColor StandardMessageBackgroundColor;
	struct FText SpecialMessage;
	struct LinearColor SpecialMessageBackgroundColor;
	struct LinearColor UnfocusedOverlayColor;
	class UClass* GradientBrush;
	struct LinearColor GradientColor;
	class UClass* Image_KeyArt;
	class UClass* Text_Title;
	class UClass* Text_Description;
	class UClass* Text_StandardMessageLine1;
	class UClass* Text_StandardMessageLine2;
	class UClass* Border_StandardMessageBackground;
	class UClass* Text_SpecialMessage;
	class UClass* Border_SpecialMessageBackground;
	class UClass* Image_UnfocusedOverlay;
	class UClass* Image_Gradient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionBulletPointWidget : public CommonUserWidget
{
public:
	class UClass* Text_Title;
	class UClass* Text_Description;
	struct Color Color_CmsOverrideA;
	struct Color Color_CmsOverrideB;
	struct Color Color_CmsOverrideC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionScreenBase : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionPlatformModal : public FortSubscriptionScreenBase
{
public:
	class UClass* Button_Back;
	class UClass* Button_CloseMobile;
	struct FString ModalId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionCancellationModal : public FortSubscriptionPlatformModal
{
public:
	class UClass* Button_CancelSubscription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSubscriptionConfiguration : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> SubscriptionContentContainerClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionContentContainer : public CommonActivatableWidget
{
public:
	TArray<struct SubscriptionContentTabData> TabsData;
	class UClass* EntryBox_Tabs;
	class UClass* ButtonGroup_Tabs;
	class UClass* Switcher_Tabs;
	class UClass* SubscriptionManagementScreen;
	class UClass* Widget_TabsContainer;
	struct PrimaryContentSetup ContentSetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionManagementButton : public CommonButtonLegacy
{
public:
	struct FText ButtonText;
	class UClass* Text_Title;
	class UClass* Text_RealMoneyPrice;
	class UClass* Text_VBuckFinalCost;
	class UClass* Switcher_Prices;
	class UClass* Widget_RealMoneyPrice;
	class UClass* Widget_VBuckPrice;
	class UClass* Image_Spinner;
	struct Color Color_CmsOverrideA;
	struct Color Color_CmsOverrideB;
	struct Color Color_CmsOverrideC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSubscriptionManagementScreen : public FortSubscriptionScreenBase
{
public:
	struct TSoftClassPtr<UObject> CancellationInfoModalClass;
	struct TSoftClassPtr<UObject> LegalInfoModalClass;
	struct TSoftClassPtr<UObject> ResolveIssueModalClass;
	struct TSoftClassPtr<UObject> RejoinModalClass;
	class UClass* Button_Exit;
	class UClass* Button_ExitMobile;
	class UClass* Button_CancellationInfo;
	class UClass* Button_LegalInfo;
	class UClass* Button_InspectPackItems;
	class UClass* Button_ResolveIssue;
	class UClass* Button_Rejoin;
	class UClass* Widget_SubscriptionRewardDetails;
	class UClass* Button_PurchaseSubscription;
	class UClass* Text_SubscriptionInfo;
	class UClass* Text_CantRejoin;
	class UClass* Text_SubscriptionDisclaimer;
	class UClass* Text_BlockedBenefits_Content;
	class UClass* Image_Spinner;
	class UClass* CommonAnimatedSwitcher_ButtonStates;
	class UClass* ActiveButton;
	class UClass* ItemPairsInspectionScreen;
	class UClass* InspectScreenViewProgressButton;
	class UClass* InspectScreenSubscribeButton;
	struct DataTableRowHandle InspectItemsSubscribeAction;
	struct DataTableRowHandle InspectItemsViewProgressAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurveyNumericalChoiceWidget : public FortPlayerSurveyButtonGroupMultipleChoiceAnswerWidgetBase
{
public:
	class UClass* DummyButton;
	class UClass* Text_MinRating;
	class UClass* Text_MaxRating;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurvivorSquadManagementScreen : public FortSquadManagementScreenBase
{
public:
	class UClass* StatMatchesWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurvivorSquadSelectorButton : public FortSquadSelectorButton
{
public:
	TArray<struct GameplayAttribute> FortStatAttributes;
	TArray<struct GameplayAttribute> FortTeamStatAttributes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurvivorSquadStatMatchBase : public CommonUserWidget
{
public:
	struct FortUISurvivorSquadStatMatch StatMatch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurvivorSquadStatMatchesBase : public FortSquadStatDetailsWidget
{
public:
	class UClass* StatMatchClass;
	bool bSummaryView;
	TArray<class UClass*> StatMatches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSurvivorSquadSummaryStatItem : public CommonUserWidget
{
public:
	EFortBrushSize ImageSize;
	class UClass* Icon;
	class UClass* Value;
	class UClass* Name;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSwipePanel : public ContentWidget
{
public:
	struct Vector2D SwipeThreshold;
	bool bBeginSwipeOnPointerEnter;
	bool bConsumePointerInput;
	struct FScriptMulticastDelegate BP_OnSwipeLeft;
	struct FScriptMulticastDelegate BP_OnSwipeRight;
	struct FScriptMulticastDelegate BP_OnSwipeUp;
	struct FScriptMulticastDelegate BP_OnSwipeDown;
	struct FortSwipeDetector SwipeDetector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSwipePanelSlot : public PanelSlot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSZAwareImage : public Image
{
public:
	bool AnchorLeft;
	bool AnchorRight;
	bool AnchorTop;
	bool AnchorBottom;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabButton : public CommonButtonBase
{
public:
	class UClass* LazyImage_Icon;
	class UClass* Text_Title;
	struct Vector2D ImageSize_Mobile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabGamepadOptions : public FortOptionsTab
{
public:
	class UClass* InputCommonListView;
	class UClass* TooltipDisplay;
	class UClass* InputCategoryWidgetClass;
	class UClass* Button_AdvancedSettingsToggle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTabInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTabButtonInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTabListWidgetBase : public CommonTabListWidgetLegacy
{
public:
	struct FScriptMulticastDelegate OnTabContentCreated;
	TArray<struct FortTabListRegistrationInfo> PreregisteredTabInfoArray;
	bool bHideSingleTab;
	ESlateVisibility HideSingleTabVisibility;
	Unknown PendingTabLabelInfoMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamMemberXPBoostInfo : public FortTeamMemberEntryBase
{
public:
	class UClass* Panel_BattlePassOwnerInfo;
	class UClass* Text_BattlePassSelfXPBoost;
	class UClass* Text_EventXPBoost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamMemberListEntry : public FortPresenceUserListEntry
{
public:
	class UClass* VoiceIcon_Status;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamMemberManage : public FortActivatablePanel
{
public:
	Unknown TeamMember;
	class UClass* Banner_PlayerBanner;
	class UClass* Text_PlayerName;
	class UClass* PowerRatingWidgetSwitcher;
	class UClass* PowerRating_MemberPowerRating;
	class UClass* Moonbeam_PowerRating_MemberPowerRating;
	class UClass* VBox_Buttons;
	class UClass* Button_EditBanner;
	class UClass* Button_LeaveParty;
	class UClass* Button_MakePartyLeader;
	class UClass* Button_Whisper;
	class UClass* Button_Kick;
	class UClass* Button_ViewProfile;
	class UClass* Button_Mute;
	class UClass* Button_Unmute;
	class UClass* Button_ToggleParticipation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortTeamMemberPedestal : public AFortItemPlacementActor
{
public:
	TArray<struct CachedComponentMaterials> CachedComponentMaterials;
	class UClass* OwningPedestalGroup;
	int AssignedMemberIndex;
	int VisualOrderIndex;
	class UClass* WidgetComponent_MemberInfo;
	class UClass* WidgetComponent_FillOpenSlot;
	class UClass* WidgetComponent_BattlePassInfo;
	class UClass* WidgetComponent_CompletedFeatInfo;
	class UClass* PlaceholderMesh;
	TArray<class UClass*> MemberWidgetEntries;
	class UClass* MemberHeroItem;
	float LocalLoadoutFailureTimeout;
	bool bTimeToPawnLoadedEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamMemberPedestalFeatInfo : public FortTeamMemberEntryBase
{
public:
	class UClass* Text_FeatName;
	class UClass* Text_FeatDesc;
	class UClass* LazyImage_FeatIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTeamMemberPedestalNameplate : public FortBasicTeamMemberEntry
{
public:
	class UClass* Text_ReadyStatus;
	class UClass* InputIndicator_ActiveInputType;
	class UClass* PowerRatingWidgetSwitcher;
	class UClass* PowerRating_CampaignPower;
	class UClass* Moonbeam_PowerRating_CampaignPower;
	class UClass* Phoenix_PowerRating_CampaignPower;
	class UClass* SizeBox_HotfixControlled;
	class UClass* Text_PlayerLevel;
	class UClass* Image_HeroIcon;
	class UClass* Button_AddFriend;
	bool bTeamMemberPedestalNameplateAddFriendButtonEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTextButton : public CommonButtonLegacy
{
public:
	struct FText DefaultText;
	bool bUseAllCaps;
	class UClass* Text_Content;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTextStyleList : public CommonUserWidget
{
public:
	struct FName TextStylesPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTheaterSelect : public CommonActivatablePanelLegacy
{
public:
	class UClass* OverlayMain;
	class UClass* DefaultRequiredCompletedQuest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTierIndicator : public Widget
{
public:
	Unknown ItemToRepresent;
	EFortBrushSize BrushSize;
	float InterPipPadding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTimelineBase : public CommonActivatableWidget
{
public:
	struct DataTableRowHandle ConfirmActionRowHandle;
	struct DataTableRowHandle CancelActionRowHandle;
	class UClass* TimelineMarkerClass;
	class UClass* Slider_Gamepad;
	class UClass* ProgressBar_TimeElapsed;
	class UClass* Text_CurrentTime;
	class UClass* Text_EndTime;
	class UClass* CanvasPanel_Markers;
	class UClass* Overlay_ProgressBar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTimerTimespanDataSource : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTimespanDataSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortToastDisplayArea : public CommonUserWidget
{
public:
	class UClass* ToastQueue;
	class UClass* CurrentToast;
	class UClass* ToastWidget_New;
	class UClass* Toast_BattlePassPageUnlocked;
	class UClass* PowerToastWidget;
	class UClass* ToastWidget_MinorError;
	class UClass* VoiceChannelChangePopup;
	class UClass* SubscribeToastWidget;
	class UClass* ToastWidgetDonut;
	class UClass* HousepartyWelcome;
	class UClass* HousepartyFOMO;
	class UClass* HousepartyMic;
	class UClass* IncomingFriendRequestToast;
	class UClass* ToastSocialWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTooltipUIContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTopBarTabButton : public CommonButtonLegacy
{
public:
	bool bUseAlternateLabelStyle;
	bool bAlwaysShowTextLabel;
	class UClass* BangWrapper;
	class UClass* Image_MobileIcon;
	class UClass* Text_DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTouchControlRegion : public CommonUserWidget
{
public:
	struct TimerHandle AutorunLockDelayHandle;
	class UClass* RegisteredTouchMoveStick;
	class UClass* RegisteredTouchLookStick;
	class UClass* RegisteredAutoRunLockTarget;
	struct Vector2D LastMovePlayerRegionTouchOrigin;
	struct Vector2D MovePlayerRegionTouchEndPos;
	struct Vector2D MoveVector;
	bool bLastLookTouchWasTap;
	bool bIsLockedOn;
	float MoveStickLastTouchTime;
	struct Vector2D MovePlayerRegionLastTouchPos;
	struct Vector2D RotateCameraRegionLastTouchPos;
	struct Vector2D RotateCameraPlayerRegionLastTouchDiff;
	float RotateCameraLastTouchTime;
	class UClass* RotateInertiaCurve;
	struct Vector2D RotateStickPosition;
	struct Vector2D LockOnStickOrigin;
	struct Vector2D LockOnStickCurrentPos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTouchInteractionButton : public CommonUserWidget
{
public:
	struct FName MIDParam_Icon;
	struct FName MIDParam_IconScale;
	struct FName MIDParam_Tint;
	struct FName MIDParam_Duration;
	struct FName MIDParam_StartTime;
	struct FName MIDParam_TimerOpacity;
	bool bInteractionFocused;
	class UClass* Anim_RadialProgress;
	struct TSoftClassPtr<UObject> PendingIcon;
	struct TSoftClassPtr<UObject> DefaultIcon;
	Unknown IconOverrides;
	class UClass* DetailsTable;
	float DefaultIconScale;
	float PickupIconScale;
	class UClass* Image_Icon;
	class UClass* TrackedActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTouchInteractionLayer : public CommonUserWidget
{
public:
	class UClass* WidgetClass;
	struct UserWidgetPool WidgetPool;
	class UClass* ContentPanel;
	TArray<struct ButtonInteractionPair> InteractableButtonMap;
	class UClass* FocusedInteraction;
	class UClass* OwningPC;
	class UClass* InteractionComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTouchLookStick : public BacchusHUDElement
{
public:
	class UClass* MainSizeBox;
	struct TSoftClassPtr<UObject> FireImageRef;
	struct Vector2D FireImageAbsoluteOffset;
	class UClass* Button_DBNOCarryThrow;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTouchMoveStick : public BacchusHUDElement
{
public:
	bool bIsTouched;
	bool bMoveStickIsLocked;
	bool bAlwaysShowWhenTouched;
	float TouchStartTime;
	float LastTouchTime;
	struct Vector2D TouchStartPos;
	struct Vector2D MoveStickPos;
	struct GameplayTag AlwaysShowPropertyTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentAbandonMatchDialog : public FortActivatablePanel
{
public:
	class UClass* Button_LeaveMatch;
	class UClass* Button_ContinueMatch;
	class UClass* Text_LeaveMatchTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentDetailsPage : public FortShowdownDetailView
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortTournamentLiveGameSessionData : public UObject
{
public:
	TArray<class UClass*> UserInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentLiveGameSessionEntry : public CommonButtonLegacy
{
public:
	class UClass* Text_PlayerList;
	class UClass* Text_GameTimeDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentLiveGames : public CommonActivatableWidget
{
public:
	TArray<class UClass*> LiveSessions;
	class UClass* SelectedGame;
	class UClass* ListView_SessionEntries;
	class UClass* Button_WatchGame;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentLobbyPanel : public FortShowdownDetailView
{
public:
	struct DataTableRowHandle EventDetailsAction;
	class UClass* Button_EventDetails;
	class UClass* TournamentModalClass;
	class UClass* Text_TimeRemainingScheduledMatch;
	class UClass* Text_ScheduledMatchInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentModal : public FortActivatablePanel
{
public:
	class UClass* TournamentDetailsPage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentPayoutThresholdEntry : public CommonUserWidget
{
public:
	class UClass* Text_Threshold;
	class UClass* Text_Rewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentPayoutModal : public CommonActivatableWidget
{
public:
	class UClass* Text_TournamentName;
	class UClass* Text_SessionName;
	class UClass* Text_ThresholdTypeLabel;
	class UClass* DynamicEntryBox_PayoutThresholds;
	TArray<struct TournamentPayoutThresholdData> TournamentPayoutData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTournamentPosterViolator : public CommonUserWidget
{
public:
	class UClass* Text_TimeRemaining;
	class UClass* Text_InformationViolator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransformKeyPicker : public FortItemPickerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransformKeyPickerTileButton : public FortItemTileButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransformResultsList : public CommonUserWidget
{
public:
	class UClass* ResultsList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransformSlotItemPicker : public FortItemPickerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTransformSlotItemPickerTileButton : public FortItemTileButton
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrapCreativeConfigMenu : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTrapDefenderItemPicker : public FortItemPickerBase
{
public:
	class UClass* DetailsPanel;
	Unknown DefenderTrap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTravelLogMap : public UserWidget
{
public:
	float MapSize;
	float CurrentTimeFraction;
	int DistanceToCoalescePositions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTutorialContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnUpdateTutorialAnnouncement;
	struct FScriptMulticastDelegate OnNewAnnouncementStartedOnClientDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTutorialLobbyPopup : public FortActivatablePanel
{
public:
	class UClass* TutorialPlaylistData;
	class UClass* Tutorial_DefensiveBuildingPlaylistData;
	class UClass* SoloPlaylistData;
	class UClass* WidgetSwitcher_PopupTutorial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTutorialOverlay : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTutorialQuestVisibilityWrapper : public FortBangWrapper_NUI
{
public:
	class UClass* QuestItemDefinition;
	struct DataTableRowHandle QuestObjectiveStat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTutorialWindow : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTwitchLogin : public CommonUserWidget
{
public:
	struct TSoftClassPtr<UObject> TwitchLoginModalWidgetClass;
	class UClass* ActiveLoginModal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortTwitchLoginModalWidget : public FortActivatablePanel
{
public:
	class UClass* NativeHost;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIDataConfiguration : public UPrimaryDataAsset
{
public:
	struct FString DefaultUIDataConfigurationPath;
	struct FString DefaultBROnlyUIDataConfigurationPath;
	struct FString MobileBROnlyUIDataConfigurationPath;
	struct StateWidgetEntry StateWidgetClasses;
	struct StateWidgetEntry CampaignFrontEndWidget;
	TArray<struct TSoftClassPtr<UObject>> CachedWidgetClasses;
	struct TSoftClassPtr<UObject> StartupStateWidget_Login;
	struct TSoftClassPtr<UObject> StartupStateWidget_SubgameSelect;
	struct TSoftClassPtr<UObject> AthenaStateWidget_Frontend;
	struct TSoftClassPtr<UObject> AthenaStateWidget_MobileFrontend;
	struct TSoftClassPtr<UObject> AthenaStateWidget_StandaloneFrontend;
	struct TSoftClassPtr<UObject> AthenaStateWidget_MobileStandaloneFrontend;
	struct TSoftClassPtr<UObject> AthenaStateWidget_NightNightMode;
	struct TSoftClassPtr<UObject> AthenaStateWidget_HUD;
	struct TSoftClassPtr<UObject> AthenaStateWidget_MobileHUD;
	struct TSoftClassPtr<UObject> HUDLayoutToolV2SoftClass;
	struct TSoftClassPtr<UObject> AthenaStateWidget_Replay;
	struct TSoftClassPtr<UObject> MFA_ModalClass;
	struct TSoftClassPtr<UObject> EulaClass;
	struct TSoftClassPtr<UObject> FactionScreenSoftClassRef;
	struct TSoftClassPtr<UObject> CreativeServerBrowserSoftClassRef;
	struct TSoftClassPtr<UObject> BattleLabServerBrowserSoftClassRef;
	struct TSoftClassPtr<UObject> RegionLockMessageWidgetClass;
	Unknown StandardImageBrushSizes;
	struct TSoftClassPtr<UObject> PowerRatingIconMultiSizeBrush;
	struct LinearColor PowerRatingEnchantedPositiveColorOverride;
	struct LinearColor PowerRatingEnchantedNegativeColorOverride;
	struct TSoftClassPtr<UObject> FilledTierPipMultiSizeBrush;
	struct TSoftClassPtr<UObject> UnfilledTierPipMultiSizeBrush;
	struct TSoftClassPtr<UObject> PreviewingTierPipMultiSizeBrush;
	struct TSoftClassPtr<UObject> PromotedTierPipMultiSizeBrush;
	struct TSoftClassPtr<UObject> UpgradeArrowMultiSizeBrush;
	struct TSoftClassPtr<UObject> ComparisonUpArrowMultiSizeBrush;
	struct LinearColor BetterComparisonResultColor;
	struct LinearColor WorseComparisonResultColor;
	struct TSoftClassPtr<UObject> InventoryOverflowIndicatorMultiSizeBrush;
	struct TSoftClassPtr<UObject> TrackedSchematicIndicatorMultiSizeBrush;
	struct TSoftClassPtr<UObject> FavoritedItemIndicatorMultiSizeBrush;
	Unknown VariantToWidgetMaping;
	struct TSoftClassPtr<UObject> PlayerSurveyDispatcherClass;
	struct TSoftClassPtr<UObject> PlayerSurveyWidgetClass;
	bool bEnableSocialFeatures;
	bool bEnableChat;
	bool bEnablePartyFeatures;
	Unknown ChatChannelStyles;
	class UClass* SocialPanelClass;
	class UClass* TeamMemberManageClass;
	struct TSoftClassPtr<UObject> UnlockedSquadSlotBorderMultiSizeBrush;
	struct TSoftClassPtr<UObject> LockedSquadSlotBorderMultiSizeBrush;
	struct TSoftClassPtr<UObject> ReadOnlySquadSlotBorderMultiSizeBrush;
	struct TSoftClassPtr<UObject> DefenderIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> AssaultDefenderIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> PistolDefenderIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> MeleeDefenderIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> SniperDefenderIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> ShotgunDefenderIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> LeadSurvivorIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> SurvivorIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> TrapIconMultiSizeBrush;
	struct TSoftClassPtr<UObject> KeybindWidgetClass;
	struct TSoftClassPtr<UObject> HiddenCursorWidget;
	struct TSoftClassPtr<UObject> VirtualCursorWidget;
	struct RuntimeFloatCurve UIScaleCurve;
	struct RuntimeFloatCurve FrontEndUIScaleCurve;
	EFortReturnToFrontendBehavior ReturnToFrontendBehavior;
	struct TSoftClassPtr<UObject> EventsStyleDataTable;
	struct TSoftClassPtr<UObject> DefaultDivisionRoundIcon;
	Unknown DivisionRoundToIcons;
	Unknown DivisionRoundToFancyIcons;
	struct TSoftClassPtr<UObject> UpgradesDisplayDataTable;
	Unknown ItemCardPowerRatingTextStylesByBrushSize;
	Unknown ItemCardStackCountTextStylesByBrushSize;
	struct TSoftClassPtr<UObject> ItemCardLevelMeterMaterial;
	struct TSoftClassPtr<UObject> ItemCardDurabilityMeterMaterial;
	struct SlateBrush ItemCardBackgroundPlateBrush;
	struct SlateBrush ItemCardRarityGradientBrush;
	struct SlateBrush ItemCardDefenderPortraitBackgroundBrush;
	struct SlateBrush ItemCardHeroPortraitBackgroundBrush;
	struct SlateBrush ItemCardLeadSurvivorPortraitBackgroundBrush;
	struct SlateBrush ItemCardSchematicBackgroundBrush;
	struct TSoftClassPtr<UObject> ItemCardRewardTraitsBackgroundMultiSizeBrush;
	struct TSoftClassPtr<UObject> ItemCardSchematicTraitsBackgroundMultiSizeBrush;
	struct TSoftClassPtr<UObject> FrontendItemManagementScreenType;
	struct TSoftClassPtr<UObject> FrontendItemInspectionScreenType;
	struct TSoftClassPtr<UObject> HeroSquadManagementScreenType;
	struct TSoftClassPtr<UObject> HeroLoadoutScreenType;
	struct TSoftClassPtr<UObject> SurvivorSquadManagementScreenType;
	struct TSoftClassPtr<UObject> DefenderSquadManagementScreenType;
	struct TSoftClassPtr<UObject> MatchReadyDesktopPopupWidgetType;
	struct TSoftClassPtr<UObject> OutpostPermissionsWidget;
	struct TSoftClassPtr<UObject> PlayerFeedbackModalWidget;
	bool bLimitedToES2Features;
	struct WeightedBlendables FrontEndFFPostProcessMaterials;
	bool bUseSpecificPinataWeapon;
	bool bQuestVOEnabled;
	Unknown PersonnelAndSchematicCardSizes;
	Unknown OtherItemCardSizes;
	Unknown PersonnelAndSchematicItemCardMaterial;
	Unknown CardPackItemCardMaterial;
	Unknown InstanceItemCardMaterial;
	Unknown TransformKeyItemCardMaterial;
	Unknown CosmeticItemCardMaterial;
	TArray<EFortItemType> ItemTypesWhoseImagesReplaceCardBackgrounds;
	Unknown ItemTypesToHideCountWhenCountEqualsOne;
	Unknown ItemCardDetailAreaMaterial;
	struct TSoftClassPtr<UObject> FavoriteBookmarkMultiSizeBrush;
	struct TSoftClassPtr<UObject> PermanentTransformKeykMultiSizeBrush;
	struct TSoftClassPtr<UObject> ConsumableTransformKeykMultiSizeBrush;
	Unknown DefenderSubtypeWeaponTextures;
	Unknown EnchantedCustomRatingBlockBackgroundMaterial;
	Unknown NormalCustomRatingBlockBackgroundMaterial;
	struct Margin CustomRatingBlockBackgroundBrushMargin;
	struct TSoftClassPtr<UObject> UniversalItemCardDurabilityMeterMaterial;
	struct TSoftClassPtr<UObject> UniversalItemCardLevelMeterMaterial;
	struct TSoftClassPtr<UObject> UniversalItemCardTraitIconMaterial;
	struct TSoftClassPtr<UObject> UniversalItemCardUnearnedTierIconMaterial;
	struct TSoftClassPtr<UObject> UniversalItemCardAvailableTierIconMaterial;
	struct TSoftClassPtr<UObject> UniversalItemCardEarnedTierIconMaterial;
	struct TSoftClassPtr<UObject> UniversalItemCardPromotedTierIconMaterial;
	struct TSoftClassPtr<UObject> MysteryItemDefinition;
	struct TSoftClassPtr<UObject> LoadingCardTexture;
	struct FortItemCard_XL_PersonnelAndSchematics_Configuration ItemCardConfig_XXL_PersonnelAndSchematics;
	struct FortItemCard_XL_ItemInstance_Configuration ItemCardConfig_XXL_ItemInstance;
	struct FortItemCard_XL_TransformKey_Configuration ItemCardConfig_XXL_TransformKey;
	struct FortItemCard_XL_PersonnelAndSchematics_Configuration ItemCardConfig_XL_PersonnelAndSchematics;
	struct FortItemCard_XL_ItemInstance_Configuration ItemCardConfig_XL_ItemInstance;
	struct FortItemCard_XL_TransformKey_Configuration ItemCardConfig_XL_TransformKey;
	struct FortItemCard_L_PersonnelAndSchematics_Configuration ItemCardConfig_L_PersonnelAndSchematics;
	struct FortItemCard_L_ItemInstance_Configuration ItemCardConfig_L_ItemInstance;
	struct FortItemCard_L_TransformKey_Configuration ItemCardConfig_L_TransformKey;
	struct FortItemCard_M_PersonnelAndSchematics_Configuration ItemCardConfig_M_PersonnelAndSchematics;
	struct FortItemCard_M_ItemInstance_Configuration ItemCardConfig_M_ItemInstance;
	struct FortItemCard_M_TransformKey_Configuration ItemCardConfig_M_TransformKey;
	struct FortItemCard_S_PersonnelAndSchematics_Configuration ItemCardConfig_S_PersonnelAndSchematics;
	struct FortItemCard_S_ItemInstance_Configuration ItemCardConfig_S_ItemInstance;
	struct FortItemCard_S_TransformKey_Configuration ItemCardConfig_S_TransformKey;
	struct FortItemCard_XS_PersonnelAndSchematics_Configuration ItemCardConfig_XS_PersonnelAndSchematics;
	struct FortItemCard_XS_ItemInstance_Configuration ItemCardConfig_XS_ItemInstance;
	struct FortItemCard_XS_TransformKey_Configuration ItemCardConfig_XS_TransformKey;
	struct FortItemCard_XS_PersonnelAndSchematics_Configuration ItemCardConfig_XXS_PersonnelAndSchematics;
	struct FortItemCard_XXS_ItemInstance_Configuration ItemCardConfig_XXS_ItemInstance;
	struct FortItemCard_XS_TransformKey_Configuration ItemCardConfig_XXS_TransformKey;
	struct TSoftClassPtr<UObject> HealthyGamingDataTable;
	struct TSoftClassPtr<UObject> TrapPickerGameplayTagSettings;
	struct FortUIPickerTrapSortScores TrapPickerSortScores;
	class UClass* ObjClassToTooltipStatsMap;
	struct TSoftClassPtr<UObject> LoadingScreenBacchusTutorialWidget;
	struct TSoftClassPtr<UObject> LoadingScreenReturnToKairosWidget;
	struct TSoftClassPtr<UObject> ActorCanvasArrowBrush;
	struct TSoftClassPtr<UObject> UITutorialData;
	struct TSoftClassPtr<UObject> PawnHealthBarPowerRatingBacking;
	TArray<class UClass*> ProfileStatStyleSets;
	Unknown LegacyNativeUIBrushMap;
	Unknown LegacyNativeUIAssetMap;
	struct TSoftClassPtr<UObject> PassPurchaseScreen;
	struct TSoftClassPtr<UObject> ItemPairsInspectionScreen;
	struct TSoftClassPtr<UObject> GiftingScreenClass;
	class UClass* ItemShopConfiguration;
	class UClass* SubscriptionConfiguration;
	float AnalogRotateSpeed;
	float DragRotateSpeed;
	float TouchSwipeRotateRate;
	float MouseWheelZoomSpeed;
	float DragZoomSpeed;
	float TriggerZoomSpeed;
	float TouchZoomPinchRate;
	float ItemViewCompetingAxisInputThreshold;
	TArray<EFortItemType> ItemTypesToUseVaultCamera;
	class UClass* FrontendItemViewSettingsManager;
	class UClass* VideoDisplayData;
	class UClass* SocialDisplayData;
	class UClass* ChallengeDisplayData;
	class UClass* SquadStyleData;
	class UClass* StoreDisplayData;
	class UClass* ItemPresentationDisplayData;
	class UClass* PipTest;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIDataConfigurationContext : public BlueprintContextBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIDataProfileStats : public UDataAsset
{
public:
	Unknown ProfileStatStyles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIDirector : public UFortUIDirectorSubsystemBase
{
public:
	struct SoftObjectPath EntrywayManagerClassPath;
	struct SoftObjectPath AthenaManagerClassPath;
	struct SoftObjectPath CampaignManagerClassPath;
	class UClass* EntrywayManagerClass;
	class UClass* AthenaManagerClass;
	class UClass* CampaignManagerClass;
	class UClass* CurrentManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIGameFeatureAction_ModifyUIStateWidgets : public FortUIGameFeatureAction
{
public:
	Unknown StateWidgetClassOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIManager : public UObject
{
public:
	struct TSoftClassPtr<UObject> LayoutClass;
	bool bUseLegacyInputSystem;
	TArray<struct FortRootViewportLayoutInfo> RootViewportLayouts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIManager_Athena : public UFortUIManager
{
public:
	class UClass* LetoHudOverlayClass;
	class UClass* LetoHudOverlay;
	class UClass* SidekickOverlayClass;
	class UClass* SidekickOverlay;
	Unknown PlayerWidgets;
	float SidekickScreenWidthRatio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIManager_Campaign : public UFortUIManager
{
public:
	Unknown UIManagerInterfaces;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIManager_Startup : public UFortUIManager_Athena
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIManagerWidget_NUI : public CommonUserWidget
{
public:
	class UClass* CurrentModalWidget;
	TArray<class UClass*> ModalPanelQueue;
	class UClass* PlayerBannedScreen;
	class UClass* CurrentStateWidget;
	class UClass* NotificationManager;
	Unknown TypedWidgetCache;
	TArray<struct FortDialogDescription_NUI> ConfirmationQueue;
	class UClass* StateContentLayer;
	class UClass* ModalLayer;
	class UClass* ErrorWindow_Errors;
	class UClass* RestartModal;
	class UClass* ConfirmationWindow_ConfirmationWidget;
	class UClass* ProgressModal_Progress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIManagerWidget_Campaign : public FortUIManagerWidget_NUI
{
public:
	class UClass* NavigationManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIMessageItemWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnMessageDisplayed;
	struct FScriptMulticastDelegate OnMessageRemoved;
	struct FName MessageID;
	int StackSize;
	float DisplayDuration;
	float RemoveDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIMessageManager : public UObject
{
public:
	struct FScriptMulticastDelegate OnMessageAvailable;
	TArray<class UClass*> MessageQueue;
	TArray<Unknown> CurrentlyDisplayedMessages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIMessagesPageBase : public CommonActivatablePanelLegacy
{
public:
	int MaximumMessagesShown;
	class UClass* MessagesList;
	TArray<class UClass*> MessagesShown;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUINavigationManager : public UObject
{
public:
	struct FScriptMulticastDelegate OnNavigationEvent;
	TArray<struct UINavigationEntry> NavigationStack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUINavigationManager : public UUINavigationManager
{
public:
	struct FScriptMulticastDelegate OnMainTabNavigateRequest;
	struct FScriptMulticastDelegate OnFeatureNavigateOp;
	struct FScriptMulticastDelegate OnNodePageNavigateRequest;
	struct FScriptMulticastDelegate OnSquadSlotNavigateRequest;
	struct FScriptMulticastDelegate OnVaultTabNavigateRequest;
	struct FScriptMulticastDelegate OnVaultItemNavigateRequest;
	struct FScriptMulticastDelegate OnItemEvolutionNavigateRequest;
	struct FScriptMulticastDelegate OnQuestItemNavigateRequest;
	struct FScriptMulticastDelegate OnPopContentStackOp;
	struct FScriptMulticastDelegate OnSquadNavigationOp;
	struct FScriptMulticastDelegate FortExpeditionsOp;
	struct FScriptMulticastDelegate FortCollectionBookOp;
	struct FScriptMulticastDelegate OnQuestItemOp;
	TArray<struct FortUINavigationRequest> NavigationRequests;
	class UClass* HiddenCursorWidget;
	class UClass* VirtualCursorWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUINotificationManager : public UObject
{
public:
	TArray<class UClass*> UINotificationQueues;
	class UClass* LocalPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUINotificationQueue : public UObject
{
public:
	int MaxNotificationsInQueue;
	TArray<class UClass*> NotificationQueue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIRewardReport : public UObject
{
public:
	class UClass* LocalPlayer;
	int RewardDisplayLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIScoreReport : public UObject
{
public:
	class UClass* LocalPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUISpecialEventSubsystem : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate OnNewUISpecialEventState;
	struct FScriptMulticastDelegate OnTemporarySpecialUIEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_CampaignFrontend : public FortUIStateWidget_NUI
{
public:
	struct FScriptMulticastDelegate OnCrossplayWidgetClosed;
	class UClass* MainContentStack;
	class UClass* ItemReceivedScreenClass;
	class UClass* NextGiftBox;
	class UClass* PlayerSurveyDispatcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_ForcedIntro : public FortUIStateWidgetBase
{
public:
	struct FName DefaultIntroPlaylistName;
	class UClass* LoadingScreenDefinition;
	class UClass* Button_StartMatch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_ForcedIntro_Valkyrie : public FortUIStateWidget_ForcedIntro
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_JoinServer : public FortUIStateWidget_NUI
{
public:
	class UClass* Stack_MainContent;
	struct DataTableRowHandle TutorialCompleteStatHandle;
	class UClass* RejoinWindowClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_Login : public FortUIStateWidgetBase
{
public:
	class UClass* Button_Cancel;
	class UClass* ActionBar_Bottom;
	class UClass* Switcher_ScreenContents;
	class UClass* Editor_SafeZone;
	class UClass* Status_LoginInfo;
	class UClass* Splash_Screen;
	class UClass* Login_Interactions;
	class UClass* HealthWarningScreen_HealthInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_NightNightBase : public FortUIStateWidgetBase
{
public:
	bool FromGame;
	bool FromFrontend;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUIStateWidget_SubgameSelect : public FortUIStateWidget_NUI
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUIStyleDefinitionAsset : public UDataAsset
{
public:
	struct FortUIStyleDefinition StyleDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUpgradeDetailsBase : public CommonUserWidget
{
public:
	class UClass* VideoPlayer;
	class UClass* UpgradeInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUpgradeIndicator : public FortSimpleItemConditionIconIndicator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortUpgradeInfo : public UObject
{
public:
	class UClass* NodeItemDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUpgradeScreenBase : public CommonActivatablePanelLegacy
{
public:
	class UClass* UpgradesTabSelector;
	class UClass* UpgradesTileView;
	class UClass* UpgradeTileViewLoadGuard;
	class UClass* Details;
	Unknown TabToNodeTypeMap;
	class UClass* UpgradesRespecToken;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUpgradeTileBase : public CommonButtonLegacy
{
public:
	class UClass* UpgradeInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUserChoiceWidget : public FortUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortUserSearchResultListEntry : public FortPresenceUserListEntry
{
public:
	class UClass* Text_NameMatchesAndMutuals;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantEntryBox : public DynamicEntryBox
{
public:
	class UClass* CurrentItem;
	class UClass* CurrentItemDef;
	TArray<struct McpVariantChannelInfo> CurrentItemVariants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantTileSelector : public FortVariantEditorWidgetBase
{
public:
	class UClass* TileView_VariantOptions;
	class UClass* Text_VariantName;
	class UClass* CurrentSelectedVariant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantItemTexturePicker : public FortVariantTileSelector
{
public:
	class UClass* CachedCosmeticVariant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantListPreviewWidget : public CommonActivatableWidget
{
public:
	class UClass* Picker_VariantSelector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantNumericalPicker : public FortVariantEditorWidgetBase
{
public:
	int MinNum;
	int MaxNum;
	int NumericDelta;
	int CurrentNumber;
	class UClass* NumericalVariant;
	class UClass* Button_ZeroDigitUp;
	class UClass* Button_ZeroDigitDown;
	class UClass* Button_TenDigitUp;
	class UClass* Button_TenDigitDown;
	class UClass* Text_NumericalValue;
	class UClass* Text_VariantName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantFilterTab : public CommonButtonLegacy
{
public:
	struct AthenaVariantFilterTabInfo TabInfo;
	class UClass* LazyImage_Icon;
	class UClass* TextBlock_Label;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantPicker : public CommonActivatableWidget
{
public:
	bool bShowCapeRestriction;
	class UClass* ConfigurationData;
	struct DataTableRowHandle PrimaryTabLeftAction;
	struct DataTableRowHandle PrimaryTabRightAction;
	struct DataTableRowHandle SecondaryTabLeftAction;
	struct DataTableRowHandle SecondaryTabRightAction;
	class UClass* ScrollBox_Variants;
	class UClass* EntryBox_VariantOptions;
	class UClass* EntryBox_VariantOptions_NoScroll;
	class UClass* Text_NoCapes;
	class UClass* Container_Tabs;
	class UClass* HBox_PrimaryTabNav;
	class UClass* Text_PrimaryFilter;
	class UClass* EntryBox_PrimaryTabs;
	class UClass* ActionWidget_PrimaryTabLeft;
	class UClass* ActionWidget_PrimaryTabRight;
	class UClass* PrimaryTabButtonGroup;
	class UClass* Container_SecondaryTabs;
	class UClass* Text_SecondaryFilter;
	class UClass* EntryBox_SecondaryTabs;
	class UClass* ActionWidget_SecondaryTabLeft;
	class UClass* ActionWidget_SecondaryTabRight;
	class UClass* SecondaryTabButtonGroup;
	struct FortVariantFilterContext FilterContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVariantObject : public UObject
{
public:
	struct GameplayTag VariantChannel;
	struct GameplayTag VariantTag;
	struct FString VariantCustomData;
	bool bOwned;
	class UClass* CosmeticDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortRichColorVariantListObject : public UVariantObject
{
public:
	struct FText ColorName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantSelector : public FortVariantEditorWidgetBase
{
public:
	class UClass* EntryBox_VariantOptions;
	class UClass* Text_VariantName;
	class UClass* CurrentSelectedVariant;
	class UClass* Tile_ButtonGroup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantRichColorPicker : public FortVariantSelector
{
public:
	class UClass* CachedCosmeticVariant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVariantTileButton : public CommonButtonLegacy
{
public:
	struct LinearColor LockedTintColor;
	struct FName IconParamName;
	struct TSoftClassPtr<UObject> VariantMateral;
	class UClass* Image_VariantDisplay;
	class UClass* Image_Locked;
	class UClass* Overlay_Conflict;
	class UClass* Image_Active;
	class UClass* AssociatedVariant;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVbucksStoreScreen : public FortMtxStoreRootBase
{
public:
	class UClass* EntryBox_VBuckOffers;
	class UClass* Text_OfferMessage;
	class UClass* StoreBanner;
	class UClass* LastSelectedOffer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVehicleInfoIndicatorWidget : public FortActorIndicatorWidget
{
public:
	Unknown CurrentVehicle;
	float TimeToHideWhenDamaged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVictoryRoyaleScreen : public FortPostGameScreen
{
public:
	float ScreenDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVideoDisplayData : public UDataAsset
{
public:
	class UClass* FortVideoPlayer;
	class UClass* SubtitlePlayer;
	class UClass* VideoActivatablePanelClass;
	Unknown LocaleAudioTrackIndexMap;
	TArray<struct FortVideoInfo> Videos;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVideoPlayerWidget : public FortUserWidget
{
public:
	bool bAutoPlayOnOpen;
	bool bLoop;
	bool bShowSubtitles;
	bool bNoAudio;
	bool bForceDefaultAudio;
	class UClass* SoundClass;
	class UClass* VideoPlayer;
	class UClass* DefaultAudioSubmix;
	class UClass* LicensedAudioSubmix;
	class UClass* MediaController;
	class UClass* SoundComponent;
	class UClass* SubtitlePlayer;
	class UClass* Image_VideoTexture;
	class UClass* Subtitles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVisualAttachment : public SizeBox
{
public:
	struct Vector2D ContentAnchor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnableVOIPNotification : public UFortUINotification
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceChannelChangePopup : public FortToastWidget
{
public:
	bool bEnableVoiceChatNotifyEverySession;
	bool bToastMode;
	float VisiblityInSeconds;
	struct FText GameChannelText;
	struct FText PartyChannelText;
	struct FText JustJoinedChannelText;
	struct FText StayedInChannelText;
	Unknown CachedGameChannelRecommendationInputComponent;
	class UClass* Anim_SimplePopup;
	class UClass* Text_TopLine;
	class UClass* Text_MiddleLine;
	class UClass* Text_BottomLine;
	class UClass* ActionButton;
	class UClass* Button_JoinGameChat;
	class UClass* Switcher_InputButtons;
	class UClass* HoldKeybindWidget_Keyboard;
	class UClass* HoldKeybindWidget_GamePad;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceChannelSpeakerWidget : public UserWidget
{
public:
	float ToleratedSilenceDelay;
	float PerfUpdateIntervalInSecs;
	float OpenCloseAnimProxyDuration;
	bool bPerfCollapseHorizontal;
	float TalkingAnimProxyDuration;
	class UClass* Anim_Close;
	class UClass* Anim_Open;
	class UClass* Text_DisplayName;
	class UClass* Text_ChannelName;
	class UClass* Border_ScaleBound;
	class UClass* AvatarIcon;
	class UClass* Image_ActiveVoiceIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceSpeakerContainerWidget : public CommonUserWidget
{
public:
	class UClass* CustomSpeakerWidgetClass;
	int MaxSimultaneousUsers;
	bool bShowIndicatorsForSquadMembers;
	bool bCurrentChannelDisplayEnabled;
	class UClass* DynamicEntry_Speakers;
	class UClass* Panel_ChannelContainer;
	class UClass* Text_ChannelDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortBacchusSpeakerWrapper : public BacchusHUDElement
{
public:
	class UClass* WrappedSpeakers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceChatMemberListEntry : public FortPresenceUserListEntry
{
public:
	class UClass* VoiceIcon_Status;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceChatStatusIcon : public Widget
{
public:
	struct Vector2D DesiredSize;
	struct SlateColor ImageColorAndOpacity;
	class UClass* VoiceChatStatusMaterial;
	struct SlateBrush StatusBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceChatStatusIconProxyAnim : public FortVoiceChatStatusIcon
{
public:
	float TalkingRampUpSeconds;
	float TalkingRampDownSeconds;
	float TalkingUpdatesPerSecond;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortVoiceSettingsDisplay : public CommonUserWidget
{
public:
	class UClass* Text_PTTOnOff;
	class UClass* Text_InputDeviceName;
	class UClass* Text_OutputDeviceName;
	class UClass* Switcher_VoiceEnabledView;
	class UClass* VoiceEnabledView;
	class UClass* VoiceDisabledView;
	class UClass* HBox_PTTKeybind;
	class UClass* Button_OpenSettings;
	class UClass* Button_EnableVoiceChat;
	class UClass* ListView_VoiceSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortWeaponBoardBase : public AActor
{
public:
	TArray<struct FortWeaponBoardDisplaySlot> RangedWeaponDisplaySlots;
	TArray<struct FortWeaponBoardDisplaySlot> MeleeWeaponDisplaySlots;
	TArray<struct FortWeaponBoardDisplaySlotItem> DisplaySlotItemList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWeaponWheel : public CommonActivatableWidget
{
public:
	bool bRememberLastItem;
	int NumOfQuickBarItems;
	struct DataTableRowHandle VirtualAcceptInputAction;
	class UClass* RadialMenu_Picker;
	class UClass* Text_ItemName;
	class UClass* Keybind_Confirm;
	class UClass* Button_Cancel;
	class UClass* Image_RadialHighlight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWebLoginWidget : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWebPurchaseScreen : public CommonActivatablePanelLegacy
{
public:
	class UClass* WebContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortWorkerSetBonusIcon : public CommonUserWidget
{
public:
	struct GameplayTag GameplayTag;
	EFortBrushSize ImageSize;
	class UClass* Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FriendCodeEntryBase : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FriendCodeListBase : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GalileoCountdownWidget : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GalileoWrapperWidget : public CommonUserWidget
{
public:
	class UClass* MutatorClassToWaitFor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameStartCountdownWidget : public LTMWidgetBase
{
public:
	class UClass* CountdownMusicStinger;
	class UClass* GameStartCountdownMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GenericLeaderboardDisplayWidgetBase : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GGWidgetBase : public LTMWidgetBase
{
public:
	class UClass* BaseMutator;
	Unknown CachedWorld;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GGCenterDisplayWidgetBase : public GGWidgetBase
{
public:
	int NumberOfSlotsFlankingLocalPlayer;
	TArray<struct GGCenterDisplayEntry> CenterDisplayEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GGInventoryWidgetBase : public GGWidgetBase
{
public:
	class UClass* NextItemToDisplay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GGProgressWidget : public LTMWidgetBase
{
public:
	int PointsToGoalThreshold;
	TArray<struct FortInGameLeaderboardPlacementData> TopPlacedEnemies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HardcoreModifierFlyover : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HardcoreModifierListEntry : public CommonUserWidget
{
public:
	class UClass* Text_Modifier;
	class UClass* Button_ClickCatcher;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HardcoreModifierPreviewPane : public CommonUserWidget
{
public:
	class UClass* Image_ChallengePreview;
	class UClass* TextBlock_CurrentChallenge;
	class UClass* Text_Top50Count;
	class UClass* Text_Top25Count;
	class UClass* Text_Top10Count;
	class UClass* Text_Top5Count;
	class UClass* Text_VRCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HardcoreModifierListView : public ListViewBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HardcoreModifierSelectionScreen : public CommonActivatableWidget
{
public:
	class UClass* TextBlock_Heading;
	class UClass* TextBlock_Description;
	class UClass* ListView_Challenges;
	class UClass* PreviewPane_Modifier;
	class UClass* Button_Save;
	class UClass* Button_Cancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HardcoreModifierStatusBar : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HealthWarningScreen : public CommonActivatablePanelLegacy
{
public:
	float ShowTimeLength;
	class UClass* Text_HealthWarning;
	class UClass* RatingIcons_RatingIcons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HeistWidgetBase : public FortHUDElementWidget
{
public:
	EHeistExitCraftUIState CurrExitCraftUIState;
	bool bDisplayBlingRow;
	bool bCanDisplayVanUI;
	struct GameplayTag SafeSupplyDropTag;
	struct GameplayTag BlingItemTag;
	struct GameplayTag CarryingBlingItemTag;
	int CurrBlingSupplyDropCount;
	int CurrBlingItemCount;
	int CurrBlingEnemyCount;
	int CurrBlingAllyCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolContext : public BlueprintContextBase
{
public:
	struct FScriptMulticastDelegate OnOpenCloseFireModePanelDelegate;
	struct FScriptMulticastDelegate OnFireModeChangeDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolFireModePanel : public FortActivatablePanel
{
public:
	bool bSkipFireModeOptionTutorial;
	TArray<class UClass*> FireModeButtons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolFireModeButton : public CommonUserWidget
{
public:
	EFireModeType FireModeType;
	struct FText FireModeName;
	struct FText FireModeDescription;
	class UClass* FireModeImage;
	class UClass* SelectionButton;
	class UClass* MovieWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_ActionButtonProxy : public FortMobileHUDElementProxy
{
public:
	struct GameplayTag IconSizePropertyTag;
	class UClass* SizeBox_HitboxSize;
	class UClass* SizeBox_VisualSize;
	class UClass* Image_Background;
	class UClass* Image_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_Button : public CommonUserWidget
{
public:
	bool bIsToggleable;
	float ButtonWidthOverride;
	float ButtonHeightOverride;
	struct FText Text;
	struct Margin TextPadding;
	int TextFontSize;
	struct SlateBrush IconBrush;
	struct Margin IconPadding;
	bool bMatchIconSize;
	struct SlateBrush BackgroundBrush;
	struct Margin InternalPadding;
	bool bOverride_WidthOverride;
	bool bOverride_HeightOverride;
	bool bExternallyControlledStates;
	struct HUDLayoutToolV2_ButtonStateColor NormalButtonStyle;
	struct HUDLayoutToolV2_ButtonStateColor PressedButtonStyle;
	struct HUDLayoutToolV2_ButtonStateColor SelectedButtonStyle;
	class UClass* SizeBox_Control;
	class UClass* Border_Container;
	class UClass* Text_ButtonAction;
	class UClass* Image_Icon;
	class UClass* Image_Background;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_WidgetPreview : public CommonUserWidget
{
public:
	class UClass* CreateHUDWidgetOperation;
	float DragDistanceThresholdMillimeters;
	class UClass* TextBlock_InstancesLeftCounter;
	class UClass* Border_Background;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_ButtonPreview : public HUDLayoutToolV2_WidgetPreview
{
public:
	class UClass* Image_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_ContextButton : public CommonUserWidget
{
public:
	class UClass* InEditIcon;
	struct LinearColor InEditIconColorAndOpacity;
	struct LinearColor InEditBackgroundColorAndOpacity;
	class UClass* VisibleIcon;
	struct LinearColor VisibleIconColorAndOpacity;
	struct LinearColor VisibleBackgroundColorAndOpacity;
	class UClass* HiddenIcon;
	struct LinearColor HiddenIconColorAndOpacity;
	struct LinearColor HiddenBackgroundColorAndOpacity;
	class UClass* Text_LayoutName;
	class UClass* Button_ContextVisibility;
	class UClass* Button_ToggleContextEditing;
	class UClass* Image_SelectionHighlight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_ContextSelector : public CommonUserWidget
{
public:
	class UClass* EditContextButton;
	class UClass* VisibleContextButton;
	class UClass* EntryBox_MainLayoutButtons;
	class UClass* EntryBox_VehicleLayoutButtons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_Grid : public Widget
{
public:
	int RuleLinePeriod;
	struct LinearColor RegularLineColor;
	struct LinearColor RuleLineColor;
	float GridSize;
	float SmallestGridSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_GridSnap : public CommonUserWidget
{
public:
	bool bGridSnapEnabled;
	class UClass* CheckMarkSprite;
	class UClass* Text_SettingValue;
	class UClass* Slider_SettingValue;
	class UClass* Button_ToggleEnabled;
	class UClass* ProgressBar_ColoredBackground;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_KeyButtonPreview : public HUDLayoutToolV2_WidgetPreview
{
public:
	class UClass* KeybindWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_KeyButtonProxy : public FortMobileHUDElementProxy
{
public:
	class UClass* KeybindWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_KillfeedProxy : public FortMobileHUDElementProxy
{
public:
	struct GameplayTag NumberOfKillfeedLinesTag;
	class UClass* EntryBox_KillFeedText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LayoutButton : public CommonUserWidget
{
public:
	struct LinearColor InEditColor;
	struct LinearColor SelectedColor;
	class UClass* Button_Internal;
	class UClass* Border_ActiveIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LinkAcrossActionPanel : public CommonUserWidget
{
public:
	class UClass* Text_MainContextTitle;
	class UClass* Text_VehicleContextTitle;
	class UClass* Button_SelectAll;
	class UClass* Button_DeselectAll;
	class UClass* ScrollBox_Actions;
	class UClass* EntryBox_MainContextActions;
	class UClass* EntryBox_VehicleContextActions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LinkAcrossActionSetting : public CommonUserWidget
{
public:
	struct LinearColor EnabledCheckBoxBorderColor;
	struct LinearColor DisabledCheckBoxBorderColor;
	class UClass* CheckMarkSprite;
	class UClass* Image_ActionIcon;
	class UClass* Text_ActionName;
	class UClass* LinkAcrossWarningIndicator_Warning;
	class UClass* NumericalIndicator_ActionImpact;
	class UClass* Image_CheckboxBorder;
	class UClass* Button_SelectAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LinkAcrossNumericalIndicator : public CommonUserWidget
{
public:
	struct LinearColor MaximumInstancesColor;
	TArray<struct LinkAcrossNumericalIndicatorActionSymbol> ActionSymbols;
	class UClass* Text_ActionSymbol;
	class UClass* Text_InstanceCounter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LinkAcrossPanel : public CommonUserWidget
{
public:
	class UClass* HUDWidgetRegistry;
	class UClass* TooltipLayer;
	TArray<struct SimpleActionMessages> SimpleActionMessages;
	class UClass* LinkAcrossPanelTitle_Header;
	class UClass* Button_Close;
	class UClass* Switcher_Actions;
	class UClass* SizeBox_ActionPanelContainer;
	class UClass* LinkAcrossActionPanel_Actions;
	class UClass* VerticalBox_SimpleAction;
	class UClass* Text_SimpleAction;
	class UClass* Text_SimpleActionWarning;
	class UClass* Button_ToggleAdvanced;
	class UClass* Button_Cancel;
	class UClass* Button_Confirm;
	class UClass* WarningIndicator_MainWarning;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LinkAcrossPanelTitle : public CommonUserWidget
{
public:
	struct FText AdvancedActionTitle;
	class UClass* SizeBox_Preview;
	class UClass* Text_WidgetName;
	class UClass* Text_Action;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_LinkAcrossWarningIndicator : public CommonUserWidget
{
public:
	struct Vector2D TooltipOffset;
	struct Vector2D TooltipAllignment;
	struct FText WarningMessage;
	class UClass* TooltipLayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_Popup : public CommonActivatableWidget
{
public:
	class UClass* CommonText_Title;
	class UClass* RichText_Description;
	class UClass* Button_Confirm;
	class UClass* Button_Cancel;
	class UClass* Button_Close;
	class UClass* Anim_In;
	class UClass* Anim_Out;
	class UClass* Switcher_CornerIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_ProfileSelectionPanel : public CommonUserWidget
{
public:
	class UClass* HudLayoutToolPopupClass;
	class UClass* HUDLayoutToolTextInputPopupClass;
	struct HUDLayoutToolV2_PopupContent NoCustomLayoutSlotsLeftPopupContent;
	struct HUDLayoutToolV2_PopupContent DeleteCustomLayoutPopupContent;
	struct HUDLayoutToolV2_TextInputPopupContent RenamePopupContent;
	class UClass* HUDWidgetRegistry;
	class UClass* InEditLayoutButton;
	class UClass* SelectedLayoutButton;
	class UClass* EntryBox_Presets;
	class UClass* EntryBox_CustomLayouts;
	class UClass* EntryBox_EmptyCustomLayoutSlots;
	class UClass* Button_Exit;
	class UClass* Button_EditLayout;
	class UClass* Button_Convert;
	class UClass* Button_Copy;
	class UClass* Button_Delete;
	class UClass* Button_Rename;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_PropertyPanel : public CommonUserWidget
{
public:
	class UClass* WidgetProxyToEdit;
	TArray<class UClass*> VisibleSettings;
	class UClass* HUDWidgetCustomPropertySettingRegistry;
	class UClass* HUDWidgetRegistry;
	class UClass* Switcher_PropertiesAndMessage;
	class UClass* Text_SelectWidgetMessage;
	class UClass* VerticalBox_PropertiesContainer;
	class UClass* Text_WidgetName;
	class UClass* Button_EditLinks;
	class UClass* Button_RevertHUDWidget;
	class UClass* Button_DeleteHUDWidget;
	class UClass* ListView_Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_QuickbarComboSlotProxy : public FortMobileHUDElementProxy
{
public:
	TArray<class UClass*> CombatIcons;
	TArray<class UClass*> BuildingIcons;
	TArray<class UClass*> ComboIcons;
	struct GameplayTag SlotTypePropertyTag;
	struct GameplayTag SlotLockPropertyTag;
	struct GameplayTag SlotNumberPropertyTag;
	class UClass* Switcher_SlotType;
	class UClass* Image_CombatIcon;
	class UClass* Image_BuildingIcon;
	class UClass* Image_ComboIcon;
	class UClass* Image_LockIcon;
	class UClass* Text_SlotNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_QuickbarProxy : public FortMobileHUDElementProxy
{
public:
	Unknown QuickbarProxySlotIcons;
	Unknown SlotAmountOverridePerContext;
	int DefaultSlotAmount;
	struct GameplayTag SlotLocksPropertyTag;
	struct GameplayTag ReversePropertyTag;
	struct GameplayTag SlotTypePropertyTag;
	class UClass* EntryBox_QuickbarProxySlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_QuickbarProxySlot : public UserWidget
{
public:
	class UClass* Image_SlotIcon;
	class UClass* Text_SlotNumber;
	class UClass* Image_LockIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_TextInputPopup : public HUDLayoutToolV2_Popup
{
public:
	struct FText InvalidCharacterText;
	class UClass* EditableFilteredTextBox_UserInput;
	class UClass* Button_Paste;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_Toaster : public CommonActivatableWidget
{
public:
	class UClass* Anim_Success;
	class UClass* Anim_Failure;
	class UClass* Anim_LocalFailure;
	class UClass* Anim_CloudFailure;
	class UClass* CommonText_Title;
	class UClass* CommonText_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_Tooltip : public CommonUserWidget
{
public:
	class UClass* TextBlock_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_TooltipLayer : public CommonUserWidget
{
public:
	class UClass* Tooltip_Message;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_TutorialPopup : public CommonActivatableWidget
{
public:
	int NumberOfTutorials;
	class UClass* Switcher_TutorialOverlays;
	class UClass* Button_NextTutorial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_TutorialTextPrompt : public CommonActivatableWidget
{
public:
	struct FText TitleText;
	struct FText DescriptionText;
	class UClass* TextBlock_Title;
	class UClass* TextBlock_Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_VirtualCanvas : public ContentWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2_VirtualCanvasSlot : public PanelSlot
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CreateHUDWidgetDragDropOperation : public DragDropOperation
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2SettingsListEntry_Anchors : public FortSettingsListEntry_Setting
{
public:
	class UClass* AnchorSetting;
	class UClass* Button_TopLeft;
	class UClass* Button_TopMiddle;
	class UClass* Button_TopRight;
	class UClass* Button_MiddleLeft;
	class UClass* Button_MiddleMiddle;
	class UClass* Button_MiddleRight;
	class UClass* Button_BottomLeft;
	class UClass* Button_BottomMiddle;
	class UClass* Button_BottomRight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2SettingsListEntry_Bool : public FortSettingsListEntry_Setting
{
public:
	class UClass* CheckMarkSprite;
	class UClass* BoolSetting;
	class UClass* Panel_Value;
	class UClass* Button_ToggleBool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2SettingsListEntry_Discrete : public FortSettingsListEntry_Setting
{
public:
	class UClass* DiscreteSetting;
	class UClass* Panel_Value;
	class UClass* Text_PropertyValue;
	class UClass* Button_DecreaseValue;
	class UClass* Button_IncreaseValue;
	class UClass* Rotator_SettingValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2SettingsListEntry_QuickbarLocks : public FortSettingsListEntry_Setting
{
public:
	class UClass* QuickbarLocksSetting;
	struct LinearColor LockEnabledColor;
	struct LinearColor LockDisabledColor;
	class UClass* EntryBox_SlotLocks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HUDLayoutToolV2SettingsListEntry_Scalar : public FortSettingsListEntrySetting_Scalar
{
public:
	class UClass* Button_DecreaseValue;
	class UClass* Button_IncreaseValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class IconTextButtonSpectatorBase : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationBaseWidget : public LTMWidgetBase
{
public:
	Unknown CachedMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationPerkSelectContainerWidget : public LTMWidgetBase
{
public:
	class UClass* PerkPanelClass;
	struct PerkMutatorData MutatorData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationPerkSelectionPanel : public FortActivatablePanelLTM
{
public:
	Unknown CachedMutator;
	TArray<class UClass*> EntryWidgets;
	class UClass* PerkIntroScreenWidget;
	struct PerkMutatorData MutatorData;
	class UClass* PerkIntroOverlay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PostGamePlacementOverlay : public FortHUDElementWidget
{
public:
	class UClass* MutatorClassToWaitFor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationPlacementOverlay : public PostGamePlacementOverlay
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PerkIntroScreenWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnPerkIntroFinishedEvent;
	TArray<struct PerkPipData> PreviousPerkPipData;
	TArray<struct PerkPipData> NewPerkPipData;
	TArray<struct PerkPipData> PerkPipData;
	struct RoundTechDataCache StartRoundCache;
	struct GameplayTag FactionTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationRoundInfoWidget : public PerkIntroScreenWidget
{
public:
	int CachedRoundIndex;
	byte WinningTeam;
	byte AttackingTeam;
	byte DefendingTeam;
	byte NextRoundAttackingTeam;
	byte NextRoundDefendingTeam;
	class UClass* MutatorClassToWaitFor;
	Unknown CachedMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationSelectedPerksWidget : public LTMWidgetBase
{
public:
	Unknown CachedMutator;
	TArray<class UClass*> CurrentDisplayedPerks;
	struct GameplayTag FilterTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationIntelStatusWidget : public CommonUserWidget
{
public:
	int SpawnerIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InfiltrationStatusWidget : public LTMWidgetBase
{
public:
	struct InfiltrationModeState PrevModeState;
	TArray<class UClass*> IntelStatusWidgets;
	Unknown AttackerAudioCues;
	Unknown DefenderAudioCues;
	Unknown SpamSounds;
	float SpamThrottle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InZoneTitleBarBase : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AItemPreviewRotator : public AFortItemPreviewSceneChanger
{
public:
	float CameraTransitionLerpDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AItemPreviewSwapper : public AFortItemPreviewSceneChanger
{
public:
	class UClass* CameraTransitionCurve;
	float CameraTransitionLerpDuration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KairosMessageBase : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class KairosViewport : public ContentWidget
{
public:
	struct LinearColor BackgroundColor;
	class UClass* EffectMaterial;
	ESceneCaptureSource CaptureSource;
	struct Vector ViewLocation;
	struct Rotator ViewRotation;
	class UClass* DefaultGameMode;
	class UClass* DynamicMaterial;
	class UClass* RenderTarget;
	class UClass* CaptureComponent;
	class UClass* ViewportActorClass;
	TArray<class UClass*> SpawnedActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LetoHudOverlay : public CommonUserWidget
{
public:
	class UClass* VBox_Container;
	class UClass* HBox_PlayerOne;
	class UClass* HBox_PlayerTwo;
	class UClass* Spacer_PlayerOne;
	class UClass* Spacer_PlayerTwo;
	class UClass* LetoAvatar_PlayerOne;
	class UClass* LetoAvatar_PlayerTwo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LetoPlayerAvatar : public CommonUserWidget
{
public:
	class UClass* AvatarIcon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LimitedLivesCounterWidget : public LTMWidgetBase
{
public:
	Unknown CurrentPlayerState;
	int MaxLives;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveStreamHUDElement : public FortHUDElementWidget
{
public:
	class UClass* SourceBus;
	class UClass* DefaultAudioSubmix;
	class UClass* LicensedAudioSubmix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveStreamInMatchAd : public UserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveStreamLobbyAd : public UserWidget
{
public:
	class UClass* ContentSwitcher;
	class UClass* ButtonLayer;
	class UClass* CountdownLayer;
	class UClass* CountdownText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveStreamMenuToggleButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveStreamScreen : public FortActivatableVideoPanel
{
public:
	class UClass* StreamMediaSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveStreamStandalonePlayer : public UserWidget
{
public:
	class UClass* StreamMediaSource;
	class UClass* VideoPlayerWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LoadoutWarningWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LTMCountdownWidgetBase : public FortHUDElementWidget
{
public:
	struct FortPrioritizedWidgetData PrioritizationData;
	TArray<struct FortCountdownSounds> TrackList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LTMPreRoundWidgetBase : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashBossBattleWidget : public LTMWidgetBase
{
public:
	class UClass* MashMutatorRef;
	float CurrentBossHealth;
	float TotalBossHealth;
	float BossHealthRatio;
	class UClass* BossAIPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashPhaseWidget : public LTMWidgetBase
{
public:
	EMashPhase CurrentPhase;
	int CurrentObjectiveAreaIndex;
	class UClass* MashMutatorRef;
	class UClass* CachedLocalPlayerController;
	bool CachedIsLocalPlayerAlive;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashScoreEventWidgetBase : public LTMWidgetBase
{
public:
	class UClass* MashMutatorRef;
	class UClass* CachedLocalPlayerState;
	struct MashPlayerDataEntry CachedLocalPlayerEntry;
	float StreakScoreMultiplierRemainingTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MashWidgetBase : public LTMWidgetBase
{
public:
	class UClass* MashMutatorRef;
	class UClass* CachedLocalPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MassiveGadgetEquippedWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MatchmakingInputIndicatorBase : public CommonUserWidget
{
public:
	EMatchmakingInputSource InputSource;
	bool bShowLocalInputOnlyWhenDifferentFromDefault;
	bool bShowRemoteInputOnlyWhenDifferentFromDefault;
	struct UniqueNetIdRepl RemotePlayerUniqueId;
	ECommonInputType LastInputType;
	class UClass* SizeBox_HotfixVisibility;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MatchmakingRegionAndPoolBase : public UserWidget
{
public:
	class UClass* SizeBox_HotfixControlled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameHUD_SpectatorGameTimer : public MinigameWidgetBase
{
public:
	class UClass* Text_Time;
	class UClass* Text_Centiseconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameHUD_SpectatorLeaderboard : public MinigameWidgetBase
{
public:
	class UClass* ScoreStat;
	class UClass* ItemCollectStat;
	class UClass* LapTimeStat;
	class UClass* TimeAliveStat;
	class UClass* EntryBox_LeaderboardEntries;
	class UClass* OutsideTopThreeEntryClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameHUD_SpectatorLeaderboardEntry : public CommonUserWidget
{
public:
	class UClass* Text_Standing;
	class UClass* Image_Avatar;
	class UClass* Image_BackgroundBase;
	class UClass* Image_BackgroundShape;
	class UClass* Image_BackgroundShape_Bottom;
	class UClass* Text_Score;
	class UClass* Text_EndScore;
	class UClass* Text_ScoreOnly;
	class UClass* Text_ScoreTime;
	class UClass* Text_SmallScoreTime;
	class UClass* CachedMinigameTeamIdClass;
	ESpectatorLeaderboardEntryType CachedEntryType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameHUD_SpectatorTeamBanner : public AthenaBroadcastSquadStatusWidget
{
public:
	class UClass* Image_BackgroundTone;
	class UClass* Image_BackgroundShape;
	class UClass* Image_Name;
	class UClass* Image_Logo;
	class UClass* Image_Avatar;
	class UClass* Image_Overlap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MinigameObjectiveTrackerWidget : public MinigameWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MobileHUDVisual : public CommonUserWidget
{
public:
	struct GameplayTag VisualType;
	float Opacity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MobileHUDButtonVisual : public MobileHUDVisual
{
public:
	float ButtonSize;
	float ButtonDisplayScale;
	class UClass* DefaultIcon;
	class UClass* OuterSizeBox;
	class UClass* InnerSizeBox;
	class UClass* Image_Icon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMyFortMobileHUDWidgetCustomPropertyModel_NumberDiscrete : public UFortMobileHUDWidgetCustomPropertyModel_Number
{
public:
	Unknown PropertyOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OstrichFinaleWidget : public UserWidget
{
public:
	float DestructDisplayUpdateFrequency;
	float FinishBroadcastOffset;
	class UClass* OwningVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class OstrichReticleDecorator : public FortHUDElementWidget
{
public:
	float RocketCooldownUpdateFrequency;
	class UClass* OwningOstrichVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PapayaPostGameOptions : public FortPostGameScreen
{
public:
	class UClass* ListView_PostGameMenu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PaybackHUDWidgetBase : public LTMWidgetBase
{
public:
	class UClass* CachedPaybackMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PerkAvailableAlertBaseWidget : public LTMWidgetBase
{
public:
	Unknown CachedMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PerkSelectionEntryWidget : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnPerkSelected;
	int SelectionIndex;
	class UClass* ItemA;
	class UClass* ItemB;
	TArray<class UClass*> AllSelectableItems;
	TArray<class UClass*> AllSelectablePassives;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickupStream : public FortHUDElementWidget
{
public:
	TArray<struct PickupStreamEntry> PickupDisplayEntries;
	int MaxDisplayedItems;
	class UClass* PickupEntryWidgetClass;
	float ExpirationTime;
	class UClass* VerticalBox_PickupMessages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModal : public FortActivatablePanel
{
public:
	class UClass* CategoryTabs;
	TArray<Unknown> DisplayedSubScreenStack;
	TArray<Unknown> SubScreenToDisplayQueue;
	TArray<struct FortFeedbackDropdownCategoryHotfix_Add> PlayerFeedbackCategoriesToAdd;
	TArray<struct FortFeedbackDropdownCategoryHotfix_Modify> PlayerFeedbackCategoriesToModify;
	class UClass* Subscreen_CategoryDisplay;
	class UClass* Subscreen_PlayerSelect;
	class UClass* Subscreen_SubmitDisplay;
	class UClass* Subscreen_FreeText;
	class UClass* Subscreen_EpicQA;
	class UClass* Subscreen_Screenshot;
	class UClass* SubscreenTabs;
	class UClass* SubscreenContainer;
	class UClass* Text_ModalTitle;
	class UClass* Button_Close;
	class UClass* CloseButton;
	class UClass* Button_NewFeedbackReport;
	class UClass* Button_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreenBase : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreen_CategoryDisplay : public FortPlayerFeedbackModalSubscreenBase
{
public:
	class UClass* CategoryButtons;
	class UClass* Buttons_DropdownCategories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreen_PlayerSelect : public FortPlayerFeedbackModalSubscreenBase
{
public:
	class UClass* PlayerButtons;
	class UClass* Buttons_Players;
	class UClass* Text_NoPlayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreen_SubmitScreen : public FortPlayerFeedbackModalSubscreenBase
{
public:
	class UClass* Slot_CommunityRulesURL;
	class UClass* Text_Description;
	class UClass* Text_Summary;
	class UClass* Text_FailReason;
	class UClass* Text_ReportNumber;
	class UClass* Button_BlockUser;
	class UClass* Button_CommunityRules;
	class UClass* Button_Submit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreen_FreeText : public FortPlayerFeedbackModalSubscreenBase
{
public:
	class UClass* TextContainer_CustomerSupport;
	class UClass* Button_CustomerSupport;
	class UClass* Text_Input;
	class UClass* Button_Next;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreen_EpicQA : public FortPlayerFeedbackModalSubscreenBase
{
public:
	class UClass* ComboBoxString_BugComponents;
	class UClass* EditableText_Username;
	class UClass* EditableText_Password;
	class UClass* Button_SignIn;
	class UClass* Button_ConfirmComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalSubscreen_Screenshot : public FortPlayerFeedbackModalSubscreenBase
{
public:
	class UClass* Button_TakeScreenshot;
	class UClass* Button_Continue;
	class UClass* Image_Preview;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalTab : public CommonButtonBase
{
public:
	class UClass* AssociatedSubscreen;
	class UClass* TabLabel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalCategoryButton : public CommonButtonBase
{
public:
	class UClass* Text_Label;
	class UClass* DropdownWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPlayerFeedbackModalPlayerButton : public CommonButtonBase
{
public:
	class UClass* Text_PlayerName;
	class UClass* Text_SecondaryPlayerName;
	class UClass* Text_Relationship;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PostGameSpectatedPlayerName : public FortHUDElementWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PowTimerWidgetBase : public LTMWidgetBase
{
public:
	struct ScalableFloat TimeShowTimerAt;
	class UClass* BaseMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPrmSubsystem : public ULocalPlayerSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPurchaseChoiceRequesterInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortQuestScreen : public FortActivatablePanel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RadialBacchusButtonBase : public FortHUDElementWidget
{
public:
	struct GameplayTagContainer TrackedCooldownTags;
	ECooldownTrackingType TrackingType;
	float CooldownDuration;
	float CooldownStartTime;
	class UClass* TrackedPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopReactiveTileText : public CommonTextBlock
{
public:
	int MaxCharacterCountBeforeScaling;
	float MaxScaleDownPercentage;
	bool bDebugScaling;
	float InitialFontSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RemoteControlledPawnExpirationWidget : public FortHUDElementWidget
{
public:
	class UClass* ExpirationProgressImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RespawnAndSpectateSelectButtonWidgetBase : public CommonUserWidget
{
public:
	struct FScriptMulticastDelegate OnButtonSelected;
	struct FScriptMulticastDelegate OnButtonHovered;
	class UClass* TargetImageSizeBox;
	class UClass* DefaultButtonImageSizeBox;
	class UClass* TargetButton;
	class UClass* TargetImage;
	class UClass* DefaultButtonImage;
	class UClass* TargetNameTextWidget;
	class UClass* Switcher_TargetState;
	int ButtonIndex;
	bool bIsSelectable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RespawnAndSpectateSelectContainerWidget : public LTMWidgetBase
{
public:
	class UClass* RespawnAndSpectateSelectWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RespawnAndSpectateSelectWidgetBase : public FortActivatablePanelLTM
{
public:
	class UClass* CachedMutator;
	TArray<class UClass*> SelectButtonWidgets;
	struct FText HeaderText_Preview;
	struct FText HeaderText_Selectable;
	struct FText HeaderText_NoOptions;
	struct FText DescriptionText_Preview;
	struct FText DescriptionText_Selectable;
	struct FText DescriptionText_NoOptions;
	class UClass* ConfirmButton;
	class UClass* TextHeader;
	class UClass* TextDescription;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RespawnPerkUnlockCountWidgetBase : public LTMWidgetBase
{
public:
	class UClass* CachedMutator;
	class UClass* TextBlock_RequiredKills;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RestrictedCountryRatingIcons : public CommonUserWidget
{
public:
	float IconSize;
	class UClass* HBox_RatingIcons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RumbleLeaderBoard : public LTMWidgetBase
{
public:
	TArray<struct SoundThreshold> ThresholdArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RumbleLeaderWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SearchPanel : public CommonActivatablePanelLegacy
{
public:
	struct FScriptMulticastDelegate OnSearchTextChanged;
	class UClass* EditableText_Search;
	class UClass* Button_TextSearch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSeasonPassLevelInfo : public UObject
{
public:
	class UClass* FortPC;
	class UClass* SeasonData;
	TArray<class UClass*> FreeRewards;
	TArray<class UClass*> PaidRewards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SeasonPassLevelWidget : public CommonUserWidget
{
public:
	class UClass* LevelInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SeasonPassLevelPanel : public CommonActivatablePanelLegacy
{
public:
	class UClass* LevelInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SeasonPassPageWidget : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SeasonRewardsGridWidget : public Widget
{
public:
	class UClass* ItemWidgetToCreate;
	struct FScriptMulticastDelegate OnItemWidgetCreated;
	struct Margin ItemPadding;
	struct Margin ColumnPadding;
	float ScrollSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SidekickDisplayWidget : public CommonUserWidget
{
public:
	class UClass* ReactionWidgetClass;
	class UClass* Image_DisplayArea;
	class UClass* Border_Avatar;
	class UClass* Text_SidekickName;
	class UClass* Image_Marker;
	class UClass* Text_PlayerName;
	class UClass* Overlay_Reactions;
	class UClass* MediaPlayer;
	class UClass* MediaTexture;
	class UClass* DefaultAvatar;
	int MaxConcurrentReactions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SidekickOverlay : public CommonUserWidget
{
public:
	class UClass* HBox_Outer;
	class UClass* EntryBox_Self;
	class UClass* EntryBox_Party;
	class UClass* EntryBox_Streams;
	class UClass* Spacer_Viewport;
	class UClass* Text_Houseparty;
	class UClass* Widget_StreamLimited;
	int MaximumConcurrentStreams;
	float MinVideoDisplayDuration;
	float FOMOSessionDurationHours;
	struct FString AvatarBaseURL;
	float AutoUpdatePeriod;
	int MaximumSimultaneousReactions;
	int MaxStreamingThumbnailSizeX;
	int MaxStreamingThumbnailSizeY;
	float StreamingThumbnailCaptureInterval;
	class UClass* GameStreamingAudioCaptureSubmix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SidekickReactionWidget : public UserWidget
{
public:
	class UClass* Animation_Fly;
	class UClass* Animation_FlyRotate;
	class UClass* Image_ReactionImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SidekickStreamLimitedWidget : public CommonUserWidget
{
public:
	class UClass* Text_NumNonVisiblePlayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialChallengePunchCard : public AthenaSpatialScreen
{
public:
	Unknown FocusedPunchCard;
	struct DataTableRowHandle NextPunchCardInputAction;
	class UClass* EntryBox_PunchCards;
	class UClass* Scroll_Box;
	TArray<Unknown> PunchCards;
	float LastStickInputTime;
	float InputDelayTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialChallengePunchCardEntry : public CommonUserWidget
{
public:
	class UClass* PunchCard_Top;
	class UClass* PunchCard_Bottom;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationSubscreenBase : public CommonActivatableWidget
{
public:
	class UClass* CustomizationRoomData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationCategories : public AthenaSpatialCustomizationSubscreenBase
{
public:
	class UClass* IntroCategories;
	Unknown CategoryGroups;
	class UClass* LastSelectedCategory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialNavigationButton : public CommonButtonLegacy
{
public:
	struct GameplayTag CameraTagToNavigateTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationCategoryEntry : public AthenaSpatialNavigationButton
{
public:
	class UClass* Choice_SelectedChoice;
	class UClass* Text_EntryName;
	class UClass* Text_EntryName_Big;
	class UClass* RichText_StateDescription;
	class UClass* CategoryKey;
	bool bUseColorPicker;
	bool bCategoryDefaultColorIsNull;
	float LowerClampingColorBound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationChoice : public CommonUserWidget
{
public:
	class UClass* Image_ItemIcon;
	class UClass* Image_Locked;
	class UClass* Image_Owned;
	struct FName ColorChoiceDivetParam;
	struct FName NullColorDivetParam;
	struct Vector2D Size;
	struct GameplayTag ChoiceTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationChoiceButton : public CommonButtonLegacy
{
public:
	class UClass* Choice;
	class UClass* Image_Selected;
	struct TSoftClassPtr<UObject> SelectedImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationChoiceSelectButton : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialItemPreviewScreen : public AthenaSpatialScreen
{
public:
	class UClass* ItemViewObject;
	struct FName ItemPreviewActorTag;
	struct DataTableRowHandle ItemPreviewRotateInputAction;
	bool bEnableItemPreviewRotation;
	class UClass* IdleAnimation;
	bool bLooping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationRoom : public AthenaSpatialItemPreviewScreen
{
public:
	class UClass* Categories;
	class UClass* Selection;
	class UClass* Button_About;
	class UClass* CustomizationRoomData;
	class UClass* EventGameStateComponent;
	TArray<struct McpVariantChannelInfo> CurrentVariantChannelStates;
	TArray<class UClass*> SubScreens;
	ESpatialCustomizationRoomState RoomState;
	struct TimerHandle DelayedApplyColorHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSpatialCustomizationRoomData : public UDataAsset
{
public:
	class UClass* CustomizationCosmetic;
	class UClass* CustomizationRoomGraph;
	class UClass* CustomizationChallengeBundle;
	class UClass* ConfirmationWindowClass;
	TArray<struct SpatialCustomizationCategoryStateData> CategoryStates;
	struct FText FinalizeConfirmationTitle;
	struct FText FinalizeConfirmationDescription;
	struct FText UnlockAvailableText;
	struct FText UnlockUsedText;
	struct FText LockedByBattlePassText;
	struct FText LockedByChallengeFormat;
	struct FText LockedByChallengeCompletionText;
	struct FText LockedByChallengeBundleCompletionFormat;
	bool bUseNullColorOption;
	struct LinearColor NullColor;
	TArray<struct LinearColor> Swatches;
	bool bShowSelectedChoiceName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialCustomizationSelection : public AthenaSpatialCustomizationSubscreenBase
{
public:
	class UClass* IntroChoice;
	class UClass* Text_CategoryTitle;
	class UClass* Text_CategoryDescription;
	class UClass* Text_SelectedChoiceName;
	class UClass* RichText_LockedReason;
	class UClass* QuestProgress_ChallengeProgression;
	class UClass* Button_PurchaseBattlePass;
	class UClass* ColorPicker;
	class UClass* Button_FinalizeChoice;
	class UClass* Button_PreviousCategory;
	class UClass* Button_NextCategory;
	class UClass* Button_PreviousChoice;
	class UClass* Button_NextChoice;
	class UClass* Choice_SelectedChoice;
	class UClass* Choice_CustomizationChoicePrevious;
	class UClass* Choice_CustomizationChoiceNext;
	class UClass* Choice_UnlockUsed;
	TArray<class UClass*> Categories;
	class UClass* EventGameStateComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialDailyChallengesWidget : public AthenaSpatialScreen
{
public:
	class UClass* StickyNote_Top;
	class UClass* StickyNote_Middle;
	class UClass* StickyNote_Bottom;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionChoiceScreen : public CommonActivatableWidget
{
public:
	struct FScriptMulticastDelegate BP_OnFactionChosen;
	class UClass* Button_FactionChoice1;
	class UClass* Button_FactionChoice2;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionPerkProgress : public CommonUserWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionPerkReward : public CommonButtonLegacy
{
public:
	bool bIsTopRow;
	class UClass* Faction1PerksItemDef;
	class UClass* Faction2PerksItemDef;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionPerkTier : public UserWidget
{
public:
	class UClass* Reward_Faction1;
	class UClass* Progress_Faction1;
	class UClass* Reward_Faction2;
	class UClass* Progress_Faction2;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionProgressScreen : public CommonActivatableWidget
{
public:
	class UClass* Faction1PerksItemDef;
	class UClass* Faction2PerksItemDef;
	class UClass* ButtonGroup_FactionPerks;
	class UClass* Button_SwapFaction;
	class UClass* SpatialFaction_ShadowButton;
	class UClass* SpatialFaction_GhostButton;
	class UClass* EntryBox_FactionPerkTiers;
	class UClass* ScrollBox_PerkItems;
	class UClass* Icon_PlayerImage;
	class UClass* Text_PlayerName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionScreen : public AthenaSpatialScreen
{
public:
	class UClass* Screen_FactionChoice;
	class UClass* Screen_FactionProgress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFactionUnlockedPerkData : public UObject
{
public:
	class UClass* PerkItem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FactionUnlockedPerkListEntry : public CommonUserWidget
{
public:
	class UClass* Perk;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialFactionUnlockedPerksScreen : public FortActivatablePanelWithItemPreview
{
public:
	struct FScriptMulticastDelegate BP_OnUnlockedPerksScreenClosed;
	float StaggerTime;
	class UClass* Button_Back;
	class UClass* TileView_Perks;
	class UClass* Button_CloseMobile;
	class UClass* LastViewedItem;
	TArray<class UClass*> AllPerkItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpatialMapPreviewScreen : public FortItemPreviewScreen
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialStyleCard : public CommonButtonLegacy
{
public:
	class UClass* ItemCard_Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialStyleChallengeDetails : public CommonUserWidget
{
public:
	class UClass* PageRefresh;
	class UClass* StyleRefresh;
	class UClass* Intro;
	class UClass* EntryBox_Styles;
	class UClass* ButtonGroup_Styles;
	class UClass* VBox_Prerequisities;
	class UClass* EntryBox_Prerequisites;
	class UClass* VBox_MainMission;
	class UClass* QuestProgression_MainMission;
	class UClass* Button_PurchaseBattlePass;
	class UClass* EventGameStateComponent;
	struct AthenaSpatialStyleCharacterData CharacterData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialStyleChallengeScreen : public AthenaSpatialItemPreviewScreen
{
public:
	class UClass* Button_Previous;
	class UClass* Button_Next;
	class UClass* Text_Title;
	class UClass* Text_Description;
	class UClass* EntryBox_CharacterChoices;
	class UClass* ButtonGroup_CharacterChoices;
	class UClass* ChallengeDetails_CharacterDetails;
	class UClass* StyleChallengeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaSpatialStyleChallengeScreenData : public UDataAsset
{
public:
	TArray<struct AthenaSpatialStyleCharacterData> CharacterStyleChallenges;
	class UClass* CharacterStyleChallengesSchedule;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaSpatialStyleChallengeUnlockReason : public CommonUserWidget
{
public:
	class UClass* RichText_Description;
	class UClass* HBox_MissionProgress;
	class UClass* ProgressBar_PercentComplete_Front;
	class UClass* ProgressBar_PercentComplete_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StartUpUIStateWidget_SubgameSelect : public FortUIStateWidgetBase
{
public:
	class UClass* BottomBar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StoreAlertWidget : public CommonUserWidget
{
public:
	class UClass* StoreUpdatedRequest;
	class UClass* CatalogMessaging;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStoreToastRequest : public UObject
{
public:
	class UClass* CatalogMessaging;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSubscriptionContentInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubscriptionDetailsWidget : public CommonActivatableWidget
{
public:
	class UClass* Text_SkinTitle;
	class UClass* Text_SkinDescription;
	class UClass* Text_BattlepassTitle;
	class UClass* Text_BattlepassDescription;
	class UClass* Text_VBucksTitle;
	class UClass* Text_VBucksDescription;
	class UClass* LoadGuard_SkinPreview;
	class UClass* LoadGuard_BattlepassPreview;
	class UClass* Overlay_Vbucks_Reimbursement;
	class UClass* Text_Vbucks_Reimbursement;
	class UClass* VBox_RightSideInfo;
	struct Color Color_CmsOverrideA;
	struct Color Color_CmsOverrideB;
	struct Color Color_CmsOverrideC;
	class UClass* ExternalSubscriptionTexture;
	class UClass* ExternalBattlepassTexture;
	TArray<struct FText> MonthNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubscriptionWelcomePreMessage : public AthenaUpgradedPreMessage
{
public:
	struct Color Color_CmsOverrideA;
	struct Color Color_CmsOverrideB;
	struct Color Color_CmsOverrideC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaItemShopTagRotator : public CommonUserWidget
{
public:
	float TimeBetweenTitleChanges;
	class UClass* Text_TagCallout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TagTeamChangeMessage : public LTMWidgetBase
{
public:
	struct GameplayTag BlueTeamTag;
	struct GameplayTag RedTeamTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TagTeamCountWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAthenaItemShopTagTitleMapping : public UDataAsset
{
public:
	Unknown TagTitleMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TeamLimitedLivesCounterWidget : public LimitedLivesCounterWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class TeamPlacementWidget : public LTMWidgetBase
{
public:
	Unknown TeamPlacementMutator;
	Unknown CurrentPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TryHardCountdownWidget : public FortHUDElementWidget
{
public:
	int NumToStartShowingAt;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TutorialHighlight : public Widget
{
public:
	struct TSoftClassPtr<UObject> CustomHighlightWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TwoTeamLivesCounterWidget : public LTMWidgetBase
{
public:
	class UClass* CurrentPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TwoTeamScoreWidgetBase : public FortHUDElementWidget
{
public:
	TArray<float> PlayScoreProgressSoundPercentagesMild;
	TArray<float> PlayScoreProgressSoundPercentagesMedium;
	TArray<float> PlayScoreProgressSoundPercentagesStrong;
	float PercentageScoreToPlayCountdown;
	float PercentageScoreToPlayFinalCountdown;
	float ScoreCountdownSoundFrequency;
	byte LastViewedTeam;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUFortMobileHUDWidgetCustomPropertyModel_QuickbarLocks : public UFortMobileHUDWidgetCustomPropertyModel_Number
{
public:
	int MaximumDisplayedOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UraniumRespawnWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UraniumWidgetBase : public LTMWidgetBase
{
public:
	class UClass* UraniumMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UraniumRoundEndWidgetBase : public UraniumWidgetBase
{
public:
	class UClass* RoundInfoWidgetClass;
	class UClass* RoundInfoOverlay;
	class UClass* PerkIntroScreenWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxActiveTokenEventWidgetBase : public LTMWidgetBase
{
public:
	class UClass* WaxMutator;
	int WaxTokensForMediumCrit;
	int WaxTokensForHighCrit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxHotelPromptWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxPlacementWidgetBase : public LTMWidgetBase
{
public:
	class UClass* WaxMutator;
	struct WaxPlacementData FirstPlacement;
	struct WaxPlacementData SecondPlacement;
	struct WaxPlacementData ThirdPlacement;
	struct WaxPlacementData FourthPlacement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxProgressWidgetBase : public LTMWidgetBase
{
public:
	class UClass* WaxMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxRespawnCounterWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxSquadInfoWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxSquadStatusWidget : public LTMWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WaxTokenEventWidgetBase : public LTMWidgetBase
{
public:
	class UClass* WaxMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WeaponOverheatWidget : public FortHUDElementWidget
{
public:
	class UClass* OverheatProgressImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class XpEarnedSubNotification : public CommonUserWidget
{
public:
	class UClass* QuestItem;
	bool bHasDisplayedXp;
	bool bHasDisplayedBars;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSoundCueTemplateBase : public SoundCueTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteBase : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteFoley : public EmoteBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteMusic : public EmoteBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EmoteMusic3P : public EmoteBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GliderOpenClose : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GliderOpen : public GliderOpenClose
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GliderClose : public GliderOpenClose
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GliderThrustLoop : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GliderThrustStart : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MusicPack : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PhysicsStateLoop : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PhysicsImpact : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickaxeBase : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickaxeImpactEnemy : public FortSoundCueTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickaxeReady : public PickaxeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PickaxeSwing : public PickaxeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UForwardingChannelFactory : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UForwardingChannelsSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<Unknown> ForwardingChannelFactories;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_FreshCheese : public UChildCheatManager
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFriendChestNative : public ABuildingContainer
{
public:
	byte AssociatedSquadID;
	struct ScalableFloat TrigerActivationDelayCurve;
	struct SlateBrush MiniMapIconBrush;
	class UClass* MinimapIndicator;
	struct FName InstancedLootTierGroup;
	TArray<struct FName> LootTierGroups;
	TArray<struct FriendChestRoundPacing> RoundPacingForSquadSize;
	Unknown ActivationTimers;
	class UClass* Analytics;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFriendChestAnalytics : public UObject
{
public:
	struct Vector SpawnCoordinates;
	TArray<struct FriendChestAnalyticsParticipant> Participants;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFriendChestLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFriendChestSpawner : public AActor
{
public:
	TArray<class UClass*> SpawnFailureAnalytics;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureAction : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureAction_AddCheats : public UGameFeatureAction
{
public:
	TArray<class UClass*> CheatManagers;
	TArray<class UClass*> SpawnedCheatManagers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureAction_AddComponents : public UGameFeatureAction
{
public:
	TArray<struct GameFeatureComponentEntry> ComponentList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureAction_DataRegistry : public UGameFeatureAction
{
public:
	TArray<struct TSoftClassPtr<UObject>> RegistriesToAdd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureAction_DataRegistrySource : public UGameFeatureAction
{
public:
	TArray<struct DataRegistrySourceToAdd> SourcesToAdd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureData : public UPrimaryDataAsset
{
public:
	TArray<class UClass*> Actions;
	TArray<struct PrimaryAssetTypeInfo> PrimaryAssetTypesToScan;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeaturePluginStateMachine : public UObject
{
public:
	struct GameFeaturePluginStateMachineProperties StateProperties;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeaturesProjectPolicies : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDefaultGameFeaturesProjectPolicies : public UGameFeaturesProjectPolicies
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeaturesSubsystem : public UEngineSubsystem
{
public:
	Unknown GameFeaturePluginStateMachines;
	TArray<class UClass*> Observers;
	class UClass* GameSpecificPolicies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeaturesSubsystemSettings : public UDeveloperSettings
{
public:
	struct SoftClassPath GameFeaturesManagerClassName;
	TArray<struct FString> DisabledPlugins;
	TArray<struct FString> AdditionalPluginMetadataKeys;
	struct FString BuiltInGameFeaturePluginsFolder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFeatureStateChangeObserver : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULogOptions : public UObject
{
public:
	TArray<struct LogSubmitOptions> LogOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameHubBaseMutator : public AFortAthenaMutator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameHubPlayerSpawningComponent : public PlayspaceComponent_PlayerSpawning
{
public:
	struct GameplayTagContainer PlayerStartRequirements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameHubPlayspace : public FortPlayspace
{
public:
	bool bSimulatePlayerDamage;
	struct GameplayTagContainer PlayerStartRequirements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilitySpec : public FastArraySerializerItem
{
public:
	struct GameplayAbilitySpecHandle Handle;
	class UClass* Ability;
	int Level;
	int InputID;
	class UClass* SourceObject;
	byte ActiveCount;
	bool InputPressed;
	bool RemoveAfterActivation;
	bool PendingRemove;
	bool bActivateOnce;
	struct GameplayAbilityActivationInfo ActivationInfo;
	struct GameplayTagContainer DynamicAbilityTags;
	TArray<class UClass*> NonReplicatedInstances;
	TArray<class UClass*> ReplicatedInstances;
	struct ActiveGameplayEffectHandle GameplayEffectHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilitySpecContainer : public FastArraySerializer
{
public:
	TArray<struct GameplayAbilitySpec> Items;
	class UClass* Owner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveGameplayEffect : public FastArraySerializerItem
{
public:
	struct GameplayEffectSpec Spec;
	struct PredictionKey PredictionKey;
	float StartServerWorldTime;
	float CachedStartServerWorldTime;
	float StartWorldTime;
	bool bIsInhibited;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveGameplayEffectsContainer : public FastArraySerializer
{
public:
	TArray<struct ActiveGameplayEffect> GameplayEffects_Internal;
	TArray<class UClass*> ApplicationImmunityQueryEffects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveGameplayCue : public FastArraySerializerItem
{
public:
	struct GameplayTag GameplayCueTag;
	struct PredictionKey PredictionKey;
	struct GameplayCueParameters Parameters;
	bool bPredictivelyRemoved;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ActiveGameplayCueContainer : public FastArraySerializer
{
public:
	TArray<struct ActiveGameplayCue> GameplayCues;
	class UClass* Owner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplicatedPredictionKeyItem : public FastArraySerializerItem
{
public:
	struct PredictionKey PredictionKey;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReplicatedPredictionKeyMap : public FastArraySerializer
{
public:
	TArray<struct ReplicatedPredictionKeyItem> PredictionKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGameplayCueChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> KeyTimes;
	TArray<struct MovieSceneGameplayCueKey> KeyValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AttributeMetaData : public TableRowBase
{
public:
	float BaseValue;
	float MinValue;
	float MaxValue;
	struct FString DerivedAttributeInfo;
	bool bCanStack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilityTargetData_SingleTargetHit : public GameplayAbilityTargetData
{
public:
	struct HitResult HitResult;
	bool bHitReplaced;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilityTargetData_ActorArray : public GameplayAbilityTargetData
{
public:
	struct GameplayAbilityTargetingLocationInfo SourceLocation;
	TArray<Unknown> TargetActorArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayAbilityTargetData_LocationInfo : public GameplayAbilityTargetData
{
public:
	struct GameplayAbilityTargetingLocationInfo SourceLocation;
	struct GameplayAbilityTargetingLocationInfo TargetLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilityAsync : public UBlueprintAsyncActionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilityAsync_WaitGameplayEffectApplied : public UAbilityAsync
{
public:
	struct FScriptMulticastDelegate OnApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilityAsync_WaitGameplayEvent : public UAbilityAsync
{
public:
	struct FScriptMulticastDelegate EventReceived;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilityAsync_WaitGameplayTag : public UAbilityAsync
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilityAsync_WaitGameplayTagAdded : public UAbilityAsync_WaitGameplayTag
{
public:
	struct FScriptMulticastDelegate Added;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilityAsync_WaitGameplayTagRemoved : public UAbilityAsync_WaitGameplayTag
{
public:
	struct FScriptMulticastDelegate Removed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilitySystemBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilitySystemComponent : public GameplayTasksComponent
{
public:
	TArray<struct AttributeDefaults> DefaultStartingData;
	TArray<class UClass*> SpawnedAttributes;
	struct FName AffectedAnimInstanceTag;
	float OutgoingDuration;
	float IncomingDuration;
	TArray<struct FString> ClientDebugStrings;
	TArray<struct FString> ServerDebugStrings;
	bool UserAbilityActivationInhibited;
	bool ReplicationProxyEnabled;
	bool bSuppressGrantAbility;
	bool bSuppressGameplayCues;
	TArray<class UClass*> SpawnedTargetActors;
	class UClass* OwnerActor;
	class UClass* AvatarActor;
	struct GameplayAbilitySpecContainer ActivatableAbilities;
	TArray<class UClass*> AllReplicatedInstancedAbilities;
	struct GameplayAbilityRepAnimMontage RepAnimMontageInfo;
	bool bCachedIsNetSimulated;
	bool bPendingMontageRep;
	struct GameplayAbilityLocalAnimMontage LocalAnimMontageInfo;
	struct ActiveGameplayEffectsContainer ActiveGameplayEffects;
	struct ActiveGameplayCueContainer ActiveGameplayCues;
	struct ActiveGameplayCueContainer MinimalReplicationGameplayCues;
	TArray<byte> BlockedAbilityBindings;
	struct MinimalReplicationTagCountMap MinimalReplicationTags;
	struct ReplicatedPredictionKeyMap ReplicatedPredictionKeyMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAbilitySystemDebugHUD : public AHUD
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilitySystemGlobals : public UObject
{
public:
	struct SoftClassPath AbilitySystemGlobalsClassName;
	struct GameplayTag ActivateFailIsDeadTag;
	struct FName ActivateFailIsDeadName;
	struct GameplayTag ActivateFailCooldownTag;
	struct FName ActivateFailCooldownName;
	struct GameplayTag ActivateFailCostTag;
	struct FName ActivateFailCostName;
	struct GameplayTag ActivateFailTagsBlockedTag;
	struct FName ActivateFailTagsBlockedName;
	struct GameplayTag ActivateFailTagsMissingTag;
	struct FName ActivateFailTagsMissingName;
	struct GameplayTag ActivateFailNetworkingTag;
	struct FName ActivateFailNetworkingName;
	int MinimalReplicationTagCountBits;
	struct NetSerializeScriptStructCache TargetDataStructCache;
	bool bAllowGameplayModEvaluationChannels;
	EGameplayModEvaluationChannel DefaultGameplayModEvaluationChannel;
	struct FName GameplayModEvaluationChannelAliases;
	struct SoftObjectPath GlobalCurveTableName;
	class UClass* GlobalCurveTable;
	struct SoftObjectPath GlobalAttributeMetaDataTableName;
	class UClass* GlobalAttributeMetaDataTable;
	struct SoftObjectPath GlobalAttributeSetDefaultsTableName;
	TArray<struct SoftObjectPath> GlobalAttributeSetDefaultsTableNames;
	TArray<class UClass*> GlobalAttributeDefaultsTables;
	struct SoftObjectPath GlobalGameplayCueManagerClass;
	struct SoftObjectPath GlobalGameplayCueManagerName;
	TArray<struct FString> GameplayCueNotifyPaths;
	struct SoftObjectPath GameplayTagResponseTableName;
	class UClass* GameplayTagResponseTable;
	bool PredictTargetGameplayEffects;
	class UClass* GlobalGameplayCueManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilitySystemInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilitySystemReplicationProxyInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAttributeSet : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAbilitySystemTestAttributeSet : public UAttributeSet
{
public:
	float MaxHealth;
	float Health;
	float Mana;
	float MaxMana;
	float Damage;
	float SpellDamage;
	float PhysicalDamage;
	float CritChance;
	float CritMultiplier;
	float ArmorDamageReduction;
	float DodgeChance;
	float LifeSteal;
	float Strength;
	float StackingAttribute1;
	float StackingAttribute2;
	float NoStackAttribute;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAbilitySystemTestPawn : public ADefaultPawn
{
public:
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask : public GameplayTask
{
public:
	class UClass* Ability;
	class UClass* AbilitySystemComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_ApplyRootMotion_Base : public AbilityTask
{
public:
	struct FName ForceName;
	ERootMotionFinishVelocityMode FinishVelocityMode;
	struct Vector FinishSetVelocity;
	float FinishClampVelocity;
	class UClass* MovementComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_ApplyRootMotionConstantForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinish;
	struct Vector WorldDirection;
	float Strength;
	float Duration;
	bool bIsAdditive;
	class UClass* StrengthOverTime;
	bool bEnableGravity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_ApplyRootMotionJumpForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinish;
	struct FScriptMulticastDelegate OnLanded;
	struct Rotator Rotation;
	float Distance;
	float Height;
	float Duration;
	float MinimumLandedTriggerTime;
	bool bFinishOnLanded;
	class UClass* PathOffsetCurve;
	class UClass* TimeMappingCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_ApplyRootMotionMoveToActorForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinished;
	struct Vector StartLocation;
	struct Vector TargetLocation;
	class UClass* TargetActor;
	struct Vector TargetLocationOffset;
	ERootMotionMoveToActorTargetOffsetType OffsetAlignment;
	float Duration;
	bool bDisableDestinationReachedInterrupt;
	bool bSetNewMovementMode;
	EMovementMode NewMovementMode;
	bool bRestrictSpeedToExpected;
	class UClass* PathOffsetCurve;
	class UClass* TimeMappingCurve;
	class UClass* TargetLerpSpeedHorizontalCurve;
	class UClass* TargetLerpSpeedVerticalCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_ApplyRootMotionMoveToForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnTimedOut;
	struct FScriptMulticastDelegate OnTimedOutAndDestinationReached;
	struct Vector StartLocation;
	struct Vector TargetLocation;
	float Duration;
	bool bSetNewMovementMode;
	EMovementMode NewMovementMode;
	bool bRestrictSpeedToExpected;
	class UClass* PathOffsetCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_ApplyRootMotionRadialForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinish;
	struct Vector Location;
	class UClass* LocationActor;
	float Strength;
	float Duration;
	float Radius;
	bool bIsPush;
	bool bIsAdditive;
	bool bNoZForce;
	class UClass* StrengthDistanceFalloff;
	class UClass* StrengthOverTime;
	bool bUseFixedWorldDirection;
	struct Rotator FixedWorldDirection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_MoveToLocation : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnTargetLocationReached;
	struct Vector StartLocation;
	struct Vector TargetLocation;
	float DurationOfMovement;
	class UClass* LerpCurve;
	class UClass* LerpCurveVector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_NetworkSyncPoint : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnSync;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_PlayMontageAndWait : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnCompleted;
	struct FScriptMulticastDelegate OnBlendOut;
	struct FScriptMulticastDelegate OnInterrupted;
	struct FScriptMulticastDelegate OnCancelled;
	class UClass* MontageToPlay;
	float Rate;
	struct FName StartSection;
	float AnimRootMotionTranslationScale;
	float StartTimeSeconds;
	bool bStopWhenAbilityEnds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_Repeat : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnPerformAction;
	struct FScriptMulticastDelegate OnFinished;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_SpawnActor : public AbilityTask
{
public:
	struct FScriptMulticastDelegate Success;
	struct FScriptMulticastDelegate DidNotSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_StartAbilityState : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnStateEnded;
	struct FScriptMulticastDelegate OnStateInterrupted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_VisualizeTargeting : public AbilityTask
{
public:
	struct FScriptMulticastDelegate TimeElapsed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitAbilityActivate : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnActivate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitAbilityCommit : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnCommit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitAttributeChange : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnChange;
	class UClass* ExternalOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitAttributeChangeRatioThreshold : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnChange;
	class UClass* ExternalOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitAttributeChangeThreshold : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnChange;
	class UClass* ExternalOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitCancel : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnCancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitConfirm : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnConfirm;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitConfirmCancel : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnConfirm;
	struct FScriptMulticastDelegate OnCancel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitDelay : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnFinish;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEffectApplied : public AbilityTask
{
public:
	class UClass* ExternalOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEffectApplied_Self : public AbilityTask_WaitGameplayEffectApplied
{
public:
	struct FScriptMulticastDelegate OnApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEffectApplied_Target : public AbilityTask_WaitGameplayEffectApplied
{
public:
	struct FScriptMulticastDelegate OnApplied;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEffectBlockedImmunity : public AbilityTask
{
public:
	struct FScriptMulticastDelegate bLocked;
	class UClass* ExternalOwner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEffectRemoved : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnRemoved;
	struct FScriptMulticastDelegate InvalidHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEffectStackChange : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnChange;
	struct FScriptMulticastDelegate InvalidHandle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayEvent : public AbilityTask
{
public:
	struct FScriptMulticastDelegate EventReceived;
	class UClass* OptionalExternalTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayTag : public AbilityTask
{
public:
	class UClass* OptionalExternalTarget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayTagAdded : public AbilityTask_WaitGameplayTag
{
public:
	struct FScriptMulticastDelegate Added;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitGameplayTagRemoved : public AbilityTask_WaitGameplayTag
{
public:
	struct FScriptMulticastDelegate Removed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitInputPress : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnPress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitInputRelease : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnRelease;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitMovementModeChange : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitOverlap : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnOverlap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitTargetData : public AbilityTask
{
public:
	struct FScriptMulticastDelegate ValidData;
	struct FScriptMulticastDelegate Cancelled;
	class UClass* TargetClass;
	class UClass* TargetActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AbilityTask_WaitVelocityChange : public AbilityTask
{
public:
	struct FScriptMulticastDelegate OnVelocityChage;
	class UClass* CachedMovementComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayAbility : public UObject
{
public:
	struct GameplayTagContainer AbilityTags;
	bool bReplicateInputDirectly;
	bool RemoteInstanceEnded;
	EGameplayAbilityReplicationPolicy ReplicationPolicy;
	EGameplayAbilityInstancingPolicy InstancingPolicy;
	bool bServerRespectsRemoteAbilityCancellation;
	bool bRetriggerInstancedAbility;
	struct GameplayAbilityActivationInfo CurrentActivationInfo;
	struct GameplayEventData CurrentEventData;
	EGameplayAbilityNetExecutionPolicy NetExecutionPolicy;
	EGameplayAbilityNetSecurityPolicy NetSecurityPolicy;
	class UClass* CostGameplayEffectClass;
	TArray<struct AbilityTriggerData> AbilityTriggers;
	class UClass* CooldownGameplayEffectClass;
	struct GameplayTagContainer CancelAbilitiesWithTag;
	struct GameplayTagContainer BlockAbilitiesWithTag;
	struct GameplayTagContainer ActivationOwnedTags;
	struct GameplayTagContainer ActivationRequiredTags;
	struct GameplayTagContainer ActivationBlockedTags;
	struct GameplayTagContainer SourceRequiredTags;
	struct GameplayTagContainer SourceBlockedTags;
	struct GameplayTagContainer TargetRequiredTags;
	struct GameplayTagContainer TargetBlockedTags;
	TArray<class UClass*> ActiveTasks;
	class UClass* CurrentMontage;
	bool bIsActive;
	bool bIsAbilityEnding;
	bool bIsCancelable;
	bool bIsBlockingOtherAbilities;
	bool bMarkPendingKillOnAbilityEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayAbility_CharacterJump : public UGameplayAbility
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayAbility_Montage : public UGameplayAbility
{
public:
	class UClass* MontageToPlay;
	float PlayRate;
	struct FName SectionName;
	TArray<class UClass*> GameplayEffectClassesWhileAnimating;
	TArray<class UClass*> GameplayEffectsWhileAnimating;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayAbilityBlueprint : public UBlueprint
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayAbilitySet : public UDataAsset
{
public:
	TArray<struct GameplayAbilityBindInfo> Abilities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityTargetActor : public AActor
{
public:
	bool ShouldProduceTargetDataOnServer;
	struct GameplayAbilityTargetingLocationInfo StartLocation;
	class UClass* MasterPC;
	class UClass* OwningAbility;
	bool bDestroyOnConfirmation;
	class UClass* SourceActor;
	struct WorldReticleParameters ReticleParams;
	class UClass* ReticleClass;
	struct GameplayTargetDataFilterHandle Filter;
	bool bDebug;
	class UClass* GenericDelegateBoundASC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityTargetActor_Trace : public AGameplayAbilityTargetActor
{
public:
	float MaxRange;
	struct CollisionProfileName TraceProfile;
	bool bTraceAffectsAimPitch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityTargetActor_GroundTrace : public AGameplayAbilityTargetActor_Trace
{
public:
	float CollisionRadius;
	float CollisionHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityTargetActor_ActorPlacement : public AGameplayAbilityTargetActor_GroundTrace
{
public:
	class UClass* PlacedActorClass;
	class UClass* PlacedActorMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityTargetActor_Radius : public AGameplayAbilityTargetActor
{
public:
	float Radius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityTargetActor_SingleLineTrace : public AGameplayAbilityTargetActor_Trace
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityWorldReticle : public AActor
{
public:
	struct WorldReticleParameters Parameters;
	bool bFaceOwnerFlat;
	bool bSnapToTargetedActor;
	bool bIsTargetValid;
	bool bIsTargetAnActor;
	class UClass* MasterPC;
	class UClass* TargetingActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayAbilityWorldReticle_ActorVisualization : public AGameplayAbilityWorldReticle
{
public:
	class UClass* CollisionComponent;
	TArray<class UClass*> VisualizationComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueManager : public UDataAsset
{
public:
	struct GameplayCueObjectLibrary RuntimeGameplayCueObjectLibrary;
	struct GameplayCueObjectLibrary EditorGameplayCueObjectLibrary;
	TArray<class UClass*> LoadedGameplayCueNotifyClasses;
	TArray<class UClass*> GameplayCueClassesForPreallocation;
	TArray<struct GameplayCuePendingExecute> PendingExecuteCues;
	int GameplayCueSendContextCount;
	TArray<struct PreallocationInfo> PreallocationInfoList_Internal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayCueNotify_Actor : public AActor
{
public:
	bool bAutoDestroyOnRemove;
	float AutoDestroyDelay;
	bool WarnIfTimelineIsStillRunning;
	bool WarnIfLatentActionIsStillRunning;
	struct GameplayTag GameplayCueTag;
	struct FName GameplayCueName;
	bool bAutoAttachToOwner;
	bool IsOverride;
	bool bUniqueInstancePerInstigator;
	bool bUniqueInstancePerSourceObject;
	bool bAllowMultipleOnActiveEvents;
	bool bAllowMultipleWhileActiveEvents;
	int NumPreallocatedInstances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueNotify_Static : public UObject
{
public:
	struct GameplayTag GameplayCueTag;
	struct FName GameplayCueName;
	bool IsOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueNotify_HitImpact : public UGameplayCueNotify_Static
{
public:
	class UClass* Sound;
	class UClass* ParticleSystem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueSet : public UDataAsset
{
public:
	TArray<struct GameplayCueNotifyData> GameplayCueData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueTranslator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayCueTranslator_Test : public UGameplayCueTranslator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayEffect : public UObject
{
public:
	EGameplayEffectDurationType DurationPolicy;
	struct GameplayEffectModifierMagnitude DurationMagnitude;
	struct ScalableFloat Period;
	bool bExecutePeriodicEffectOnApplication;
	EGameplayEffectPeriodInhibitionRemovedPolicy PeriodicInhibitionPolicy;
	TArray<struct GameplayModifierInfo> Modifiers;
	TArray<struct GameplayEffectExecutionDefinition> Executions;
	struct ScalableFloat ChanceToApplyToTarget;
	TArray<class UClass*> ApplicationRequirements;
	TArray<class UClass*> TargetEffectClasses;
	TArray<struct ConditionalGameplayEffect> ConditionalGameplayEffects;
	TArray<class UClass*> OverflowEffects;
	bool bDenyOverflowApplication;
	bool bClearStackOnOverflow;
	TArray<class UClass*> PrematureExpirationEffectClasses;
	TArray<class UClass*> RoutineExpirationEffectClasses;
	bool bRequireModifierSuccessToTriggerCues;
	bool bSuppressStackingCues;
	TArray<struct GameplayEffectCue> GameplayCues;
	class UClass* UIData;
	struct InheritedTagContainer InheritableGameplayEffectTags;
	struct InheritedTagContainer InheritableOwnedTagsContainer;
	struct GameplayTagRequirements OngoingTagRequirements;
	struct GameplayTagRequirements ApplicationTagRequirements;
	struct GameplayTagRequirements RemovalTagRequirements;
	struct InheritedTagContainer RemoveGameplayEffectsWithTags;
	struct GameplayTagRequirements GrantedApplicationImmunityTags;
	struct GameplayEffectQuery GrantedApplicationImmunityQuery;
	struct GameplayEffectQuery RemoveGameplayEffectQuery;
	EGameplayEffectStackingType StackingType;
	int StackLimitCount;
	EGameplayEffectStackingDurationPolicy StackDurationRefreshPolicy;
	EGameplayEffectStackingPeriodPolicy StackPeriodResetPolicy;
	EGameplayEffectStackingExpirationPolicy StackExpirationPolicy;
	TArray<struct GameplayAbilitySpecDef> GrantedAbilities;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayEffectCalculation : public UObject
{
public:
	TArray<struct GameplayEffectAttributeCaptureDefinition> RelevantAttributesToCapture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayEffectCustomApplicationRequirement : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayEffectExecutionCalculation : public UGameplayEffectCalculation
{
public:
	bool bRequiresPassedInTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayEffectUIData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayEffectUIData_TextOnly : public UGameplayEffectUIData
{
public:
	struct FText Description;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayModMagnitudeCalculation : public UGameplayEffectCalculation
{
public:
	bool bAllowNonNetAuthorityDependencyRegistration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagReponseTable : public UDataAsset
{
public:
	TArray<struct GameplayTagResponseTableEntry> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGameplayCueTriggerSection : public MovieSceneHookSection
{
public:
	struct MovieSceneGameplayCueChannel Channel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGameplayCueSection : public MovieSceneHookSection
{
public:
	struct MovieSceneGameplayCueKey Cue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGameplayCueTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTickableAttributeSetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_StopGameplayBehavior : public UBTTaskNode
{
public:
	class UClass* BehaviorToStop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehavior : public UObject
{
public:
	struct GameplayTag ActionTag;
	TArray<class UClass*> RelevantActors;
	TArray<class UClass*> ActiveTasks;
	class UClass* TransientAvatar;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehavior_AnimationBased : public UGameplayBehavior
{
public:
	TArray<struct MontagePlaybackData> ActivePlayback;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehavior_BehaviorTree : public UGameplayBehavior
{
public:
	class UClass* PreviousBT;
	class UClass* AIController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehaviorConfig : public UObject
{
public:
	class UClass* BehaviorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehaviorConfig_Animation : public UGameplayBehaviorConfig
{
public:
	struct TSoftClassPtr<UObject> AnimMontage;
	float PlayRate;
	struct FName StartSectionName;
	bool bLoop;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehaviorConfig_BehaviorTree : public UGameplayBehaviorConfig
{
public:
	struct TSoftClassPtr<UObject> BehaviorTree;
	bool bRevertToPreviousBTOnFinish;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehaviorManager : public UAISubsystem
{
public:
	Unknown AgentGameplayBehaviors;
	bool bCreateIfMissing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayBehaviorsBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestCameraShake : public UCameraShakeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimpleCameraShakePattern : public UCameraShakePattern
{
public:
	float Duration;
	float BlendInTime;
	float BlendOutTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConstantCameraShakePattern : public USimpleCameraShakePattern
{
public:
	struct Vector LocationOffset;
	struct Rotator RotationOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCompositeCameraShakePattern : public UCameraShakePattern
{
public:
	TArray<class UClass*> ChildPatterns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDefaultCameraShakeBase : public UCameraShakeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMatineeCameraShake : public UCameraShakeBase
{
public:
	float OscillationDuration;
	float OscillationBlendInTime;
	float OscillationBlendOutTime;
	struct ROscillator RotOscillation;
	struct VOscillator LocOscillation;
	struct FOscillator FOVOscillation;
	float AnimPlayRate;
	float AnimScale;
	float AnimBlendInTime;
	float AnimBlendOutTime;
	float RandomAnimSegmentDuration;
	class UClass* Anim;
	class UClass* AnimSequence;
	bool bRandomAnimSegment;
	float OscillatorTimeRemaining;
	class UClass* AnimInst;
	class UClass* SequenceShakePattern;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMatineeCameraShakePattern : public UCameraShakePattern
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMatineeCameraShakeEvaluator : public MovieSceneCameraShakeEvaluator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMatineeCameraShakeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPerlinNoiseCameraShakePattern : public USimpleCameraShakePattern
{
public:
	float LocationAmplitudeMultiplier;
	float LocationFrequencyMultiplier;
	struct PerlinNoiseShaker X;
	struct PerlinNoiseShaker Y;
	struct PerlinNoiseShaker Z;
	float RotationAmplitudeMultiplier;
	float RotationFrequencyMultiplier;
	struct PerlinNoiseShaker Pitch;
	struct PerlinNoiseShaker Yaw;
	struct PerlinNoiseShaker Roll;
	struct PerlinNoiseShaker FOV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaveOscillatorCameraShakePattern : public USimpleCameraShakePattern
{
public:
	float LocationAmplitudeMultiplier;
	float LocationFrequencyMultiplier;
	struct WaveOscillator X;
	struct WaveOscillator Y;
	struct WaveOscillator Z;
	float RotationAmplitudeMultiplier;
	float RotationFrequencyMultiplier;
	struct WaveOscillator Pitch;
	struct WaveOscillator Yaw;
	struct WaveOscillator Roll;
	struct WaveOscillator FOV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EventMessageTag : public GameplayTag
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncAction_RegisterGameplayMessageReceiver : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnMessageReceived;
	struct FScriptMulticastDelegate HandleSavedState;
	struct FScriptMulticastDelegate HandleStateCleared;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayMessageReplicator : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayMessageRouter : public UGameInstanceSubsystem
{
public:
	class UClass* MessageReplicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintEventMessageTagLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayStateMachineItem : public FastArraySerializerItem
{
public:
	class UClass* StateMachine;
	float BeginStateDelay;
	float InitializationTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayStateMachineArray : public FastArraySerializer
{
public:
	class UClass* StateMachineManager;
	TArray<struct GameplayStateMachineItem> StateMachineItems;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayState : public UObject
{
public:
	struct GameplayTag StateId;
	struct GameplayTagContainer StateRuntimeTags;
	bool bEvaluateTransition;
	bool bReplicates;
	bool bStateBegun;
	bool bStateEnded;
	float InitializationServerTime;
	float BeginStateDelay;
	class UClass* CachedGameplayStateMachine;
	class UClass* CachedStateMachineManager;
	class UClass* CachedStateMachineSubSystem;
	class UClass* Hack_StateToDelayProcess;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayStateMachine : public UGameplayState
{
public:
	bool bPubliclyBroadcast;
	bool bPersistDelegatesOnUnregistration;
	struct GameplayTag StateMachineId;
	struct ActiveGameplayStateData ActiveGameplayStateData;
	TArray<struct GameplayStateSettings> GameplayStateSettings;
	struct GameplayTag InitialGameplayStateId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayStateMachineManager : public UActorComponent
{
public:
	struct GameplayStateMachineArray StateMachineList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayStateMachineSubsystem : public UGameInstanceSubsystem
{
public:
	Unknown StateMachineMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GameplayTagTableRow : public TableRowBase
{
public:
	struct FName Tag;
	struct FString DevComment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RestrictedGameplayTagTableRow : public GameplayTagTableRow
{
public:
	bool bAllowNonRestrictedChildren;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBlueprintGameplayTagLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagAssetInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQuery : public UObject
{
public:
	struct FString UserDescription;
	class UClass* RootExpression;
	struct GameplayTagQuery TagQueryExportText_Helper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression_AnyTagsMatch : public UEditableGameplayTagQueryExpression
{
public:
	struct GameplayTagContainer Tags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression_AllTagsMatch : public UEditableGameplayTagQueryExpression
{
public:
	struct GameplayTagContainer Tags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression_NoTagsMatch : public UEditableGameplayTagQueryExpression
{
public:
	struct GameplayTagContainer Tags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression_AnyExprMatch : public UEditableGameplayTagQueryExpression
{
public:
	TArray<class UClass*> Expressions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression_AllExprMatch : public UEditableGameplayTagQueryExpression
{
public:
	TArray<class UClass*> Expressions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableGameplayTagQueryExpression_NoExprMatch : public UEditableGameplayTagQueryExpression
{
public:
	TArray<class UClass*> Expressions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagsManager : public UObject
{
public:
	Unknown TagSources;
	TArray<class UClass*> GameplayTagTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagsList : public UObject
{
public:
	struct FString ConfigFileName;
	TArray<struct GameplayTagTableRow> GameplayTagList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URestrictedGameplayTagsList : public UObject
{
public:
	struct FString ConfigFileName;
	TArray<struct RestrictedGameplayTagTableRow> RestrictedGameplayTagList;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagsSettings : public UGameplayTagsList
{
public:
	bool ImportTagsFromConfig;
	bool WarnOnInvalidTags;
	bool ClearInvalidTags;
	bool FastReplication;
	struct FString InvalidTagCharacters;
	TArray<struct GameplayTagCategoryRemap> CategoryRemapping;
	TArray<struct SoftObjectPath> GameplayTagTableList;
	TArray<struct GameplayTagRedirect> GameplayTagRedirects;
	TArray<struct FName> CommonlyReplicatedTags;
	int NumBitsForContainerSize;
	int NetIndexFirstBitSegment;
	TArray<struct RestrictedConfigInfo> RestrictedConfigFiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTagsDeveloperSettings : public UDeveloperSettings
{
public:
	struct FString DeveloperConfigName;
	struct FName FavoriteTagSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTasksComponent : public UActorComponent
{
public:
	bool bIsNetDirty;
	TArray<class UClass*> SimulatedTasks;
	TArray<class UClass*> TaskPriorityQueue;
	TArray<class UClass*> TickingTasks;
	TArray<class UClass*> KnownTasks;
	struct FScriptMulticastDelegate OnClaimedResourcesChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTask : public UObject
{
public:
	struct FName InstanceName;
	ETaskResourceOverlapPolicy ResourceOverlapPolicy;
	class UClass* ChildTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTask_ClaimResource : public UGameplayTask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTask_SpawnActor : public UGameplayTask
{
public:
	struct FScriptMulticastDelegate Success;
	struct FScriptMulticastDelegate DidNotSpawn;
	class UClass* ClassToSpawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTask_TimeLimitedExecution : public UGameplayTask
{
public:
	struct FScriptMulticastDelegate OnFinished;
	struct FScriptMulticastDelegate OnTimeExpired;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTask_WaitDelay : public UGameplayTask
{
public:
	struct FScriptMulticastDelegate OnFinish;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTaskOwnerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameplayTaskResource : public UObject
{
public:
	int ManualResourceID;
	int8_t AutoResourceID;
	bool bManuallySetID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGauntletTestController : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGauntletTestControllerBootTest : public UGauntletTestController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGauntletTestControllerErrorTest : public UGauntletTestController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChaosDestructionListener : public USceneComponent
{
public:
	bool bIsCollisionEventListeningEnabled;
	bool bIsBreakingEventListeningEnabled;
	bool bIsTrailingEventListeningEnabled;
	struct ChaosCollisionEventRequestSettings CollisionEventRequestSettings;
	struct ChaosBreakingEventRequestSettings BreakingEventRequestSettings;
	struct ChaosTrailingEventRequestSettings TrailingEventRequestSettings;
	Unknown ChaosSolverActors;
	Unknown GeometryCollectionActors;
	struct FScriptMulticastDelegate OnCollisionEvents;
	struct FScriptMulticastDelegate OnBreakingEvents;
	struct FScriptMulticastDelegate OnTrailingEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGeometryCollectionActor : public AActor
{
public:
	class UClass* GeometryCollectionComponent;
	class UClass* GeometryCollectionDebugDrawComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGeometryCollectionCache : public UObject
{
public:
	struct RecordedTransformTrack RecordedData;
	class UClass* SupportedCollection;
	struct Guid CompatibleCollectionState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGeometryCollectionComponent : public UMeshComponent
{
public:
	class UClass* ChaosSolverActor;
	class UClass* RestCollection;
	TArray<class UClass*> InitializationFields;
	bool Simulating;
	EObjectStateTypeEnum ObjectType;
	bool EnableClustering;
	int ClusterGroupIndex;
	int MaxClusterLevel;
	TArray<float> DamageThreshold;
	EClusterConnectionTypeEnum ClusterConnectionType;
	int CollisionGroup;
	float CollisionSampleFraction;
	float LinearEtherDrag;
	float AngularEtherDrag;
	class UClass* PhysicalMaterial;
	EInitialVelocityTypeEnum InitialVelocityType;
	struct Vector InitialLinearVelocity;
	struct Vector InitialAngularVelocity;
	class UClass* PhysicalMaterialOverride;
	struct GeomComponentCacheParameters CacheParameters;
	struct FScriptMulticastDelegate NotifyGeometryCollectionPhysicsStateChange;
	struct FScriptMulticastDelegate NotifyGeometryCollectionPhysicsLoadingStateChange;
	struct FScriptMulticastDelegate OnChaosBreakEvent;
	float DesiredCacheTime;
	bool CachePlayback;
	struct FScriptMulticastDelegate OnChaosPhysicsCollision;
	bool bNotifyBreaks;
	bool bNotifyCollisions;
	bool bEnableReplication;
	bool bEnableAbandonAfterLevel;
	int ReplicationAbandonClusterLevel;
	struct GeometryCollectionRepData RepData;
	class UClass* DummyBodySetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGeometryCollectionDebugDrawActor : public AActor
{
public:
	struct GeometryCollectionDebugDrawWarningMessage WarningMessage;
	struct GeometryCollectionDebugDrawActorSelectedRigidBody SelectedRigidBody;
	bool bDebugDrawWholeCollection;
	bool bDebugDrawHierarchy;
	bool bDebugDrawClustering;
	EGeometryCollectionDebugDrawActorHideGeometry HideGeometry;
	bool bShowRigidBodyId;
	bool bShowRigidBodyCollision;
	bool bCollisionAtOrigin;
	bool bShowRigidBodyTransform;
	bool bShowRigidBodyInertia;
	bool bShowRigidBodyVelocity;
	bool bShowRigidBodyForce;
	bool bShowRigidBodyInfos;
	bool bShowTransformIndex;
	bool bShowTransform;
	bool bShowParent;
	bool bShowLevel;
	bool bShowConnectivityEdges;
	bool bShowGeometryIndex;
	bool bShowGeometryTransform;
	bool bShowBoundingBox;
	bool bShowFaces;
	bool bShowFaceIndices;
	bool bShowFaceNormals;
	bool bShowSingleFace;
	int SingleFaceIndex;
	bool bShowVertices;
	bool bShowVertexIndices;
	bool bShowVertexNormals;
	bool bUseActiveVisualization;
	float PointThickness;
	float LineThickness;
	bool bTextShadow;
	float TextScale;
	float NormalScale;
	float AxisScale;
	float ArrowScale;
	struct Color RigidBodyIdColor;
	float RigidBodyTransformScale;
	struct Color RigidBodyCollisionColor;
	struct Color RigidBodyInertiaColor;
	struct Color RigidBodyVelocityColor;
	struct Color RigidBodyForceColor;
	struct Color RigidBodyInfoColor;
	struct Color TransformIndexColor;
	float TransformScale;
	struct Color LevelColor;
	struct Color ParentColor;
	float ConnectivityEdgeThickness;
	struct Color GeometryIndexColor;
	float GeometryTransformScale;
	struct Color BoundingBoxColor;
	struct Color FaceColor;
	struct Color FaceIndexColor;
	struct Color FaceNormalColor;
	struct Color SingleFaceColor;
	struct Color VertexColor;
	struct Color VertexIndexColor;
	struct Color VertexNormalColor;
	class UClass* SpriteComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGeometryCollectionDebugDrawComponent : public UActorComponent
{
public:
	class UClass* GeometryCollectionDebugDrawActor;
	class UClass* GeometryCollectionRenderLevelSetActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGeometryCollection : public UObject
{
public:
	TArray<struct GeometryCollectionSource> GeometrySource;
	TArray<class UClass*> Materials;
	ECollisionTypeEnum CollisionType;
	EImplicitTypeEnum ImplicitType;
	int MinLevelSetResolution;
	int MaxLevelSetResolution;
	int MinClusterLevelSetResolution;
	int MaxClusterLevelSetResolution;
	float CollisionObjectReductionPercentage;
	bool bMassAsDensity;
	float Mass;
	float MinimumMassClamp;
	float CollisionParticlesFraction;
	int MaximumCollisionParticles;
	TArray<struct GeometryCollectionSizeSpecificData> SizeSpecificData;
	bool EnableRemovePiecesOnFracture;
	TArray<class UClass*> RemoveOnFractureMaterials;
	struct Guid PersistentGuid;
	struct Guid StateGuid;
	int BoneSelectedMaterialIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGeometryCollectionRenderLevelSetActor : public AActor
{
public:
	class UClass* TargetVolumeTexture;
	class UClass* RayMarchMaterial;
	float SurfaceTolerance;
	float Isovalue;
	bool Enabled;
	bool RenderVolumeBoundingBox;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkeletalMeshSimulationComponent : public UActorComponent
{
public:
	class UClass* PhysicalMaterial;
	class UClass* ChaosSolverActor;
	class UClass* OverridePhysicsAsset;
	bool bSimulating;
	bool bNotifyCollisions;
	EObjectStateTypeEnum ObjectType;
	float Density;
	float MinMass;
	float MaxMass;
	ECollisionTypeEnum CollisionType;
	float ImplicitShapeParticlesPerUnitArea;
	int ImplicitShapeMinNumParticles;
	int ImplicitShapeMaxNumParticles;
	int MinLevelSetResolution;
	int MaxLevelSetResolution;
	int CollisionGroup;
	EInitialVelocityTypeEnum InitialVelocityType;
	struct Vector InitialLinearVelocity;
	struct Vector InitialAngularVelocity;
	struct FScriptMulticastDelegate OnChaosPhysicsCollision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStaticMeshSimulationComponent : public UActorComponent
{
public:
	bool Simulating;
	bool bNotifyCollisions;
	EObjectStateTypeEnum ObjectType;
	float Mass;
	ECollisionTypeEnum CollisionType;
	EImplicitTypeEnum ImplicitType;
	int MinLevelSetResolution;
	int MaxLevelSetResolution;
	EInitialVelocityTypeEnum InitialVelocityType;
	struct Vector InitialLinearVelocity;
	struct Vector InitialAngularVelocity;
	float DamageThreshold;
	class UClass* PhysicalMaterial;
	class UClass* ChaosSolverActor;
	struct FScriptMulticastDelegate OnChaosPhysicsCollision;
	TArray<class UClass*> SimulatedComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGeometryCollectionSectionTemplateParameters : public MovieSceneGeometryCollectionParams
{
public:
	struct FrameNumber SectionStartTime;
	struct FrameNumber SectionEndTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGeometryCollectionSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneGeometryCollectionSectionTemplateParameters Params;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGeometryCollectionSection : public MovieSceneSection
{
public:
	struct MovieSceneGeometryCollectionParams Params;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneGeometryCollectionTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> AnimationSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftConfirmedPanel : public CommonActivatableWidget
{
public:
	class UClass* Text_RecipientInfo;
	class UClass* Button_Back;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingConfirmationScreen : public CommonActivatableWidget
{
public:
	class UClass* PresentedGiftableOfferInfo;
	class UClass* PresentedOptionalTokenOfferInfo;
	float MinGiftSubmissionDelay;
	float MaxGiftSubmissionDelay;
	class UClass* Button_WrapOptions;
	class UClass* Button_Back;
	class UClass* Button_MobileClose;
	class UClass* Button_MtxWallet;
	class UClass* Panel_GiftingPurchase;
	class UClass* Panel_WrapOptions;
	class UClass* Panel_GiftConfirmed;
	class UClass* Panel_GiftingErrors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingErrorsPanel : public CommonActivatableWidget
{
public:
	class UClass* Text_RecipientInfo;
	class UClass* Text_Title;
	class UClass* Button_MobileClose;
	class UClass* Button_Back;
	class UClass* Button_Continue;
	class UClass* TileView_Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingPriceWidget : public CommonUserWidget
{
public:
	class UClass* Text_RealMoneyPrice;
	class UClass* Text_FinalPrice;
	class UClass* Text_RegularPrice;
	class UClass* Overlay_SalePrice;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingPurchaseButton : public CommonButtonLegacy
{
public:
	class UClass* Widget_Price;
	class UClass* Text_Title;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingPurchasePanel : public CommonActivatableWidget
{
public:
	class UClass* Button_PurchaseGift;
	class UClass* Avatar_MemberIcon;
	class UClass* Text_SocialNameInfo;
	class UClass* Text_ItemsCount;
	class UClass* Text_OfferName;
	class UClass* TileView_Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingScreen : public FortItemPreviewScreen
{
public:
	class UClass* SearchWidget_SocialSearchWidget;
	class UClass* ListView_Recipients;
	class UClass* TileView_Items;
	class UClass* Button_Back;
	class UClass* Button_MobileClose;
	class UClass* Button_GiftingPolicy;
	class UClass* Text_OfferName;
	class UClass* Text_VBucksOffCount;
	class UClass* Text_ShownItemIndex;
	class UClass* Text_NoContent;
	class UClass* RichText_OfferItemOwnedCount;
	class UClass* Container_VBucksOffViolator;
	class UClass* RichText_GiftCount;
	class UClass* Widget_Price;
	class UClass* Widget_ItemInfo;
	class UClass* EntryBox_FilterTabs;
	class UClass* ActionWidget_FilterTabsPrevious;
	class UClass* ActionWidget_FilterTabsNext;
	class UClass* ActivatableWidget_GiftingConfirmation;
	float ItemCyclingInterval;
	struct DataTableRowHandle FilterTabsPreviousAction;
	struct DataTableRowHandle FilterTabsNextAction;
	struct FText RegularGiftingPolicy;
	struct FText BattlePassGiftingPolicy;
	Unknown FilterMap;
	class UClass* FilterGroup;
	TArray<class UClass*> ItemDefinitions;
	class UClass* PresentedItemDefinition;
	class UClass* GiftableOfferInfo;
	class UClass* OptionalTokenOfferInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AthenaGiftingWrapOptionsPanel : public CommonActivatableWidget
{
public:
	TArray<struct TSoftClassPtr<UObject>> GiftBoxes;
	TArray<class UClass*> GiftBoxItemDefs;
	class UClass* Button_ConfirmWrap;
	class UClass* TileView_WrapOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingSocialUserListEntry : public SocialListEntryBase
{
public:
	class UClass* Avatar_MemberIcon;
	class UClass* Text_SocialName;
	class UClass* RichText_EligibilityStatus;
	class UClass* RichText_OwnedItems;
	class UClass* Widget_Price;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingSocialUserListView : public SocialUserListViewBase
{
public:
	float RefreshRecipientStatusDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingUserSearchWidget : public CommonUserWidget
{
public:
	class UClass* EditableText_SearchFriends;
	class UClass* Button_ClearQuery;
	class UClass* Button_SubmitQuery;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingWrapOptionListEntry : public CommonButtonLegacy
{
public:
	class UClass* GiftBoxDefinition;
	class UClass* Image_Gift;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGiftingData : public FortGameFeatureData
{
public:
	struct TSoftClassPtr<UObject> GiftingScreenClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGooglePADFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHeadMountedDisplayFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMotionControllerComponent : public UPrimitiveComponent
{
public:
	int PlayerIndex;
	EControllerHand Hand;
	struct FName MotionSource;
	bool bDisableLowLatencyUpdate;
	ETrackingStatus CurrentTrackingStatus;
	bool bDisplayDeviceModel;
	struct FName DisplayModelSource;
	class UClass* CustomDisplayMesh;
	TArray<class UClass*> DisplayMeshMaterialOverrides;
	class UClass* DisplayComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMotionTrackedDeviceFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVRNotificationsComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate;
	struct FScriptMulticastDelegate HMDTrackingInitializedDelegate;
	struct FScriptMulticastDelegate HMDRecenteredDelegate;
	struct FScriptMulticastDelegate HMDLostDelegate;
	struct FScriptMulticastDelegate HMDReconnectedDelegate;
	struct FScriptMulticastDelegate HMDConnectCanceledDelegate;
	struct FScriptMulticastDelegate HMDPutOnHeadDelegate;
	struct FScriptMulticastDelegate HMDRemovedFromHeadDelegate;
	struct FScriptMulticastDelegate VRControllerRecenteredDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UXRAssetFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncTask_LoadXRDeviceVisComponent : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnModelLoaded;
	struct FScriptMulticastDelegate OnLoadFailure;
	class UClass* SpawnedComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UXRLoadingScreenFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHitchhikerComponent_Telemetry : public UFortAIComponent_Telemetry
{
public:
	bool bWasInfectedAtSpawn;
	int InfectionCount;
	int DeinfectionCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HoagieOutPersistent : public FortVehicleOutPersistent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HoagieOutContinuous : public FortVehicleOutContinuous
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class HoagieInternal : public FortVehicleInternalPersistent
{
public:
	struct FortHeliFlightModel FlightModel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HoagieInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortHoagieVehicleConfigs;
	EHoagieState CurrentHoagieState;
	float LastRotorImpulseTime;
	struct Vector RotorHitLinearImpulse;
	struct Vector RotorHitAngularImpulse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_Hoagie : public UFortCameraMode_AthenaVehicle
{
public:
	float CurrentRollMultiplier;
	float CurrentPitchMultiplier;
	struct Vector LastOrigin;
	struct Vector CurrentInterpSpeed;
	struct Vector BoostInterpSpeed;
	float BaseRollMultiplier;
	float BasePitchMultiplier;
	float BoostRollMultiplier;
	float BoostPitchMultiplier;
	float BoostRollDampFactor;
	float BoostRollRecoveryDampFactor;
	float BoostRecoveryInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHoagieAudioController : public AActor
{
public:
	bool bHighQualityOverride;
	bool bLocalPlayerInHoagie;
	bool bCriticalDamageNative;
	bool bRotorHitNative;
	bool bIsRotorWashActiveNative;
	float RotorWashRelativeZOffset;
	Unknown Vehicle;
	class UClass* EngineAudio;
	class UClass* RotorAudio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHoagieDriverAnimInstance : public UFortVehicleOccupantAnimInstance
{
public:
	struct Vector LeftHandIKPositionOffset;
	struct Vector RightHandIKPositionOffset;
	struct Rotator LeftHandIKRotationOffset;
	struct Rotator RightHandIKRotationOffset;
	EFortCardinalDirection BoostCardinalDirection;
	float NormalizedAcceleration;
	float VehicleRoll;
	float VehicleYaw;
	float ForwardSpeed;
	bool bIsMovingAnyDirection;
	bool bIsMovingFastAnyDirection;
	bool bShouldReverse;
	bool bShouldGoBackToIdle;
	bool bTransition_Default_ReverseStart;
	bool bTransition_BoostLoop_Reverse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortHoagieVehicle : public AFortAthenaSKVehicle
{
public:
	struct FName PassengerCollision;
	float CameraBoomDistance;
	float CameraBoomHeight;
	struct FScriptMulticastDelegate OnBoostStateChanged;
	struct FScriptMulticastDelegate OnAltimeterTraceUpdated;
	struct FScriptMulticastDelegate OnCrashingStateEntered;
	bool bEngineAudioDisabled;
	float LiftRumbleTimer;
	bool bLiftUp;
	uint64_t LiftForceFeedbackHandle;
	uint64_t PassiveForceFeedbackHandle;
	float Theta_Native;
	float WashAltAlpha_Native;
	float RotorWashTickTimer;
	TArray<struct Vector> RotorTraceArray;
	TArray<EObjectTypeQuery> RotorWashObjectsTypes;
	class UClass* FortHoagieVehicleConfigs;
	TArray<struct VehicleSpecificUIDetails> CustomUI;
	TArray<struct VehicleSpecificUIDetails> CustomFuelUI;
	class UClass* RumbleIntensity;
	TArray<struct ActiveVehicleUI> ActiveUI;
	struct FortHeliFlightModel FlightModel;
	bool bClearPitchInput;
	bool bBoosting;
	float BoostTimeLeft;
	float BoostBrakingTimeLeft;
	float BoostCooldown;
	float ShutdownTimer;
	float FoliageDestructionTimer;
	float CrashingScrapingTimer;
	float CrashingNotMovingTimer;
	bool bCanSleep;
	bool bHasAppliedCrashDamage;
	bool bOrientedForLanding;
	bool bForceNegativeLift;
	bool bExploded;
	float AltimeterTraceTimer;
	float LastRotorImpulseTime;
	float CriticalExplodeTimer;
	float TimeWhileCritical;
	float TimeWhileLanding;
	float LiftFromOverrideButton;
	struct Vector BoostDirection;
	struct Vector LastRotorSweepDirection;
	struct HitResult AltimeterTraceResult;
	int HoagieStateRep;
	EHoagieState CurrentHoagieState;
	float CurrentRotorSpeed;
	float CurrentRotorAngle;
	float RotorImpactTraceAngle;
	struct VehicleGamepadLiftInputs LiftInputs;
	float ServerCriticalHealth;
	TArray<struct RotorHit> RotorHits;
	TArray<struct CachedSeatCollision> CachedSeatCollision;
	class UClass* FuelComponent;
	struct Vector RotorHitLinearImpulse;
	struct Vector RotorHitAngularImpulse;
	EVehicleFuelState VehicleFuelSystemState;
	class UClass* HoagieIdleFX_Native;
	class UClass* DamageFX_Native;
	class UClass* RotorWashFX_Native;
	class UClass* HoagieAnimBP_Native;
	class UClass* FortHoagieVehicleConfigsClass;
	class UClass* FortHoagieVehicleSyncConfigsClass;
	struct FName AltimeterTraceSocketName;
	struct FName RotorDamageTraceSocketName;
	struct FName MainRotorCritSocketName;
	struct FName TailRotorCritSocketName;
	class UClass* SeatTransition_ToDriver;
	class UClass* SeatTransition_ToPassenger;
	struct FName RotorTraceProfile;
	struct FName FoliageOverlapsBoxTag;
	Unknown KillerController;
	Unknown KillerCauser;
	struct ReplicatedHeliControlState ControlState;
	float CurrentViewDistanceScale;
	float CurrentHLODDistanceOverrideScale;
	float CurrentHLODMaxDrawDistanceScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHoagieVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	struct Rotator EngineRotation;
	struct Rotator MainRotorRotation;
	struct Rotator TailRotorRotaton;
	struct Rotator BoosterFanRotation;
	EFortCardinalDirection BoostCardinalDirection;
	float EngineRotationInterpSpeed;
	float EngineRotationDuringBoostInterpSpeed;
	float EngineFlipSpeedThreshold;
	float BoostDirectionDeadzone;
	float EngineFlipDeadzone;
	float DriverRoll;
	float DriverYaw;
	float VerticalSpeed;
	float FwdSpeed;
	float LocalBoostDirection;
	float YawBlendSpaceInput;
	float NormalizedAcceleration;
	bool bShouldHideBlades;
	bool bIsBoostOnCD;
	bool bIsBoostReady;
	bool bIsMovingForward;
	bool bIsReversing;
	bool bIsMovingAnyDirection;
	bool bIsBoosting;
	bool bShouldReverse;
	bool bShouldGoBackToIdle;
	bool bShouldApplyBoostAdditive;
	bool bIsEngineShuttingOff;
	bool bTransition_Default_ReverseStart;
	bool bTransition_BoostLoop_Reverse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortHoagieVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	float StrafeForce;
	float StrafeForceMin;
	float MaxStrafeSpeedKmh;
	float StrafeTooFastBrakeForce;
	float LandedBrakeForce;
	float LiftForce;
	float MaxLiftSpeedKmh;
	float LiftTooFastBrakeForce;
	float LateralDragCoefficient;
	float LateralDragCoefficient2;
	float LiftDragCoefficient;
	float LiftDragCoefficient2;
	float MaxPitchForCameraYaw;
	float MaxCameraYawAngle;
	float CameraYawStiff;
	float CameraYawDamp;
	float CameraYawStrength;
	float UprightStiff;
	float UprightDamp;
	bool bUseVehiclePivotForCameraPitch;
	float ThrustTorqueAnglePercent;
	float BoostThrustTorqueAnglePercent;
	float ThrustTorqueStiff;
	float ThrustTorqueDamp;
	float ThrustTorqueMaxAccel;
	float ThrustTorque;
	float YawTorque;
	float YawTorqueDampingSpeed;
	float BoostForce;
	float BoostMaxSpeedKmh;
	float BoostDuration;
	float BoostCooldown;
	float BoostTorqueStiff;
	float BoostTorqueDamp;
	float AfterBoostBrakingForce;
	float AfterBoostBrakingDuration;
	float AfterBoostBrakingMinSpeed;
	float PitchAngleRequiredForFullThrust;
	float DistanceToGroundForLanding;
	float StartupDelay;
	float LandingSequenceDelay;
	float RotorsRadius;
	float RotorsRadiusInner;
	float NoDriverBrakeForce;
	float TimeBetweenRotorDamageTicks;
	float AutoLandingForce;
	float RotorDamageBoxSweepLength;
	float CriticalStateLiftForce;
	float IdleRotationMultiplier;
	float LiftPitchDegrees;
	float MinAltitudeForIdleNoise;
	float DefaultLinearDamp;
	float DefaultAngularDamp;
	float LandingLinearDamp;
	float LandingAngularDamp;
	float LandingLiftAlpha;
	float CriticalStateThrustMultiplier;
	float BodyUpDotThresholdForLanding;
	int CriticalHealthThreshold;
	float DamagePerImpulseWhileCritical;
	float RotorImpulseLinear;
	float RotorImpulseAngular;
	float RotorImpulseCooldown;
	float StartupLift;
	float StartupLiftTime;
	float MaxAltitude;
	float AltitudeForSpinning;
	float RotorMaxSpeed;
	float RotorAccel;
	float RotorDecel;
	float MinRotorSpeedForSkippingStartup;
	float RotorSpeedForStartupLift;
	float CriticalLiftForceDecay;
	float CriticalYawTorqueMin;
	float CriticalYawTorqueMax;
	float CriticalYawTorqueRampDuration;
	float RotorTraceRotationSpeed;
	float RotorTraceBoxSize;
	float RotorTraceBoxHeight;
	float MaxCriticalFallForce;
	float BoostFOV;
	float GentleCrashTimeToExplode;
	float CriticalTimeForGentleCrash;
	float AutoLandingYawTorque;
	float MinHeightForAutoLandingYawTorque;
	float MinSpeedForScrapingBottom;
	float CriticalHealth;
	float FallDamageHeightBuffer;
	float TimeBetweenRotorPlayerDamage;
	float RotorMoveSpeedRequiredToUpdateTraceDirSqr;
	float FoliageTraceRate;
	float RotorWashTicksPerFrame;
	float CriticalHitRadius;
	float AngleNormalUpForLockMovement;
	float MaxAutoLandingTime;
	float SpeedThresholdForCrashed;
	float CritMultiplier;
	float AltitudeForSprings;
	float MaxCrashingTime;
	float MaxCrashingScrapingTime;
	float MaxCrashingTimeSpentNotMoving;
	float LandscapeRotorImpulseMag;
	float HealthThresholdForLandscapeRotorImpulse;
	float MaxHeightBuffer;
	bool bImpulseOnOuterRotorHitLandscape;
	bool bSkipRotorImpulses;
	bool bEnableCVarScaling;
	float CVarScalingInterp;
	struct Vector FoliageTraceBoxSize;
	struct Vector WaterBoxSize;
	struct Vector WaterBoxOffset;
	struct Vector RotorOffsetFromActorLocationOnServer;
	bool bSkipContactRotations;
	struct ScalableFloat MaxAutoLandHeightWhenOutOfFuel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortHoagieVehicleReticle : public FortAthenaVehicleDashboardWidget
{
public:
	class UClass* OwningHoagieVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineHotfixManager : public UObject
{
public:
	struct FString OSSName;
	struct FString HotfixManagerClassName;
	struct FString DebugPrefix;
	TArray<class UClass*> AssetsHotfixedFromIniFiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUpdateManager : public UObject
{
public:
	float HotfixCheckCompleteDelay;
	float UpdateCheckCompleteDelay;
	float HotfixAvailabilityCheckCompleteDelay;
	float UpdateCheckAvailabilityCompleteDelay;
	int AppSuspendedUpdateCheckTimeSeconds;
	bool bPlatformEnvironmentDetected;
	bool bInitialUpdateFinished;
	bool bCheckHotfixAvailabilityOnly;
	EUpdateState CurrentUpdateState;
	int WorstNumFilesPendingLoadViewed;
	EHotfixResult LastHotfixResult;
	struct DateTime LastUpdateCheck;
	EUpdateCompletionStatus LastCompletionResult;
	class UClass* UpdateStateEnum;
	class UClass* UpdateCompletionEnum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneImagePlateSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieScenePropertySectionData PropertyData;
	struct MovieSceneImagePlateSectionParams Params;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AImagePlate : public AActor
{
public:
	class UClass* ImagePlate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImagePlateComponent : public UPrimitiveComponent
{
public:
	struct ImagePlateParameters Plate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImagePlateSettings : public UObject
{
public:
	struct FString ProxyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImagePlateFileSequence : public UObject
{
public:
	struct DirectoryPath SequencePath;
	struct FString FileWildcard;
	float FrameRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImagePlateFrustumComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneImagePlateSection : public MovieSceneSection
{
public:
	class UClass* FileSequence;
	bool bReuseExistingTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneImagePlateTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageWriteBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputCoreTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputBehavior : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnyButtonInputBehavior : public UInputBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveGizmoBuilder : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAxisAngleGizmoBuilder : public UInteractiveGizmoBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveGizmo : public UObject
{
public:
	class UClass* InputBehaviors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAxisAngleGizmo : public UInteractiveGizmo
{
public:
	Unknown AxisSource;
	Unknown AngleSource;
	Unknown HitTarget;
	Unknown StateTarget;
	bool bInInteraction;
	struct Vector RotationOrigin;
	struct Vector RotationAxis;
	struct Vector RotationPlaneX;
	struct Vector RotationPlaneY;
	struct Vector InteractionStartPoint;
	struct Vector InteractionCurPoint;
	float InteractionStartAngle;
	float InteractionCurAngle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAxisPositionGizmoBuilder : public UInteractiveGizmoBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAxisPositionGizmo : public UInteractiveGizmo
{
public:
	Unknown AxisSource;
	Unknown ParameterSource;
	Unknown HitTarget;
	Unknown StateTarget;
	bool bEnableSignedAxis;
	bool bInInteraction;
	struct Vector InteractionOrigin;
	struct Vector InteractionAxis;
	struct Vector InteractionStartPoint;
	struct Vector InteractionCurPoint;
	float InteractionStartParameter;
	float InteractionCurParameter;
	float ParameterSign;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoConstantAxisSource : public UObject
{
public:
	struct Vector Origin;
	struct Vector Direction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoConstantFrameAxisSource : public UObject
{
public:
	struct Vector Origin;
	struct Vector Direction;
	struct Vector TangentX;
	struct Vector TangentY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoWorldAxisSource : public UObject
{
public:
	struct Vector Origin;
	int AxisIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoComponentAxisSource : public UObject
{
public:
	class UClass* Component;
	int AxisIndex;
	bool bLocalAxes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveToolPropertySet : public UObject
{
public:
	class UClass* CachedProperties;
	bool bIsPropertySetEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBrushBaseProperties : public UInteractiveToolPropertySet
{
public:
	float BrushSize;
	bool bSpecifyRadius;
	float BrushRadius;
	float BrushStrength;
	float BrushFalloffAmount;
	bool bShowStrength;
	bool bShowFalloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveTool : public UObject
{
public:
	class UClass* InputBehaviors;
	TArray<class UClass*> ToolPropertyObjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USingleSelectionTool : public UInteractiveTool
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshSurfacePointTool : public USingleSelectionTool
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBaseBrushTool : public UMeshSurfacePointTool
{
public:
	class UClass* BrushProperties;
	bool bInBrushStroke;
	float WorldToLocalScale;
	struct BrushStampData LastBrushStamp;
	struct TSoftClassPtr<UObject> PropertyClass;
	class UClass* BrushStampIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBrushStampIndicatorBuilder : public UInteractiveGizmoBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBrushStampIndicator : public UInteractiveGizmo
{
public:
	float BrushRadius;
	float BrushFalloff;
	struct Vector BrushPosition;
	struct Vector BrushNormal;
	bool bDrawIndicatorLines;
	bool bDrawRadiusCircle;
	int SampleStepCount;
	struct LinearColor LineColor;
	float LineThickness;
	bool bDepthTested;
	bool bDrawSecondaryLines;
	float SecondaryLineThickness;
	struct LinearColor SecondaryLineColor;
	class UClass* AttachedComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClickDragInputBehavior : public UAnyButtonInputBehavior
{
public:
	bool bUpdateModifiersDuringDrag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalClickDragInputBehavior : public UClickDragInputBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveToolBuilder : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClickDragToolBuilder : public UInteractiveToolBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UClickDragTool : public UInteractiveTool
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AInternalToolFrameworkActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGizmoActor : public AInternalToolFrameworkActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoBaseComponent : public UPrimitiveComponent
{
public:
	struct LinearColor Color;
	float HoverSizeMultiplier;
	float PixelHitDistanceThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoArrowComponent : public UGizmoBaseComponent
{
public:
	struct Vector Direction;
	float Gap;
	float Length;
	float Thickness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoBoxComponent : public UGizmoBaseComponent
{
public:
	struct Vector Origin;
	struct Quat Rotation;
	struct Vector Dimensions;
	float LineThickness;
	bool bRemoveHiddenLines;
	bool bEnableAxisFlip;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoCircleComponent : public UGizmoBaseComponent
{
public:
	struct Vector Normal;
	float Radius;
	float Thickness;
	int NumSides;
	bool bViewAligned;
	bool bOnlyAllowFrontFacingHits;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoTransformSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoAxisSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoClickTarget : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoStateTarget : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoFloatParameterSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoVec2ParameterSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoLineHandleComponent : public UGizmoBaseComponent
{
public:
	struct Vector Normal;
	float HandleSize;
	float Thickness;
	struct Vector Direction;
	float Length;
	bool bImageScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoRectangleComponent : public UGizmoBaseComponent
{
public:
	struct Vector DirectionX;
	struct Vector DirectionY;
	float OffsetX;
	float OffsetY;
	float LengthX;
	float LengthY;
	float Thickness;
	byte SegmentFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoLambdaHitTarget : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoComponentHitTarget : public UObject
{
public:
	class UClass* Component;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputBehaviorSet : public UObject
{
public:
	TArray<struct BehaviorInfo> Behaviors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputBehaviorSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputRouter : public UObject
{
public:
	bool bAutoInvalidateOnHover;
	bool bAutoInvalidateOnCapture;
	class UClass* ActiveInputBehaviors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractionMechanic : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveGizmoManager : public UObject
{
public:
	TArray<struct ActiveGizmo> ActiveGizmos;
	Unknown GizmoBuilders;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UToolContextTransactionProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveToolManager : public UObject
{
public:
	class UClass* ActiveLeftTool;
	class UClass* ActiveRightTool;
	Unknown ToolBuilders;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UToolFrameworkComponent : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInteractiveToolsContext : public UObject
{
public:
	class UClass* InputRouter;
	class UClass* ToolManager;
	class UClass* GizmoManager;
	struct TSoftClassPtr<UObject> ToolManagerClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AIntervalGizmoActor : public AGizmoActor
{
public:
	class UClass* UpIntervalComponent;
	class UClass* DownIntervalComponent;
	class UClass* ForwardIntervalComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIntervalGizmoBuilder : public UInteractiveGizmoBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIntervalGizmo : public UInteractiveGizmo
{
public:
	class UClass* StateTarget;
	class UClass* TransformProxy;
	TArray<class UClass*> ActiveComponents;
	TArray<class UClass*> ActiveGizmos;
	class UClass* AxisYSource;
	class UClass* AxisZSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoBaseFloatParameterSource : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoAxisIntervalParameterSource : public UGizmoBaseFloatParameterSource
{
public:
	Unknown FloatParameterSource;
	float MinParameter;
	float MaxParameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKeyAsModifierInputBehavior : public UInputBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshSurfacePointToolBuilder : public UInteractiveToolBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMouseHoverBehavior : public UInputBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMultiClickSequenceInputBehavior : public UAnyButtonInputBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMultiSelectionTool : public UInteractiveTool
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoLocalFloatParameterSource : public UGizmoBaseFloatParameterSource
{
public:
	float Value;
	struct GizmoFloatParameterChange LastChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoBaseVec2ParameterSource : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoLocalVec2ParameterSource : public UGizmoBaseVec2ParameterSource
{
public:
	struct Vector2D Value;
	struct GizmoVec2ParameterChange LastChange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoAxisTranslationParameterSource : public UGizmoBaseFloatParameterSource
{
public:
	Unknown AxisSource;
	Unknown TransformSource;
	float Parameter;
	struct GizmoFloatParameterChange LastChange;
	struct Vector CurTranslationAxis;
	struct Vector CurTranslationOrigin;
	struct Transform InitialTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoPlaneTranslationParameterSource : public UGizmoBaseVec2ParameterSource
{
public:
	Unknown AxisSource;
	Unknown TransformSource;
	struct Vector2D Parameter;
	struct GizmoVec2ParameterChange LastChange;
	struct Vector CurTranslationOrigin;
	struct Vector CurTranslationNormal;
	struct Vector CurTranslationAxisX;
	struct Vector CurTranslationAxisY;
	struct Transform InitialTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoAxisRotationParameterSource : public UGizmoBaseFloatParameterSource
{
public:
	Unknown AxisSource;
	Unknown TransformSource;
	float Angle;
	struct GizmoFloatParameterChange LastChange;
	struct Vector CurRotationAxis;
	struct Vector CurRotationOrigin;
	struct Transform InitialTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoUniformScaleParameterSource : public UGizmoBaseVec2ParameterSource
{
public:
	Unknown AxisSource;
	Unknown TransformSource;
	float ScaleMultiplier;
	struct Vector2D Parameter;
	struct GizmoVec2ParameterChange LastChange;
	struct Vector CurScaleOrigin;
	struct Vector CurScaleNormal;
	struct Vector CurScaleAxisX;
	struct Vector CurScaleAxisY;
	struct Transform InitialTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoAxisScaleParameterSource : public UGizmoBaseFloatParameterSource
{
public:
	Unknown AxisSource;
	Unknown TransformSource;
	float ScaleMultiplier;
	float Parameter;
	struct GizmoFloatParameterChange LastChange;
	struct Vector CurScaleAxis;
	struct Vector CurScaleOrigin;
	struct Transform InitialTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoPlaneScaleParameterSource : public UGizmoBaseVec2ParameterSource
{
public:
	Unknown AxisSource;
	Unknown TransformSource;
	float ScaleMultiplier;
	struct Vector2D Parameter;
	struct GizmoVec2ParameterChange LastChange;
	struct Vector CurScaleOrigin;
	struct Vector CurScaleNormal;
	struct Vector CurScaleAxisX;
	struct Vector CurScaleAxisY;
	struct Transform InitialTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlanePositionGizmoBuilder : public UInteractiveGizmoBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlanePositionGizmo : public UInteractiveGizmo
{
public:
	Unknown AxisSource;
	Unknown ParameterSource;
	Unknown HitTarget;
	Unknown StateTarget;
	bool bEnableSignedAxis;
	bool bFlipX;
	bool bFlipY;
	bool bInInteraction;
	struct Vector InteractionOrigin;
	struct Vector InteractionNormal;
	struct Vector InteractionAxisX;
	struct Vector InteractionAxisY;
	struct Vector InteractionStartPoint;
	struct Vector InteractionCurPoint;
	struct Vector2D InteractionStartParameter;
	struct Vector2D InteractionCurParameter;
	struct Vector2D ParameterSigns;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USelectionSet : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshSelectionSet : public USelectionSet
{
public:
	TArray<int> Vertices;
	TArray<int> Edges;
	TArray<int> Faces;
	TArray<int> Groups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USingleClickInputBehavior : public UAnyButtonInputBehavior
{
public:
	bool HitTestOnRelease;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USingleClickToolBuilder : public UInteractiveToolBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USingleClickTool : public UInteractiveTool
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoNilStateTarget : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoLambdaStateTarget : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoObjectModifyStateTarget : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoTransformChangeStateTarget : public UObject
{
public:
	Unknown TransactionManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATransformGizmoActor : public AGizmoActor
{
public:
	class UClass* TranslateX;
	class UClass* TranslateY;
	class UClass* TranslateZ;
	class UClass* TranslateYZ;
	class UClass* TranslateXZ;
	class UClass* TranslateXY;
	class UClass* RotateX;
	class UClass* RotateY;
	class UClass* RotateZ;
	class UClass* UniformScale;
	class UClass* AxisScaleX;
	class UClass* AxisScaleY;
	class UClass* AxisScaleZ;
	class UClass* PlaneScaleYZ;
	class UClass* PlaneScaleXZ;
	class UClass* PlaneScaleXY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTransformGizmoBuilder : public UInteractiveGizmoBuilder
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTransformGizmo : public UInteractiveGizmo
{
public:
	class UClass* ActiveTarget;
	bool bSnapToWorldGrid;
	bool bGridSizeIsExplicit;
	struct Vector ExplicitGridSize;
	bool bRotationGridSizeIsExplicit;
	struct Rotator ExplicitRotationGridSize;
	bool bSnapToWorldRotGrid;
	bool bUseContextCoordinateSystem;
	EToolContextCoordinateSystem CurrentCoordinateSystem;
	TArray<class UClass*> ActiveComponents;
	TArray<class UClass*> NonuniformScaleComponents;
	TArray<class UClass*> ActiveGizmos;
	class UClass* CameraAxisSource;
	class UClass* AxisXSource;
	class UClass* AxisYSource;
	class UClass* AxisZSource;
	class UClass* UnitAxisXSource;
	class UClass* UnitAxisYSource;
	class UClass* UnitAxisZSource;
	class UClass* StateTarget;
	class UClass* ScaledTransformSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTransformProxy : public UObject
{
public:
	bool bRotatePerObject;
	bool bSetPivotMode;
	struct Transform SharedTransform;
	struct Transform InitialSharedTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoBaseTransformSource : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoComponentWorldTransformSource : public UGizmoBaseTransformSource
{
public:
	class UClass* Component;
	bool bModifyComponentOnTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoScaledTransformSource : public UGizmoBaseTransformSource
{
public:
	Unknown ChildTransformSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGizmoTransformProxyTransformSource : public UGizmoBaseTransformSource
{
public:
	class UClass* Proxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance : public UFortAIAnimInstance
{
public:
	float AverageSpeed;
	float AverageSpeedTimeFrame;
	bool bHasValidAimTarget;
	struct Vector AimTargetLocation;
	bool bIsSurfaceSwimming;
	bool bIsMovingOnGround;
	float LookAtAlpha;
	float MaxDistanceToPlayerForLookAt;
	float LookAtTooFarFromPlayerTimeOut;
	bool bDisableLookAtDuringMontage;
	struct FName DisableHeadTrackingCurveName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance_Burt : public UFortAIFaunaAnimInstance
{
public:
	float MovingPlayRate;
	float LocomotionPoseAdditiveAlpha;
	bool bEnableHeadTiltUpAdditive;
	bool bTurnAngleIsNegative;
	struct FName DisableLocomotionAdditiveCurveName;
	struct FName InterruptibleCurveName;
	bool bCanTransitionIdleToApex;
	bool bCanTransitionIdleToMoving;
	bool bCanTransitionMovingToIdle;
	bool bCanTransitionLandToIdle;
	bool bCanTransitionLandToJumpStart;
	bool bCanTransitionJumpStartToApex;
	bool bCanTransitionApexToFall;
	bool bCanTransitionFallToLand;
	bool bCanTransitionIdleTurnToIdle;
	bool bCanTransitionLocomotionTurnToIdle;
	bool bCanTransitionLocomotionTurnToMoving;
	bool bCanTransitionIdleTurnToMoving;
	float MovingPlayRate_SpeedThreshold;
	float MovingPlayRate_SlowSpeedDivisor;
	float MovingPlayRate_FastSpeedDivisor;
	float MovingPlayRate_MinClamp;
	float MovingPlayRate_MaxClamp;
	float MovingPlayRate_InterpSpeed;
	float LocomotionPoseAdditiveAlpha_InterpSpeed;
	float EnableHeadTiltUpAdditive_PawnUniqueIDMultiplier;
	float EnableHeadTiltUpAdditive_ModOperand;
	float InterruptibleCurveValue_LargeThreshold;
	float InterruptibleCurveValue_TurnAngleThreshold;
	float Speed_MovingThreshold;
	float Speed_IdleThreshold;
	float TurnAngle_LargeThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance_Grandma : public UFortAIFaunaAnimInstance
{
public:
	class UClass* AIPawn;
	float MeshScale;
	bool bShouldPlayFullBodyInPlace;
	float BlinkAlpha;
	float WalkRunPlayRate;
	float LocomotionPoseAdditiveAlpha;
	bool bEnableSniffAdditive;
	bool bEnableAlertAdditive;
	bool bIdleStartTurn;
	float MaxSpeedFullBodyInPlace;
	float MinCurveValueFullBodyInPlace;
	float LocomotionPoseAdditiveAlphaInterpRate;
	int SniffAdditiveFrequenceySeconds;
	int AlertAdditiveFrequenceySeconds;
	int PawnIDScale;
	struct FName ShouldPlayFullBodyInPlaceCurveName;
	struct FName BlinkAlphaCurveName;
	float IdleStartTurnInterruptibleThreshold;
	bool bIsMovingOnGroundORIsSurfaceSwimming;
	bool bStateRule_DefaultJump_ToJumpApex;
	bool bStateRule_TurnIdle_Idle;
	bool bStateRule_TurnIdle_Moving;
	bool bStateRule_Moving_TurnIdle;
	bool bStateRule_TurnMoving_Moving;
	bool bStateRule_Moving_TurnMoving;
	bool bStateRule_Idle_Moving;
	bool bStateRule_Moving_Idle;
	bool bStateRule_JumpLand_Idle;
	bool bStateRule_JumpLand_Moving;
	bool bStateRule_JumpStart_JumpApex;
	bool bStateRule_SwimIdle_SwimLoco;
	bool bStateRule_SwimLoco_SwimIdle;
	bool bStateRule_SwimTurn_SwimIdle;
	bool bStateRule_SwimTurn_SwimLoco;
	bool bAnimRule_NegativeTurnAngle;
	float InterruptibleMaxCheck;
	float SpeedStopTransition;
	float SpeedIdleMoveTransition;
	float SpeedMovingTurnIdleTransition;
	float SpeedToMoveMin;
	float StateTimeFromEndThreshold;
	float SpeedIdleStartTurnThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance_Nug : public UFortAIFaunaAnimInstance
{
public:
	bool bIsBeingHeld;
	float LowerBodyMaskAlpha;
	bool bShouldExitJump;
	float MovingPlayRate;
	bool bShouldLean;
	float LeanDirection;
	bool bTurnAngleIsNegative;
	struct FName InterruptibleCurveName;
	bool bCanTransitionIdleToIdleTurn;
	bool bCanTransitionIdleToLocomotionTurn;
	bool bCanTransitionIdleToMoving;
	bool bCanTransitionIdleToJumpApex;
	bool bCanTransitionMovingToIdle;
	bool bCanTransitionJumpStartToJumpApex;
	bool bCanTransitionJumpApexToJumpLoop;
	bool bCanTransitionLocomotionTurnToIdle;
	bool bCanTransitionLocomotionTurnToMoving;
	bool bCanTransitionIdleTurnToMoving;
	bool bCanTransitionIdleTurnToIdle;
	float ShouldExitJump_SpeedThreshold;
	float MovingPlayRate_SpeedThreshold;
	float MovingPlayRate_SlowSpeedDivisor;
	float MovingPlayRate_FastSpeedDivisor;
	float MovingPlayRate_InterpSpeed;
	float MovingPlayRate_MinClamp;
	float MovingPlayRate_MaxClamp;
	float LeanDirection_SpeedThreshold;
	float ShouldLean_SpeedThreshold;
	float InterruptibleCurveValue_LargeThreshold;
	float Speed_MovingThreshold;
	float Speed_IdleThreshold;
	float IdleTurnTransition_SpeedThreshold;
	float LocomotionTurnTransition_SpeedThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance_Robert : public UFortAIFaunaAnimInstance
{
public:
	class UClass* AIPawn;
	bool bIdleStartTurn;
	bool bEnableHeadTiltDownAdditive;
	bool bIsFullBodyInPlace;
	float LocomotionPoseAdditiveAlpha;
	int PawnIDScale;
	int HeadTiltDownAdditiveFrequenceySeconds;
	float ForceFullBodyTransition;
	float LocomotionPoseAdditiveAlphaInterpRate;
	float IdleStartTurnInterruptibleThreshold;
	bool bStateRule_TurnIdle_Idle;
	bool bStateRule_Idle_TurnIdle;
	bool bStateRule_TurnIdle_Moving;
	bool bStateRule_TurnMoving_TurnIdle;
	bool bStateRule_Idle_Moving;
	bool bStateRule_Moving_Idle;
	bool bStateRule_TurnMoving_Moving;
	bool bStateRule_Moving_TurnMoving;
	bool bStateRule_Swimming_Fall;
	bool bStateRule_Land_Idle;
	bool bStateRule_JumpStart_Apex;
	bool bStateRule_SwimIdle_SwimLoco;
	bool bStateRule_SwimLoco_SwimIdle;
	bool bStateRule_SwimTurn_SwimIdle;
	bool bStateRule_SwimTurn_SwimLoco;
	bool bAnimRule_NegativeTurnAngle;
	float InterruptibleMaxCheck;
	float SpeedStopTransition;
	float SpeedIdleMoveTransition;
	float SpeedToMoveMin;
	float StateTimeFromEndThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance_Smackie : public UFortAIFaunaAnimInstance
{
public:
	float SpeedThreshold;
	bool bCanTransitionIdleToHop;
	bool bCanTransitionHopToIdle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaLayerAnimInstance : public UFortBaseLayerAnimInstance
{
public:
	class UClass* MainAnimBP;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UJsonUtilitiesDummyObject : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKairosCaptureStatics : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKairosConfig : public UDataAsset
{
public:
	float DefaultHeroScale;
	class UClass* AvatarCaptureBlueprint;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKairosGameModeBase : public AGameModeBase
{
public:
	class UClass* DefaultConfig;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKairosHeroBase : public AActor
{
public:
	struct FString PlayerID;
	bool bIsBeingCaptured;
	class UClass* SceneCaptureComponent2D;
	EKairosHeroAnimationState CurrentAnimationState;
	EKairosHeroSkeletonType SkeletonType;
	class UClass* CapturePawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKairosPawn : public APawn
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKairosPlayerController : public APlayerController
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AKairosSceneManagerActor : public AActor
{
public:
	Unknown DisplayAvatars;
	struct Transform SpawnedPawnHeadCaptureTransform;
	class UClass* SnippetAudioComponent;
	class UClass* ActiveGroupWidget;
	bool bIsSnippetPaused;
	struct KairosSceneInfo ActiveSceneInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KnockbackMutatorData : public FastArraySerializerItem
{
public:
	class UClass* Pawn;
	float KnockbackMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class KnockbackMutatorDataArray : public FastArraySerializer
{
public:
	TArray<struct KnockbackMutatorData> Entries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Knockback : public AFortAthenaMutator
{
public:
	bool bStorePlayerKnockbackData;
	bool bReplicatePlayerKnockbackData;
	struct FScriptMulticastDelegate OnPlayerKnockbackDataChanged;
	struct KnockbackMutatorDataArray AllPlayersKnockbackData;
	struct ScalableFloat bDisplayKnockbackDamageNumbersAsPercentage;
	struct ScalableFloat ConvertToKnockbackDamageMultiplier;
	struct ScalableFloat PercentDamageLowMaxThreshold;
	struct ScalableFloat PercentDamageMediumMaxThreshold;
	float KnockbackMultiplierInitialValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_KnockbackMutator : public FortGameplayAbility
{
public:
	class UClass* CachedMutator;
	class UClass* MutatorClassToGet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAIFaunaAnimInstance_Labrador : public UFortAIFaunaAnimInstance
{
public:
	bool bHighVelocity;
	bool bIsInterruptible;
	bool bLocoToIdle;
	bool bIdleToLoco;
	bool bJumpStartToJumpLoop;
	bool bJumpLandToMovement;
	bool bIsRunning;
	bool bIdleToFalling;
	bool bToppledOnGround;
	bool bTransitionToLand;
	float TargetDistance;
	bool bTargetIsClose;
	bool bIsInTractorBeam;
	bool bIsFloating;
	bool bIsToppled;
	bool bIsLeaking;
	float MinHighVelocityMagnitude;
	float MaxInterruptibleCurveValue;
	float LocoIdleTransitionThreshold;
	float RunSpeedThreshold;
	float JumpLandToMovementInterruptibleThreshold;
	float MinTargetIsCloseDistance;
	struct FName CurveName_Interruptible;
	struct GameplayTagContainer TractorBeamStatusTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortLabradorComponent_Telemetry : public UFortAIComponent_Telemetry
{
public:
	bool bWasAwake;
	struct FString InstigatorAwakeNetIDString;
	ELabradorDespawnReason DespawnReason;
	float DamageReceivedFromPlayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaLivingWorldCategory : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> EventTable;
	int MaxCount;
	int MaxSpawnedCount;
	float Priority;
	bool bExcludeFromGlobalAIBudget;
	struct GameplayTagQuery RequirePlaylistTagQuery;
	TArray<struct TSoftClassPtr<UObject>> Encounters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaLivingWorldDensityGrid : public FortSpatialGrid
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaLivingWorldEvent : public TableRowBase
{
public:
	struct TSoftClassPtr<UObject> EventData;
	struct ScalableFloat IsEnabled;
	TArray<float> MaxCount;
	TArray<float> MaxSpawnedCount;
	float Weight;
	TArray<float> MinRespawnTime;
	TArray<float> MaxRespawnTime;
	bool bOnlyInSafeZone;
	EAthenaGamePhaseStep ActivationGamePhaseStep;
	int ActivationSafeZoneIndex;
	float ActivationMinDelay;
	float ActivationMaxDelay;
	bool bCheckForActorDensity;
	float RandomActivationChance;
	struct GameplayTagContainer RequirePlaylistTags;
	struct LivingWorldCalendarEventConditions CalendarEventConditions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaLivingWorldConfigData : public UDataAsset
{
public:
	struct TSoftClassPtr<UObject> CategoryTable;
	struct ScalableFloat MaxActorCount;
	struct ScalableFloat MaxEventSpawnPerTick;
	struct ScalableFloat MinimumEventGenerationInterval;
	struct ScalableFloat MaxActorDensity;
	struct ScalableFloat DensityComputationDistance;
	struct ScalableFloat MaxActorDensityUpdatesPerTick;
	struct ScalableFloat ActorDensityGridCellSize;
	struct ScalableFloat PointClusterSize;
	class UClass* EQSActorHelperClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaLivingWorldEncounter : public UDataAsset
{
public:
	struct ScalableFloat IntervalBetweenEventGeneration;
	TArray<struct FortAthenaLivingWorldEncounterStage> Stages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaLivingWorldEncounterInstance : public UObject
{
public:
	struct FScriptMulticastDelegate OnActorSpawned;
	TArray<Unknown> OriginalPointProviders;
	TArray<Unknown> RegisteredPointProviders;
	struct TSoftClassPtr<UObject> EncounterDefinition;
	int CurrentStageIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaLivingWorldEventData : public UDataAsset
{
public:
	int TimeOfDayFilters;
	float WaterLevelIndexMin;
	float WaterLevelIndexMax;
	struct GameplayTagQuery ProviderFiltersTagQuery;
	TArray<struct PointProviderFilterEntry> ProviderFiltersEntries;
	struct ScalableFloat MinActorCountToSpawn;
	struct ScalableFloat MaxActorCountToSpawn;
	TArray<struct FortAthenaLivingWorldEventDataActorSpawnDescription> ActorDescriptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaLivingWorldManager : public GameStateComponent
{
public:
	struct TSoftClassPtr<UObject> DefaultLagerConfig;
	TArray<struct FortLivingWorldConfigOverride> LagerConfigOverrides;
	struct ScalableFloat LagerEnabled;
	TArray<Unknown> PointProviders;
	struct SlateBrush SpecialActorMinimapIconBrush;
	struct Vector2D SpecialActorMinimapIconScale;
	struct SlateBrush SpecialActorCompassIconBrush;
	struct Vector2D SpecialActorCompassIconScale;
	TArray<class UClass*> LoadedSpawnerDataClass;
	TArray<class UClass*> LoadedActorDataClass;
	class UClass* CachedGameState;
	class UClass* CachedWorld;
	class UClass* CachedConfig;
	TArray<class UClass*> RunningEncounterInstances;
	class UClass* CachedSeasonalEventManager;
	TArray<struct TSoftClassPtr<UObject>> ActorClassToPreloadOnClient;
	TArray<class UClass*> RuntimePointProviderList;
	Unknown RuntimePointProviderOwners;
	TArray<class UClass*> SpawnedPawns;
	class UClass* EQSHelper;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaLivingWorldPointProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaLivingWorldPointProvidersEnabler : public AActor
{
public:
	TArray<Unknown> EnabledLinkedPointProviders;
	TArray<Unknown> AvailableLinkedPointProviders;
	struct GameplayTagContainer EnablerTags;
	TArray<Unknown> LinkedPointProviders;
	struct ScalableFloat PointProvidersToEnable;
	struct ScalableFloat EvaluateAutomatically;
	struct FScriptMulticastDelegate OnCompletedEvaluationDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaLivingWorldPointProvidersEnabler_MiniMapDataOverride : public AFortAthenaLivingWorldPointProvidersEnabler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaLivingWorldVolume : public AVolume
{
public:
	bool bStartEnabled;
	struct GameplayTagContainer FiltersTags;
	struct GameplayTagQuery DeactivationTagsQuery;
	float DeactivationTagsRange;
	class UClass* EnvironmentQuery;
	TArray<struct AIDynamicParam> QueryConfig;
	bool bRemoveUsedPoint;
	struct FortAthenaLivingWorldPointProviderSpawnLimiter SpawnLimiter;
	struct ScalableFloat EQSRefreshInterval;
	struct ScalableFloat WaterLevelIndexMin;
	struct ScalableFloat WaterLevelIndexMax;
	class UClass* CachedGameState;
	struct FScriptMulticastDelegate OnActorSpawnedResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaPatrolPathPointProvider : public AActor
{
public:
	struct GameplayTagContainer FiltersTags;
	class UClass* AssociatedPatrolPath;
	bool bStartEnabled;
	bool bSpawnOnPatrolPath;
	struct FortAthenaLivingWorldPointProviderSpawnLimiter SpawnLimiter;
	struct FScriptMulticastDelegate OnActorSpawnedResult;
	Unknown RuntimePatrolPathWeakPtr;
	class UClass* CachedGameState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_LivingWorldManager : public UChildCheatManager
{
public:
	int CheatTeleportToCount;
	struct FString CheatLastEventDataName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AControlPointMeshActor : public AActor
{
public:
	class UClass* ControlPointMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControlPointMeshComponent : public UStaticMeshComponent
{
public:
	float VirtualTextureMainPassMaxDrawDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscapeProxy : public AActor
{
public:
	class UClass* SplineComponent;
	struct Guid LandscapeGuid;
	struct IntPoint LandscapeSectionOffset;
	int MaxLODLevel;
	float LODDistanceFactor;
	ELandscapeLODFalloff LODFalloff;
	float ComponentScreenSizeToUseSubSections;
	float Lod0ScreenSize;
	float LOD0DistributionSetting;
	float LODDistributionSetting;
	float TessellationComponentScreenSize;
	bool UseTessellationComponentScreenSizeFalloff;
	float TessellationComponentScreenSizeFalloff;
	int OccluderGeometryLOD;
	int StaticLightingLOD;
	class UClass* DefaultPhysMaterial;
	float StreamingDistanceMultiplier;
	class UClass* LandscapeMaterial;
	class UClass* LandscapeHoleMaterial;
	TArray<struct LandscapeProxyMaterialOverride> LandscapeMaterialsOverride;
	bool bMeshHoles;
	byte MeshHolesMaxLod;
	TArray<class UClass*> RuntimeVirtualTextures;
	int VirtualTextureNumLods;
	int VirtualTextureLodBias;
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType;
	float NegativeZBoundsExtension;
	float PositiveZBoundsExtension;
	TArray<class UClass*> LandscapeComponents;
	TArray<class UClass*> CollisionComponents;
	TArray<class UClass*> FoliageComponents;
	bool bHasLandscapeGrass;
	float StaticLightingResolution;
	bool CastShadow;
	bool bCastDynamicShadow;
	bool bCastStaticShadow;
	bool bCastFarShadow;
	bool bCastHiddenShadow;
	bool bCastShadowAsTwoSided;
	bool bAffectDistanceFieldLighting;
	struct LightingChannels LightingChannels;
	bool bUseMaterialPositionOffsetInStaticLighting;
	bool bRenderCustomDepth;
	ERendererStencilMask CustomDepthStencilWriteMask;
	int CustomDepthStencilValue;
	float LDMaxDrawDistance;
	struct LightmassPrimitiveSettings LightmassSettings;
	int CollisionMipLevel;
	int SimpleCollisionMipLevel;
	float CollisionThickness;
	struct BodyInstance BodyInstance;
	bool bGenerateOverlapEvents;
	bool bBakeMaterialPositionOffsetIntoCollision;
	int ComponentSizeQuads;
	int SubsectionSizeQuads;
	int NumSubsections;
	bool bUsedForNavigation;
	bool bFillCollisionUnderLandscapeForNavmesh;
	bool bUseDynamicMaterialInstance;
	ENavDataGatheringMode NavigationGeometryGatheringMode;
	bool bUseLandscapeForCullingInvisibleHLODVertices;
	bool bHasLayersContent;
	Unknown WeightmapUsageMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscape : public ALandscapeProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscapeBlueprintBrushBase : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeLODStreamingProxy : public UStreamableRenderAsset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeComponent : public UPrimitiveComponent
{
public:
	int SectionBaseX;
	int SectionBaseY;
	int ComponentSizeQuads;
	int SubsectionSizeQuads;
	int NumSubsections;
	class UClass* OverrideMaterial;
	class UClass* OverrideHoleMaterial;
	TArray<struct LandscapeComponentMaterialOverride> OverrideMaterials;
	TArray<class UClass*> MaterialInstances;
	TArray<class UClass*> MaterialInstancesDynamic;
	TArray<int8_t> LODIndexToMaterialIndex;
	TArray<int8_t> MaterialIndexToDisabledTessellationMaterial;
	class UClass* XYOffsetmapTexture;
	struct Vector4 WeightmapScaleBias;
	float WeightmapSubsectionOffset;
	struct Vector4 HeightmapScaleBias;
	struct Box CachedLocalBox;
	Unknown CollisionComponent;
	class UClass* HeightmapTexture;
	TArray<struct WeightmapLayerAllocationInfo> WeightmapLayerAllocations;
	TArray<class UClass*> WeightmapTextures;
	class UClass* LODStreamingProxy;
	struct Guid MapBuildDataId;
	TArray<struct Guid> IrrelevantLights;
	int CollisionMipLevel;
	int SimpleCollisionMipLevel;
	float NegativeZBoundsExtension;
	float PositiveZBoundsExtension;
	float StaticLightingResolution;
	int ForcedLOD;
	int LODBias;
	struct Guid StateId;
	struct Guid BakedTextureMaterialGuid;
	class UClass* GIBakedBaseColorTexture;
	byte MobileBlendableLayerMask;
	class UClass* MobileMaterialInterface;
	TArray<class UClass*> MobileMaterialInterfaces;
	TArray<class UClass*> MobileWeightmapTextures;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscapeGizmoActor : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscapeGizmoActiveActor : public ALandscapeGizmoActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeGizmoRenderComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeGrassType : public UObject
{
public:
	TArray<struct GrassVariety> GrassVarieties;
	bool bEnableDensityScaling;
	class UClass* GrassMesh;
	float GrassDensity;
	float PlacementJitter;
	int StartCullDistance;
	int EndCullDistance;
	bool RandomRotation;
	bool AlignToSurface;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeHeightfieldCollisionComponent : public UPrimitiveComponent
{
public:
	TArray<class UClass*> ComponentLayerInfos;
	int SectionBaseX;
	int SectionBaseY;
	int CollisionSizeQuads;
	float CollisionScale;
	int SimpleCollisionSizeQuads;
	TArray<byte> CollisionQuadFlags;
	struct Guid HeightfieldGuid;
	struct Box CachedLocalBox;
	Unknown RenderComponent;
	TArray<class UClass*> CookedPhysicalMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeInfo : public UObject
{
public:
	Unknown LandscapeActor;
	struct Guid LandscapeGuid;
	int ComponentSizeQuads;
	int SubsectionSizeQuads;
	int ComponentNumSubsections;
	struct Vector DrawScale;
	TArray<class UClass*> Proxies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeInfoMap : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeLayerInfoObject : public UObject
{
public:
	struct FName LayerName;
	class UClass* PhysMaterial;
	float Hardness;
	struct LinearColor LayerUsageDebugColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeMaterialInstanceConstant : public UMaterialInstanceConstant
{
public:
	TArray<struct LandscapeMaterialTextureStreamingInfo> TextureStreamingInfo;
	bool bIsLayerThumbnail;
	bool bDisableTessellation;
	bool bMobile;
	bool bEditorToolUsage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeMeshCollisionComponent : public ULandscapeHeightfieldCollisionComponent
{
public:
	struct Guid MeshGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscapeMeshProxyActor : public AActor
{
public:
	class UClass* LandscapeMeshProxyComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeMeshProxyComponent : public UStaticMeshComponent
{
public:
	struct Guid LandscapeGuid;
	TArray<struct IntPoint> ProxyComponentBases;
	int8_t ProxyLOD;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeSettings : public UDeveloperSettings
{
public:
	int MaxNumberOfLayers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeSplinesComponent : public UPrimitiveComponent
{
public:
	TArray<class UClass*> ControlPoints;
	TArray<class UClass*> Segments;
	TArray<class UClass*> CookedForeignMeshComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeSplineControlPoint : public UObject
{
public:
	struct Vector Location;
	struct Rotator Rotation;
	float Width;
	float LayerWidthRatio;
	float SideFalloff;
	float LeftSideFalloffFactor;
	float RightSideFalloffFactor;
	float LeftSideLayerFalloffFactor;
	float RightSideLayerFalloffFactor;
	float EndFalloff;
	TArray<struct LandscapeSplineConnection> ConnectedSegments;
	TArray<struct LandscapeSplineInterpPoint> Points;
	struct Box Bounds;
	class UClass* LocalMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeSplineSegment : public UObject
{
public:
	struct LandscapeSplineSegmentConnection Connections;
	struct InterpCurveVector SplineInfo;
	TArray<struct LandscapeSplineInterpPoint> Points;
	struct Box Bounds;
	TArray<class UClass*> LocalMeshComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALandscapeStreamingProxy : public ALandscapeProxy
{
public:
	Unknown LandscapeActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeSubsystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULandscapeWeightmapUsage : public UObject
{
public:
	class UClass* ChannelUsage;
	struct Guid LayerGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeGrassOutput : public UMaterialExpressionCustomOutput
{
public:
	TArray<struct GrassInput> GrassTypes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeLayerBlend : public UMaterialExpression
{
public:
	TArray<struct LayerBlendInput> Layers;
	struct Guid ExpressionGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeLayerCoords : public UMaterialExpression
{
public:
	ETerrainCoordMappingType MappingType;
	ELandscapeCustomizedCoordType CustomUVType;
	float MappingScale;
	float MappingRotation;
	float MappingPanU;
	float MappingPanV;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeLayerSample : public UMaterialExpression
{
public:
	struct FName ParameterName;
	float PreviewWeight;
	struct Guid ExpressionGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeLayerSwitch : public UMaterialExpression
{
public:
	struct ExpressionInput LayerUsed;
	struct ExpressionInput LayerNotUsed;
	struct FName ParameterName;
	bool PreviewUsed;
	struct Guid ExpressionGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeLayerWeight : public UMaterialExpression
{
public:
	struct ExpressionInput Base;
	struct ExpressionInput Layer;
	struct FName ParameterName;
	float PreviewWeight;
	struct Vector ConstBase;
	struct Guid ExpressionGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapePhysicalMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	TArray<struct PhysicalMaterialInput> Inputs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionLandscapeVisibilityMask : public UMaterialExpression
{
public:
	struct Guid ExpressionGUID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LatencyGraph : public UserWidget
{
public:
	struct Color TotalLatencyLineColor;
	struct Color GameLatencyLineColor;
	struct Color RenderLatencyLineColor;
	struct Color DriverLatencyLineColor;
	struct Color OSWorkQueueLatencyLineColor;
	struct Color GPURenderLatencyLineColor;
	struct Color BackgroundColor;
	float MaxLatencyToGraph;
	struct Vector2D DesiredSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LatencyWidget : public UserWidget
{
public:
	class UClass* TotalLatencyUI;
	class UClass* GameLatencyUI;
	class UClass* RenderLatencyUI;
	class UClass* OSWorkLatencyUI;
	class UClass* DriverLatencyUI;
	class UClass* GPURenderLatencyUI;
	class UClass* TweakLatencyUI;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChatColorSchemeDataAsset : public UDataAsset
{
public:
	struct ChatColorScheme ChatColorData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialActionButtonStyleDataAsset : public UDataAsset
{
public:
	struct ButtonStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatChromeColorSchemeDataAsset : public UDataAsset
{
public:
	struct ChatChromeColorScheme Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatChromeMarginsDataAsset : public UDataAsset
{
public:
	struct ChatChromeMargins Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatChromeStyleDataAsset : public UDataAsset
{
public:
	struct ChatChromeStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatMarkupStyleDataAsset : public UDataAsset
{
public:
	struct ChatMarkupStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatStyleDataAsset : public UDataAsset
{
public:
	struct ChatStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialCheckBoxStyleDataAsset : public UDataAsset
{
public:
	struct CheckBoxStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialFontStyleDataAsset : public UDataAsset
{
public:
	struct SocialFontStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialListMarginsDataAsset : public UDataAsset
{
public:
	struct SocialListMargins Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialListStyleDataAsset : public UDataAsset
{
public:
	struct SocialListStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialProfanityDataAsset : public UDataAsset
{
public:
	TArray<struct ProfanityData> ProfanityData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialRadioBoxStyleDataAsset : public UDataAsset
{
public:
	struct CheckBoxStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialScrollBarStyleDataAsset : public UDataAsset
{
public:
	struct ScrollBarStyle Style;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialSoundSchemaDataAsset : public UDataAsset
{
public:
	struct SocialSoundSchema SoundSchema;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialStyleDataAsset : public UDataAsset
{
public:
	class UClass* SmallFontStyle;
	class UClass* NormalFontStyle;
	class UClass* LargeFontStyle;
	class UClass* ChatFontStyle;
	class UClass* SocialListStyle;
	class UClass* SocialListMargins;
	class UClass* ChatStyle;
	class UClass* ChatChromeStyle;
	class UClass* ChatChromeMargins;
	class UClass* ChatChromeColorScheme;
	class UClass* ChatColorScheme;
	class UClass* SoundSchema;
	class UClass* ActionButtonStyle;
	class UClass* CheckBoxStyle;
	class UClass* RadioBoxStyle;
	class UClass* ScrollBoxStyle;
	class UClass* MarkupStyle;
	class UClass* ProfanityDataAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LevelSequence : public MovieSceneSequence
{
public:
	class UClass* MovieScene;
	struct LevelSequenceObjectReferenceMap ObjectReferences;
	struct LevelSequenceBindingReferences BindingReferences;
	Unknown PossessedObjects;
	class UClass* DirectorClass;
	TArray<class UClass*> AssetUserData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimSequenceLevelSequenceLink : public UAssetUserData
{
public:
	struct Guid SkelTrackGuid;
	struct SoftObjectPath PathToLevelSequence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDefaultLevelSequenceInstanceData : public UObject
{
public:
	class UClass* TransformOriginActor;
	struct Transform TransformOrigin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSequenceMetaData : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSequenceBurnInInitSettings : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSequenceBurnInOptions : public UObject
{
public:
	bool bUseBurnIn;
	struct SoftClassPath BurnInClass;
	class UClass* Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALevelSequenceActor : public AActor
{
public:
	struct MovieSceneSequencePlaybackSettings PlaybackSettings;
	class UClass* SequencePlayer;
	struct SoftObjectPath LevelSequence;
	struct LevelSequenceCameraSettings CameraSettings;
	class UClass* BurnInOptions;
	class UClass* BindingOverrides;
	bool bAutoPlay;
	bool bOverrideInstanceData;
	bool bReplicatePlayback;
	class UClass* DefaultInstanceData;
	class UClass* BurnInInstance;
	bool bShowBurnin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSequenceAnimSequenceLink : public UAssetUserData
{
public:
	TArray<struct LevelSequenceAnimSequenceLinkItem> AnimSequenceLinks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LevelSequenceBurnIn : public UserWidget
{
public:
	struct LevelSequencePlayerSnapshot FrameInformation;
	class UClass* LevelSequenceActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSequenceDirector : public UObject
{
public:
	class UClass* Player;
	int SubSequenceID;
	int MovieScenePlayerIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULegacyLevelSequenceDirectorBlueprint : public UBlueprint
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LevelSequencePlayer : public MovieSceneSequencePlayer
{
public:
	struct FScriptMulticastDelegate OnCameraCut;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelSequenceProjectSettings : public UDeveloperSettings
{
public:
	bool bDefaultLockEngineToDisplayRate;
	struct FString DefaultDisplayRate;
	struct FString DefaultTickResolution;
	EUpdateClockSource DefaultClockSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALevelSequenceMediaController : public AActor
{
public:
	class UClass* Sequence;
	class UClass* MediaComponent;
	float ServerStartTimeSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkControllerBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkCameraController : public ULiveLinkControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkComponentController : public UActorComponent
{
public:
	struct LiveLinkSubjectRepresentation SubjectRepresentation;
	Unknown ControllerMap;
	bool bUpdateInEditor;
	struct FScriptMulticastDelegate OnLiveLinkUpdated;
	struct ComponentReference ComponentToControl;
	bool bDisableEvaluateLiveLinkWhenSpawnable;
	bool bEvaluateLiveLink;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkComponentSettings : public UObject
{
public:
	Unknown DefaultControllerForRole;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkLightController : public ULiveLinkControllerBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkTransformController : public ULiveLinkControllerBase
{
public:
	struct LiveLinkTransformControllerData TransformData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkDebuggerBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkDebuggerSettings : public UObject
{
public:
	struct SlateColor MinBarColor;
	struct SlateColor MaxBarColor;
	float DPIScaleMultiplier;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkAnimationFrameData : public LiveLinkBaseFrameData
{
public:
	TArray<struct Transform> Transforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkSkeletonStaticData : public LiveLinkBaseStaticData
{
public:
	TArray<struct FName> BoneNames;
	TArray<int> BoneParents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubjectFrameHandle : public LiveLinkBaseBlueprintData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkBasicBlueprintData : public LiveLinkBaseBlueprintData
{
public:
	struct LiveLinkBaseStaticData StaticData;
	struct LiveLinkBaseFrameData FrameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkTransformStaticData : public LiveLinkBaseStaticData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkCameraStaticData : public LiveLinkTransformStaticData
{
public:
	bool bIsFieldOfViewSupported;
	bool bIsAspectRatioSupported;
	bool bIsFocalLengthSupported;
	bool bIsProjectionModeSupported;
	float FilmBackWidth;
	float FilmBackHeight;
	bool bIsApertureSupported;
	bool bIsFocusDistanceSupported;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkTransformFrameData : public LiveLinkBaseFrameData
{
public:
	struct Transform Transform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkCameraFrameData : public LiveLinkTransformFrameData
{
public:
	float FieldOfView;
	float AspectRatio;
	float FocalLength;
	float Aperture;
	float FocusDistance;
	ELiveLinkCameraProjectionMode ProjectionMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkCameraBlueprintData : public LiveLinkBaseBlueprintData
{
public:
	struct LiveLinkCameraStaticData StaticData;
	struct LiveLinkCameraFrameData FrameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkLightStaticData : public LiveLinkTransformStaticData
{
public:
	bool bIsTemperatureSupported;
	bool bIsIntensitySupported;
	bool bIsLightColorSupported;
	bool bIsInnerConeAngleSupported;
	bool bIsOuterConeAngleSupported;
	bool bIsAttenuationRadiusSupported;
	bool bIsSourceLenghtSupported;
	bool bIsSourceRadiusSupported;
	bool bIsSoftSourceRadiusSupported;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkLightFrameData : public LiveLinkTransformFrameData
{
public:
	float Temperature;
	float Intensity;
	struct Color LightColor;
	float InnerConeAngle;
	float OuterConeAngle;
	float AttenuationRadius;
	float SourceRadius;
	float SoftSourceRadius;
	float SourceLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkLightBlueprintData : public LiveLinkBaseBlueprintData
{
public:
	struct LiveLinkLightStaticData StaticData;
	struct LiveLinkLightFrameData FrameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkTransformBlueprintData : public LiveLinkBaseBlueprintData
{
public:
	struct LiveLinkTransformStaticData StaticData;
	struct LiveLinkTransformFrameData FrameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkFrameRate : public FrameRate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkTimeCode : public LiveLinkTimeCode_Base_DEPRECATED
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkFrameInterpolationProcessor : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkFrameTranslator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkVirtualSubject : public UObject
{
public:
	class UClass* Role;
	TArray<struct LiveLinkSubjectName> Subjects;
	TArray<class UClass*> FrameTranslators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkFramePreProcessor : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkSourceFactory : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkSourceSettings : public UObject
{
public:
	ELiveLinkSourceMode Mode;
	struct LiveLinkSourceBufferManagementSettings BufferSettings;
	struct FString ConnectionString;
	class UClass* Factory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkRole : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkBasicRole : public ULiveLinkRole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkAnimationRole : public ULiveLinkBasicRole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkTransformRole : public ULiveLinkBasicRole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkCameraRole : public ULiveLinkTransformRole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkController : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkCurveRemapSettings : public ULiveLinkSourceSettings
{
public:
	struct LiveLinkCurveConversionSettings CurveConversionSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkLightRole : public ULiveLinkTransformRole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkSubjectSettings : public UObject
{
public:
	TArray<class UClass*> PreProcessors;
	class UClass* InterpolationProcessor;
	TArray<class UClass*> Translators;
	class UClass* Role;
	struct FrameRate FrameRate;
	bool bRebroadcastSubject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneLiveLinkSectionTemplate : public MovieScenePropertySectionTemplate
{
public:
	struct LiveLinkSubjectPreset SubjectPreset;
	TArray<bool> ChannelMask;
	TArray<struct LiveLinkSubSectionData> SubSectionsData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneLiveLinkSection : public MovieSceneSection
{
public:
	struct LiveLinkSubjectPreset SubjectPreset;
	TArray<bool> ChannelMask;
	TArray<class UClass*> SubSections;
	struct FName SubjectName;
	struct LiveLinkFrameData TemplateToPush;
	struct LiveLinkRefSkeleton RefSkeleton;
	TArray<struct FName> CurveNames;
	TArray<struct MovieSceneFloatChannel> PropertyFloatChannels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneLiveLinkSubSection : public UObject
{
public:
	struct LiveLinkSubSectionData SubSectionData;
	class UClass* SubjectRole;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneLiveLinkSubSectionAnimation : public UMovieSceneLiveLinkSubSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneLiveLinkSubSectionBasicRole : public UMovieSceneLiveLinkSubSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneLiveLinkSubSectionProperties : public UMovieSceneLiveLinkSubSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneLiveLinkTrack : public MovieScenePropertyTrack
{
public:
	class UClass* TrackRole;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_LiveLinkPose : public AnimNode_Base
{
public:
	struct PoseLink InputPose;
	struct LiveLinkSubjectName LiveLinkSubjectName;
	class UClass* RetargetAsset;
	class UClass* CurrentRetargetAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkInstanceProxy : public AnimInstanceProxy
{
public:
	struct AnimNode_LiveLinkPose PoseNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkRetargetAsset : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkBasicFrameInterpolationProcessor : public ULiveLinkFrameInterpolationProcessor
{
public:
	bool bInterpolatePropertyValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkAnimationFrameInterpolationProcessor : public ULiveLinkBasicFrameInterpolationProcessor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkAnimationRoleToTransform : public ULiveLinkFrameTranslator
{
public:
	struct FName BoneName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkAnimationVirtualSubject : public ULiveLinkVirtualSubject
{
public:
	bool bAppendSubjectNameToBones;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkTransformAxisSwitchPreProcessor : public ULiveLinkFramePreProcessor
{
public:
	ELiveLinkAxis FrontAxis;
	ELiveLinkAxis RightAxis;
	ELiveLinkAxis UpAxis;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkAnimationAxisSwitchPreProcessor : public ULiveLinkTransformAxisSwitchPreProcessor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkBlueprintVirtualSubject : public ULiveLinkVirtualSubject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnLiveLinkUpdated;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkDrivenComponent : public UActorComponent
{
public:
	struct LiveLinkSubjectName SubjectName;
	struct FName ActorTransformBone;
	bool bModifyActorTransform;
	bool bSetRelativeLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkInstance : public UAnimInstance
{
public:
	class UClass* CurrentRetargetAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkMessageBusFinder : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkMessageBusSourceFactory : public ULiveLinkSourceFactory
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkMessageBusSourceSettings : public ULiveLinkSourceSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkPreset : public UObject
{
public:
	TArray<struct LiveLinkSourcePreset> Sources;
	TArray<struct LiveLinkSubjectPreset> Subjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkRemapAsset : public ULiveLinkRetargetAsset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkSettings : public UObject
{
public:
	TArray<struct LiveLinkRoleProjectSetting> DefaultRoleSettings;
	class UClass* FrameInterpolationProcessor;
	struct TSoftClassPtr<UObject> DefaultLiveLinkPreset;
	struct DirectoryPath PresetSaveDir;
	float ClockOffsetCorrectionStep;
	ELiveLinkSourceMode DefaultMessageBusSourceMode;
	double MessageBusPingRequestFrequency;
	double MessageBusHeartbeatFrequency;
	double MessageBusHeartbeatTimeout;
	double MessageBusTimeBeforeRemovingInactiveSource;
	double TimeWithoutFrameToBeConsiderAsInvalid;
	struct LinearColor ValidColor;
	struct LinearColor InvalidColor;
	byte TextSizeSource;
	byte TextSizeSubject;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkTimecodeProvider : public UTimecodeProvider
{
public:
	struct LiveLinkSubjectKey SubjectKey;
	ELiveLinkTimecodeProviderEvaluationType Evaluation;
	bool bOverrideFrameRate;
	struct FrameRate OverrideFrameRate;
	int BufferSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LiveLinkTimeSynchronizationSource : public TimeSynchronizationSource
{
public:
	struct LiveLinkSubjectName SubjectName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkVirtualSubjectSourceSettings : public ULiveLinkSourceSettings
{
public:
	struct FName SourceName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamAnimationChannel : public UChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamAnimationDataHandler : public UObject
{
public:
	class UClass* OwningSubsystem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamAnimationSettings : public UDeveloperSettings
{
public:
	TArray<struct FName> HandleNames;
	TArray<struct SoftClassPath> ConfiguredDataHandlers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamAnimationSubsystem : public UGameInstanceSubsystem
{
public:
	bool bEnabled;
	TArray<class UClass*> ConfiguredDataHandlers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamVoiceChannel : public UChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveStreamVoiceSubsystem : public UGameInstanceSubsystem
{
public:
	struct VoiceSettings PlaybackSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LobbyPlayerStateActorInfo : public FastArraySerializerItem
{
public:
	class UClass* LobbyPlayerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LobbyPlayerStateInfoArray : public FastArraySerializer
{
public:
	TArray<struct LobbyPlayerStateActorInfo> Players;
	class UClass* ParentState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LobbyBeaconClient : public OnlineBeaconClient
{
public:
	class UClass* LobbyState;
	class UClass* PlayerState;
	ELobbyBeaconJoinState LobbyJoinServerState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LobbyBeaconHost : public OnlineBeaconHostObject
{
public:
	struct TSoftClassPtr<UObject> LobbyStateClass;
	class UClass* LobbyState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALobbyBeaconPlayerState : public AInfo
{
public:
	struct FText DisplayName;
	struct UniqueNetIdRepl UniqueId;
	struct UniqueNetIdRepl PartyOwnerUniqueId;
	bool bInLobby;
	class UClass* ClientActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ALobbyBeaconState : public AInfo
{
public:
	int MaxPlayers;
	class UClass* LobbyBeaconPlayerStateClass;
	bool bLobbyStarted;
	float WaitForPlayersTimeRemaining;
	struct LobbyPlayerStateInfoArray Players;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalNotificationsSettings : public UDeveloperSettings
{
public:
	struct SoftObjectPath StringTableLocalNotifications;

	// NOTE: Functions are not included into usmaps sadly :(
};

class LSALiveLinkFrameData : public LiveLinkAnimationFrameData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class LSALiveLinkStaticData : public LiveLinkSkeletonStaticData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULSALiveLinkDataHandler : public ULiveStreamAnimationDataHandler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULSALiveLinkFrameTranslator : public ULiveLinkFrameTranslator
{
public:
	Unknown TranslationProfiles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULSALiveLinkRole : public ULiveLinkBasicRole
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULSALiveLinkSettings : public UDeveloperSettings
{
public:
	struct TSoftClassPtr<UObject> FrameTranslator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULiveLinkTestSkelMeshTrackerComponent : public UActorComponent
{
public:
	struct FName TranslationProfile;
	struct ComponentReference SkelMeshComp;
	Unknown WeakSkelMeshComp;
	TArray<struct BoneReference> BonesToTrack;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMannequinAnalyticsComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortRootMotionSource_Mantis : public RootMotionSource
{
public:
	float CurrentTechniqueTime;
	class UClass* TechniqueMontage;
	struct FortMantisRootMotionWarpInfo WarpInfo;
	struct Vector LatestRepMovementLocation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMantisTargetData : public GameplayAbilityTargetData
{
public:
	struct FortMantisRootMotionWarpInfo TechniqueWarpInfo;
	int TechniqueDataIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAbilityTask_ApplyRootMotionMantisForce : public AbilityTask_ApplyRootMotion_Base
{
public:
	struct FScriptMulticastDelegate OnFinish;
	float Duration;
	class UClass* TechniqueMontage;
	struct FortMantisRootMotionWarpInfo WarpInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotify_Mantis : public UAnimNotify
{
public:
	EFortMantisNotifyEvent MantisNotifyEvent;
	EFortMantisBranchRule MantisBranchRule;
	EFortMantisBranchPath MantisBranchPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAnimNotifyState_Mantis : public UAnimNotifyState
{
public:
	EFortMantisNotifyWindow MantisNotifyWindow;
	struct GameplayTag MantisNotifyTag;
	EFortMantisNotifyRotationWarpRateRule RotationRateWarpRule;
	bool bWarpRotation;
	bool bWarpTranslation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayAbility_Mantis : public FortGameplayAbility
{
public:
	bool bAllowRootMotionWarping;
	class UClass* MantisPawnComponent;
	class UClass* MontageTask;
	class UClass* RootMotionTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortItemLayerAnimInstance_UncleBrolly : public UFortItemLayerAnimInstance
{
public:
	struct CachedAnimStateArray UmbrellaGliderOpenStateDataArray;
	struct Vector WrapTranslation;
	struct Rotator WrapRotation;
	struct Rotator RootRotationOffset;
	float LandingPredictedTimer;
	bool bShouldUpdateYawCorrection;
	bool bWasAcceleratingBeforeDodge;
	float UncleBrollyDeployCurveValue;
	float DashChargeTier;
	float DashChargeAdditivePlayrate;
	bool bIsUmbrellaFailing;
	bool bIsMeleeGuarding;
	bool bIsSprinting;
	bool bIsInAir;
	bool bIsLandingPredicted;
	bool bIsJumping;
	bool bIsDodging;
	bool bIsDodgingEast;
	bool bIsDodgingSouth;
	bool bIsDodgingWest;
	bool bIsDashing;
	bool bIsDashCharging;
	bool bIsDashPredictingEnd;
	bool bIsChargeTier1;
	bool bIsChargeTier2;
	bool bIsChargeTier3;
	bool bMeleeGuardingOrUmbrellaFailing;
	bool bTransition_Default_to_GuardLoop;
	bool bTransition_Default_to_GuardIntro;
	bool bTransition_GuardIntro_to_Default;
	bool bUpperBodyShouldPassThrough;
	bool bUmbrellaGliderIsOpen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMantisData : public UDataAsset
{
public:
	bool bDetachCharacterRotationFromCamera;
	float ReattachCharacterRotationBlendTime;
	float ReattachCharacterRotationBlendExponent;
	float WindupCharacterRotationRate;
	float ExecutionCharacterRotationRate;
	float RecoveryCharacterRotationRate;
	bool bShowTargetHealthBar;
	class UClass* TechniqueAbility;
	TArray<struct FortGameplayEffectContainer> TechniqueAdditionEffectContainers;
	TArray<struct FortMantisTechniqueData> Techniques;
	TArray<struct FortMantisTechniqueBranch> Branches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMantisPawnComponent : public PawnComponent
{
public:
	Unknown MontageDataMap;
	class UClass* MantisData;
	class UClass* Weapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortMantisWeaponComponent : public FortWeaponComponent
{
public:
	class UClass* MantisData;
	class UClass* MantisPawnComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUncleBrollyWeaponAnimInstance : public UAnimInstance
{
public:
	class UClass* UncleBrollyItemLayer;
	struct Rotator UmbrellaRotation;
	float UmbrellaSpinSpeed;
	float BlockDeployEndPlayrate;
	float BlockDeployEndStartPosition;
	bool bIsDodging;
	bool bIsPlayingMeleeAnim;
	bool bIsUmbrellaFailing;
	bool bIsMeleeGuarding;
	bool bIsInAir;
	bool bIsDashing;
	bool bIsSprinting;
	bool bIsPredictingEnd;
	bool bIsDashCharging;
	bool bIsDashPredictingEnd;
	bool bInAirAndMeleeGuarding;
	bool bTransition_Default_to_DeployStart;
	bool bTransition_DeployStart_to_Default;
	bool bTransition_Fail_to_FailToDeploy;
	bool bTransition_FailLoop_to_DeployEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialShaderQualitySettings : public UObject
{
public:
	Unknown ForwardSettingMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UShaderPlatformQualitySettings : public UObject
{
public:
	struct MaterialQualityOverrides QualityOverrides;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ClientUrlContext : public BaseUrlContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class DedicatedServerUrlContext : public BaseUrlContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PublicUrlContext : public BaseUrlContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ProfileUpdate : public ProfileUpdateSingle
{
public:
	int ResponseVersion;
	struct DateTime ServerTime;
	TArray<struct ProfileUpdateSingle> MultiUpdate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class McpItemIdAndQuantity : public McpLootEntry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMcpItemAware : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMcpItemDefinitionBase : public UPrimaryDataAsset
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMcpProfile : public UObject
{
public:
	bool AllowSubscriptionToNotificationsService;
	struct FString DebugName;
	bool bProfileLockOperationPending;
	bool bProfileUnlockOperationPending;
	bool bEnableMocks;
	class UClass* ProfileGroup;
	struct FString ProfileId;
	int64_t ProfileRevision;
	int FullProfileQueryQueued;
	bool bProfileWriteLocked;
	struct DateTime ProfileWriteLockExpireTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMcpProfileGroup : public UObject
{
public:
	int DelayMcpResults;
	int WeeklyIntervalStartDay;
	TArray<struct ProfileEntry> ProfileList;
	struct FString PlayerName;
	bool bIsServer;
	struct FString ProfileNotificationsStompTopic;
	struct FString LastMcpVersion;
	struct FString LastContentVersion;
	struct FString LastMinBuild;
	struct Timespan LocalTimeOffset;
	struct FString LockCode;
	TArray<class UClass*> LockedProfiles;
	struct FString LockedProfilesString;
	int ProfileWriteLockTimeoutSecs;
	bool bSubscribedToNotifications;
	struct FString ApplyStashEndPoint;
	bool bSendProfileCommandRevisions;
	bool bAsyncParseProfileUpdates;
	int MaxChangesToForwardInUpdate;
	int NewItemLogThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMcpProfileManager : public UObject
{
public:
	TArray<struct ProfileGroupEntry> ServerProfileGroups;
	TArray<struct ProfileGroupEntry> ClientProfileGroups;
	int MaxItemsProcessedInInitialUpdatesPerTick;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaSource : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBaseMediaSource : public UMediaSource
{
public:
	struct FName PlayerName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStreamMediaSource : public UBaseMediaSource
{
public:
	struct FString StreamUrl;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFileMediaSource : public UBaseMediaSource
{
public:
	struct FString FilePath;
	bool PrecacheFile;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaComponent : public UActorComponent
{
public:
	class UClass* MediaTexture;
	class UClass* MediaPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaTimeStampInfo : public UObject
{
public:
	struct Timespan Time;
	int64_t SequenceIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaPlayer : public UObject
{
public:
	struct FScriptMulticastDelegate OnEndReached;
	struct FScriptMulticastDelegate OnMediaClosed;
	struct FScriptMulticastDelegate OnMediaOpened;
	struct FScriptMulticastDelegate OnMediaOpenFailed;
	struct FScriptMulticastDelegate OnPlaybackResumed;
	struct FScriptMulticastDelegate OnPlaybackSuspended;
	struct FScriptMulticastDelegate OnSeekCompleted;
	struct FScriptMulticastDelegate OnTracksChanged;
	struct Timespan CacheAhead;
	struct Timespan CacheBehind;
	struct Timespan CacheBehindGame;
	bool NativeAudioOut;
	bool PlayOnOpen;
	bool Shuffle;
	bool Loop;
	class UClass* Playlist;
	int PlaylistIndex;
	struct Timespan TimeDelay;
	float HorizontalFieldOfView;
	float VerticalFieldOfView;
	struct Rotator ViewRotation;
	struct Guid PlayerGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaPlaylist : public UObject
{
public:
	TArray<class UClass*> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MediaSoundComponent : public SynthComponent
{
public:
	EMediaSoundChannels Channels;
	bool DynamicRateAdjustment;
	float RateAdjustmentFactor;
	struct FloatRange RateAdjustmentRange;
	class UClass* MediaPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaTexture : public UTexture
{
public:
	ETextureAddress AddressX;
	ETextureAddress AddressY;
	bool AutoClear;
	struct LinearColor ClearColor;
	bool EnableGenMips;
	byte NumMips;
	bool NewStyleOutput;
	EMediaTextureOutputFormat OutputFormat;
	float CurrentAspectRatio;
	EMediaTextureOrientation CurrentOrientation;
	class UClass* MediaPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlatformMediaSource : public UMediaSource
{
public:
	class UClass* MediaSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimeSynchronizableMediaSource : public UBaseMediaSource
{
public:
	bool bUseTimeSynchronization;
	int FrameDelay;
	double TimeDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMediaMovieAssets : public UObject
{
public:
	class UClass* MediaPlayer;
	class UClass* MediaSource;
	class UClass* MediaTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Melt : public AFortAthenaMutator_GameModeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeltWidgetBase : public LTMWidgetBase
{
public:
	class UClass* CachedFillMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PolygonGroupID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PolygonID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class VertexID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class VertexInstanceID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class EdgeID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class TriangleID : public ElementID
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshDescription : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshDescriptionBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshBeaconClient : public OnlineBeaconClient
{
public:
	bool bConnectedToRoot;
	struct DateTime MeshPingTime;
	TArray<struct FString> ParentIds;
	struct FString ClientId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshBeaconHost : public OnlineBeaconHost
{
public:
	int MaxConnections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshBeaconHostObject : public OnlineBeaconHostObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshConnection : public IpConnection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshNetDriver : public IpNetDriver
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshNetworkComponent : public UActorComponent
{
public:
	EMeshNetworkRelevancy MeshRelevancy;
	Unknown AggregationTimeouts;
	Unknown NoAggregationFunctions;
	Unknown NoAggregationParameters;
	Unknown AggregatedFunctions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshNetworkSubsystem : public UGameInstanceSubsystem
{
public:
	struct FScriptMulticastDelegate OnMeshNodeTypeChanged;
	struct FScriptMulticastDelegate OnConnectedToRootChanged;
	struct FScriptMulticastDelegate OnGameServerNodeTypeChanged;
	struct FScriptMulticastDelegate OnMeshMetaDataUpdated;
	struct FScriptMulticastDelegate OnMeshPlayerRequested;
	EMeshNetworkNodeType NodeType;
	EMeshNetworkNodeType GameServerNodeType;
	bool bConnectedToRoot;
	bool bMetadataReceived;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshReplicationGraphNode_AlwaysRelevant_ForConnection : public ReplicationGraphNode_ActorList
{
public:
	TArray<struct AlwaysRelevantActorInfo> PastRelevantActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshReplicationGraphConnection : public NetReplicationGraphConnection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MeshReplicationGraph : public ReplicationGraph
{
public:
	class UClass* AlwaysRelevantNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMIDIDeviceController : public UObject
{
public:
	struct FScriptMulticastDelegate OnMIDIEvent;
	int DeviceID;
	struct FString DeviceName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMIDIDeviceInputController : public UObject
{
public:
	struct FScriptMulticastDelegate OnMIDINoteOn;
	struct FScriptMulticastDelegate OnMIDINoteOff;
	struct FScriptMulticastDelegate OnMIDIPitchBend;
	struct FScriptMulticastDelegate OnMIDIAftertouch;
	struct FScriptMulticastDelegate OnMIDIControlChange;
	struct FScriptMulticastDelegate OnMIDIProgramChange;
	struct FScriptMulticastDelegate OnMIDIChannelAftertouch;
	int DeviceID;
	struct FString DeviceName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMIDIDeviceManager : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMIDIDeviceOutputController : public UObject
{
public:
	int DeviceID;
	struct FString DeviceName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFrameworkComponent : public UActorComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameStateComponent : public UGameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UControllerComponent : public UGameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGameFrameworkComponentManager : public UGameInstanceSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPawnComponent : public UGameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayerStateComponent : public UGameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortBaseAnimInstance_CageSaddle : public UFortBaseAnimInstance
{
public:
	class UClass* AsFortSphericalVehicle;
	bool bIsOnGround;
	float RemappedPitch;
	float CurrentRoll;
	float LockedRoll;
	bool bHeadShouldBend;
	bool bFootShouldBend;
	struct Vector BodyGroundOffset;
	struct Vector2D MinClampPitchInRange;
	struct Vector2D MinClampPitchOutRange;
	struct Vector2D MaxClampPitchInRange;
	struct Vector2D MaxClampPitchOutRange;
	float HeadAlphaInterpSpeed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortCabbageIglooVehicle : public AFortOctopusVehicle
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ReactorGradeGameplayCue_ChargeUp : public FortGameplayCueNotify_Loop
{
public:
	class UClass* Pawn;
	struct Vector FoundEndPoint;
	struct ScalableFloat MinHitDistance;
	struct ScalableFloat HitObjectsLimit;
	ECollisionChannel TraceChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AvocadoEaterHealthBarWidget : public FortHUDElementWidget
{
public:
	struct EventMessageTag AttachedMessageTag;
	struct EventMessageTag DetachedMessageTag;
	struct EventMessageTag SetMarkerPositionMessageTag;
	struct EventMessageTag TargetDamagedMessageTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGravyGoblinReticleExtensionWidget : public FortWeaponReticleExtensionWidgetBase
{
public:
	struct EventMessageTag ItemActivatableTag;
	struct EventMessageTag ItemInactivatableTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortLlamaRoasterReticleExtensionWidget : public FortWeaponReticleExtensionWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortPaddleGingerReticleExtensionWidget : public FortWeaponReticleExtensionWidgetBase
{
public:
	struct EventMessageTag PropIndexChangedTag;
	struct EventMessageTag PropActivatedTag;
	class UClass* Keybind_ActivateAction;
	class UClass* Keybind_CycleCategoryAction;
	class UClass* Keybind_CyclePropAction;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortReactorGradeReticleExtensionWidget : public FortWeaponReticleExtensionWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMotoSynthPreset : public UObject
{
public:
	struct MotoSynthRuntimeSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMotoSynthSource : public UObject
{
public:
	bool bConvertTo8Bit;
	float DownSampleFactor;
	struct RuntimeFloatCurve RPMCurve;
	TArray<float> SourceData;
	TArray<int16_t> SourceDataPCM;
	int SourceSampleRate;
	TArray<struct GrainTableEntry> GrainTable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthComponentMoto : public SynthComponent
{
public:
	class UClass* MotoSynthPreset;
	float RPM;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMoviePlayerSettings : public UObject
{
public:
	bool bWaitForMoviesToComplete;
	bool bMoviesAreSkippable;
	TArray<struct FString> StartupMovies;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCaptureProtocolBase : public UObject
{
public:
	EMovieSceneCaptureProtocolState State;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneAudioCaptureProtocolBase : public UMovieSceneCaptureProtocolBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNullAudioCaptureProtocol : public UMovieSceneAudioCaptureProtocolBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMasterAudioSubmixCaptureProtocol : public UMovieSceneAudioCaptureProtocolBase
{
public:
	struct FString Filename;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneImageCaptureProtocolBase : public UMovieSceneCaptureProtocolBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCompositionGraphCaptureProtocol : public UMovieSceneImageCaptureProtocolBase
{
public:
	struct CompositionGraphCapturePasses IncludeRenderPasses;
	bool bCaptureFramesInHDR;
	int HDRCompressionQuality;
	EHDRCaptureGamut CaptureGamut;
	struct SoftObjectPath PostProcessingMaterial;
	bool bDisableScreenPercentage;
	class UClass* PostProcessingMaterialPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFrameGrabberProtocol : public UMovieSceneImageCaptureProtocolBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageSequenceProtocol : public UFrameGrabberProtocol
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCompressedImageSequenceProtocol : public UImageSequenceProtocol
{
public:
	int CompressionQuality;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageSequenceProtocol_BMP : public UImageSequenceProtocol
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageSequenceProtocol_PNG : public UCompressedImageSequenceProtocol
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageSequenceProtocol_JPG : public UCompressedImageSequenceProtocol
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImageSequenceProtocol_EXR : public UImageSequenceProtocol
{
public:
	bool bCompressed;
	EHDRCaptureGamut CaptureGamut;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCaptureInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCapture : public UObject
{
public:
	struct SoftClassPath ImageCaptureProtocolType;
	struct SoftClassPath AudioCaptureProtocolType;
	class UClass* ImageCaptureProtocol;
	class UClass* AudioCaptureProtocol;
	struct MovieSceneCaptureSettings Settings;
	bool bUseSeparateProcess;
	bool bCloseEditorWhenCaptureStarts;
	struct FString AdditionalCommandLineArguments;
	struct FString InheritedCommandLineArguments;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULevelCapture : public UMovieSceneCapture
{
public:
	bool bAutoStartCapture;
	struct Guid PrerequisiteActorId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCaptureEnvironment : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserDefinedCaptureProtocol : public UMovieSceneImageCaptureProtocolBase
{
public:
	class UClass* World;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserDefinedImageCaptureProtocol : public UUserDefinedCaptureProtocol
{
public:
	EDesiredImageFormat Format;
	bool bEnableCompression;
	int CompressionQuality;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVideoCaptureProtocol : public UFrameGrabberProtocol
{
public:
	bool bUseCompression;
	float CompressionQuality;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneActorReferenceData : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> KeyTimes;
	struct MovieSceneActorReferenceKey DefaultValue;
	TArray<struct MovieSceneActorReferenceKey> KeyValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceTriggerChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> KeyTimes;
	TArray<struct MovieSceneCameraShakeSourceTrigger> KeyValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventSectionData : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> Times;
	TArray<struct EventPayload> KeyValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> KeyTimes;
	TArray<struct MovieSceneEvent> KeyValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParticleChannel : public MovieSceneByteChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneStringChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> Times;
	TArray<struct FString> Values;
	struct FString DefaultValue;
	bool bHasDefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParameterSectionTemplate : public MovieSceneEvalTemplate
{
public:
	TArray<struct ScalarParameterNameAndCurve> Scalars;
	TArray<struct BoolParameterNameAndCurve> Bools;
	TArray<struct Vector2DParameterNameAndCurves> Vector2Ds;
	TArray<struct VectorParameterNameAndCurves> Vectors;
	TArray<struct ColorParameterNameAndCurves> Colors;
	TArray<struct TransformParameterNameAndCurves> Transforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DPathSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneObjectBindingID PathBindingID;
	struct MovieSceneFloatChannel TimingCurve;
	EMovieScene3DPathSection_Axis FrontAxisEnum;
	EMovieScene3DPathSection_Axis UpAxisEnum;
	bool bFollow;
	bool bReverse;
	bool bForceUpright;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DTransformKeyStruct : public MovieSceneKeyStruct
{
public:
	struct Vector Location;
	struct Rotator Rotation;
	struct Vector Scale;
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DScaleKeyStruct : public MovieSceneKeyStruct
{
public:
	struct Vector Scale;
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DRotationKeyStruct : public MovieSceneKeyStruct
{
public:
	struct Rotator Rotation;
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DLocationKeyStruct : public MovieSceneKeyStruct
{
public:
	struct Vector Location;
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneActorReferenceSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieScenePropertySectionData PropertyData;
	struct MovieSceneActorReferenceData ActorReferenceData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneAudioSectionTemplate : public MovieSceneEvalTemplate
{
public:
	class UClass* AudioSection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraAnimSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneCameraAnimSectionData SourceData;
	struct FrameNumber SectionStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceShakeSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneCameraShakeSectionData SourceData;
	struct FrameNumber SectionStartTime;
	struct FrameNumber SectionEndTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceTriggerSectionTemplate : public MovieSceneEvalTemplate
{
public:
	TArray<struct FrameNumber> TriggerTimes;
	TArray<struct MovieSceneCameraShakeSourceTrigger> TriggerValues;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneCameraShakeSectionData SourceData;
	struct FrameNumber SectionStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneColorKeyStruct : public MovieSceneKeyStruct
{
public:
	struct LinearColor Color;
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneColorSectionTemplate : public MovieScenePropertySectionTemplate
{
public:
	struct MovieSceneFloatChannel Curves;
	EMovieSceneBlendType BlendType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneEventSectionData EventData;
	bool bFireEventsWhenForwards;
	bool bFireEventsWhenBackwards;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFadeSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneFloatChannel FadeCurve;
	struct LinearColor FadeColor;
	bool bFadeAudio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMaterialParameterCollectionTemplate : public MovieSceneParameterSectionTemplate
{
public:
	class UClass* MPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneObjectPropertyTemplate : public MovieScenePropertySectionTemplate
{
public:
	struct MovieSceneObjectPathChannel ObjectChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneComponentMaterialSectionTemplate : public MovieSceneParameterSectionTemplate
{
public:
	int MaterialIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParticleParameterSectionTemplate : public MovieSceneParameterSectionTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParticleSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneParticleChannel ParticleKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePrimitiveMaterialTemplate : public MovieSceneEvalTemplate
{
public:
	int MaterialIndex;
	struct MovieSceneObjectPathChannel MaterialChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneStringPropertySectionTemplate : public MovieScenePropertySectionTemplate
{
public:
	struct MovieSceneStringChannel StringCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneBoolPropertySectionTemplate : public MovieScenePropertySectionTemplate
{
public:
	struct MovieSceneBoolChannel BoolCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSkeletalAnimationSectionTemplateParameters : public MovieSceneSkeletalAnimationParams
{
public:
	struct FrameNumber SectionStartTime;
	struct FrameNumber SectionEndTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSkeletalAnimationSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneSkeletalAnimationSectionTemplateParameters Params;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSlomoSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieSceneFloatChannel SlomoCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVectorKeyStructBase : public MovieSceneKeyStruct
{
public:
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVector4KeyStruct : public MovieSceneVectorKeyStructBase
{
public:
	struct Vector4 Vector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVectorKeyStruct : public MovieSceneVectorKeyStructBase
{
public:
	struct Vector Vector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVector2DKeyStruct : public MovieSceneVectorKeyStructBase
{
public:
	struct Vector2D Vector;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVisibilitySectionTemplate : public MovieSceneBoolPropertySectionTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCameraShakeEvaluator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePropertyTrack : public MovieSceneNameableTrack
{
public:
	class UClass* SectionToKey;
	struct MovieScenePropertyBinding PropertyBinding;
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParameterSection : public MovieSceneSection
{
public:
	TArray<struct BoolParameterNameAndCurve> BoolParameterNamesAndCurves;
	TArray<struct ScalarParameterNameAndCurve> ScalarParameterNamesAndCurves;
	TArray<struct Vector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves;
	TArray<struct VectorParameterNameAndCurves> VectorParameterNamesAndCurves;
	TArray<struct ColorParameterNameAndCurves> ColorParameterNamesAndCurves;
	TArray<struct TransformParameterNameAndCurves> TransformParameterNamesAndCurves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ByteChannelEvaluatorSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FloatChannelEvaluatorSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTransformOrigin : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class IntegerChannelEvaluatorSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DConstraintSection : public MovieSceneSection
{
public:
	struct Guid ConstraintId;
	struct MovieSceneObjectBindingID ConstraintBindingID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DAttachSection : public MovieScene3DConstraintSection
{
public:
	struct FName AttachSocketName;
	struct FName AttachComponentName;
	EAttachmentRule AttachmentLocationRule;
	EAttachmentRule AttachmentRotationRule;
	EAttachmentRule AttachmentScaleRule;
	EDetachmentRule DetachmentLocationRule;
	EDetachmentRule DetachmentRotationRule;
	EDetachmentRule DetachmentScaleRule;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DConstraintTrack : public MovieSceneTrack
{
public:
	TArray<class UClass*> ConstraintSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DAttachTrack : public MovieScene3DConstraintTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DPathSection : public MovieScene3DConstraintSection
{
public:
	struct MovieSceneFloatChannel TimingCurve;
	EMovieScene3DPathSection_Axis FrontAxisEnum;
	EMovieScene3DPathSection_Axis UpAxisEnum;
	bool bFollow;
	bool bReverse;
	bool bForceUpright;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DPathTrack : public MovieScene3DConstraintTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePropertySystem : public MovieSceneEntitySystem
{
public:
	class UClass* InstantiatorSystem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DTransformPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DTransformSection : public MovieSceneSection
{
public:
	struct MovieSceneTransformMask TransformMask;
	struct MovieSceneFloatChannel Translation;
	struct MovieSceneFloatChannel Rotation;
	struct MovieSceneFloatChannel Scale;
	struct MovieSceneFloatChannel ManualWeight;
	bool bUseQuaternionInterpolation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene3DTransformTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneActorReferenceSection : public MovieSceneSection
{
public:
	struct MovieSceneActorReferenceData ActorReferenceData;
	struct IntegralCurve ActorGuidIndexCurve;
	TArray<struct FString> ActorGuidStrings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneActorReferenceTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneAudioSection : public MovieSceneSection
{
public:
	class UClass* Sound;
	struct FrameNumber StartFrameOffset;
	float StartOffset;
	float AudioStartTime;
	float AudioDilationFactor;
	float AudioVolume;
	struct MovieSceneFloatChannel SoundVolume;
	struct MovieSceneFloatChannel PitchMultiplier;
	struct MovieSceneActorReferenceData AttachActorData;
	bool bLooping;
	bool bSuppressSubtitles;
	bool bOverrideAttenuation;
	class UClass* AttenuationSettings;
	struct FDelegate OnQueueSubtitles;
	struct FScriptMulticastDelegate OnAudioFinished;
	struct FScriptMulticastDelegate OnAudioPlaybackPercent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneAudioTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> AudioSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneBaseValueEvaluatorSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneBoolPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneBoolTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneBytePropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneByteSection : public MovieSceneSection
{
public:
	struct MovieSceneByteChannel ByteCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneByteTrack : public MovieScenePropertyTrack
{
public:
	class UClass* Enum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraAnimSection : public MovieSceneSection
{
public:
	struct MovieSceneCameraAnimSectionData AnimData;
	class UClass* CameraAnim;
	float PlayRate;
	float PlayScale;
	float BlendInTime;
	float BlendOutTime;
	bool bLooping;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraAnimTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> CameraAnimSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraCutSection : public MovieSceneSection
{
public:
	bool bLockPreviousCamera;
	struct Guid CameraGuid;
	struct MovieSceneObjectBindingID CameraBindingID;
	struct Transform InitialCameraCutTransform;
	bool bHasInitialCameraCutTransform;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraCutTrack : public MovieSceneNameableTrack
{
public:
	bool bCanBlend;
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraCutTrackInstance : public MovieSceneTrackInstance
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSection : public MovieSceneSection
{
public:
	struct MovieSceneCameraShakeSectionData ShakeData;
	class UClass* ShakeClass;
	float PlayScale;
	ECameraShakePlaySpace Playspace;
	struct Rotator UserDefinedPlaySpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceShakeSection : public MovieSceneSection
{
public:
	struct MovieSceneCameraShakeSectionData ShakeData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceShakeTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> CameraShakeSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceTriggerSection : public MovieSceneSection
{
public:
	struct MovieSceneCameraShakeSourceTriggerChannel Channel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeSourceTriggerTrack : public MovieSceneTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCameraShakeTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> CameraShakeSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCinematicShotSection : public MovieSceneSubSection
{
public:
	struct FString ShotDisplayName;
	struct FText DisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneCinematicShotTrack : public MovieSceneSubTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneColorPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneColorSection : public MovieSceneSection
{
public:
	struct MovieSceneFloatChannel RedCurve;
	struct MovieSceneFloatChannel GreenCurve;
	struct MovieSceneFloatChannel BlueCurve;
	struct MovieSceneFloatChannel AlphaCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneColorTrack : public MovieScenePropertyTrack
{
public:
	bool bIsSlateColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneComponentAttachmentInvalidatorSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneComponentAttachmentSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneComponentMobilitySystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneComponentTransformSystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneDeferredComponentMovementSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEnumPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEnumSection : public MovieSceneSection
{
public:
	struct MovieSceneByteChannel EnumCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEnumTrack : public MovieScenePropertyTrack
{
public:
	class UClass* Enum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEulerTransformPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEulerTransformTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventSectionBase : public MovieSceneSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventRepeaterSection : public MovieSceneEventSectionBase
{
public:
	struct MovieSceneEvent Event;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventSection : public MovieSceneSection
{
public:
	struct NameCurve Events;
	struct MovieSceneEventSectionData EventData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePreSpawnEventSystem : public MovieSceneEventSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePostSpawnEventSystem : public MovieSceneEventSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePostEvalEventSystem : public MovieSceneEventSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventTrack : public MovieSceneNameableTrack
{
public:
	bool bFireEventsWhenForwards;
	bool bFireEventsWhenBackwards;
	EFireEventsAtPosition EventPosition;
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEventTriggerSection : public MovieSceneEventSectionBase
{
public:
	struct MovieSceneEventChannel EventChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFadeSection : public MovieSceneSection
{
public:
	struct MovieSceneFloatChannel FloatCurve;
	struct LinearColor FadeColor;
	bool bFadeAudio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFloatTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFadeTrack : public MovieSceneFloatTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFloatPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFloatSection : public MovieSceneSection
{
public:
	struct MovieSceneFloatChannel FloatCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneHierarchicalBiasSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneInitialValueSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneIntegerPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneIntegerSection : public MovieSceneSection
{
public:
	struct MovieSceneIntegerChannel IntegerCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneIntegerTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneInterrogatedPropertyInstantiatorSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneLevelVisibilitySection : public MovieSceneSection
{
public:
	ELevelVisibility Visibility;
	TArray<struct FName> LevelNames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneLevelVisibilitySystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneLevelVisibilityTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMaterialTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMaterialParameterCollectionTrack : public MovieSceneMaterialTrack
{
public:
	class UClass* MPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneComponentMaterialTrack : public MovieSceneMaterialTrack
{
public:
	int MaterialIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMotionVectorSimulationSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneObjectPropertySection : public MovieSceneSection
{
public:
	struct MovieSceneObjectPathChannel ObjectChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneObjectPropertyTrack : public MovieScenePropertyTrack
{
public:
	class UClass* PropertyClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParticleParameterTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParticleSection : public MovieSceneSection
{
public:
	struct MovieSceneParticleChannel ParticleKeys;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneParticleTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> ParticleSections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePiecewiseBoolBlenderSystem : public MovieSceneBlenderSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePiecewiseByteBlenderSystem : public MovieSceneBlenderSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePiecewiseEnumBlenderSystem : public MovieSceneBlenderSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePiecewiseFloatBlenderSystem : public MovieSceneBlenderSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePiecewiseIntegerBlenderSystem : public MovieSceneBlenderSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePrimitiveMaterialSection : public MovieSceneSection
{
public:
	struct MovieSceneObjectPathChannel MaterialChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePrimitiveMaterialTrack : public MovieScenePropertyTrack
{
public:
	int MaterialIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePropertyInstantiatorSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneQuaternionInterpolationRotationSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSkeletalAnimationSection : public MovieSceneSection
{
public:
	struct MovieSceneSkeletalAnimationParams Params;
	class UClass* AnimSequence;
	class UClass* Animation;
	float StartOffset;
	float EndOffset;
	float PlayRate;
	bool bReverse;
	struct FName SlotName;
	struct Vector StartLocationOffset;
	struct Rotator StartRotationOffset;
	bool bMatchWithPrevious;
	struct FName MatchedBoneName;
	struct Vector MatchedLocationOffset;
	struct Rotator MatchedRotationOffset;
	bool bMatchTranslation;
	bool bMatchIncludeZHeight;
	bool bMatchRotationYaw;
	bool bMatchRotationPitch;
	bool bMatchRotationRoll;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSkeletalAnimationTrack : public MovieSceneNameableTrack
{
public:
	TArray<class UClass*> AnimationSections;
	bool bUseLegacySectionIndexBlend;
	struct MovieSceneSkeletalAnimRootMotionTrackParams RootMotionParams;
	bool bBlendFirstChildOfRoot;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSlomoSection : public MovieSceneSection
{
public:
	struct MovieSceneFloatChannel FloatCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneSlomoTrack : public MovieSceneFloatTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneStringSection : public MovieSceneSection
{
public:
	struct MovieSceneStringChannel StringCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneStringTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneTransformOriginSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneTransformTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVectorPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVectorSection : public MovieSceneSection
{
public:
	struct MovieSceneFloatChannel Curves;
	int ChannelsUsed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVectorTrack : public MovieScenePropertyTrack
{
public:
	int NumChannelsUsed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneVisibilityTrack : public MovieSceneBoolTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneHierarchicalEasingInstantiatorSystem : public MovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WeightAndEasingEvaluatorSystem : public MovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneBoolChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> Times;
	bool DefaultValue;
	bool bHasDefaultValue;
	TArray<bool> Values;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEvalTemplate : public MovieSceneEvalTemplateBase
{
public:
	EMovieSceneCompletionMode CompletionMode;
	Unknown SourceSectionPtr;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneKeyHandleMap : public KeyHandleLookupTable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneFloatChannel : public MovieSceneChannel
{
public:
	ERichCurveExtrapolation PreInfinityExtrap;
	ERichCurveExtrapolation PostInfinityExtrap;
	TArray<struct FrameNumber> Times;
	TArray<struct MovieSceneFloatValue> Values;
	float DefaultValue;
	bool bHasDefaultValue;
	struct MovieSceneKeyHandleMap KeyHandles;
	struct FrameRate TickResolution;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneIntegerChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> Times;
	int DefaultValue;
	bool bHasDefaultValue;
	TArray<int> Values;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneTrackImplementation : public MovieSceneEvalTemplateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScenePropertySectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct MovieScenePropertySectionData PropertyData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneByteChannel : public MovieSceneChannel
{
public:
	TArray<struct FrameNumber> Times;
	byte DefaultValue;
	bool bHasDefaultValue;
	TArray<byte> Values;
	class UClass* Enum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneEvaluationFieldSegmentPtr : public MovieSceneEvaluationFieldTrackPtr
{
public:
	struct MovieSceneSegmentIdentifier SegmentId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneKeyTimeStruct : public MovieSceneKeyStruct
{
public:
	struct FrameNumber Time;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneObjectPathChannel : public MovieSceneChannel
{
public:
	class UClass* PropertyClass;
	TArray<struct FrameNumber> Times;
	TArray<struct MovieSceneObjectPathChannelKeyValue> Values;
	struct MovieSceneObjectPathChannelKeyValue DefaultValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TestMovieSceneEvalTemplate : public MovieSceneEvalTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSignedObject : public UObject
{
public:
	struct Guid Signature;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSection : public UMovieSceneSignedObject
{
public:
	struct MovieSceneSectionEvalOptions EvalOptions;
	struct MovieSceneEasingSettings Easing;
	struct MovieSceneFrameRange SectionRange;
	struct FrameNumber PreRollFrames;
	struct FrameNumber PostRollFrames;
	int RowIndex;
	int OverlapPriority;
	bool bIsActive;
	bool bIsLocked;
	float StartTime;
	float EndTime;
	float PrerollTime;
	float PostrollTime;
	bool bIsInfinite;
	bool bSupportsInfiniteRange;
	struct OptionalMovieSceneBlendType BlendType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneHookSection : public UMovieSceneSection
{
public:
	bool bRequiresRangedHook;
	bool bRequiresTriggerHooks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTrack : public UMovieSceneSignedObject
{
public:
	struct MovieSceneTrackEvalOptions EvalOptions;
	bool bIsEvalDisabled;
	TArray<int> RowsDisabled;
	struct Guid EvaluationFieldGuid;
	struct MovieSceneTrackEvaluationField EvaluationField;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNameableTrack : public UMovieSceneTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSequence : public UMovieSceneSignedObject
{
public:
	class UClass* CompiledData;
	EMovieSceneCompletionMode DefaultCompletionMode;
	bool bParentContextsAreSignificant;
	bool bPlayableDirectly;
	EMovieSceneSequenceFlags SequenceFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSequencePlayer : public UObject
{
public:
	struct FScriptMulticastDelegate OnPlay;
	struct FScriptMulticastDelegate OnPlayReverse;
	struct FScriptMulticastDelegate OnStop;
	struct FScriptMulticastDelegate OnPause;
	struct FScriptMulticastDelegate OnFinished;
	EMovieScenePlayerStatus Status;
	bool bReversePlayback;
	class UClass* Sequence;
	struct FrameNumber StartTime;
	int DurationFrames;
	float DurationSubFrames;
	int CurrentNumLoops;
	struct MovieSceneSequencePlaybackSettings PlaybackSettings;
	struct MovieSceneRootEvaluationTemplateInstance RootTemplateInstance;
	struct MovieSceneSequenceReplProperties NetSyncProps;
	Unknown PlaybackClient;
	class UClass* TickManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSubSection : public UMovieSceneSection
{
public:
	struct MovieSceneSectionParameters Parameters;
	float StartOffset;
	float TimeScale;
	float PrerollTime;
	byte NetworkMask;
	class UClass* SubSequence;
	Unknown ActorToRecord;
	struct FString TargetSequenceName;
	struct DirectoryPath TargetPathToRecordTo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEntitySystem : public UObject
{
public:
	class UClass* Linker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSubTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCustomClockSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneDeterminismSource : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEntityProvider : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEvaluationHook : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieScenePlaybackClient : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTrackTemplateProducer : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNodeAndChannelMappings : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNodeGroup : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNodeGroupCollection : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieScene : public UMovieSceneSignedObject
{
public:
	TArray<struct MovieSceneSpawnable> Spawnables;
	TArray<struct MovieScenePossessable> Possessables;
	TArray<struct MovieSceneBinding> ObjectBindings;
	Unknown BindingGroups;
	TArray<class UClass*> MasterTracks;
	class UClass* CameraCutTrack;
	struct MovieSceneFrameRange SelectionRange;
	struct MovieSceneFrameRange PlaybackRange;
	struct FrameRate TickResolution;
	struct FrameRate DisplayRate;
	EMovieSceneEvaluationType EvaluationType;
	EUpdateClockSource ClockSource;
	struct SoftObjectPath CustomClockSourcePath;
	TArray<struct MovieSceneMarkedFrame> MarkedFrames;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBindingOverrides : public UObject
{
public:
	TArray<struct MovieSceneBindingOverrideData> BindingData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBindingOwnerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBlenderSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBoolSection : public UMovieSceneSection
{
public:
	bool DefaultValue;
	struct MovieSceneBoolChannel BoolCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEntityInstantiatorSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneGenericBoundObjectInstantiator : public UMovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBoundSceneComponentInstantiator : public UMovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSceneComponentImpersonator : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCompiledData : public UObject
{
public:
	struct MovieSceneEvaluationTemplate EvaluationTemplate;
	struct MovieSceneSequenceHierarchy Hierarchy;
	struct MovieSceneEntityComponentField EntityComponentField;
	struct MovieSceneEvaluationField TrackTemplateField;
	TArray<struct FrameTime> DeterminismFences;
	struct Guid CompiledSignature;
	struct Guid CompilerVersion;
	struct MovieSceneSequenceCompilerMaskStruct AccumulatedMask;
	struct MovieSceneSequenceCompilerMaskStruct AllocatedMask;
	EMovieSceneSequenceFlags AccumulatedFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCompiledDataManager : public UObject
{
public:
	Unknown Hierarchies;
	Unknown TrackTemplates;
	Unknown TrackTemplateFields;
	Unknown EntityComponentFields;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneFloatDecomposer : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBuiltInEasingFunction : public UObject
{
public:
	EMovieSceneBuiltInEasing Type;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEasingExternalCurve : public UObject
{
public:
	class UClass* Curve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEasingFunction : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEntitySystemLinker : public UObject
{
public:
	struct MovieSceneEntitySystemGraph SystemGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEvalTimeSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEvaluationHookSystem : public UMovieSceneEntitySystem
{
public:
	Unknown PendingEventsByRootInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneFolder : public UObject
{
public:
	struct FName FolderName;
	TArray<class UClass*> ChildFolders;
	TArray<class UClass*> ChildMasterTracks;
	TArray<struct FString> ChildObjectBindingStrings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneKeyProxy : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneMasterInstantiatorSystem : public UMovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieScenePreAnimatedStateSystemInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneCachePreAnimatedStateSystem : public UMovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneRestorePreAnimatedStateSystem : public UMovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSequenceActor : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSequenceTickManager : public UObject
{
public:
	TArray<struct MovieSceneSequenceActorPointers> SequenceActors;
	class UClass* Linker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSpawnablesSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSpawnSection : public UMovieSceneBoolSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSpawnTrack : public UMovieSceneTrack
{
public:
	TArray<class UClass*> Sections;
	struct Guid ObjectGuid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneTrack : public UMovieSceneTrack
{
public:
	bool bHighPassFilter;
	TArray<class UClass*> SectionArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneSection : public UMovieSceneSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneSequence : public UMovieSceneSequence
{
public:
	class UClass* MovieScene;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneSubTrack : public UMovieSceneSubTrack
{
public:
	TArray<class UClass*> SectionArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneSubSection : public UMovieSceneSubSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneEvalHookTrack : public UMovieSceneTrack
{
public:
	TArray<class UClass*> SectionArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTestMovieSceneEvalHookSection : public UMovieSceneHookSection
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTrackInstance : public UObject
{
public:
	class UClass* AnimatedObject;
	bool bIsMasterTrackInstance;
	class UClass* Linker;
	TArray<struct MovieSceneTrackInstanceInput> Inputs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTrackInstanceInstantiator : public UMovieSceneEntityInstantiatorSystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTrackInstanceSystem : public UMovieSceneEntitySystem
{
public:
	class UClass* Instantiator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMeshReconstructorBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMockDataMeshTrackerComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate OnMeshTrackerUpdated;
	bool ScanWorld;
	bool RequestNormals;
	bool RequestVertexConfidence;
	EMeshTrackerVertexColorMode VertexColorMode;
	TArray<struct Color> BlockVertexColors;
	struct LinearColor VertexColorFromConfidenceZero;
	struct LinearColor VertexColorFromConfidenceOne;
	float UpdateInterval;
	class UClass* MRMesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMRMeshComponent : public UPrimitiveComponent
{
public:
	class UClass* Material;
	class UClass* WireframeMaterial;
	bool bCreateMeshProxySections;
	bool bUpdateNavMeshOnMeshUpdate;
	bool bNeverCreateCollisionMesh;
	class UClass* CachedBodySetup;
	TArray<class UClass*> BodySetups;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavLinkCustomInstanceData : public ActorComponentInstanceData
{
public:
	uint32_t NavLinkUserId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavigationData : public AActor
{
public:
	class UClass* RenderingComp;
	struct NavDataConfig NavDataConfig;
	bool bEnableDrawing;
	bool bForceRebuildOnLoad;
	bool bAutoDestroyWhenNoNavigation;
	bool bCanBeMainNavData;
	bool bCanSpawnOnRebuild;
	bool bRebuildAtRuntime;
	ERuntimeGenerationType RuntimeGeneration;
	float ObservedPathsTickInterval;
	uint32_t DataVersion;
	TArray<struct SupportedAreaData> SupportedAreas;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ARecastNavMesh : public ANavigationData
{
public:
	bool bDrawTriangleEdges;
	bool bDrawPolyEdges;
	bool bDrawFilledPolys;
	bool bDrawNavMeshEdges;
	bool bDrawTileBounds;
	bool bDrawPathCollidingGeometry;
	bool bDrawTileLabels;
	bool bDrawPolygonLabels;
	bool bDrawDefaultPolygonCost;
	bool bDrawPolygonFlags;
	bool bDrawLabelsOnPathNodes;
	bool bDrawNavLinks;
	bool bDrawFailedNavLinks;
	bool bDrawClusters;
	bool bDrawOctree;
	bool bDrawOctreeDetails;
	bool bDrawMarkedForbiddenPolys;
	bool bDistinctlyDrawTilesBeingBuilt;
	float DrawOffset;
	bool bFixedTilePoolSize;
	int TilePoolSize;
	float TileSizeUU;
	float CellSize;
	float CellHeight;
	float AgentRadius;
	float AgentHeight;
	float AgentMaxSlope;
	float AgentMaxStepHeight;
	float MinRegionArea;
	float MergeRegionSize;
	float MaxSimplificationError;
	int MaxSimultaneousTileGenerationJobsCount;
	int TileNumberHardLimit;
	int PolyRefTileBits;
	int PolyRefNavPolyBits;
	int PolyRefSaltBits;
	struct Vector NavMeshOriginOffset;
	float DefaultDrawDistance;
	float DefaultMaxSearchNodes;
	float DefaultMaxHierarchicalSearchNodes;
	ERecastPartitioning RegionPartitioning;
	ERecastPartitioning LayerPartitioning;
	int RegionChunkSplits;
	int LayerChunkSplits;
	bool bSortNavigationAreasByCost;
	bool bPerformVoxelFiltering;
	bool bMarkLowHeightAreas;
	bool bUseExtraTopCellWhenMarkingAreas;
	bool bFilterLowSpanSequences;
	bool bFilterLowSpanFromTileCache;
	bool bDoFullyAsyncNavDataGathering;
	bool bUseBetterOffsetsFromCorners;
	bool bStoreEmptyTileLayers;
	bool bUseVirtualFilters;
	bool bAllowNavLinkAsPathEnd;
	bool bUseVoxelCache;
	float TileSetUpdateInterval;
	float HeuristicScale;
	float VerticalDeviationFromGroundCompensation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavMeshRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationSystemV1 : public UNavigationSystemBase
{
public:
	class UClass* MainNavData;
	class UClass* AbstractNavData;
	struct FName DefaultAgentName;
	struct TSoftClassPtr<UObject> CrowdManagerClass;
	bool bAutoCreateNavigationData;
	bool bSpawnNavDataInNavBoundsLevel;
	bool bAllowClientSideNavigation;
	bool bShouldDiscardSubLevelNavData;
	bool bTickWhilePaused;
	bool bSupportRebuilding;
	bool bInitialBuildingLocked;
	bool bSkipAgentHeightCheckWhenPickingNavData;
	bool bGenerateNavigationOnlyAroundNavigationInvokers;
	float ActiveTilesUpdateInterval;
	ENavDataGatheringModeConfig DataGatheringMode;
	float DirtyAreaWarningSizeThreshold;
	TArray<struct NavDataConfig> SupportedAgents;
	struct NavAgentSelector SupportedAgentsMask;
	TArray<class UClass*> NavDataSet;
	TArray<class UClass*> NavDataRegistrationQueue;
	struct FScriptMulticastDelegate OnNavDataRegisteredEvent;
	struct FScriptMulticastDelegate OnNavigationGenerationFinishedDelegate;
	EFNavigationSystemRunMode OperationMode;
	float DirtyAreasUpdateFreq;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationSystemModuleConfig : public UNavigationSystemConfig
{
public:
	bool bStrictlyStatic;
	bool bCreateOnClient;
	bool bAutoSpawnMissingNavData;
	bool bSpawnNavDataInNavBoundsLevel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavSystemConfigOverride : public AActor
{
public:
	class UClass* NavigationSystemConfig;
	ENavSystemOverridePolicy OverridePolicy;
	bool bLoadOnClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavArea : public UNavAreaBase
{
public:
	float DefaultCost;
	float FixedAreaEnteringCost;
	struct Color DrawColor;
	struct NavAgentSelector SupportedAgents;
	bool bSupportsAgent0;
	bool bSupportsAgent1;
	bool bSupportsAgent2;
	bool bSupportsAgent3;
	bool bSupportsAgent4;
	bool bSupportsAgent5;
	bool bSupportsAgent6;
	bool bSupportsAgent7;
	bool bSupportsAgent8;
	bool bSupportsAgent9;
	bool bSupportsAgent10;
	bool bSupportsAgent11;
	bool bSupportsAgent12;
	bool bSupportsAgent13;
	bool bSupportsAgent14;
	bool bSupportsAgent15;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCrowdManagerBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavRelevantComponent : public UActorComponent
{
public:
	bool bAttachToOwnersRoot;
	class UClass* CachedNavParent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkCustomComponent : public UNavRelevantComponent
{
public:
	uint32_t NavLinkUserId;
	class UClass* EnabledAreaClass;
	class UClass* DisabledAreaClass;
	struct NavAgentSelector SupportedAgents;
	struct Vector LinkRelativeStart;
	struct Vector LinkRelativeEnd;
	ENavLinkDirection LinkDirection;
	bool bLinkEnabled;
	bool bNotifyWhenEnabled;
	bool bNotifyWhenDisabled;
	bool bCreateBoxObstacle;
	struct Vector ObstacleOffset;
	struct Vector ObstacleExtent;
	class UClass* ObstacleAreaClass;
	float BroadcastRadius;
	float BroadcastInterval;
	ECollisionChannel BroadcastChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavAreaMeta : public UNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationQueryFilter : public UObject
{
public:
	TArray<struct NavigationFilterArea> Areas;
	struct NavigationFilterFlags IncludeFlags;
	struct NavigationFilterFlags ExcludeFlags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavModifierComponent : public UNavRelevantComponent
{
public:
	class UClass* AreaClass;
	struct Vector FailsafeExtent;
	bool bIncludeAgentHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AAbstractNavData : public ANavigationData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavArea_Default : public UNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavArea_LowHeight : public UNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavArea_Null : public UNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavArea_Obstacle : public UNavArea
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavAreaMeta_SwitchByAgent : public UNavAreaMeta
{
public:
	class UClass* Agent0Area;
	class UClass* Agent1Area;
	class UClass* Agent2Area;
	class UClass* Agent3Area;
	class UClass* Agent4Area;
	class UClass* Agent5Area;
	class UClass* Agent6Area;
	class UClass* Agent7Area;
	class UClass* Agent8Area;
	class UClass* Agent9Area;
	class UClass* Agent10Area;
	class UClass* Agent11Area;
	class UClass* Agent12Area;
	class UClass* Agent13Area;
	class UClass* Agent14Area;
	class UClass* Agent15Area;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavCollision : public UNavCollisionBase
{
public:
	TArray<struct NavCollisionCylinder> CylinderCollision;
	TArray<struct NavCollisionBox> BoxCollision;
	class UClass* AreaClass;
	bool bGatherConvexGeometry;
	bool bCreateOnClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavigationGraph : public ANavigationData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavigationGraphNode : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationGraphNodeComponent : public USceneComponent
{
public:
	struct NavGraphNode Node;
	class UClass* NextNodeComponent;
	class UClass* PrevNodeComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationInvokerComponent : public UActorComponent
{
public:
	float TileGenerationRadius;
	float TileRemovalRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationPath : public UObject
{
public:
	struct FScriptMulticastDelegate PathUpdatedNotifier;
	TArray<struct Vector> PathPoints;
	ENavigationOptionFlag RecalculateOnInvalidation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavigationPathGenerator : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavigationTestingActor : public AActor
{
public:
	class UClass* CapsuleComponent;
	class UClass* InvokerComponent;
	bool bActAsNavigationInvoker;
	struct NavAgentProperties NavAgentProps;
	struct Vector QueryingExtent;
	class UClass* MyNavData;
	struct Vector ProjectedLocation;
	bool bProjectedLocationValid;
	bool bSearchStart;
	float CostLimitFactor;
	float MinimumCostLimit;
	bool bBacktracking;
	bool bUseHierarchicalPathfinding;
	bool bGatherDetailedInfo;
	bool bDrawDistanceToWall;
	bool bShowNodePool;
	bool bShowBestPath;
	bool bShowDiffWithPreviousStep;
	bool bShouldBeVisibleInGame;
	ENavCostDisplay CostDisplayMode;
	struct Vector2D TextCanvasOffset;
	bool bPathExist;
	bool bPathIsPartial;
	bool bPathSearchOutOfNodes;
	float PathfindingTime;
	float PathCost;
	int PathfindingSteps;
	class UClass* OtherActor;
	class UClass* FilterClass;
	int ShowStepIndex;
	float OffsetFromCornersDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkComponent : public UPrimitiveComponent
{
public:
	TArray<struct NavigationLink> Links;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkCustomInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkHostInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavLinkTrivial : public UNavLinkDefinition
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavMeshBoundsVolume : public AVolume
{
public:
	struct NavAgentSelector SupportedAgents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANavModifierVolume : public AVolume
{
public:
	class UClass* AreaClass;
	bool bMaskFillCollisionUnderneathForNavmesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavNodeInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNavTestRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class URecastFilter_UseDefaultArea : public UNavigationQueryFilter
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class URecastNavMeshDataChunk : public UNavigationDataChunk
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetAnalyticsAggregatorConfig : public UObject
{
public:
	TArray<struct NetAnalyticsDataConfig> NetAnalyticsData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class BadNetworkIndicator : public FortHUDElementWidget
{
public:
	bool bEnabled;
	float MinimumDisplayTime;
	float UpdateTime;
	float InitialDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NetDebugWidget : public UserWidget
{
public:
	class UClass* PingUI;
	class UClass* PacketInRateUI;
	class UClass* PacketOutRateUI;
	class UClass* PacketInLossUI;
	class UClass* PacketOutLossUI;
	class UClass* UpBandwidthUI;
	class UClass* DownBandwidthUI;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NetGraph : public UserWidget
{
public:
	struct Color BackgroundColor;
	struct Color PingLineColor;
	struct Color QueuedBunchesLineColor;
	struct Color PacketLossLineColor;
	struct Vector2D DesiredSize;
	float MaxPingToGraph;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkPhysicsManager : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTempMockComponent : public UActorComponent
{
public:
	struct TempMockInputCmd PendingInputCmd;
	struct FScriptMulticastDelegate OnGeneratedLocalInputCmd;
	struct NetworkPhysicsState NetworkPhysicsState;
	struct TempMockObject SimOutput;
	struct NetworkPredictionProxyAsync ReplicatedObject;
	class UClass* CachedPC;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkPredictionComponent : public UActorComponent
{
public:
	struct NetworkPredictionProxy NetworkPredictionProxy;
	struct ReplicationProxy ReplicationProxy_ServerRPC;
	struct ReplicationProxy ReplicationProxy_Autonomous;
	struct ReplicationProxy ReplicationProxy_Simulated;
	struct ReplicationProxy ReplicationProxy_Replay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkPredictionPhysicsComponent : public UActorComponent
{
public:
	struct NetworkPredictionProxy NetworkPredictionProxy;
	class UClass* UpdatedPrimitive;
	struct ReplicationProxy ReplicationProxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANetworkPredictionReplicatedManager : public AActor
{
public:
	struct SharedPackageMap SharedPackageMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkPredictionSettingsObject : public UObject
{
public:
	struct NetworkPredictionSettings Settings;
	TArray<struct NetworkPredictionDevHUD> DevHUDs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetworkPredictionWorldManager : public UWorldSubsystem
{
public:
	class UClass* ReplicatedManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NevadaInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortNevadaVehicleConfigs;
	bool bBoostThrust;
	bool bBoostDrag;
	float TractorBeamExtraLengthForExtents;
	bool bUseTractorBeamUprightForce;
	struct Vector CrashingDesiredUp;
	ENevadaFlightStates CurrentVehicleState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NevadaOutPersistent : public FortVehicleOutPersistent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NevadaOutContinuous : public FortVehicleOutContinuous
{
public:
	float AltimeterTraceHitDistance;
	float TractorBeamAppliedForceMagnitude;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_Nevada : public UFortCameraMode_AthenaVehicle
{
public:
	struct Vector TractorBeamCameraOffset;
	float TractorBeamCameraLerpTime;
	float TractorBeamCameraExtraPitch;
	float TractorBeamInactiveCameraExtraPitch;
	float TractorBeamCameraPositionResetDelay;
	float MinPitchForOffset;
	float MaxPitchForOffset;
	struct Vector ExtraOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNevadaAudioController : public AActor
{
public:
	struct Vector2D SpeedRangeMap;
	struct Vector2D TurningRangeMap;
	struct Vector2D AcceleratingRangeMap;
	struct Vector2D BrakingRangeMap;
	struct Vector2D PassByRangeMap;
	struct Vector2D LFORangeMap;
	class UClass* Vehicle;
	class UClass* LayeredAudioComponent;
	float SpeedParamValue;
	float SpeedParamValuePrev;
	float AcceleratingParamValue;
	float BrakingParamValue;
	struct Vector ForwardVector;
	struct Vector ForwardVectorPrev;
	float TurningParamValue;
	float PassByParamValue;
	float LocallyControlledParamValue;
	float LFOParamValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortNevadaVehicle : public AFortAthenaSKVehicle
{
public:
	Unknown KillerController;
	Unknown KillerCauser;
	struct NevadaState ServerReplicatedState;
	class UClass* FortNevadaVehicleConfigs;
	class UClass* FortNevadaVehicleConfigsClass;
	class UClass* FortNevadaAudioControllerClass;
	class UClass* AudioControllerActor;
	class UClass* FortNevadaAudioController;
	struct VehicleGamepadLiftInputs LiftInputs;
	float LastBatteryRegenTickTime;
	bool bBoostThrust;
	bool bBoostDrag;
	bool bBoostInputReleased;
	bool bUseTractorBeamUprightForce;
	bool bDeadBattery;
	float TractorBeamExtraLengthForExtents;
	struct Vector CrashingDesiredUp;
	float BoostStartTime;
	float BoostPitchAlpha;
	float BoostChargeProgress;
	int BoostChargesAvailable;
	struct Vector CachedBoostMoveDir;
	float CurrentStateStartTime;
	float HeightAtLandingTime;
	float CrashingScrapingTime;
	float CrashingNotMovingTimer;
	float AltimeterTraceHitDistance;
	float TractorBeamAppliedForceMagnitude;
	float AnimParamDriverSeatLeftRight;
	float AnimParamDriverSeatForwardBack;
	bool bForceNegativeLift;
	bool bForcePositiveLift;
	bool bInitialLift;
	ENevadaFlightStates CurrentVehicleState;
	class UClass* PassengerCameraModeClass;
	TArray<struct VehicleSpecificUIDetails> CustomUI;
	TArray<struct ActiveVehicleUI> ActiveUI;
	bool bTractorBeamChargeStarted;
	struct TowhookParams TowhookParams;
	class UClass* AttachedPawnHiddenVehicle;
	Unknown TractorBeamAttachedPrimitive;
	class UClass* SpawnedTractorBeamVictimVehicle;
	Unknown PreviousTractorBeamAttachedPrimitive;
	TArray<class UClass*> TractorBeamTargetedActors;
	TArray<class UClass*> PreviouslyTargetedActors;
	class UClass* TractorBeamAttachedActor;
	class UClass* TractorBeamTargetedActor;
	struct Vector TractorBeamTargetPosition;
	bool bBeamButtonReleased;
	TArray<EObjectTypeQuery> TractorBeamObjectsTypes;
	struct GameplayTagContainer DisallowedBeamTags;
	struct GameplayTagContainer AlwaysAllowedBeamTags;
	class UClass* TractorBeamFX_Unattached;
	class UClass* TractorBeamFX_Attached;
	class UClass* BeamPSC;
	ETractorBeamState TractorBeamState;
	float TractorBeamDeactivationTimestamp;
	float TractorBeamDisruptedTimestamp;
	float CockpitHealth;
	float Native_CockpitEnabled;
	float LastCockpitHealthTickTime;
	float LastCockpitDamageTime;
	float CockpitDissolveStartTime;
	struct ScalableFloat CockpitMaxHealth;
	struct ScalableFloat CockpitHealthTickRate;
	struct ScalableFloat CockpitHealthPerTick;
	struct ScalableFloat CockpitRegenDelay;
	class UClass* CockpitHitMaterialWobble;
	float LastDamageAlpha;
	bool bDissolvingCockpit;
	bool bRestoringCockpit;
	bool bCockpitWobble;
	class UClass* NativeComp_ShieldMesh;
	class UClass* Native_CockpitMaterial;
	class UClass* Native_EnergyRingMatInstance;
	class UClass* Native_EnergyFieldMatInstance;
	class UClass* NativeComp_DamageStateLastLife;
	class UClass* NativeComp_DamageState;
	struct Vector Native_LastHitLocation;
	struct Vector Native_LastHitNormal;
	class UClass* NativeComp_DamageStateFX;
	class UClass* NativeComp_HologramScreen;
	class UClass* NativeComp_SpeedLines;
	class UClass* Native_EnergyRingMat;
	class UClass* Native_EnergyFieldMat;
	class UClass* NativeSys_DamageStateFX;
	class UClass* NativeSys_CockpitDestroyed;
	class UClass* CockpitDamagedSound;
	class UClass* CockpitDestroyedSound;
	class UClass* CockpitRespawnSound;
	class UClass* Native_DamageStateSound;
	class UClass* Native_DamageStateLastLifeSound;
	class UClass* CockpitDeactivatedForceFeedback;
	class UClass* CockpitDestroyedCamShake;
	TArray<class UClass*> TractorBeamDisallowedClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNevadaVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* NevadaVehicle;
	bool bTractorBeam_IsAttached;
	bool bTractorBeam_IsCharging;
	bool bTractorBeam_IsActive;
	bool bTractorBeam_IsInactive;
	bool bTractorBeam_IsOn;
	bool bTractorBeam_HasTarget;
	bool bTractorBeam_ShouldApplyCustomAO;
	float TractorBeam_LookAtPitch;
	float TractorBeam_LookAtYaw;
	float LeanLeftRight;
	float LeanForwardBackward;
	float LeanValue;
	float PreviousLeanValue;
	float VelocityZValue;
	float LeanDelta;
	bool bTurnAgain;
	bool bHadDriver;
	bool bJustGotDriver;
	bool bJustLostDriver;
	bool bWasBoosting;
	bool bIsBoosting;
	int PreviousBoostCount;
	int BoostCount;
	bool bIsBoostingAgain;
	bool bIsMoving;
	float WingsPlayRate;
	float TractorBeamAlpha;
	float AimPitch;
	float AimYaw;
	bool bIsFiringCannon;
	float DistanceFromGround;
	float DistanceFromGroundLeft;
	float DistanceFromGroundRight;
	bool bIsLanding;
	bool bHasLanded;
	float LandingAlpha;
	bool bNotLandingMode;
	bool bHadBattery;
	bool bOutOfBattery;
	bool bJustGotBattery;
	bool bLaunchToDepart;
	bool bLaunchToIdle;
	bool bIsPartsLanding;
	struct FName TractorBeamSocketName;
	struct FName TractorBeamAimCurveName;
	struct FName NevadaVehicleInterruptName;
	struct FName LandingTraceRightName;
	struct FName LandingTraceLeftName;
	float MaxLeanDeltaInterruptMagnitude;
	float MinForwardSpeedToBeMoving;
	float MinForwardSpeedToPlayWings;
	float MinWingsPlayRate;
	float MaxWingsPlayRate;
	float WingsPlayRateInterpSpeed;
	struct TSoftClassPtr<UObject> CannonFiringMontage;
	float LandingGearTraceLength;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortNevadaVehicleConfigs : public UFortPhysicsVehicleConfigs
{
public:
	struct NevadaMoveModeConfig BaseMovement;
	struct NevadaMoveModeConfig BoostMovement;
	struct NevadaMoveModeConfig ChargingMovement;
	struct DampedSpringConfig UprightSpringForce;
	float DebaseLaunchspeed;
	float MaxHeight;
	float MinHeight;
	float OnEnterPitchAlpha;
	float FallDamageHeightBuffer;
	float TurningForce;
	float ThrustRotationAlpha;
	float PitchDrag;
	float YawDrag;
	float RollDrag;
	float BoostThrustDuration;
	float BoostDragDuration;
	int NumBoostCharges;
	float BoostChargeDuration;
	float BoostChargeDelay;
	float BoostDragFinishSpeed;
	float TractorBeamRadius;
	float TractorBeamWithTargetRadius;
	struct ScalableFloat TractorBeamSweepLength;
	struct ScalableFloat TractorBeamChargeTime;
	struct ScalableFloat TractorBeamDurationTime;
	struct ScalableFloat TractorBeamTossImpulseStrengthForward;
	struct ScalableFloat TractorBeamTossImpulseStrengthUpward;
	float TractorBeamShutdownTime;
	struct ScalableFloat TractorBeamTurnOffDamage;
	struct ScalableFloat AllowTractorBeamAIPawns;
	float TractorBeamBreakForceMagnitude;
	struct ScalableFloat TractorBeamActive;
	struct ScalableFloat TractorBeamCooldown;
	struct ScalableFloat TractorBeamDisruptionCooldown;
	struct FName TractorBeamSocket;
	struct Vector TractorBeamAttachPositionOffset;
	struct RigidBodyErrorCorrection TractorBeamTargetOverridenErrorCorrection;
	float VictimPitchDrag;
	float VictimYawDrag;
	float VictimRollDrag;
	struct DampedSpringConfig TractorBeamVictimUprightForce;
	int NumReboots;
	float MaxCrashingTime;
	float MaxCrashingScrapingTime;
	float MaxCrashingTimeSpentNotMoving;
	float SpeedThresholdForCrashed;
	struct ScalableFloat RebootDuration;
	struct ScalableFloat RebootDelay;
	float LandingTraceRange;
	float DesiredLandingDistance;
	float LandingDelay_Max;
	float LandingDelay_Min;
	float HeightForMinLandingDelay;
	float HeightForMaxLandingDelay;
	float LandingPitchAlphaMax;
	float LandingPitchAlphaMin;
	float DriverSeatRotationAnimBlendSpeed;
	float CrashingDesiredUpLerpFactor;
	float CrashedLinearDrag;
	float LandedDragCoef;
	float LandedDragCoef2;
	float LandedMaxDragSpeed;
	float CrashedAngularDragMultiplier;
	float BoostFOV;
	float ExtraTraceInteractRange;
	float AntiGravityMult;
	float InitialLiftDuration;
	struct ScalableFloat BatteryCostDuringFlight;
	struct ScalableFloat BatteryRegenDelay;
	struct ScalableFloat BatteryRegenTickRate;
	struct ScalableFloat BatteryRegenAmount;
	struct ScalableFloat MaxBattery;
	struct ScalableFloat MinBatteryForFlight;
	TArray<struct FName> CockpitShapeNames;
	struct ScalableFloat CockpitDamageMult;
	struct ScalableFloat CockpitHealth;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortPlayerAnimInstance_NevadaDriver : public UFortPlayerAnimInstance_OctopusDriver
{
public:
	class UClass* NevadaVehicle;
	float AnimLeftRight;
	float AnimForwardBackward;
	struct Vector RootAttachmentLoc;
	struct Rotator RootAttachmentRot;
	int BoostCount;
	int PreviousBoostCount;
	bool bIsBoostingAgain;
	bool bIsMoving;
	float MinVehicleVelocityToBeMoving;
	struct FName DriverSocketName;
	struct FName RightHandAttachmentSocketName;
	struct FName LeftHandAttachmentSocketName;
	struct FName RightFootAttachmentSocketName;
	struct FName LeftFootAttachementSocketName;
	struct Rotator RightHandRotationOffset;
	struct Rotator LeftHandRotationOffset;
	struct Rotator RightFootRotationOffset;
	struct Rotator LeftFootRotationOffset;
	struct Vector RootAttachmentOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNevadaGlobals : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortNevadaVehicleReticle : public FortAthenaVehicleDashboardWidget
{
public:
	struct TSoftClassPtr<UObject> NevadaTargetIndicatorSoftClass;
	class UClass* TargetIndicator;
	class UClass* OwningNevadaVehicle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NevadaTargetIndicator : public FortActorIndicatorWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotify_PlayNiagaraEffect : public UAnimNotify
{
public:
	class UClass* Template;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	struct Vector Scale;
	bool bAbsoluteScale;
	bool Attached;
	struct FName SocketName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState_TimedNiagaraEffect : public UAnimNotifyState
{
public:
	class UClass* Template;
	struct FName SocketName;
	struct Vector LocationOffset;
	struct Rotator RotationOffset;
	bool bDestroyAtEnd;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState_TimedNiagaraEffectAdvanced : public UAnimNotifyState_TimedNiagaraEffect
{
public:
	bool bEnableNormalizedNotifyProgress;
	struct FName NotifyProgressUserParameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraMergeable : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceBase : public UNiagaraMergeable
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraScriptBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraVariable : public NiagaraVariableBase
{
public:
	TArray<byte> VarData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraVariableWithOffset : public NiagaraVariableBase
{
public:
	int Offset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraUserRedirectionParameterStore : public NiagaraParameterStore
{
public:
	Unknown UserParameterRedirects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraEmitterScalabilityOverride : public NiagaraEmitterScalabilitySettings
{
public:
	bool bOverrideSpawnCountScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraEventScriptProperties : public NiagaraEmitterScriptProperties
{
public:
	EScriptExecutionMode ExecutionMode;
	uint32_t SpawnNumber;
	uint32_t MaxEventsPerFrame;
	struct Guid SourceEmitterID;
	struct FName SourceEventName;
	bool bRandomSpawnNumber;
	uint32_t MinSpawnNumber;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraScriptExecutionParameterStore : public NiagaraParameterStore
{
public:
	int ParameterSize;
	uint32_t PaddedParameterSize;
	TArray<struct NiagaraScriptExecutionPaddingInfo> PaddingInfo;
	bool bInitialized;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraSystemScalabilityOverride : public NiagaraSystemScalabilitySettings
{
public:
	bool bOverrideDistanceSettings;
	bool bOverrideInstanceCountSettings;
	bool bOverridePerSystemInstanceCountSettings;
	bool bOverrideTimeSinceRendererSettings;
	bool bOverrideGlobalBudgetScalingSettings;
	bool bOverrideCullProxySettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraParameterSectionTemplate : public MovieSceneEvalTemplate
{
public:
	struct NiagaraVariable Parameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraBoolParameterSectionTemplate : public MovieSceneNiagaraParameterSectionTemplate
{
public:
	struct MovieSceneBoolChannel BoolChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraColorParameterSectionTemplate : public MovieSceneNiagaraParameterSectionTemplate
{
public:
	struct MovieSceneFloatChannel RedChannel;
	struct MovieSceneFloatChannel GreenChannel;
	struct MovieSceneFloatChannel BlueChannel;
	struct MovieSceneFloatChannel AlphaChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraFloatParameterSectionTemplate : public MovieSceneNiagaraParameterSectionTemplate
{
public:
	struct MovieSceneFloatChannel FloatChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraIntegerParameterSectionTemplate : public MovieSceneNiagaraParameterSectionTemplate
{
public:
	struct MovieSceneIntegerChannel IntegerChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraSystemTrackImplementation : public MovieSceneTrackImplementation
{
public:
	struct FrameNumber SpawnSectionStartFrame;
	struct FrameNumber SpawnSectionEndFrame;
	ENiagaraSystemSpawnSectionStartBehavior SpawnSectionStartBehavior;
	ENiagaraSystemSpawnSectionEvaluateBehavior SpawnSectionEvaluateBehavior;
	ENiagaraSystemSpawnSectionEndBehavior SpawnSectionEndBehavior;
	ENiagaraAgeUpdateMode AgeUpdateMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraSystemTrackTemplate : public MovieSceneEvalTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneNiagaraVectorParameterSectionTemplate : public MovieSceneNiagaraParameterSectionTemplate
{
public:
	struct MovieSceneFloatChannel VectorChannels;
	int ChannelsUsed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraScriptInstanceParameterStore : public NiagaraParameterStore
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NiagaraWorldManagerTickFunction : public TickFunction
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterface : public UNiagaraDataInterfaceBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraParameterTrack : public UMovieSceneNiagaraTrack
{
public:
	struct NiagaraVariable Parameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraBoolParameterTrack : public UMovieSceneNiagaraParameterTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraColorParameterTrack : public UMovieSceneNiagaraParameterTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraFloatParameterTrack : public UMovieSceneNiagaraParameterTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraIntegerParameterTrack : public UMovieSceneNiagaraParameterTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraSystemSpawnSection : public UMovieSceneSection
{
public:
	ENiagaraSystemSpawnSectionStartBehavior SectionStartBehavior;
	ENiagaraSystemSpawnSectionEvaluateBehavior SectionEvaluateBehavior;
	ENiagaraSystemSpawnSectionEndBehavior SectionEndBehavior;
	ENiagaraAgeUpdateMode AgeUpdateMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraSystemTrack : public UMovieSceneNiagaraTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneNiagaraVectorParameterTrack : public UMovieSceneNiagaraParameterTrack
{
public:
	int ChannelsUsed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANiagaraActor : public AActor
{
public:
	class UClass* NiagaraComponent;
	bool bDestroyOnSystemFinish;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraBakerSettings : public UObject
{
public:
	float StartSeconds;
	float DurationSeconds;
	int FramesPerSecond;
	bool bPreviewLooping;
	struct IntPoint FramesPerDimension;
	TArray<struct NiagaraBakerTextureSettings> OutputTextures;
	ENiagaraBakerViewMode CameraViewportMode;
	struct Vector CameraViewportLocation;
	struct Rotator CameraViewportRotation;
	float CameraOrbitDistance;
	float CameraFOV;
	float CameraOrthoWidth;
	bool bUseCameraAspectRatio;
	float CameraAspectRatio;
	bool bRenderComponentOnly;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraComponent : public UFXSystemComponent
{
public:
	class UClass* Asset;
	ENiagaraTickBehavior TickBehavior;
	int RandomSeedOffset;
	struct NiagaraUserRedirectionParameterStore OverrideParameters;
	bool bForceSolo;
	bool bEnableGpuComputeDebug;
	bool bAutoDestroy;
	bool bRenderingEnabled;
	bool bAutoManageAttachment;
	bool bAutoAttachWeldSimulatedBodies;
	float MaxTimeBeforeForceUpdateTransform;
	struct FScriptMulticastDelegate OnSystemFinished;
	Unknown AutoAttachParent;
	struct FName AutoAttachSocketName;
	EAttachmentRule AutoAttachLocationRule;
	EAttachmentRule AutoAttachRotationRule;
	EAttachmentRule AutoAttachScaleRule;
	class UClass* CullProxy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraComponentPool : public UObject
{
public:
	Unknown WorldParticleSystemPools;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraRendererProperties : public UNiagaraMergeable
{
public:
	struct NiagaraPlatformSet Platforms;
	int SortOrderHint;
	ENiagaraRendererMotionVectorSetting MotionVectorSetting;
	bool bIsEnabled;
	bool bAllowInCullProxies;
	bool bMotionBlurEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraComponentRendererProperties : public UNiagaraRendererProperties
{
public:
	class UClass* ComponentType;
	uint32_t ComponentCountLimit;
	struct NiagaraVariableAttributeBinding EnabledBinding;
	struct NiagaraVariableAttributeBinding RendererVisibilityTagBinding;
	bool bAssignComponentsOnParticleID;
	bool bOnlyCreateComponentsOnParticleSpawn;
	int RendererVisibility;
	class UClass* TemplateComponent;
	TArray<struct NiagaraComponentPropertyBinding> PropertyBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraComponentSettings : public UObject
{
public:
	Unknown SuppressActivationList;
	Unknown ForceAutoPooolingList;
	Unknown SuppressEmitterList;
	Unknown GPUEmitterWhitelist;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraConvertInPlaceUtilityBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraCullProxyComponent : public UNiagaraComponent
{
public:
	TArray<struct NiagaraCulledComponentInfo> Instances;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterface2DArrayTexture : public UNiagaraDataInterface
{
public:
	class UClass* Texture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArray : public UNiagaraDataInterface
{
public:
	int MaxElements;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayFloat : public UNiagaraDataInterfaceArray
{
public:
	TArray<float> FloatData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayFloat2 : public UNiagaraDataInterfaceArray
{
public:
	TArray<struct Vector2D> FloatData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayFloat3 : public UNiagaraDataInterfaceArray
{
public:
	TArray<struct Vector> FloatData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayFloat4 : public UNiagaraDataInterfaceArray
{
public:
	TArray<struct Vector4> FloatData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayColor : public UNiagaraDataInterfaceArray
{
public:
	TArray<struct LinearColor> ColorData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayQuat : public UNiagaraDataInterfaceArray
{
public:
	TArray<struct Quat> QuatData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayInt32 : public UNiagaraDataInterfaceArray
{
public:
	TArray<int> IntData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceArrayBool : public UNiagaraDataInterfaceArray
{
public:
	TArray<bool> BoolData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceAudioSubmix : public UNiagaraDataInterface
{
public:
	class UClass* Submix;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceAudioOscilloscope : public UNiagaraDataInterface
{
public:
	class UClass* Submix;
	int Resolution;
	float ScopeInMilliseconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceAudioPlayer : public UNiagaraDataInterface
{
public:
	class UClass* SoundToPlay;
	class UClass* Attenuation;
	class UClass* Concurrency;
	TArray<struct FName> ParameterNames;
	bool bLimitPlaysPerTick;
	int MaxPlaysPerTick;
	bool bStopWhenComponentIsDestroyed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceAudioSpectrum : public UNiagaraDataInterfaceAudioSubmix
{
public:
	int Resolution;
	float MinimumFrequency;
	float MaximumFrequency;
	float NoiseFloorDb;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceCamera : public UNiagaraDataInterface
{
public:
	int PlayerControllerIndex;
	bool bRequireCurrentFrameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceCollisionQuery : public UNiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceCurveBase : public UNiagaraDataInterface
{
public:
	TArray<float> ShaderLUT;
	float LUTMinTime;
	float LUTMaxTime;
	float LUTInvTimeRange;
	float LUTNumSamplesMinusOne;
	bool bUseLUT;
	bool bExposeCurve;
	struct FName ExposedName;
	class UClass* ExposedTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceColorCurve : public UNiagaraDataInterfaceCurveBase
{
public:
	struct RichCurve RedCurve;
	struct RichCurve GreenCurve;
	struct RichCurve BlueCurve;
	struct RichCurve AlphaCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceCubeTexture : public UNiagaraDataInterface
{
public:
	class UClass* Texture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceCurlNoise : public UNiagaraDataInterface
{
public:
	uint32_t Seed;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceCurve : public UNiagaraDataInterfaceCurveBase
{
public:
	struct RichCurve Curve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceDebugDraw : public UNiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraParticleCallbackHandler : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceExport : public UNiagaraDataInterface
{
public:
	struct NiagaraUserParameterBinding CallbackHandlerParameter;
	ENDIExport_GPUAllocationMode GPUAllocationMode;
	int GPUAllocationFixedSize;
	float GPUAllocationPerParticleSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceGBuffer : public UNiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceRWBase : public UNiagaraDataInterface
{
public:
	Unknown OutputShaderStages;
	Unknown IterationShaderStages;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceGrid2D : public UNiagaraDataInterfaceRWBase
{
public:
	int NumCellsX;
	int NumCellsY;
	int NumCellsMaxAxis;
	int NumAttributes;
	bool SetGridFromMaxAxis;
	struct Vector2D WorldBBoxSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceGrid2DCollection : public UNiagaraDataInterfaceGrid2D
{
public:
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	ENiagaraGpuBufferFormat OverrideBufferFormat;
	bool bOverrideFormat;
	Unknown ManagedRenderTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceGrid2DCollectionReader : public UNiagaraDataInterfaceGrid2D
{
public:
	struct FString EmitterName;
	struct FString DIName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceGrid3D : public UNiagaraDataInterfaceRWBase
{
public:
	struct IntVector NumCells;
	float CellSize;
	int NumCellsMaxAxis;
	ESetResolutionMethod SetResolutionMethod;
	struct Vector WorldBBoxSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceGrid3DCollection : public UNiagaraDataInterfaceGrid3D
{
public:
	int NumAttributes;
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	ENiagaraGpuBufferFormat OverrideBufferFormat;
	bool bOverrideFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceIntRenderTarget2D : public UNiagaraDataInterfaceRWBase
{
public:
	struct IntPoint Size;
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	Unknown ManagedRenderTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceLandscape : public UNiagaraDataInterface
{
public:
	class UClass* SourceLandscape;
	ENDILandscape_SourceMode SourceMode;
	TArray<class UClass*> PhysicalMaterials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceMeshRendererInfo : public UNiagaraDataInterface
{
public:
	class UClass* MeshRenderer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceNeighborGrid3D : public UNiagaraDataInterfaceGrid3D
{
public:
	uint32_t MaxNeighborsPerCell;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceOcclusion : public UNiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceParticleRead : public UNiagaraDataInterfaceRWBase
{
public:
	struct FString EmitterName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfacePlatformSet : public UNiagaraDataInterface
{
public:
	struct NiagaraPlatformSet Platforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceRenderTarget2D : public UNiagaraDataInterfaceRWBase
{
public:
	struct IntPoint Size;
	ENiagaraMipMapGeneration MipMapGeneration;
	ETextureRenderTargetFormat OverrideRenderTargetFormat;
	bool bInheritUserParameterSettings;
	bool bOverrideFormat;
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	Unknown ManagedRenderTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceRenderTarget2DArray : public UNiagaraDataInterfaceRWBase
{
public:
	struct IntVector Size;
	ETextureRenderTargetFormat OverrideRenderTargetFormat;
	bool bInheritUserParameterSettings;
	bool bOverrideFormat;
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	Unknown ManagedRenderTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceRenderTargetCube : public UNiagaraDataInterfaceRWBase
{
public:
	int Size;
	ETextureRenderTargetFormat OverrideRenderTargetFormat;
	bool bInheritUserParameterSettings;
	bool bOverrideFormat;
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	Unknown ManagedRenderTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceRenderTargetVolume : public UNiagaraDataInterfaceRWBase
{
public:
	struct IntVector Size;
	ETextureRenderTargetFormat OverrideRenderTargetFormat;
	bool bInheritUserParameterSettings;
	bool bOverrideFormat;
	struct NiagaraUserParameterBinding RenderTargetUserParameter;
	Unknown ManagedRenderTargets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceSimpleCounter : public UNiagaraDataInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceSkeletalMesh : public UNiagaraDataInterface
{
public:
	ENDISkeletalMesh_SourceMode SourceMode;
	class UClass* Source;
	struct NiagaraUserParameterBinding MeshUserParameter;
	class UClass* SourceComponent;
	ENDISkeletalMesh_SkinningMode SkinningMode;
	TArray<struct FName> SamplingRegions;
	int WholeMeshLOD;
	TArray<struct FName> FilteredBones;
	TArray<struct FName> FilteredSockets;
	struct FName ExcludeBoneName;
	bool bExcludeBone;
	int UvSetIndex;
	bool bRequireCurrentFrameData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceSpline : public UNiagaraDataInterface
{
public:
	class UClass* Source;
	struct NiagaraUserParameterBinding SplineUserParameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceStaticMesh : public UNiagaraDataInterface
{
public:
	ENDIStaticMesh_SourceMode SourceMode;
	class UClass* DefaultMesh;
	class UClass* Source;
	class UClass* SourceComponent;
	struct NDIStaticMeshSectionFilter SectionFilter;
	bool bUsePhysicsBodyVelocity;
	TArray<struct FName> FilteredSockets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceTexture : public UNiagaraDataInterface
{
public:
	class UClass* Texture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceVector2DCurve : public UNiagaraDataInterfaceCurveBase
{
public:
	struct RichCurve XCurve;
	struct RichCurve YCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceVector4Curve : public UNiagaraDataInterfaceCurveBase
{
public:
	struct RichCurve XCurve;
	struct RichCurve YCurve;
	struct RichCurve ZCurve;
	struct RichCurve WCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceVectorCurve : public UNiagaraDataInterfaceCurveBase
{
public:
	struct RichCurve XCurve;
	struct RichCurve YCurve;
	struct RichCurve ZCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceVectorField : public UNiagaraDataInterface
{
public:
	class UClass* Field;
	bool bTileX;
	bool bTileY;
	bool bTileZ;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceVolumeTexture : public UNiagaraDataInterface
{
public:
	class UClass* Texture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDebugHUDSettings : public UObject
{
public:
	struct NiagaraDebugHUDSettingsData Data;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraEditorDataBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraEditorParametersAdapterBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSignificanceHandler : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSignificanceHandlerDistance : public UNiagaraSignificanceHandler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSignificanceHandlerAge : public UNiagaraSignificanceHandler
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraEffectType : public UObject
{
public:
	ENiagaraScalabilityUpdateFrequency UpdateFrequency;
	ENiagaraCullReaction CullReaction;
	class UClass* SignificanceHandler;
	TArray<struct NiagaraSystemScalabilitySettings> DetailLevelScalabilitySettings;
	struct NiagaraSystemScalabilitySettingsArray SystemScalabilitySettings;
	struct NiagaraEmitterScalabilitySettingsArray EmitterScalabilitySettings;
	class UClass* PerformanceBaselineController;
	struct NiagaraPerfBaselineStats PerfBaselineStats;
	struct Guid PerfBaselineVersion;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraEmitter : public UObject
{
public:
	bool bLocalSpace;
	bool bDeterminism;
	int RandomSeed;
	EParticleAllocationMode AllocationMode;
	int PreAllocationCount;
	struct NiagaraEmitterScriptProperties UpdateScriptProps;
	struct NiagaraEmitterScriptProperties SpawnScriptProps;
	ENiagaraSimTarget SimTarget;
	struct Box FixedBounds;
	int MinDetailLevel;
	int MaxDetailLevel;
	struct NiagaraDetailsLevelScaleOverrides GlobalSpawnCountScaleOverrides;
	struct NiagaraPlatformSet Platforms;
	struct NiagaraEmitterScalabilityOverrides ScalabilityOverrides;
	bool bInterpolatedSpawning;
	bool bFixedBounds;
	bool bUseMinDetailLevel;
	bool bUseMaxDetailLevel;
	bool bOverrideGlobalSpawnCountScale;
	bool bRequiresPersistentIDs;
	bool bCombineEventSpawn;
	float MaxDeltaTimePerTick;
	bool bDeprecatedShaderStagesEnabled;
	bool bSimulationStagesEnabled;
	bool bLimitDeltaTime;
	struct FString UniqueEmitterName;
	TArray<class UClass*> RendererProperties;
	TArray<struct NiagaraEventScriptProperties> EventHandlerScriptProps;
	TArray<class UClass*> SimulationStages;
	class UClass* GPUComputeScript;
	TArray<struct FName> SharedEventGeneratorIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraEventReceiverEmitterAction : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraEventReceiverEmitterAction_SpawnParticles : public UNiagaraEventReceiverEmitterAction
{
public:
	uint32_t NumParticles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANiagaraLensEffectBase : public ANiagaraActor
{
public:
	struct Transform DesiredRelativeTransform;
	float BaseAuthoredFOV;
	bool bAllowMultipleInstances;
	bool bResetWhenRetriggered;
	TArray<class UClass*> EmittersToTreatAsSame;
	class UClass* OwningCameraManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraLightRendererProperties : public UNiagaraRendererProperties
{
public:
	bool bUseInverseSquaredFalloff;
	bool bAffectsTranslucency;
	bool bAlphaScalesBrightness;
	float RadiusScale;
	float DefaultExponent;
	struct Vector ColorAdd;
	int RendererVisibility;
	struct NiagaraVariableAttributeBinding LightRenderingEnabledBinding;
	struct NiagaraVariableAttributeBinding LightExponentBinding;
	struct NiagaraVariableAttributeBinding PositionBinding;
	struct NiagaraVariableAttributeBinding ColorBinding;
	struct NiagaraVariableAttributeBinding RadiusBinding;
	struct NiagaraVariableAttributeBinding VolumetricScatteringBinding;
	struct NiagaraVariableAttributeBinding RendererVisibilityTagBinding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraMeshRendererProperties : public UNiagaraRendererProperties
{
public:
	TArray<struct NiagaraMeshRendererMeshProperties> Meshes;
	ENiagaraRendererSourceDataMode SourceMode;
	ENiagaraSortMode SortMode;
	bool bOverrideMaterials;
	bool bSortOnlyWhenTranslucent;
	bool bGpuLowLatencyTranslucency;
	bool bSubImageBlend;
	bool bEnableFrustumCulling;
	bool bEnableCameraDistanceCulling;
	bool bEnableMeshFlipbook;
	TArray<struct NiagaraMeshMaterialOverride> OverrideMaterials;
	struct Vector2D SubImageSize;
	ENiagaraMeshFacingMode FacingMode;
	bool bLockedAxisEnable;
	struct Vector LockedAxis;
	ENiagaraMeshLockedAxisSpace LockedAxisSpace;
	float MinCameraDistance;
	float MaxCameraDistance;
	uint32_t RendererVisibility;
	struct NiagaraVariableAttributeBinding PositionBinding;
	struct NiagaraVariableAttributeBinding ColorBinding;
	struct NiagaraVariableAttributeBinding VelocityBinding;
	struct NiagaraVariableAttributeBinding MeshOrientationBinding;
	struct NiagaraVariableAttributeBinding ScaleBinding;
	struct NiagaraVariableAttributeBinding SubImageIndexBinding;
	struct NiagaraVariableAttributeBinding DynamicMaterialBinding;
	struct NiagaraVariableAttributeBinding DynamicMaterial1Binding;
	struct NiagaraVariableAttributeBinding DynamicMaterial2Binding;
	struct NiagaraVariableAttributeBinding DynamicMaterial3Binding;
	struct NiagaraVariableAttributeBinding MaterialRandomBinding;
	struct NiagaraVariableAttributeBinding CustomSortingBinding;
	struct NiagaraVariableAttributeBinding NormalizedAgeBinding;
	struct NiagaraVariableAttributeBinding CameraOffsetBinding;
	struct NiagaraVariableAttributeBinding RendererVisibilityTagBinding;
	struct NiagaraVariableAttributeBinding MeshIndexBinding;
	TArray<struct NiagaraMaterialAttributeBinding> MaterialParameterBindings;
	struct NiagaraVariableAttributeBinding PrevPositionBinding;
	struct NiagaraVariableAttributeBinding PrevScaleBinding;
	struct NiagaraVariableAttributeBinding PrevMeshOrientationBinding;
	struct NiagaraVariableAttributeBinding PrevCameraOffsetBinding;
	struct NiagaraVariableAttributeBinding PrevVelocityBinding;
	class UClass* ParticleMesh;
	struct Vector PivotOffset;
	ENiagaraMeshPivotOffsetSpace PivotOffsetSpace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraMessageDataBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraParameterCollectionInstance : public UObject
{
public:
	class UClass* Collection;
	TArray<struct NiagaraVariable> OverridenParameters;
	struct NiagaraParameterStore ParameterStorage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraParameterCollection : public UObject
{
public:
	struct FName Namespace;
	TArray<struct NiagaraVariable> Parameters;
	class UClass* SourceMaterialCollection;
	class UClass* DefaultInstance;
	struct Guid CompileId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraParameterDefinitionsBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraBaselineController : public UObject
{
public:
	float TestDuration;
	class UClass* EffectType;
	class UClass* Owner;
	struct TSoftClassPtr<UObject> System;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraBaselineController_Basic : public UNiagaraBaselineController
{
public:
	int NumInstances;
	TArray<class UClass*> SpawnedComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANiagaraPerfBaselineActor : public AActor
{
public:
	class UClass* Controller;
	class UClass* Label;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPrecompileContainer : public UObject
{
public:
	TArray<class UClass*> Scripts;
	class UClass* System;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANiagaraPreviewBase : public AActor
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamBase : public UNiagaraPreviewAxis
{
public:
	struct FName Param;
	int Count;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamInt32 : public UNiagaraPreviewAxis_InterpParamBase
{
public:
	int Min;
	int Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamFloat : public UNiagaraPreviewAxis_InterpParamBase
{
public:
	float Min;
	float Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamVector2D : public UNiagaraPreviewAxis_InterpParamBase
{
public:
	struct Vector2D Min;
	struct Vector2D Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamVector : public UNiagaraPreviewAxis_InterpParamBase
{
public:
	struct Vector Min;
	struct Vector Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamVector4 : public UNiagaraPreviewAxis_InterpParamBase
{
public:
	struct Vector4 Min;
	struct Vector4 Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraPreviewAxis_InterpParamLinearColor : public UNiagaraPreviewAxis_InterpParamBase
{
public:
	struct LinearColor Min;
	struct LinearColor Max;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ANiagaraPreviewGrid : public AActor
{
public:
	class UClass* System;
	ENiagaraPreviewGridResetMode ResetMode;
	class UClass* PreviewAxisX;
	class UClass* PreviewAxisY;
	class UClass* PreviewClass;
	float SpacingX;
	float SpacingY;
	int NumX;
	int NumY;
	TArray<class UClass*> PreviewComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraRibbonRendererProperties : public UNiagaraRendererProperties
{
public:
	class UClass* Material;
	struct NiagaraUserParameterBinding MaterialUserParamBinding;
	ENiagaraRibbonFacingMode FacingMode;
	struct NiagaraRibbonUVSettings UV0Settings;
	struct NiagaraRibbonUVSettings UV1Settings;
	ENiagaraRibbonDrawDirection DrawDirection;
	ENiagaraRibbonShapeMode Shape;
	bool bEnableAccurateGeometry;
	int WidthSegmentationCount;
	int MultiPlaneCount;
	int TubeSubdivisions;
	TArray<struct NiagaraRibbonShapeCustomVertex> CustomVertices;
	float CurveTension;
	ENiagaraRibbonTessellationMode TessellationMode;
	int TessellationFactor;
	bool bUseConstantFactor;
	float TessellationAngle;
	bool bScreenSpaceTessellation;
	struct NiagaraVariableAttributeBinding PositionBinding;
	struct NiagaraVariableAttributeBinding ColorBinding;
	struct NiagaraVariableAttributeBinding VelocityBinding;
	struct NiagaraVariableAttributeBinding NormalizedAgeBinding;
	struct NiagaraVariableAttributeBinding RibbonTwistBinding;
	struct NiagaraVariableAttributeBinding RibbonWidthBinding;
	struct NiagaraVariableAttributeBinding RibbonFacingBinding;
	struct NiagaraVariableAttributeBinding RibbonIdBinding;
	struct NiagaraVariableAttributeBinding RibbonLinkOrderBinding;
	struct NiagaraVariableAttributeBinding MaterialRandomBinding;
	struct NiagaraVariableAttributeBinding DynamicMaterialBinding;
	struct NiagaraVariableAttributeBinding DynamicMaterial1Binding;
	struct NiagaraVariableAttributeBinding DynamicMaterial2Binding;
	struct NiagaraVariableAttributeBinding DynamicMaterial3Binding;
	struct NiagaraVariableAttributeBinding RibbonUVDistance;
	struct NiagaraVariableAttributeBinding U0OverrideBinding;
	struct NiagaraVariableAttributeBinding V0RangeOverrideBinding;
	struct NiagaraVariableAttributeBinding U1OverrideBinding;
	struct NiagaraVariableAttributeBinding V1RangeOverrideBinding;
	TArray<struct NiagaraMaterialAttributeBinding> MaterialParameterBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraScript : public UNiagaraScriptBase
{
public:
	ENiagaraScriptUsage Usage;
	struct Guid UsageId;
	struct NiagaraParameterStore RapidIterationParameters;
	struct NiagaraScriptExecutionParameterStore ScriptExecutionParamStore;
	TArray<struct NiagaraBoundParameter> ScriptExecutionBoundParameters;
	struct NiagaraVMExecutableDataId CachedScriptVMId;
	struct NiagaraVMExecutableData CachedScriptVM;
	TArray<class UClass*> CachedParameterCollectionReferences;
	TArray<struct NiagaraScriptDataInterfaceInfo> CachedDefaultDataInterfaces;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraScriptSourceBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSettings : public UDeveloperSettings
{
public:
	struct SoftObjectPath DefaultEffectType;
	TArray<struct SoftObjectPath> DefaultLinkedParameterDefinitions;
	TArray<struct FText> QualityLevels;
	Unknown ComponentRendererWarningsPerClass;
	ETextureRenderTargetFormat DefaultRenderTargetFormat;
	ENiagaraGpuBufferFormat DefaultGridFormat;
	ENiagaraDefaultRendererMotionVectorSetting DefaultRendererMotionVectorSetting;
	ENDISkelMesh_GpuMaxInfluences NDISkelMesh_GpuMaxInfluences;
	ENDISkelMesh_GpuUniformSamplingFormat NDISkelMesh_GpuUniformSamplingFormat;
	ENDISkelMesh_AdjacencyTriangleIndexFormat NDISkelMesh_AdjacencyTriangleIndexFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSimulationStageBase : public UNiagaraMergeable
{
public:
	class UClass* Script;
	struct FName SimulationStageName;
	bool bEnabled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSimulationStageGeneric : public UNiagaraSimulationStageBase
{
public:
	ENiagaraIterationSource IterationSource;
	int Iterations;
	bool bSpawnOnly;
	bool bDisablePartialParticleUpdate;
	struct NiagaraVariableDataInterfaceBinding DataInterface;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSpriteRendererProperties : public UNiagaraRendererProperties
{
public:
	class UClass* Material;
	ENiagaraRendererSourceDataMode SourceMode;
	struct NiagaraUserParameterBinding MaterialUserParamBinding;
	ENiagaraSpriteAlignment Alignment;
	ENiagaraSpriteFacingMode FacingMode;
	struct Vector2D PivotInUVSpace;
	ENiagaraSortMode SortMode;
	struct Vector2D SubImageSize;
	bool bSubImageBlend;
	bool bRemoveHMDRollInVR;
	bool bSortOnlyWhenTranslucent;
	bool bGpuLowLatencyTranslucency;
	float MinFacingCameraBlendDistance;
	float MaxFacingCameraBlendDistance;
	bool bEnableCameraDistanceCulling;
	float MinCameraDistance;
	float MaxCameraDistance;
	uint32_t RendererVisibility;
	struct NiagaraVariableAttributeBinding PositionBinding;
	struct NiagaraVariableAttributeBinding ColorBinding;
	struct NiagaraVariableAttributeBinding VelocityBinding;
	struct NiagaraVariableAttributeBinding SpriteRotationBinding;
	struct NiagaraVariableAttributeBinding SpriteSizeBinding;
	struct NiagaraVariableAttributeBinding SpriteFacingBinding;
	struct NiagaraVariableAttributeBinding SpriteAlignmentBinding;
	struct NiagaraVariableAttributeBinding SubImageIndexBinding;
	struct NiagaraVariableAttributeBinding DynamicMaterialBinding;
	struct NiagaraVariableAttributeBinding DynamicMaterial1Binding;
	struct NiagaraVariableAttributeBinding DynamicMaterial2Binding;
	struct NiagaraVariableAttributeBinding DynamicMaterial3Binding;
	struct NiagaraVariableAttributeBinding CameraOffsetBinding;
	struct NiagaraVariableAttributeBinding UVScaleBinding;
	struct NiagaraVariableAttributeBinding PivotOffsetBinding;
	struct NiagaraVariableAttributeBinding MaterialRandomBinding;
	struct NiagaraVariableAttributeBinding CustomSortingBinding;
	struct NiagaraVariableAttributeBinding NormalizedAgeBinding;
	struct NiagaraVariableAttributeBinding RendererVisibilityTagBinding;
	TArray<struct NiagaraMaterialAttributeBinding> MaterialParameterBindings;
	struct NiagaraVariableAttributeBinding PrevPositionBinding;
	struct NiagaraVariableAttributeBinding PrevVelocityBinding;
	struct NiagaraVariableAttributeBinding PrevSpriteRotationBinding;
	struct NiagaraVariableAttributeBinding PrevSpriteSizeBinding;
	struct NiagaraVariableAttributeBinding PrevSpriteFacingBinding;
	struct NiagaraVariableAttributeBinding PrevSpriteAlignmentBinding;
	struct NiagaraVariableAttributeBinding PrevCameraOffsetBinding;
	struct NiagaraVariableAttributeBinding PrevPivotOffsetBinding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraSystem : public UFXSystemAsset
{
public:
	bool bDumpDebugSystemInfo;
	bool bDumpDebugEmitterInfo;
	bool bRequireCurrentFrameData;
	bool bFixedBounds;
	class UClass* EffectType;
	bool bOverrideScalabilitySettings;
	TArray<struct NiagaraSystemScalabilityOverride> ScalabilityOverrides;
	struct NiagaraSystemScalabilityOverrides SystemScalabilityOverrides;
	TArray<struct NiagaraEmitterHandle> EmitterHandles;
	TArray<class UClass*> ParameterCollectionOverrides;
	class UClass* SystemSpawnScript;
	class UClass* SystemUpdateScript;
	struct NiagaraSystemCompiledData SystemCompiledData;
	struct NiagaraUserRedirectionParameterStore ExposedParameters;
	struct Box FixedBounds;
	bool bAutoDeactivate;
	float WarmupTime;
	int WarmupTickCount;
	float WarmupTickDelta;
	bool bHasSystemScriptDIsWithPerInstanceData;
	bool bNeedsGPUContextInitForDataInterfaces;
	TArray<struct FName> UserDINamesReadInSystemScripts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Nickel : public AFortAthenaMutator_GameModeBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AOnlineBeacon : public AActor
{
public:
	float BeaconConnectionInitialTimeout;
	float BeaconConnectionTimeout;
	class UClass* NetDriver;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AOnlineBeaconClient : public AOnlineBeacon
{
public:
	class UClass* BeaconOwner;
	class UClass* BeaconConnection;
	EBeaconConnectionState ConnectionState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AOnlineBeaconHostObject : public AActor
{
public:
	struct FString BeaconTypeName;
	class UClass* ClientBeaconActorClass;
	TArray<class UClass*> ClientActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAchievementBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAchievementQueryCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAchievementWriteCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConnectionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCreateSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDestroySessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEndMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEndTurnCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFindSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFindTurnBasedMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInAppPurchaseCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInAppPurchaseCallbackProxy2 : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInAppPurchaseQueryCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInAppPurchaseQueryCallbackProxy2 : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInAppPurchaseRestoreCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInAppPurchaseRestoreCallbackProxy2 : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIpConnection : public UNetConnection
{
public:
	float SocketErrorDisconnectDelay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UIpNetDriver : public UNetDriver
{
public:
	bool LogPortUnreach;
	bool AllowPlayerPortUnreach;
	uint32_t MaxPortCountToTry;
	uint32_t ServerDesiredSocketReceiveBufferBytes;
	uint32_t ServerDesiredSocketSendBufferBytes;
	uint32_t ClientDesiredSocketReceiveBufferBytes;
	uint32_t ClientDesiredSocketSendBufferBytes;
	double MaxSecondsInReceive;
	int NbPacketsBetweenReceiveTimeTest;
	float ResolutionConnectionTimeout;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULeaderboardBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULeaderboardFlushCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULeaderboardQueryCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULogoutCallbackProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AOnlineBeaconHost : public AOnlineBeacon
{
public:
	int ListenPort;
	TArray<class UClass*> ClientActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineEngineInterfaceImpl : public UOnlineEngineInterface
{
public:
	struct FName VoiceSubsystemNameOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlinePIESettings : public UDeveloperSettings
{
public:
	bool bOnlinePIEEnabled;
	TArray<struct PIELoginSettingsInternal> Logins;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOnlineSessionClient : public UOnlineSession
{
public:
	bool bIsFromInvite;
	bool bHandlingDisconnect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APartyBeaconClient : public AOnlineBeaconClient
{
public:
	struct FString DestSessionId;
	struct PartyReservation PendingReservation;
	EClientRequestType RequestType;
	bool bPendingReservationSent;
	bool bCancelReservation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APartyBeaconHost : public AOnlineBeaconHostObject
{
public:
	class UClass* State;
	bool bLogoutOnSessionTimeout;
	float SessionTimeoutSecs;
	float TravelSessionTimeoutSecs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPartyBeaconState : public UObject
{
public:
	struct FName SessionName;
	int NumConsumedReservations;
	int MaxReservations;
	int NumTeams;
	int NumPlayersPerTeam;
	struct FName TeamAssignmentMethod;
	int ReservedHostTeamNum;
	int ForceTeamNum;
	bool bRestrictCrossConsole;
	TArray<struct FString> PlatformCrossplayRestrictions;
	TArray<struct PartyBeaconCrossplayPlatformMapping> PlatformTypeMapping;
	bool bEnableRemovalRequests;
	TArray<struct PartyReservation> Reservations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UQuitMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UShowLoginUICallbackProxy : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFailure;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASpectatorBeaconClient : public AOnlineBeaconClient
{
public:
	struct FString DestSessionId;
	struct SpectatorReservation PendingReservation;
	ESpectatorClientRequestType RequestType;
	bool bPendingReservationSent;
	bool bCancelReservation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASpectatorBeaconHost : public AOnlineBeaconHostObject
{
public:
	class UClass* State;
	bool bLogoutOnSessionTimeout;
	float SessionTimeoutSecs;
	float TravelSessionTimeoutSecs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpectatorBeaconState : public UObject
{
public:
	struct FName SessionName;
	int NumConsumedReservations;
	int MaxReservations;
	bool bRestrictCrossConsole;
	TArray<struct SpectatorReservation> Reservations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATestBeaconClient : public AOnlineBeaconClient
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATestBeaconHost : public AOnlineBeaconHostObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTurnBasedBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoipListenerSynthComponent : public SynthComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNamedInterfaces : public UObject
{
public:
	TArray<struct NamedInterface> NamedInterfaces;
	TArray<struct NamedInterfaceDef> NamedInterfaceDefs;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTurnBasedMatchInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOodleTrainerCommandlet : public UCommandlet
{
public:
	bool bCompressionTest;
	int HashTableSize;
	int DictionarySize;
	int DictionaryTrials;
	int TrialRandomness;
	int TrialGenerations;
	bool bNoTrials;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOverlays : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULocalizedOverlays : public UOverlays
{
public:
	class UClass* DefaultOverlays;
	Unknown LocaleToOverlaysMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBasicOverlays : public UOverlays
{
public:
	TArray<struct OverlayItem> Overlays;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHandlerComponentFactory : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPacketHandlerProfileConfig : public UObject
{
public:
	TArray<struct FString> Components;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MediaTimeEventItem : public FastArraySerializerItem
{
public:
	struct FString EventName;
	int64_t Time;
	struct FString Parameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MediaTimeEventArray : public FastArraySerializer
{
public:
	TArray<struct MediaTimeEventItem> Items;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APapayaTimedEvents : public AActor
{
public:
	Unknown MediaPlayerMap;
	class UClass* MeshEventResponder;
	TArray<class UClass*> TimedEventActorTargets;
	struct MediaTimeEventArray TimedEventsArray;
	struct FString ScreenName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPapayaTimedEventsResponderComponent : public UFortEventResponderComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionSpriteTextureSampler : public UMaterialExpressionTextureSampleParameter2D
{
public:
	bool bSampleAdditionalTextures;
	int AdditionalSlotIndex;
	struct FText SlotDisplayName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APaperCharacter : public ACharacter
{
public:
	class UClass* Sprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperFlipbook : public UObject
{
public:
	float FramesPerSecond;
	TArray<struct PaperFlipbookKeyFrame> KeyFrames;
	class UClass* DefaultMaterial;
	EFlipbookCollisionMode CollisionSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APaperFlipbookActor : public AActor
{
public:
	class UClass* RenderComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperFlipbookComponent : public UMeshComponent
{
public:
	class UClass* SourceFlipbook;
	class UClass* Material;
	float PlayRate;
	bool bLooping;
	bool bReversePlayback;
	bool bPlaying;
	float AccumulatedTime;
	int CachedFrameIndex;
	struct LinearColor SpriteColor;
	class UClass* CachedBodySetup;
	struct FScriptMulticastDelegate OnFinishedPlaying;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APaperGroupedSpriteActor : public AActor
{
public:
	class UClass* RenderComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperGroupedSpriteComponent : public UMeshComponent
{
public:
	TArray<class UClass*> InstanceMaterials;
	TArray<struct SpriteInstanceData> PerInstanceSpriteData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperRuntimeSettings : public UObject
{
public:
	bool bEnableSpriteAtlasGroups;
	bool bEnableTerrainSplineEditing;
	bool bResizeSpriteDataToMatchTextures;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperSprite : public UObject
{
public:
	TArray<class UClass*> AdditionalSourceTextures;
	struct Vector2D BakedSourceUV;
	struct Vector2D BakedSourceDimension;
	class UClass* BakedSourceTexture;
	class UClass* DefaultMaterial;
	class UClass* AlternateMaterial;
	TArray<struct PaperSpriteSocket> Sockets;
	ESpriteCollisionMode SpriteCollisionDomain;
	float PixelsPerUnrealUnit;
	class UClass* BodySetup;
	int AlternateMaterialSplitIndex;
	TArray<struct Vector4> BakedRenderData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APaperSpriteActor : public AActor
{
public:
	class UClass* RenderComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperSpriteAtlas : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperSpriteBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperSpriteComponent : public UMeshComponent
{
public:
	class UClass* SourceSprite;
	class UClass* MaterialOverride;
	struct LinearColor SpriteColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APaperTerrainActor : public AActor
{
public:
	class UClass* DummyRoot;
	class UClass* SplineComponent;
	class UClass* RenderComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTerrainComponent : public UPrimitiveComponent
{
public:
	class UClass* TerrainMaterial;
	bool bClosedSpline;
	bool bFilledSpline;
	class UClass* AssociatedSpline;
	int RandomSeed;
	float SegmentOverlapAmount;
	struct LinearColor TerrainColor;
	int ReparamStepsPerSegment;
	ESpriteCollisionMode SpriteCollisionDomain;
	float CollisionThickness;
	class UClass* CachedBodySetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTerrainMaterial : public UDataAsset
{
public:
	TArray<struct PaperTerrainMaterialRule> Rules;
	class UClass* InteriorFill;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTerrainSplineComponent : public USplineComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTileLayer : public UObject
{
public:
	struct FText LayerName;
	int LayerWidth;
	int LayerHeight;
	bool bHiddenInGame;
	bool bLayerCollides;
	bool bOverrideCollisionThickness;
	bool bOverrideCollisionOffset;
	float CollisionThicknessOverride;
	float CollisionOffsetOverride;
	struct LinearColor LayerColor;
	int AllocatedWidth;
	int AllocatedHeight;
	TArray<struct PaperTileInfo> AllocatedCells;
	class UClass* TileSet;
	TArray<int> AllocatedGrid;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTileMap : public UObject
{
public:
	int MapWidth;
	int MapHeight;
	int TileWidth;
	int TileHeight;
	float PixelsPerUnrealUnit;
	float SeparationPerTileX;
	float SeparationPerTileY;
	float SeparationPerLayer;
	struct TSoftClassPtr<UObject> SelectedTileSet;
	class UClass* Material;
	TArray<class UClass*> TileLayers;
	float CollisionThickness;
	ESpriteCollisionMode SpriteCollisionDomain;
	ETileMapProjectionMode ProjectionMode;
	int HexSideLength;
	class UClass* BodySetup;
	int LayerNameIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APaperTileMapActor : public AActor
{
public:
	class UClass* RenderComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTileMapComponent : public UMeshComponent
{
public:
	int MapWidth;
	int MapHeight;
	int TileWidth;
	int TileHeight;
	class UClass* DefaultLayerTileSet;
	class UClass* Material;
	TArray<class UClass*> TileLayers;
	struct LinearColor TileMapColor;
	int UseSingleLayerIndex;
	bool bUseSingleLayer;
	class UClass* TileMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPaperTileSet : public UObject
{
public:
	struct IntPoint TileSize;
	class UClass* TileSheet;
	TArray<class UClass*> AdditionalSourceTextures;
	struct IntMargin BorderMargin;
	struct IntPoint PerTileSpacing;
	struct IntPoint DrawingOffset;
	int WidthInTiles;
	int HeightInTiles;
	int AllocatedWidth;
	int AllocatedHeight;
	TArray<struct PaperTileMetadata> PerTileData;
	TArray<struct PaperTileSetTerrain> Terrains;
	int TileWidth;
	int TileHeight;
	int Margin;
	int Spacing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTileMapBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PartyMemberRepData : public OnlinePartyRepDataBase
{
public:
	struct PartyMemberPlatformData PlatformData;
	ECrossplayPreference CrossplayPreference;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PartyRepData : public OnlinePartyRepDataBase
{
public:
	struct PartyPrivacySettings PrivacySettings;
	TArray<struct PartyPlatformSessionInfo> PlatformSessions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChatroom : public UObject
{
public:
	struct FString CurrentChatRoomId;
	int MaxChatRoomRetries;
	int NumChatRoomRetries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialManager : public UObject
{
public:
	TArray<class UClass*> SocialToolkits;
	class UClass* SocialDebugTools;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialParty : public UObject
{
public:
	class UClass* ReservationBeaconClientClass;
	class UClass* SpectatorBeaconClientClass;
	struct UniqueNetIdRepl OwningLocalUserId;
	struct UniqueNetIdRepl CurrentLeaderId;
	Unknown PartyMembersById;
	bool bEnableAutomaticPartyRejoin;
	double PlatformUserInviteCooldown;
	double PrimaryUserInviteCooldown;
	class UClass* ReservationBeaconClient;
	class UClass* SpectatorBeaconClient;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPartyMember : public UObject
{
public:
	class UClass* SocialUser;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialToolkit : public UObject
{
public:
	class UClass* LocalUser;
	TArray<class UClass*> AllUsers;
	class UClass* LocalPlayerOwner;
	class UClass* SocialChatManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatManager : public UObject
{
public:
	Unknown DirectChannelsByTargetUser;
	Unknown ChatRoomsById;
	Unknown ReadOnlyChannelsByDisplayName;
	bool bEnableChatSlashCommands;
	Unknown GroupChannels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatChannel : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialChatRoom : public USocialChatChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialDebugTools : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialGroupChannel : public UObject
{
public:
	class UClass* SocialUser;
	struct UniqueNetIdRepl GroupId;
	struct FText DisplayName;
	TArray<class UClass*> Members;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialPartyChatRoom : public USocialChatRoom
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialPrivateMessageChannel : public USocialChatChannel
{
public:
	class UClass* TargetUser;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialReadOnlyChatChannel : public USocialChatChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialSettings : public UObject
{
public:
	TArray<struct FName> OssNamesWithEnvironmentIdPrefix;
	int DefaultMaxPartySize;
	bool bPreferPlatformInvites;
	bool bMustSendPrimaryInvites;
	bool bLeavePartyOnDisconnect;
	bool bSetDesiredPrivacyOnLocalPlayerBecomesLeader;
	float UserListAutoUpdateRate;
	int MinNicknameLength;
	int MaxNicknameLength;
	TArray<struct SocialPlatformDescription> SocialPlatformDescriptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USocialUser : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBodySetupCore : public UObject
{
public:
	struct FName BoneName;
	EPhysicsType PhysicsType;
	ECollisionTraceFlag CollisionTraceFlag;
	EBodyCollisionResponse CollisionReponse;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UChaosPhysicalMaterial : public UObject
{
public:
	float Friction;
	float StaticFriction;
	float Restitution;
	float LinearEtherDrag;
	float AngularEtherDrag;
	float SleepingLinearVelocityThreshold;
	float SleepingAngularVelocityThreshold;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicalMaterial : public UObject
{
public:
	float Friction;
	float StaticFriction;
	EFrictionCombineMode FrictionCombineMode;
	bool bOverrideFrictionCombineMode;
	float Restitution;
	EFrictionCombineMode RestitutionCombineMode;
	bool bOverrideRestitutionCombineMode;
	float Density;
	float SleepLinearVelocityThreshold;
	float SleepAngularVelocityThreshold;
	int SleepCounterThreshold;
	float RaiseMassToPower;
	float DestructibleDamageThresholdScale;
	class UClass* PhysicalMaterialProperty;
	EPhysicalSurface SurfaceType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicalMaterialPropertyBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPhysicsSettingsCore : public UDeveloperSettings
{
public:
	float DefaultGravityZ;
	float DefaultTerminalVelocity;
	float DefaultFluidFriction;
	int SimulateScratchMemorySize;
	int RagdollAggregateThreshold;
	float TriangleMeshTriangleMinAreaThreshold;
	bool bEnableShapeSharing;
	bool bEnablePCM;
	bool bEnableStabilization;
	bool bWarnMissingLocks;
	bool bEnable2DPhysics;
	bool bDefaultHasComplexCollision;
	float BounceThresholdVelocity;
	EFrictionCombineMode FrictionCombineMode;
	EFrictionCombineMode RestitutionCombineMode;
	float MaxAngularVelocity;
	float MaxDepenetrationVelocity;
	float ContactOffsetMultiplier;
	float MinContactOffset;
	float MaxContactOffset;
	bool bSimulateSkeletalMeshOnDedicatedServer;
	ECollisionTraceFlag DefaultShapeComplexity;
	struct ChaosSolverConfiguration SolverOptions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnimNode_WheelHandler : public AnimNode_SkeletalControlBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class VehicleAnimInstanceProxy : public AnimInstanceProxy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWheeledVehicleMovementComponent : public UPawnMovementComponent
{
public:
	bool bDeprecatedSpringOffsetMode;
	bool bReverseAsBrake;
	bool bUseRVOAvoidance;
	bool bRawHandbrakeInput;
	bool bRawGearUpInput;
	bool bRawGearDownInput;
	bool bWasAvoidanceUpdated;
	float Mass;
	TArray<struct WheelSetup> WheelSetups;
	float DragCoefficient;
	float ChassisWidth;
	float ChassisHeight;
	float DragArea;
	float EstimatedMaxEngineSpeed;
	float MaxEngineRPM;
	float DebugDragMagnitude;
	struct Vector InertiaTensorScale;
	float MinNormalizedTireLoad;
	float MinNormalizedTireLoadFiltered;
	float MaxNormalizedTireLoad;
	float MaxNormalizedTireLoadFiltered;
	float ThresholdLongitudinalSpeed;
	int LowForwardSpeedSubStepCount;
	int HighForwardSpeedSubStepCount;
	TArray<class UClass*> Wheels;
	float RVOAvoidanceRadius;
	float RVOAvoidanceHeight;
	float AvoidanceConsiderationRadius;
	float RVOSteeringStep;
	float RVOThrottleStep;
	int AvoidanceUID;
	struct NavAvoidanceMask AvoidanceGroup;
	struct NavAvoidanceMask GroupsToAvoid;
	struct NavAvoidanceMask GroupsToIgnore;
	float AvoidanceWeight;
	struct Vector PendingLaunchVelocity;
	struct ReplicatedVehicleState ReplicatedState;
	float RawSteeringInput;
	float RawThrottleInput;
	float RawBrakeInput;
	float SteeringInput;
	float ThrottleInput;
	float BrakeInput;
	float HandbrakeInput;
	float IdleBrakeInput;
	float StopThreshold;
	float WrongDirectionThreshold;
	struct VehicleInputRate ThrottleInputRate;
	struct VehicleInputRate BrakeInputRate;
	struct VehicleInputRate HandbrakeInputRate;
	struct VehicleInputRate SteeringInputRate;
	class UClass* OverrideController;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimpleWheeledVehicleMovementComponent : public UWheeledVehicleMovementComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTireConfig : public UDataAsset
{
public:
	float FrictionScale;
	TArray<struct TireConfigMaterialFriction> TireFrictionScales;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVehicleAnimInstance : public UAnimInstance
{
public:
	class UClass* WheeledVehicleMovementComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVehicleWheel : public UObject
{
public:
	class UClass* CollisionMesh;
	bool bDontCreateShape;
	bool bAutoAdjustCollisionSize;
	struct Vector Offset;
	float ShapeRadius;
	float ShapeWidth;
	float Mass;
	float DampingRate;
	float SteerAngle;
	bool bAffectedByHandbrake;
	class UClass* TireType;
	class UClass* TireConfig;
	float LatStiffMaxLoad;
	float LatStiffValue;
	float LongStiffValue;
	float SuspensionForceOffset;
	float SuspensionMaxRaise;
	float SuspensionMaxDrop;
	float SuspensionNaturalFrequency;
	float SuspensionDampingRatio;
	EWheelSweepType SweepType;
	float MaxBrakeTorque;
	float MaxHandBrakeTorque;
	class UClass* VehicleSim;
	int WheelIndex;
	float DebugLongSlip;
	float DebugLatSlip;
	float DebugNormalizedTireLoad;
	float DebugWheelTorque;
	float DebugLongForce;
	float DebugLatForce;
	struct Vector Location;
	struct Vector OldLocation;
	struct Vector Velocity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWheeledVehicle : public APawn
{
public:
	class UClass* Mesh;
	class UClass* VehicleMovement;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWheeledVehicleMovementComponent4W : public UWheeledVehicleMovementComponent
{
public:
	struct VehicleEngineData EngineSetup;
	struct VehicleDifferential4WData DifferentialSetup;
	float AckermannAccuracy;
	struct VehicleTransmissionData TransmissionSetup;
	struct RuntimeFloatCurve SteeringCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayspaceUser : public FastArraySerializerItem
{
public:
	struct UniqueNetIdRepl UserId;
	class UClass* LeafPlayspace;
	class UClass* PlayerStateCached;
	class UClass* ControllerCached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class PlayspaceUserList : public FastArraySerializer
{
public:
	TArray<struct PlayspaceUser> PlayspaceUsers;
	bool bIsInitialized;
	class UClass* Playspace;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayspacePlayerController : public APlayerController
{
public:
	bool bUsePlayerSpawningComponent;
	class UClass* ControllerSpawningComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceComponent : public UGameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceComponent_PlayerSpawning : public UPlayspaceComponent
{
public:
	bool bQueueUserForSpawnWhenAdded;
	float SpawnDelayMin;
	float SpawnDelayMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayspace : public AInfo
{
public:
	struct FScriptMulticastDelegate NotifyPlayspaceUserAdded;
	struct FScriptMulticastDelegate NotifyPlayspaceUserRemoved;
	struct FScriptMulticastDelegate NotifyPlayspaceInitialized;
	struct FScriptMulticastDelegate NotifyStartMatch;
	struct FScriptMulticastDelegate NotifyEndMatch;
	struct GameplayTagContainer GameplayTags;
	struct GameplayTag RequestedPlayspaceParentTag;
	TArray<class UClass*> ChildPlayspaceClasses;
	struct PlayspaceUserList PlayspaceUsers;
	TArray<class UClass*> ChildPlayspaces;
	TArray<struct UniqueNetIdRepl> PendingUsers;
	bool bAutoStartMatchOnServerStart;
	class UClass* PlayspaceManagerCached;
	class UClass* BoundGameplayVolume;
	bool bIsInitialized;
	bool bMatchHasEnded;
	float MatchStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGameplayVolume : public AActor
{
public:
	struct TSoftClassPtr<UObject> PlayspaceClassTemplate;
	class UClass* PlayspaceClass;
	class UClass* Playspace;
	struct GameplayTagContainer VolumeTags;
	class UClass* BoundsComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOverlapComponent : public UStaticMeshComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceControllerComponent_PlayerSpawning : public UControllerComponent
{
public:
	struct FScriptMulticastDelegate OnPlayerQueuedToSpawn;
	class UClass* SpawnCameraActor;
	bool bClientReadyForSpawning;
	struct ReplicatedSpawnInfo ReplicatedSpawnInfo;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayspaceGameMode : public AGameMode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayspaceGameState : public AGameState
{
public:
	class UClass* RootPlayspaceClass;
	bool bUsePlayspaceSystem;
	bool bUsePlayerSpawningComponent;
	class UClass* PlayspaceManagerComponentCached;
	class UClass* PlayerSpawningManagerCached;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceGameStateComponent : public UGameStateComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceGameStateComponent_PlayerSpawningManager : public UPlayspaceGameStateComponent
{
public:
	TArray<struct PlayspaceSpawningInfo> SpawningUsersArray;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayspaceLogic : public AActor
{
public:
	class UClass* Playspace;
	bool bAutoStartMatchOnServerStart;
	bool bMatchHasEnded;
	float MatchStartTime;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceLogicComponent : public UGameFrameworkComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspaceManagerComponent : public UGameStateComponent
{
public:
	class UClass* RootPlayspace;
	TArray<struct ActorOverlapEvent> UnhandledEnterEvents;
	TArray<struct ActorOverlapEvent> UnhandledExitEvents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPlayspacePlayerManagerComponent : public UPlayspaceComponent
{
public:
	TArray<class UClass*> ControllerComponents;
	TArray<class UClass*> PlayerStateComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class APlayspaceSpawnActor : public AActor
{
public:
	class UClass* SceneComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UKismetProceduralMeshLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralMeshComponent : public UMeshComponent
{
public:
	bool bUseComplexAsSimpleCollision;
	bool bUseAsyncCooking;
	class UClass* ProcMeshBodySetup;
	TArray<struct ProcMeshSection> ProcMeshSections;
	TArray<struct KConvexElem> CollisionConvexElems;
	struct BoxSphereBounds LocalBounds;
	TArray<class UClass*> AsyncBodySetupQueue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHISMBuilderSettings : public UObject
{
public:
	EComponentMobility Mobility;
	struct Int32Interval CullDistance;
	bool bCastShadow;
	bool bAffectDynamicIndirectLighting;
	bool bAffectDistanceFieldLighting;
	bool bCastDynamicShadow;
	bool bCastStaticShadow;
	bool bCastShadowAsTwoSided;
	bool bReceivesDecals;
	bool bOverrideLightMapRes;
	int OverriddenLightMapRes;
	ELightmapType LightmapType;
	bool bUseAsOccluder;
	struct BodyInstance BodyInstance;
	EHasCustomNavigableGeometry CustomNavigableGeometry;
	struct LightingChannels LightingChannels;
	bool bRenderCustomDepth;
	ERendererStencilMask CustomDepthStencilWriteMask;
	int CustomDepthStencilValue;
	int TranslucencySortPriority;
	bool bEnableDensityScaling;
	TArray<class UClass*> RuntimeVirtualTextures;
	int VirtualTextureCullMips;
	ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralParameterModifier : public UObject
{
public:
	bool bEnabled;
	float Contribution;
	EProceduralParameterModifierBlendMode BlendMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralContentVariationsWeightsModifier : public UProceduralParameterModifier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralContentVariationsWeightsMapModifier : public UProceduralContentVariationsWeightsModifier
{
public:
	TArray<struct ProceduralContentVariationMap> VariationsMaps;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralGenerator : public UObject
{
public:
	struct ProceduralDebugSettings DebugSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralCustomGenerator : public UProceduralGenerator
{
public:
	class UClass* GeneratorContextClass;
	class UClass* GeneratorContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralDataMap : public UObject
{
public:
	bool bUseRemapCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralFloatDataMap : public UProceduralDataMap
{
public:
	struct ProceduralRemapFloatCurve RemapCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralVectorDataMap : public UProceduralDataMap
{
public:
	struct ProceduralRemapVectorCurve RemapCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralDensityModifier : public UProceduralParameterModifier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralDensityMapModifier : public UProceduralDensityModifier
{
public:
	class UClass* Map;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AProceduralGenerationBlockingVolume : public AVolume
{
public:
	TArray<class UClass*> BlockedVolumes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralGenerationComponent : public UActorComponent
{
public:
	class UClass* Generator;
	bool bShowDebugVisualization;
	struct Guid ProceduralGenerationGuid;
	class UClass* GenerationVolume;
	class UClass* GenerationContext;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralGenerationContext : public UObject
{
public:
	class UClass* GeneratorContext;
	TArray<class UClass*> GeneratedContexts;
	TArray<class UClass*> RegisteredContexts;
	Unknown GeneratorContexts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AProceduralGenerationVolume : public AVolume
{
public:
	class UClass* ProceduralComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralGeneratorContext : public UObject
{
public:
	class UClass* Generator;
	class UClass* GenerationContext;
	class UClass* OwnerContext;
	TArray<class UClass*> GeneratedObjects;
	class UClass* ExportedPointCloud;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralGeneratorStack : public UProceduralGenerator
{
public:
	TArray<struct ProceduralGenerationStackElement> Generators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralGeneratorStackContext : public UProceduralGeneratorContext
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralLandscapeLayerMap : public UProceduralFloatDataMap
{
public:
	struct FName LandscapeLayerName;
	struct FName LandscapeEditLayerName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralPointCloud : public UObject
{
public:
	TArray<struct ProceduralPointCloudPoint> Points;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralRotationModifier : public UProceduralParameterModifier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralRotationMapModifier : public UProceduralRotationModifier
{
public:
	class UClass* Map;
	EProceduralRotationFormat RotationFormat;
	struct FloatInterval Roll;
	struct FloatInterval Pitch;
	struct FloatInterval Yaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralRotationNoiseModifier : public UProceduralRotationModifier
{
public:
	bool bRandomRoll;
	struct FloatInterval RandomRoll;
	bool bRandomPitch;
	struct FloatInterval RandomPitch;
	bool bRandomYaw;
	struct FloatInterval RandomYaw;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScaleModifier : public UProceduralParameterModifier
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScaleMapModifier : public UProceduralScaleModifier
{
public:
	bool bRemapScale;
	struct FloatInterval RemapScale;
	class UClass* Map;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScaleNoiseModifier : public UProceduralScaleModifier
{
public:
	struct FloatInterval Scale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterContentVariation : public UObject
{
public:
	float Weight;
	EProceduralScatterContentPivotMode PivotMode;
	struct Vector AdditionalPivotOffset;
	float FootprintBoundingBoxRatio;
	TArray<struct FName> SetActorTags;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterActorContentVariation : public UProceduralScatterContentVariation
{
public:
	class UClass* ActorClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterContentSettings : public UObject
{
public:
	TArray<struct FName> SetActorTags;
	TArray<class UClass*> Variations;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterActorContentSettings : public UProceduralScatterContentSettings
{
public:
	bool bHideFromWorldOutliner;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterGenerator : public UProceduralGenerator
{
public:
	EProceduralScatterMethod ScatterMethod;
	struct ProceduralScatterTileSettings TileSettings;
	int RandomSeed;
	int NumUniqueSourcePointPatterns;
	struct Vector2D GridSize;
	struct Vector2D GridJitter;
	float GridRotation;
	struct Vector2D GridOffset;
	TArray<struct ProceduralScatterSettingsElement> ScatterSettingsElements;
	TArray<struct FName> BlockingActorTags;
	bool bAllScatterPointsBlocking;
	bool bLocalDistribution;
	TArray<struct FName> BlockingScatterPointTags;
	struct ProceduralScatterDebugSettings ScatterDebugSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterGeneratorContext : public UProceduralGeneratorContext
{
public:
	struct ScatteredPointCloud ScatteredPointCloud;
	TArray<class UClass*> UniqueTiles;
	TArray<struct SourcePointGenerator> SourcePointGenerators;
	TArray<struct ProceduralScatterProjectionPoint> ProjectionPointCloud;
	class UClass* SourcePointCloud;
	class UClass* BlockerPointCloud;
	class UClass* ProjectionVectorMaterial;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterGeneratorTile : public UObject
{
public:
	class UClass* Generator;
	TArray<struct ProceduralScatter2DPoint> GeneratedPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterSettings : public UObject
{
public:
	class UClass* Content;
	bool bContentVariationsModifiersEnabled;
	struct ProceduralContentVariationsModifiers ContentVariationsModifiers;
	TArray<struct FName> SetPointTags;
	float CollisionRadius;
	bool bAutomaticCollisionRadius;
	bool bUseSphericalBoundsForAutomaticCollisionRadius;
	float AutomaticCollisionRadiusScaleFactor;
	int DistributionSeed;
	bool bDensityModifiersEnabled;
	struct ProceduralDensityModifiers DensityModifiers;
	float Density;
	TArray<struct FName> SourcePointTagIncludes;
	TArray<struct FName> SourcePointTagExcludes;
	TArray<struct FName> SourceActorTagIncludes;
	TArray<struct FName> SourceActorTagExcludes;
	TArray<struct FName> SourceComponentTagIncludes;
	TArray<struct FName> SourceComponentTagExcludes;
	struct FloatInterval SourcePointDistance;
	bool bUseSourcePointExactNumber;
	int SourcePointExactNumber;
	bool bScaleModifiersEnabled;
	struct ProceduralScaleModifiers ScaleModifiers;
	bool bRotationModifiersEnabled;
	struct ProceduralRotationModifiers RotationModifiers;
	bool bAlignToNormal;
	float AlignMaxAngle;
	struct ProceduralScatterTargetSurface TargetSurface;
	bool bDetectOverhangingLedge;
	int OverhangingLedgeDetectionRayCount;
	float OverhangingLedgeDetectionLength;
	float OverhangingLedgeDetectionVerticalThreshold;
	float OverhangingLedgeDetectionRadiusScale;
	float FilterMinimumScale;
	float OverlapPriority;
	bool bCollisionWithWorld;
	struct Vector CollisionScale;
	struct Color DebugColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterStaticMeshContentVariation : public UProceduralScatterContentVariation
{
public:
	EProceduralScatterStaticMeshMode StaticMeshMode;
	class UClass* Mesh;
	class UClass* ActorClass;
	TArray<class UClass*> OverrideMaterials;
	class UClass* OverrideInstancingSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralScatterStaticMeshContentSettings : public UProceduralScatterContentSettings
{
public:
	class UClass* ComponentClass;
	struct FName ComponentTag;
	class UClass* VariationsInstancingSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralSurfaceHeightMap : public UProceduralFloatDataMap
{
public:
	bool bNormalizedHeight;
	struct FloatInterval HeightRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralSurfaceSlopeAngleMap : public UProceduralFloatDataMap
{
public:
	bool bNormalizedSlopeAngle;
	struct FloatInterval SlopeAngleRange;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralTextureFloatMap : public UProceduralFloatDataMap
{
public:
	EProceduralTextureColorChannel Channel;
	struct ProceduralTextureSource Source;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralTextureVectorMap : public UProceduralVectorDataMap
{
public:
	struct ProceduralTextureSource Source;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProceduralVertexColorMap : public UProceduralFloatDataMap
{
public:
	EProceduralTextureColorChannel Channel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPropertyAccess : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPropertyEventBroadcaster : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPropertyEventSubscriber : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPurchaseFlowJSBridge : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AQosBeaconClient : public AOnlineBeaconClient
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AQosBeaconHost : public AOnlineBeaconHostObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UQosEvaluator : public UObject
{
public:
	bool bInProgress;
	bool bCancelOperation;
	TArray<struct DatacenterQosInstance> Datacenters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UQosRegionManager : public UObject
{
public:
	int NumTestsPerRegion;
	float PingTimeout;
	TArray<struct QosRegionInfo> RegionDefinitions;
	TArray<struct QosDatacenterInfo> DatacenterDefinitions;
	struct DateTime LastCheckTimestamp;
	class UClass* Evaluator;
	EQosCompletionResult QosEvalResult;
	TArray<struct RegionQosInstance> RegionOptions;
	struct FString ForceRegionId;
	bool bRegionForcedViaCommandline;
	struct FString SelectedRegionId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URejoinCheck : public UObject
{
public:
	ERejoinStatus LastKnownStatus;
	bool bRejoinAfterCheck;
	bool bAttemptingRejoin;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode : public UObject
{
public:
	TArray<class UClass*> AllChildNodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_ActorList : public UReplicationGraphNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNetReplicationGraphConnection : public UReplicationConnectionDriver
{
public:
	class UClass* NetConnection;
	class UClass* DebugActor;
	TArray<struct LastLocationGatherInfo> LastGatherLocations;
	TArray<class UClass*> ConnectionGraphNodes;
	class UClass* TearOffNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraph : public UReplicationDriver
{
public:
	class UClass* ReplicationConnectionManagerClass;
	class UClass* NetDriver;
	TArray<class UClass*> Connections;
	TArray<class UClass*> PendingConnections;
	TArray<class UClass*> GlobalGraphNodes;
	TArray<class UClass*> PrepareForReplicationNodes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBasicReplicationGraph : public UReplicationGraph
{
public:
	class UClass* GridNode;
	class UClass* AlwaysRelevantNode;
	TArray<struct ConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList;
	TArray<class UClass*> ActorsWithoutNetConnection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_ActorListFrequencyBuckets : public UReplicationGraphNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_DynamicSpatialFrequency : public UReplicationGraphNode_ActorList
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_ConnectionDormancyNode : public UReplicationGraphNode_ActorList
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_DormancyNode : public UReplicationGraphNode_ActorList
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_GridCell : public UReplicationGraphNode_ActorList
{
public:
	class UClass* DynamicNode;
	class UClass* DormancyNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_GridSpatialization2D : public UReplicationGraphNode
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_AlwaysRelevant : public UReplicationGraphNode
{
public:
	class UClass* ChildNode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode_ActorList
{
public:
	TArray<struct AlwaysRelevantActorInfo> PastRelevantActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UReplicationGraphNode_TearOff_ForConnection : public UReplicationGraphNode
{
public:
	TArray<struct TearOffActorInfo> TearOffActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AReplicationGraphDebugActor : public AActor
{
public:
	class UClass* ReplicationGraph;
	class UClass* ConnectionManager;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UResonanceAudioSoundfieldSettings : public USoundfieldEncodingSettingsBase
{
public:
	EResonanceRenderMode RenderMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UResonanceAudioBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AResonanceAudioDirectivityVisualizer : public AActor
{
public:
	class UClass* Material;
	class UClass* Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UResonanceAudioReverbPluginPreset : public USoundEffectSubmixPreset
{
public:
	struct ResonanceAudioReverbPluginSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UResonanceAudioSettings : public UObject
{
public:
	struct SoftObjectPath OutputSubmix;
	ERaQualityMode QualityMode;
	struct SoftObjectPath GlobalReverbPreset;
	struct SoftObjectPath GlobalSourcePreset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UResonanceAudioSpatializationSourceSettings : public USpatializationPluginSourceSettingsBase
{
public:
	ERaSpatializationMethod SpatializationMethod;
	float Pattern;
	float Sharpness;
	bool bToggleVisualization;
	float Scale;
	float Spread;
	ERaDistanceRolloffModel Rolloff;
	float MinDistance;
	float MaxDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMUnaryOp : public RigVMBaseOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMChangeTypeOp : public RigVMUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMJumpIfOp : public RigVMUnaryOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMJumpOp : public RigVMBaseOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMComparisonOp : public RigVMBaseOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMCopyOp : public RigVMBaseOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMBinaryOp : public RigVMBaseOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RigVMExecuteOp : public RigVMBaseOp
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class URigVM : public UObject
{
public:
	struct RigVMMemoryContainer WorkMemoryStorage;
	struct RigVMMemoryContainer LiteralMemoryStorage;
	struct RigVMByteCode ByteCodeStorage;
	struct RigVMInstructionArray Instructions;
	struct RigVMExecuteContext Context;
	TArray<struct FName> FunctionNamesStorage;
	TArray<struct RigVMParameter> Parameters;
	Unknown ParametersNameMap;
	class UClass* DeferredVMToCopy;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneBindingExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneEventTrackExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneFolderExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieScenePropertyTrackExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingKey : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingActorReferenceKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingChannel : public UObject
{
public:
	struct FName ChannelName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingActorReferenceChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingBoolKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingBoolChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingByteKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingByteChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingEventKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingEventChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingFloatKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingFloatChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingIntegerKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingIntegerChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingObjectPathKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingObjectPathChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingStringKey : public UMovieSceneScriptingKey
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneScriptingStringChannel : public UMovieSceneScriptingChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSectionExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneSequenceExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTrackExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneVectorTrackExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USequencerScriptingRangeExtensions : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USidecarDss : public UObject
{
public:
	Unknown FileInfoMap;
	struct FString DssDownloadUrl;
	struct FString DssCheckoutUrl;
	struct FString DssUploadUrl;
	struct FString DssRestoreUrl;
	struct FString DssCheckinUrl;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USidecarInventorySys : public UObject
{
public:
	struct FString InventoryDownloadUrl;
	struct FString InventoryLockUrl;
	struct FString ItemUpdateUrl;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USidecarSys : public UObject
{
public:
	class UClass* SidecarDss;
	class UClass* SidecarInventory;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USignificanceManager : public UObject
{
public:
	struct SoftClassPath SignificanceManagerClassName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Skyfire : public AFortAthenaMutator_GameModeBase
{
public:
	struct FScriptMulticastDelegate OnSkyfirePhaseChanged;
	struct GameplayTag AbductionTeleportStartEventTag;
	struct GameplayTag AbductionTeleportCompleteEventTag;
	struct GameplayTag BeingAbductedTag;
	struct GameplayTag AbductionWarpTunnelStartEventTag;
	struct GameplayTag AbductionWarpTunnelEndEventTag;
	struct GameplayTag MothershipWarpTunnelStartEventTag;
	struct GameplayTag MothershipWarpTunnelEndEventTag;
	TArray<EFortItemType> ItemsTypesToKeepOnAbduction;
	struct FName SkyfireWeaponHolsterId;
	struct FScriptMulticastDelegate OnFirstSquadReachedMaxLootRarity;
	struct FScriptMulticastDelegate OnTimeOrbsSpawned;
	struct FScriptMulticastDelegate OnSecurityOrbsSpawned;
	struct FScriptMulticastDelegate OnPlayerEnteredMainMap;
	class UClass* TODOverrideActorClass;
	struct TSoftClassPtr<UObject> TimeOrbClass;
	class UClass* BlockInventoryActionsGE;
	struct ScalableFloat bShouldSkyfireSquadMemberUIBeEnabled;
	struct GameplayTagContainer BuildingFoundationsToActivateTags;
	struct ScalableFloat SecondsGrantedOnTimePickup;
	struct ScalableFloat InitialTimeBeforeLootRoomTeleport;
	struct ScalableFloat MaxTimeBeforeLootRoomTeleport;
	struct ScalableFloat KnockedOutTeleportToLootRoomTimeReduction;
	struct ScalableFloat KnockedOutPrisonPenaltyWaitTime;
	struct ScalableFloat bShowWarpTunnelInsteadOfPenaltyPrison;
	EFortRarity InitialLootRarity;
	EFortRarity MaxLootRarity;
	Unknown LootRoomTagByRarityMap;
	struct ScalableFloat bStartExitLootRoomTimerAfterChestOpened;
	struct ScalableFloat bStartExitLootRoomTimerAfterItemPickup;
	Unknown LootRoomPreCountdownTimeByRarity;
	Unknown LootRoomTimeByRarity;
	struct GameplayTag PlayspaceTeleportSquadPointTag;
	struct GameplayTag PrisonTeleportSquadPointTag;
	struct ScalableFloat PrisonTime;
	struct ScalableFloat MinPrisonTime;
	struct ScalableFloat TimeToWaitBeforeStartingSkyfireWithJustBots;
	struct SkyfireItemsAndAbilitySet PrisonAndPlayspaceItemsAndAS;
	struct SkyfireItemsAndAbilitySet PrisonThroughLootRoomItemsAndAS;
	class UClass* InPrisonAndPenaltyPrisonGE;
	struct SkyfireItemsAndAbilitySet PlayspaceItemsAndAS;
	struct SkyfireItemsAndAbilitySet LootRoomItemsAndAS;
	struct ScalableFloat ExitSkydiveSafeZoneRadiusPercent;
	struct ScalableFloat ExitSkydiveSquadRadius;
	struct ScalableFloat ExitSkydiveHeight;
	class UClass* BlockStormCenterActorClass;
	struct ScalableFloat BlockStormRadius;
	class UClass* TeleportAS;
	struct ScalableFloat TeleportASRemovalDelay;
	struct SkyfireTeleportData PrisonToPlayspaceTeleportData;
	struct SkyfireTeleportData EnterLootRoomTeleportData;
	struct SkyfireTeleportData ExitSkydiveTeleportData;
	struct SkyfireTeleportData KnockedOutTeleportData;
	float RestartSelectionWeightTimePower;
	struct TSoftClassPtr<UObject> SquadMemberStatusWidgetClass;
	EUIExtensionSlot SquadMemberStatusWidgetExtensionSlot;
	class UClass* SkyfireBotPlayerPawnComponentClass;
	class UClass* SkyfireAudioManagerClass;
	float ClearCachedIndicatorsInterval;
	struct GameplayTag SkyfireChestTag;
	struct ScalableFloat bShowLootRoomFlavorText_Perf;
	struct ScalableFloat bShowLootRoomFlavorText_Feel;
	struct ScalableFloat FlavorTextCountdownThreshold;
	class UClass* TeleportMutator;
	TArray<struct SkyfireSquadDataEntry> SquadDataArray;
	Unknown LootRoomTeleportPointMap;
	TArray<class UClass*> AllPlayspaceTeleportSquadPoints;
	TArray<class UClass*> AvailablePlacespaceTeleportSquadPoints;
	TArray<class UClass*> AvailablePrisonTeleportSquadPoints;
	Unknown PlayerAnalyticData;
	ESkyfirePhase CurrentPhase;
	TArray<class UClass*> LoadedSkyfireAssets;
	TArray<class UClass*> PlayersReadyToTeleportFromFirstPrisonToPlayspace;
	struct Vector CachedBlockStormCenter;
	class UClass* SkyfireAudioManager;
	int TimeOrbCount;
	int SecurityOrbCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_Skyfire : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyfireAudioManager : public AActor
{
public:
	class UClass* SkyfireMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USkyfireBackpackComponent : public UActorComponent
{
public:
	class UClass* SkyfireMutator;
	class UClass* SkyfirePlayerPawnComponent;
	struct FScriptMulticastDelegate OnTimeToUpdate;
	float MaxInitialDelay;
	struct ScalableFloat MaxUpdateDistance;
	class UClass* CurrentAssociatedPlayerPawn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkyfirePlayerPawnComponent : public FortPawnComponent
{
public:
	struct FScriptMulticastDelegate OnPlayerEnteredLootRoom;
	struct FScriptMulticastDelegate OnTeleportToLootRoomTimeChanged;
	struct FScriptMulticastDelegate OnEarnedLootRarityChanged;
	struct FScriptMulticastDelegate OnTimeUntilTeleportToLootRoomReachedCap;
	struct FScriptMulticastDelegate OnExitLootRoomTimeChanged;
	struct FScriptMulticastDelegate OnExitInitialPrisonTimeChanged;
	struct FScriptMulticastDelegate OnInMothershipChanged;
	class UClass* CachedSkyfireMutator;
	float TeleportToLootRoomTime;
	EFortRarity EarnedLootRarity;
	bool bInMothership;
	byte TimeUntilTeleportToLootRoomReachedCapCounter;
	float ExitLootRoomTime;
	float ExitInitialPrisonTime;
	float AbductionTeleportStartTime;
	TArray<struct FortItemEntry> RecordedItemEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkyfireBotPlayerPawnComponent : public SkyfirePlayerPawnComponent
{
public:
	float LeashRadius;
	class UClass* BehaviorTree;
	TArray<class UClass*> SkyfireSkillSetClasses;
	struct FName InPrisonKeyName;
	struct FName InGameplayKeyName;
	struct FName InLootRoomKeyName;
	bool bHasEnteredLootRoom;
	class UClass* PreviousBehaviorTree;
	TArray<class UClass*> PreviousSkillSetClasses;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkyfireControllerComponent : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate OnSquadMemberMothershipStatusChanged;
	class UClass* CachedTODOverrideActor;
	class UClass* CachedSkyfireMutator;
	TArray<struct SkyfireSquadMemberStatusData> SquadMemberStatusData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyfireInGameMapManager : public AFortInGameMapManagerAthena
{
public:
	class UClass* CachedSkyfireMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyfireOutOfBoundsVolume : public APhysicsVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyfireTeleportSquadPoint : public AFortSquadStart
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyfireTODOverrideVolume : public AGameplayVolume
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASkyfireVaultOrbSpawner : public AActor
{
public:
	struct ScalableFloat OrbSpawnerNetCullDistance;
	class UClass* VaultOrbClass;
	struct FName OrbSpawnPointTag;
	byte MaximumPlayersAllowedInMothership;
	struct ScalableFloat OrbSpawnZOffset;
	struct ScalableFloat DelayToInitialOrbSpawn;
	struct ScalableFloat OrbSpawnDelayAfterPickup;
	struct ScalableFloat NoOrbPickedUpSpawnTime;
	struct OrbSpawnerConfigByCategory AbsoluteMaximumActiveOrbCountByCategory;
	struct OrbSpawnerConfigByCategory InitialOrbCountByCategory;
	struct OrbSpawnerConfigByCategory OrbCheckFrequencyByCategory;
	struct OrbSpawnerConfigByCategory ChanceToSpawnNewOrbByCategory;
	TArray<struct OrbCountLimit> OrbCountLimitsForPlayerCounts;
	Unknown OrbCountLimitsForRewardTiers;
	class UClass* CachedSkyfireMutator;
	TArray<class UClass*> CachedSkyfirePawnComponentsOnMothership;
	bool bHasSpawnedInitialOrbs;
	TArray<struct OrbSpawnPoint> OrbSpawnPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkyfireWidgetBase : public LTMWidgetBase
{
public:
	class UClass* CachedSkyfireMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SkyfireSquadmateStatusWidget : public SkyfireWidgetBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class PointerEvent : public InputEvent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class CharacterEvent : public InputEvent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class KeyEvent : public InputEvent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class NavigationEvent : public InputEvent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AnalogInputEvent : public KeyEvent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class TableRowStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush SelectorFocusedBrush;
	struct SlateBrush ActiveHoveredBrush;
	struct SlateBrush ActiveBrush;
	struct SlateBrush InactiveHoveredBrush;
	struct SlateBrush InactiveBrush;
	struct SlateBrush EvenRowBackgroundHoveredBrush;
	struct SlateBrush EvenRowBackgroundBrush;
	struct SlateBrush OddRowBackgroundHoveredBrush;
	struct SlateBrush OddRowBackgroundBrush;
	struct SlateColor TextColor;
	struct SlateColor SelectedTextColor;
	struct SlateBrush DropIndicator_Above;
	struct SlateBrush DropIndicator_Onto;
	struct SlateBrush DropIndicator_Below;
	struct SlateBrush ActiveHighlightedBrush;
	struct SlateBrush InactiveHighlightedBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ButtonStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush Normal;
	struct SlateBrush Hovered;
	struct SlateBrush Pressed;
	struct SlateBrush Disabled;
	struct Margin NormalPadding;
	struct Margin PressedPadding;
	struct SlateSound PressedSlateSound;
	struct SlateSound HoveredSlateSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ComboButtonStyle : public SlateWidgetStyle
{
public:
	struct ButtonStyle ButtonStyle;
	struct SlateBrush DownArrowImage;
	struct Vector2D ShadowOffset;
	struct LinearColor ShadowColorAndOpacity;
	struct SlateBrush MenuBorderBrush;
	struct Margin MenuBorderPadding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ComboBoxStyle : public SlateWidgetStyle
{
public:
	struct ComboButtonStyle ComboButtonStyle;
	struct SlateSound PressedSlateSound;
	struct SlateSound SelectionChangeSlateSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EditableTextStyle : public SlateWidgetStyle
{
public:
	struct SlateFontInfo Font;
	struct SlateColor ColorAndOpacity;
	struct SlateBrush BackgroundImageSelected;
	struct SlateBrush BackgroundImageComposing;
	struct SlateBrush CaretImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ScrollBarStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush HorizontalBackgroundImage;
	struct SlateBrush VerticalBackgroundImage;
	struct SlateBrush VerticalTopSlotImage;
	struct SlateBrush HorizontalTopSlotImage;
	struct SlateBrush VerticalBottomSlotImage;
	struct SlateBrush HorizontalBottomSlotImage;
	struct SlateBrush NormalThumbImage;
	struct SlateBrush HoveredThumbImage;
	struct SlateBrush DraggedThumbImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class EditableTextBoxStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush BackgroundImageNormal;
	struct SlateBrush BackgroundImageHovered;
	struct SlateBrush BackgroundImageFocused;
	struct SlateBrush BackgroundImageReadOnly;
	struct Margin Padding;
	struct SlateFontInfo Font;
	struct SlateColor ForegroundColor;
	struct SlateColor BackgroundColor;
	struct SlateColor ReadOnlyForegroundColor;
	struct Margin HScrollBarPadding;
	struct Margin VScrollBarPadding;
	struct ScrollBarStyle ScrollBarStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TextBlockStyle : public SlateWidgetStyle
{
public:
	struct SlateFontInfo Font;
	struct SlateColor ColorAndOpacity;
	struct Vector2D ShadowOffset;
	struct LinearColor ShadowColorAndOpacity;
	struct SlateColor SelectedBackgroundColor;
	struct LinearColor HighlightColor;
	struct SlateBrush HighlightShape;
	struct SlateBrush StrikeBrush;
	struct SlateBrush UnderlineBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SpinBoxStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush BackgroundBrush;
	struct SlateBrush HoveredBackgroundBrush;
	struct SlateBrush ActiveFillBrush;
	struct SlateBrush InactiveFillBrush;
	struct SlateBrush ArrowsImage;
	struct SlateColor ForegroundColor;
	struct Margin TextPadding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MotionEvent : public InputEvent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ScrollBoxStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush TopShadowBrush;
	struct SlateBrush BottomShadowBrush;
	struct SlateBrush LeftShadowBrush;
	struct SlateBrush RightShadowBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CheckBoxStyle : public SlateWidgetStyle
{
public:
	ESlateCheckBoxType CheckBoxType;
	struct SlateBrush UncheckedImage;
	struct SlateBrush UncheckedHoveredImage;
	struct SlateBrush UncheckedPressedImage;
	struct SlateBrush CheckedImage;
	struct SlateBrush CheckedHoveredImage;
	struct SlateBrush CheckedPressedImage;
	struct SlateBrush UndeterminedImage;
	struct SlateBrush UndeterminedHoveredImage;
	struct SlateBrush UndeterminedPressedImage;
	struct Margin Padding;
	struct SlateColor ForegroundColor;
	struct SlateColor BorderBackgroundColor;
	struct SlateSound CheckedSlateSound;
	struct SlateSound UncheckedSlateSound;
	struct SlateSound HoveredSlateSound;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ProgressBarStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush BackgroundImage;
	struct SlateBrush FillImage;
	struct SlateBrush MarqueeImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class CompositeSubFont : public CompositeFallbackFont
{
public:
	TArray<struct Int32Range> CharacterRanges;
	struct FString Cultures;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WindowStyle : public SlateWidgetStyle
{
public:
	struct ButtonStyle MinimizeButtonStyle;
	struct ButtonStyle MaximizeButtonStyle;
	struct ButtonStyle RestoreButtonStyle;
	struct ButtonStyle CloseButtonStyle;
	struct TextBlockStyle TitleTextStyle;
	struct SlateBrush ActiveTitleBrush;
	struct SlateBrush InactiveTitleBrush;
	struct SlateBrush FlashTitleBrush;
	struct SlateColor BackgroundColor;
	struct SlateBrush OutlineBrush;
	struct SlateColor OutlineColor;
	struct SlateBrush BorderBrush;
	struct SlateBrush BackgroundBrush;
	struct SlateBrush ChildBackgroundBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ScrollBorderStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush TopShadowBrush;
	struct SlateBrush BottomShadowBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DockTabStyle : public SlateWidgetStyle
{
public:
	struct ButtonStyle CloseButtonStyle;
	struct SlateBrush NormalBrush;
	struct SlateBrush ActiveBrush;
	struct SlateBrush ColorOverlayTabBrush;
	struct SlateBrush ColorOverlayIconBrush;
	struct SlateBrush ForegroundBrush;
	struct SlateBrush HoveredBrush;
	struct SlateBrush ContentAreaBrush;
	struct SlateBrush TabWellBrush;
	struct Margin TabPadding;
	float OverlapWidth;
	struct SlateColor FlashColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TableColumnHeaderStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush SortPrimaryAscendingImage;
	struct SlateBrush SortPrimaryDescendingImage;
	struct SlateBrush SortSecondaryAscendingImage;
	struct SlateBrush SortSecondaryDescendingImage;
	struct SlateBrush NormalBrush;
	struct SlateBrush HoveredBrush;
	struct SlateBrush MenuDropdownImage;
	struct SlateBrush MenuDropdownNormalBorderBrush;
	struct SlateBrush MenuDropdownHoveredBorderBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SplitterStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush HandleNormalBrush;
	struct SlateBrush HandleHighlightBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HeaderRowStyle : public SlateWidgetStyle
{
public:
	struct TableColumnHeaderStyle ColumnStyle;
	struct TableColumnHeaderStyle LastColumnStyle;
	struct SplitterStyle ColumnSplitterStyle;
	struct SlateBrush BackgroundBrush;
	struct SlateColor ForegroundColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InlineTextImageStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush Image;
	int16_t Baseline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SliderStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush NormalBarImage;
	struct SlateBrush HoveredBarImage;
	struct SlateBrush DisabledBarImage;
	struct SlateBrush NormalThumbImage;
	struct SlateBrush HoveredThumbImage;
	struct SlateBrush DisabledThumbImage;
	float BarThickness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VolumeControlStyle : public SlateWidgetStyle
{
public:
	struct SliderStyle SliderStyle;
	struct SlateBrush HighVolumeImage;
	struct SlateBrush MidVolumeImage;
	struct SlateBrush LowVolumeImage;
	struct SlateBrush NoVolumeImage;
	struct SlateBrush MutedImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SearchBoxStyle : public SlateWidgetStyle
{
public:
	struct EditableTextBoxStyle TextBoxStyle;
	struct SlateFontInfo ActiveFontInfo;
	struct SlateBrush UpArrowImage;
	struct SlateBrush DownArrowImage;
	struct SlateBrush GlassImage;
	struct SlateBrush ClearImage;
	struct Margin ImagePadding;
	bool bLeftAlignButtons;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ExpandableAreaStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush CollapsedImage;
	struct SlateBrush ExpandedImage;
	float RolloutAnimationSeconds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class InlineEditableTextBlockStyle : public SlateWidgetStyle
{
public:
	struct EditableTextBoxStyle EditableTextBoxStyle;
	struct TextBlockStyle TextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class HyperlinkStyle : public SlateWidgetStyle
{
public:
	struct ButtonStyle UnderlineStyle;
	struct TextBlockStyle TextStyle;
	struct Margin Padding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFontBulkData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFontFaceInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFontProviderInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateTypes : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateWidgetStyleAsset : public UObject
{
public:
	class UClass* CustomStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateWidgetStyleContainerBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateWidgetStyleContainerInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UButtonWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct ButtonStyle ButtonStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCheckBoxWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct CheckBoxStyle CheckBoxStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UComboBoxWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct ComboBoxStyle ComboBoxStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UComboButtonWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct ComboButtonStyle ComboButtonStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableTextBoxWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct EditableTextBoxStyle EditableTextBoxStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableTextWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct EditableTextStyle EditableTextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProgressWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct ProgressBarStyle ProgressBarStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScrollBarWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct ScrollBarStyle ScrollBarStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScrollBoxWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct ScrollBoxStyle ScrollBoxStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateSettings : public UObject
{
public:
	bool bExplicitCanvasChildZOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpinBoxWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct SpinBoxStyle SpinBoxStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextBlockWidgetStyle : public USlateWidgetStyleContainerBase
{
public:
	struct TextBlockStyle TextBlockStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UToolMenuBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AITask_UseSmartObject : public AITask
{
public:
	class UClass* SOComponent;
	struct FScriptMulticastDelegate OnFinished;
	class UClass* MoveToTask;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_FindAndUseSmartObject : public UBTTaskNode
{
public:
	struct GameplayTagQuery ActivityRequirements;
	float Radius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBTTask_UseSmartObject : public UBTTask_BlackboardBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AGenericSmartObject : public AActor
{
public:
	class UClass* SOComponent;
	TArray<class UClass*> ReferenceActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URichSmartObjectInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USmartObjectBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USmartObjectComponent : public UActorComponent
{
public:
	struct TSoftClassPtr<UObject> Config;
	struct SmartObjectID RegisteredID;
	uint32_t ExecutionPriorityOverride;
	Unknown GameplayTagAssetInterfaceImplementation;
	bool bRichSmartObjectOwner;
	bool bRichSmartObjectComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USmartObjectConfig : public UDataAsset
{
public:
	TArray<struct SmartObjectUseConfig> Uses;
	struct GameplayTagContainer DescriptionTags;
	uint32_t MaxConcurrentUsers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USmartObjectManager : public UObject
{
public:
	Unknown RuntimeSmartObjects;
	bool bCreateIfMissing;
	float DefaultUnusedSmartObjectLifespan;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USmartObjectRenderingComponent : public UPrimitiveComponent
{
public:
	ESOReferenceDrawingMode ReferenceDrawingMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialListEntryBase : public CommonButtonLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialUserListViewBase : public ListViewBase
{
public:
	float EntrySpacing;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialChatChannelTab : public CommonButtonLegacy
{
public:
	class UClass* ChatChannel;
	class UClass* CommonText_ChannelName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialChatContainer : public UserWidget
{
public:
	class UClass* ChatManager;
	TArray<class UClass*> JoinedChannels;
	class UClass* ActiveChannel;
	class UClass* TabButtonGroup;
	class UClass* ChatList_Messages;
	class UClass* ChatEditableText_MessageEntry;
	class UClass* Button_SendMessage;
	class UClass* EntryBox_JoinedChannels;
	class UClass* ScrollBox_Channels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialChatEditableText : public Widget
{
public:
	struct EditableTextStyle EditableTextStyle;
	struct TextBlockStyle AutoCompleteStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialChatMessageEntry : public UserWidget
{
public:
	struct SocialChatMessageEntryStyle DefaultStyle;
	class UClass* RichText_Message;
	class UClass* Button_MessageButton;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialChatMessageList : public ListViewBase
{
public:
	bool bIsFocusable;
	class UClass* ActiveChannel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialGroupListEntry : public CommonButtonLegacy
{
public:
	class UClass* ActionMenuClass;
	class UClass* SocialGroup;
	class UClass* Text_GroupName;
	class UClass* MenuAnchor_Actions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialGroupTreeView : public TreeView
{
public:
	class UClass* GroupEntryWidgetClass;
	class UClass* UserEntryWidgetClass;
	class UClass* ActionMenuClass;
	class UClass* ActionMenu;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialInteractionButton : public CommonButtonLegacy
{
public:
	struct LinearColor DefaultIndicatorColor;
	struct LinearColor AlertingIndicatorColor;
	class UClass* Text_InteractionName;
	class UClass* Border_InteractionIndicator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialActionMenu : public CommonActivatableWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialInteractionMenu : public SocialActionMenu
{
public:
	class UClass* EntryBox_PositiveInteractions;
	class UClass* EntryBox_NegativeInteractions;
	class UClass* Spacer_InteractionSeparator;
	class UClass* Switcher_Confirmation;
	class UClass* Text_ConfirmationLabel;
	class UClass* Button_Confirm;
	class UClass* Button_Decline;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialNameTextBlock : public CommonRichTextBlock
{
public:
	class UClass* SocialUser;
	float MinDesiredSize;
	float MaxDesiredSize;
	bool bShowSecondName;
	EPlatformIconDisplayRule PlatformIconDisplayRule;
	bool bWrapToNextLine;
	struct Color SecondNameColor;
	int SecondNameFontSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDesignerPreviewChatChannel : public USocialChatChannel
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialListInteractableEntryBase : public SocialListEntryBase
{
public:
	class UClass* ActionMenuClass;
	class UClass* MenuAnchor_Actions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialListUserEntryBase : public SocialListInteractableEntryBase
{
public:
	class UClass* Text_SocialName;
	class UClass* Text_RichPresence;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialUserListHeaderEntry : public SocialListEntryBase
{
public:
	class UClass* Text_ListName;
	class UClass* Text_NumEntries;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialUserListView : public SocialUserListViewBase
{
public:
	class UClass* ActiveActionMenu;
	Unknown CachedActionMenuPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SocialUserTreeView : public SocialUserListView
{
public:
	class UClass* UserEntryWidgetClass;
	class UClass* InviteEntryWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundCueTemplate : public USoundCue
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundCueContainer : public USoundCueTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundCueDistanceCrossfade : public USoundCueTemplate
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundCueTemplateSettings : public UDeveloperSettings
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAmbisonicsEncodingSettings : public USoundfieldEncodingSettingsBase
{
public:
	int AmbisonicsOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundLibraryContext : public UObject
{
public:
	class UClass* Actor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundLibraryAnimContext : public USoundLibraryContext
{
public:
	struct SoundLibraryAnimContextSettings AnimSettings;
	class UClass* Animation;
	float AnimRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAnimNotifyState_SoundLibrary : public UAnimNotifyState
{
public:
	class UClass* SoundContext;
	TArray<class UClass*> PlayingComps;
	struct SoundLibraryPlaySoundResult PlaybackResult;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundLibraryComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnSoundLibraryPlayEvent;
	TArray<class UClass*> SoundLibraries;
	bool bAutoEnable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundLibrarySubsystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USimpleSoundLibraryContext : public USoundLibraryContext
{
public:
	struct SimpleSoundLibraryContextSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAttachedSoundLibraryContext : public USoundLibraryContext
{
public:
	struct AttachedSoundLibraryContextSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USoundLibrary : public UObject
{
public:
	Unknown Sounds;
	TArray<class UClass*> LoadedSoundObjects;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCheatManager_SpecialEvent : public UFortCheatManager_Coupled
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_SpecialEvent : public AFortAthenaMutator
{
public:
	struct FScriptMulticastDelegate TeleportAllPlayersFinished;
	struct FScriptMulticastDelegate OnPawnLoaded;
	struct FScriptMulticastDelegate OnInitController;
	struct FScriptMulticastDelegate OnResumeGame;
	struct FScriptMulticastDelegate OnSpecialClientEvent;
	bool bPlayersAreInvincible;
	int MinimumScoreBumpForAutomadeGoal;
	TArray<float> ScoreBrackets;
	bool bEnforceInfiniteWarmup;
	struct FName WarmupIslandPlayerStartTag;
	bool bAllowInventoryOpen;
	struct ScalableFloat bAllowFullScreenMap;
	bool bBlockTeamIndicators;
	struct GameplayTagContainer UIToHideWhenInInfiniteWarmup;
	struct GameplayTagContainer ClientEventsThatUnhideHiddenWhileLoadingHUDElements;
	class UClass* EventAircraft;
	struct AircraftFlightInfo EventAircraftInfo;
	class UClass* EventAircraftClass;
	class UClass* ScriptActor;
	bool bDisableHUD;
	byte GameResumed;
	struct Vector AdditionalViewpoint;
	bool bParachutesDisabled;
	struct FString LastCSVEventName;
	bool bCanStreamBuildingFoundationsIn;
	int AllPlayerTeleportedCount;
	struct FortDelayRTMMData DelayPlayersFromReturningToLobbyData;
	struct FName NamedWeightForContainerLootRoll;
	float WeightForContainerLootRoll;
	TArray<struct FortSpecialEventEmoteData> SpecialEventEmoteData;
	struct GameplayTagContainer BlockedNativeActions;
	class UClass* SpecialEventsInputComponent;
	TArray<struct FortSpecialEventOverrideParts> SpecialEventOverrideParts;
	struct FortSpecialEventGEData GameplayEffectToApplyOnSwapToDefault;
	Unknown OverridePartsArrayIndexMap;
	TArray<struct FortSpecialEventGEData> GameplayEffectsToApplyOnLogin;
	TArray<class UClass*> UnhandledPlayerControllers;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_GameplayCinematic : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate BP_OnStartGameplayOutro;
	struct FScriptMulticastDelegate BP_OnGameplayIntroFinished;
	bool bIsReadyForGameplay;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortControllerComponent_SpecialEvent : public FortControllerComponent
{
public:
	Unknown SpecialEventMutator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortSpecialRelevancyActorSpawner : public AFortActorSpawner
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpecialEventGameplayGlobals : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpecialEventGameplayLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAsyncAction_GameplayCinematicComponentReady : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASpecialEventPhase : public AInfo
{
public:
	struct GameplayTag PhaseTag;
	bool bApplyGameplayEffects;
	TArray<class UClass*> GameplayEffectsToApply;
	class UClass* CameraModifierToApply;
	bool bRemoveGameplayEffects;
	TArray<class UClass*> GameplayEffectsToRemove;
	class UClass* AppliedCameraModifier;
	ESpecialEventPhaseState PhaseState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ASpecialEventScript : public AInfo
{
public:
	TArray<struct PhaseInfo> PhaseInfoArray;
	class UClass* MasterSequence;
	int ReplicatedActivePhaseIndex;
	int StartingIndex;
	EScriptStartupState StartupState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayCinematicHostWidget : public FortHUDElementWidget
{
public:
	class UClass* IntroPanelWidgetClass;
	class UClass* OutroPanelWidgetClass;
	class UClass* LoadingScreenDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayIntroPanelWidget : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameplayOutroPanelWidget : public CommonActivatablePanelLegacy
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpicySakeComponent_Telemetry : public UFortAIComponent_Telemetry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortSpicySakeGameplayCueNotifyLoop_Alive : public FortGameplayCueNotify_Loop
{
public:
	class UClass* WaterFX_Native;
	class UClass* LandFX_Native;
	class UClass* FortLayerAudio_Native;
	class UClass* TargetAIPawn_Native;
	bool bComputeWaterDepth;
	float TetheredVolumeMultiplier;
	float SoundSurfaceTypeCount;
	float VelocityClampingMinimum;
	float VelocityClampingMaximum;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpicySakeOccupantAnimInstanceLayer : public UFortBaseLayerAnimInstance
{
public:
	float GroundIdleThreshold;
	float GroundIdleLowThreshold;
	float LocalVelocityYawAngleTurnResetThreshold;
	float LocalVelocityYawAngleTurnTransitionThreshold;
	float LocalVelocityYawAngle;
	float PawnSpeed2D;
	float PawnVelocityZ;
	bool bIsFemale;
	bool bIsOnGround;
	bool bIsOnWater;
	bool bLandingPredicted;
	bool bTransition_NewFallAditive_NewFallLandAdditive;
	bool bTransitionNewJumpLoopAdditiveToNewFallAdditive;
	bool bShouldApplyIdleAdditive;
	bool bIsTargeting;
	bool bIsPlayerCloseToShark;
	bool bIsBoosting;
	bool bCanTurnLeft;
	bool bCanTurnRight;
	bool bTransition_RideLoop_TurnLeft;
	bool bTransition_RideLoop_TurnRight;
	bool bIsReloading;
	bool bIsPlayingMeleeAnim;
	bool bIsPlayingEmote;
	bool bShouldPlayOnGroundIdle;
	bool bShouldPlayOnGroundIdleLow;
	bool bIsJumping;
	bool bCanUseTargettingStateMachine;
	bool bTransition_SharRideLoop_To_JumpUp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortSpicySakeVehicleAnimInstance : public UFortBaseAnimInstance
{
public:
	struct Rotator OnGroundSlopeRotOffset;
	float LocalVelocityYawAngle;
	float ForwardSpeed;
	float UpSpeed;
	float SmoothJumpPitch;
	float SmoothJumpPitchDeltaRate;
	float CurrentBoostRateScale;
	bool bIsJumping;
	bool bIsSurfaceSwimming;
	bool bIsOnGround;
	bool bIsFalling;
	bool bIsCharging;
	bool bOnGroundNotMoving;
	bool bLanded;
	bool bIsBoosting;
	bool bStartBoosting;
	bool bTransition_Idle_To_Boost;
	bool bTransition_Boost_To_Idle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StreamingRadioPlayerComponent_Hoagie : public StreamingRadioPlayerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_ToggleRadio : public UFortMobileActionButtonBehavior
{
public:
	class UClass* ToggleRadioOffSprite;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RadioPlayerWidgetBase : public FortHUDElementWidget
{
public:
	struct FortPrioritizedWidgetData PriorityData;
	class UClass* LastValidComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StreamingRadioPlayerComponent_Valet : public StreamingRadioPlayerComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class RadioContentSourceItemDefinition : public FortAccountItemDefinition
{
public:
	struct FString ResourceID;
	class UClass* MediaSource;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStreamingRadioAudioShapeComponent : public UFortAudioShapeComponent
{
public:
	float Radius;
	class UClass* RadioPlayer;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USrirachaRanchComponentTemplateWrapper : public UDataAsset
{
public:
	class UClass* MediaSoundPlayerTemplate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class StreamingRadioPlayerComponent : public FortPawnComponent
{
public:
	Unknown InputMappingData;
	struct FScriptMulticastDelegate OnSourceLoading;
	struct FScriptMulticastDelegate OnSourcePlayed;
	struct FScriptMulticastDelegate OnSourceStopped;
	struct FScriptMulticastDelegate OnSourceFailed;
	struct FScriptMulticastDelegate OnRadioExplicitStop;
	float PercentAutostartRadio;
	TArray<struct FName> DisabledVehicleList;
	Unknown ExteriorVolumeMultiplierMap;
	Unknown InteriorVolumeMultiplierMap;
	bool bMinimalStateOnPlatform;
	TArray<struct FString> DisabledStationList;
	bool bAutostartOnEntry;
	bool bDisabledForCurrentPlayerState;
	struct StreamingRadioSourceData ReplicatedRadioSourceData;
	class UClass* SoundComponent;
	class UClass* AudioShape;
	class UClass* SoundCompTemplateSource;
	struct AthenaRadioStation LastSource;
	TArray<class UClass*> Sources;
	struct AthenaRadioStation FallbackSource;
	Unknown SpecialSeatList;
	class UClass* MediaPlayer;
	class UClass* MediaController;
	class UClass* DefaultSoundSubmix;
	class UClass* LicensedSoundSubmix;
	class UClass* LastMediaSource;
	class UClass* IncomingMediaSource;
	ERadioSource CurrentMode;
	int MaximumRetries;
	int FadeoutWhenUnpoweredInMS;
	int FadeoutWhenOwnerBeingDestroyedInMS;
	int MaxFadeoutTimeMS;
	int DefaultPlayingIndex;
	class UClass* SoundMixInside;
	class UClass* SoundMixOutside;
	float ActivationRadius;
	struct FName ComponentToAttachTo;
	struct FName ComponentSocketAttachTo;
	class UClass* MediaSource;
	TArray<struct AthenaRadioStation> RadioStationList;
	class UClass* DelegateContextObject;
	float MediaStartTimeFromInit;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UStaticMeshDescription : public UMeshDescriptionBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSelectionData : public FortGameFeatureData
{
public:
	struct TSoftClassPtr<UObject> StoreSelectionScreenClass;
	struct FText RegularStoreSelectedText;
	struct FText NonRegularStoreSelectedText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSelectionOptionEntry : public CommonButtonLegacy
{
public:
	class UClass* Image_Icon;
	class UClass* Text_Description;
	class UClass* Text_Price;
	class UClass* RichText_Label;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortStoreSelectionScreen : public CommonActivatablePanelLegacy
{
public:
	class UClass* EntryBoxButtonGroup;
	class UClass* StoreOffer;
	class UClass* StoreOfferLoadGuard;
	class UClass* Text_Header;
	class UClass* DynamicEntryBox_Options;
	class UClass* Button_Continue;
	class UClass* Button_Cancel;
	class UClass* RichText_InitiallySelectedHint;
	Unknown PurchaseChoiceOwner;
	TArray<struct ItemData> StoreOptions;
	struct TSoftClassPtr<UObject> SoftDisplayAsset;
	struct ItemData ItemData;
	struct FText OptionalLabels;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMediaSubtitlesPlayer : public UObject
{
public:
	class UClass* SourceSubtitles;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SubtitleDisplay : public Widget
{
public:
	struct SubtitleFormat Format;
	class UClass* Options;
	float WrapTextAt;
	bool bPreviewMode;
	struct FText PreviewText;
	struct TextBlockStyle GeneratedStyle;
	struct SlateBrush GeneratedBackgroundBorder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubtitleDisplayOptions : public UDataAsset
{
public:
	struct SlateFontInfo Font;
	int DisplayTextSizes;
	struct LinearColor DisplayTextColors;
	float DisplayBorderSize;
	float DisplayBackgroundOpacity;
	struct SlateBrush BackgroundBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubtitleDisplaySubsystem : public UGameInstanceSubsystem
{
public:
	struct SubtitleFormat SubtitleFormat;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ModularSynthPreset : public TableRowBase
{
public:
	bool bEnablePolyphony;
	ESynth1OscType Osc1Type;
	float Osc1Gain;
	float Osc1Octave;
	float Osc1Semitones;
	float Osc1Cents;
	float Osc1PulseWidth;
	ESynth1OscType Osc2Type;
	float Osc2Gain;
	float Osc2Octave;
	float Osc2Semitones;
	float Osc2Cents;
	float Osc2PulseWidth;
	float Portamento;
	bool bEnableUnison;
	bool bEnableOscillatorSync;
	float Spread;
	float Pan;
	float LFO1Frequency;
	float LFO1Gain;
	ESynthLFOType LFO1Type;
	ESynthLFOMode LFO1Mode;
	ESynthLFOPatchType LFO1PatchType;
	float LFO2Frequency;
	float LFO2Gain;
	ESynthLFOType LFO2Type;
	ESynthLFOMode LFO2Mode;
	ESynthLFOPatchType LFO2PatchType;
	float GainDb;
	float AttackTime;
	float DecayTime;
	float SustainGain;
	float ReleaseTime;
	ESynthModEnvPatch ModEnvPatchType;
	ESynthModEnvBiasPatch ModEnvBiasPatchType;
	bool bInvertModulationEnvelope;
	bool bInvertModulationEnvelopeBias;
	float ModulationEnvelopeDepth;
	float ModulationEnvelopeAttackTime;
	float ModulationEnvelopeDecayTime;
	float ModulationEnvelopeSustainGain;
	float ModulationEnvelopeReleaseTime;
	bool bLegato;
	bool bRetrigger;
	float FilterFrequency;
	float FilterQ;
	ESynthFilterType FilterType;
	ESynthFilterAlgorithm FilterAlgorithm;
	bool bStereoDelayEnabled;
	ESynthStereoDelayMode StereoDelayMode;
	float StereoDelayTime;
	float StereoDelayFeedback;
	float StereoDelayWetlevel;
	float StereoDelayRatio;
	bool bChorusEnabled;
	float ChorusDepth;
	float ChorusFeedback;
	float ChorusFrequency;
	TArray<struct EpicSynth1Patch> Patches;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Synth2DSliderStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush NormalThumbImage;
	struct SlateBrush DisabledThumbImage;
	struct SlateBrush NormalBarImage;
	struct SlateBrush DisabledBarImage;
	struct SlateBrush BackgroundImage;
	float BarThickness;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthKnobStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush LargeKnob;
	struct SlateBrush LargeKnobOverlay;
	struct SlateBrush MediumKnob;
	struct SlateBrush MediumKnobOverlay;
	float MinValueAngle;
	float MaxValueAngle;
	ESynthKnobSize KnobSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthSlateStyle : public SlateWidgetStyle
{
public:
	ESynthSlateSizeType SizeType;
	ESynthSlateColorStyle ColorStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UModularSynthPresetBank : public UObject
{
public:
	TArray<struct ModularSynthPresetBankEntry> Presets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UModularSynthLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ModularSynthComponent : public SynthComponent
{
public:
	int VoiceCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectBitCrusherPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectBitCrusherSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectChorusPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectChorusSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectDynamicsProcessorPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectDynamicsProcessorSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvelopeFollowerListener : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnEnvelopeFollowerUpdate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectEnvelopeFollowerPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectEnvelopeFollowerSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectEQPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectEQSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectFilterPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectFilterSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectFoldbackDistortionPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectFoldbackDistortionSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectMidSideSpreaderPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectMidSideSpreaderSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectPannerPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectPannerSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectPhaserPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectPhaserSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectRingModulationPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectRingModulationSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectSimpleDelayPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectSimpleDelaySettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectStereoDelayPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectStereoDelaySettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USourceEffectWaveShaperPreset : public USoundEffectSourcePreset
{
public:
	struct SourceEffectWaveShaperSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAudioImpulseResponse : public UObject
{
public:
	TArray<float> ImpulseResponse;
	int NumChannels;
	int SampleRate;
	float NormalizationVolumeDb;
	bool bTrueStereo;
	TArray<float> IRData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectConvolutionReverbPreset : public USoundEffectSubmixPreset
{
public:
	class UClass* ImpulseResponse;
	struct SubmixEffectConvolutionReverbSettings Settings;
	ESubmixEffectConvolutionReverbBlockSize BlockSize;
	bool bEnableHardwareAcceleration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectDelayPreset : public USoundEffectSubmixPreset
{
public:
	struct SubmixEffectDelaySettings Settings;
	struct SubmixEffectDelaySettings DynamicSettings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectFilterPreset : public USoundEffectSubmixPreset
{
public:
	struct SubmixEffectFilterSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectFlexiverbPreset : public USoundEffectSubmixPreset
{
public:
	struct SubmixEffectFlexiverbSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectMultibandCompressorPreset : public USoundEffectSubmixPreset
{
public:
	struct SubmixEffectMultibandCompressorSettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectStereoDelayPreset : public USoundEffectSubmixPreset
{
public:
	struct SubmixEffectStereoDelaySettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USubmixEffectTapDelayPreset : public USoundEffectSubmixPreset
{
public:
	struct SubmixEffectTapDelaySettings Settings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class Synth2DSlider : public Widget
{
public:
	float ValueX;
	float ValueY;
	struct FDelegate ValueXDelegate;
	struct FDelegate ValueYDelegate;
	struct Synth2DSliderStyle WidgetStyle;
	struct LinearColor SliderHandleColor;
	bool IndentHandle;
	bool Locked;
	float StepSize;
	bool IsFocusable;
	struct FScriptMulticastDelegate OnMouseCaptureBegin;
	struct FScriptMulticastDelegate OnMouseCaptureEnd;
	struct FScriptMulticastDelegate OnControllerCaptureBegin;
	struct FScriptMulticastDelegate OnControllerCaptureEnd;
	struct FScriptMulticastDelegate OnValueChangedX;
	struct FScriptMulticastDelegate OnValueChangedY;

	// NOTE: Functions are not included into usmaps sadly :(
};

class GranularSynth : public SynthComponent
{
public:
	class UClass* GranulatedSoundWave;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMonoWaveTableSynthPreset : public UObject
{
public:
	struct FString PresetName;
	bool bLockKeyframesToGridBool;
	int LockKeyframesToGrid;
	int WaveTableResolution;
	TArray<struct RuntimeFloatCurve> WaveTable;
	bool bNormalizeWaveTables;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthComponentMonoWaveTable : public SynthComponent
{
public:
	struct FScriptMulticastDelegate OnTableAltered;
	struct FScriptMulticastDelegate OnNumTablesChanged;
	class UClass* CurrentPreset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthComponentToneGenerator : public SynthComponent
{
public:
	float Frequency;
	float Volume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthSamplePlayer : public SynthComponent
{
public:
	class UClass* SoundWave;
	struct FScriptMulticastDelegate OnSampleLoaded;
	struct FScriptMulticastDelegate OnSamplePlaybackProgress;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USynthesisUtilitiesBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class SynthKnob : public Widget
{
public:
	float Value;
	float StepSize;
	float MouseSpeed;
	float MouseFineTuneSpeed;
	bool ShowTooltipInfo;
	struct FText ParameterName;
	struct FText ParameterUnits;
	struct FDelegate ValueDelegate;
	struct SynthKnobStyle WidgetStyle;
	bool Locked;
	bool IsFocusable;
	struct FScriptMulticastDelegate OnMouseCaptureBegin;
	struct FScriptMulticastDelegate OnMouseCaptureEnd;
	struct FScriptMulticastDelegate OnControllerCaptureBegin;
	struct FScriptMulticastDelegate OnControllerCaptureEnd;
	struct FScriptMulticastDelegate OnValueChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATailgateGameState : public AGameStateBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTailgateMultiplierSystem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATailgateTargetBase : public AActor
{
public:
	struct GameplayTag TargetType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTailgateTargetDefinition : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTailgateTargetSpawnCondition : public UObject
{
public:
	struct GameplayTag TargetType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTailgateTargetSpawnerDefinition : public UObject
{
public:
	struct GameplayTag SpawnerID;
	TArray<class UClass*> SpawnConditions;
	class UClass* TargetDefinitionOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTailgateWaveDefinition : public UObject
{
public:
	TArray<class UClass*> TargetSpawnerDefinitionClasses;
	TArray<class UClass*> TargetSpawnerDefinitions;
	class UClass* DefaultTargetDefinition;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATailgateWaveDirector : public AActor
{
public:
	TArray<class UClass*> WaveDefinitionClasses;
	TArray<class UClass*> WaveDefinitions;
	class UClass* MultiplierSystemClass;
	class UClass* MultiplierSystem;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTakeSection : public UMovieSceneSection
{
public:
	struct MovieSceneIntegerChannel HoursCurve;
	struct MovieSceneIntegerChannel MinutesCurve;
	struct MovieSceneIntegerChannel SecondsCurve;
	struct MovieSceneIntegerChannel FramesCurve;
	struct MovieSceneFloatChannel SubFramesCurve;
	struct MovieSceneStringChannel Slate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTakeSettings : public UObject
{
public:
	struct FString HoursName;
	struct FString MinutesName;
	struct FString SecondsName;
	struct FString FramesName;
	struct FString SubFramesName;
	struct FString SlateName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneTakeTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UClass*> Sections;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncAction_PerformTargeting : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnReady;
	class UClass* TargetingPreset;
	class UClass* SourceActor;
	TArray<class UClass*> InitialTargets;
	bool bUseAsyncTargeting;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingTask : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingFilterTask_BasicFilterTemplate : public UTargetingTask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingFilterTask_ActorClass : public UTargetingFilterTask_BasicFilterTemplate
{
public:
	TArray<class UClass*> RequiredActorClassFilters;
	TArray<class UClass*> IgnoredActorClassFilters;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingFilterTask_SortByDistance : public UTargetingTask
{
public:
	bool bAscending;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingPreset : public UDataAsset
{
public:
	struct TargetingTaskSet TargetingTaskSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingSelectionTask_AOE : public UTargetingTask
{
public:
	ETargetingAOEShape ShapeType;
	ECollisionChannel CollisionChannel;
	struct CollisionProfileName CollisionProfileName;
	bool bIgnoreSourceActor;
	bool bIgnoreInstigatorActor;
	struct Vector HalfExtent;
	struct ScalableFloat Radius;
	struct ScalableFloat HalfHeight;
	struct FName ComponentTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingSelectionTask_SourceActor : public UTargetingTask
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingSelectionTask_Trace : public UTargetingTask
{
public:
	ETargetingTraceType TraceType;
	ETraceTypeQuery TraceChannel;
	struct CollisionProfileName CollisionProfileName;
	struct ScalableFloat DefaultSweptTraceRadius;
	struct ScalableFloat DefaultTraceLength;
	struct Vector DefaultSourceOffset;
	struct Vector ExplicitTraceDirection;
	bool bComplexTrace;
	bool bIgnoreSourceActor;
	bool bIgnoreInstigatorActor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTargetingSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<struct TargetingRequestHandle> AsyncTargetingRequests;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequence : public UMovieSceneSequence
{
public:
	class UClass* MovieScene;
	struct TSoftClassPtr<UObject> BoundActorClass;
	struct TSoftClassPtr<UObject> BoundPreviewActor;
	Unknown BoundActorComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCameraAnimationSequence : public UTemplateSequence
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USequenceCameraShakeCameraStandIn : public UObject
{
public:
	float FieldOfView;
	bool bConstrainAspectRatio;
	float AspectRatio;
	struct PostProcessSettings PostProcessSettings;
	float PostProcessBlendWeight;
	struct CameraFilmbackSettings Filmback;
	struct CameraLensSettings LensSettings;
	struct CameraFocusSettings FocusSettings;
	float CurrentFocalLength;
	float CurrentAperture;
	float CurrentFocusDistance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USequenceCameraShakePattern : public UCameraShakePattern
{
public:
	class UClass* Sequence;
	float PlayRate;
	float Scale;
	float BlendInTime;
	float BlendOutTime;
	float RandomSegmentDuration;
	bool bRandomSegment;
	class UClass* Player;
	class UClass* CameraStandIn;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USequenceCameraShakeSequencePlayer : public UObject
{
public:
	class UClass* BoundObjectOverride;
	class UClass* Sequence;
	struct MovieSceneRootEvaluationTemplateInstance RootTemplateInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USequenceCameraShakeTestUtil : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ATemplateSequenceActor : public AActor
{
public:
	struct MovieSceneSequencePlaybackSettings PlaybackSettings;
	class UClass* SequencePlayer;
	struct SoftObjectPath TemplateSequence;
	struct TemplateSequenceBindingOverrideData BindingOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequencePlayer : public UMovieSceneSequencePlayer
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequenceSection : public UMovieSceneSubSection
{
public:
	TArray<struct TemplateSectionPropertyScale> PropertyScales;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequenceSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequencePropertyScalingInstantiatorSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequencePropertyScalingEvaluatorSystem : public UMovieSceneEntitySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTemplateSequenceTrack : public UMovieSceneSubTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimeSynchronizationSource : public UObject
{
public:
	bool bUseForSynchronization;
	int FrameOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFixedFrameRateCustomTimeStep : public UEngineCustomTimeStep
{
public:
	struct FrameRate FixedFrameRate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGenlockedCustomTimeStep : public UFixedFrameRateCustomTimeStep
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGenlockedTimecodeProvider : public UTimecodeProvider
{
public:
	bool bUseGenlockToCount;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimeManagementBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimeSynthVolumeGroup : public UObject
{
public:
	float DefaultVolume;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTimeSynthClip : public UObject
{
public:
	TArray<struct TimeSynthClipSound> Sounds;
	struct Vector2D VolumeScaleDb;
	struct Vector2D PitchScaleSemitones;
	struct TimeSynthTimeDef FadeInTime;
	bool bApplyFadeOut;
	struct TimeSynthTimeDef FadeOutTime;
	struct TimeSynthTimeDef ClipDuration;
	ETimeSynthEventClipQuantization ClipQuantization;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TimeSynthComponent : public SynthComponent
{
public:
	struct TimeSynthQuantizationSettings QuantizationSettings;
	bool bEnableSpectralAnalysis;
	TArray<float> FrequenciesToAnalyze;
	ETimeSynthFFTSize FFTSize;
	struct FScriptMulticastDelegate OnPlaybackTime;
	bool bIsFilterAEnabled;
	bool bIsFilterBEnabled;
	struct TimeSynthFilterSettings FilterASettings;
	struct TimeSynthFilterSettings FilterBSettings;
	bool bIsEnvelopeFollowerEnabled;
	struct TimeSynthEnvelopeFollowerSettings EnvelopeFollowerSettings;
	int MaxPoolSize;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_Titanium : public AFortAthenaMutator_GameModeBase
{
public:
	class UClass* UpgradeTable;
	struct GameplayTagContainer ValidWeaponTags;
	EFortRarity HighestUpgradeTier;
	class UClass* UpgradedGameplayEffect;

	// NOTE: Functions are not included into usmaps sadly :(
};

class TitaniumPlayerComponent : public FortControllerComponent
{
public:
	struct FScriptMulticastDelegate OnPlayerEarnedElimination;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUACNetworkComponent : public UActorComponent
{
public:
	int PlayerID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUdpMessagingSettings : public UObject
{
public:
	bool EnabledByDefault;
	bool EnableTransport;
	bool bAutoRepair;
	uint32_t AutoRepairAttemptLimit;
	bool bStopServiceWhenAppDeactivates;
	struct FString UnicastEndpoint;
	struct FString MulticastEndpoint;
	EUdpMessageFormat MessageFormat;
	byte MulticastTimeToLive;
	TArray<struct FString> StaticEndpoints;
	bool EnableTunnel;
	struct FString TunnelUnicastEndpoint;
	struct FString TunnelMulticastEndpoint;
	TArray<struct FString> RemoteTunnelEndpoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUEKittTexture : public UTexture
{
public:
	struct IntPoint Dimensions;
	struct LinearColor ClearColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAIBotEvaluator_UmamiFlyingAttack : public UFortAthenaAIBotEvaluator_Attack
{
public:
	struct FName WeaponFireName;
	struct FName WeaponTargetingName;
	struct FName TargetActorName;
	struct FName AggressivenessName;
	struct FName HasLoSOnThreatName;
	struct FName MovementModeKeyName;
	EFlyingEvasiveManeuversMode FlyingEvasiveManeuversModeWhenInRange;
	TArray<struct EvasiveManeuver_Step> FlyingEvasiveManeuversConfiguration;
	class UClass* CachedRangeAttackDigestedSkillSet;
	class UClass* CachedAimingDigestedSkillSet;
	class UClass* CachedPerceptionDigestedSkillSet;
	class UClass* CachedFlyingAttackDigestedSkillSet;
	class UClass* CachedFlyingVehicleDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_UmamiSkillset : public UFortAthenaAISpawnerDataComponent_AIBotSkillset
{
public:
	class UClass* UmamiFlyingVehicleSkillSet;
	class UClass* UmamiKidnapSkillSet;
	class UClass* UmamiFlyingAttackSkillSet;
	class UClass* UmamiFlyingDestroyBlockerSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaAISpawnerDataComponent_UmamiVehicle : public UFortAthenaAISpawnerDataComponent_Vehicle
{
public:
	struct HotfixableUmami3DAgentConfiguration Umami3DAgentConfiguration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_EscapeWithKidnapped : public UBTService
{
public:
	struct FName KidnappedTargetKeyName;
	struct FName KidnappedOriginKeyName;
	struct FName KidnappedModeKeyName;
	struct FName EscapeMovementKeyName;
	struct FName EscapeDestinationKeyName;
	struct FName EscapeReachedPointsKeyName;
	struct FName EscapeIsUsingGraveyardKeyName;
	struct FName EscapeGraveyardPointKeyName;
	struct GameplayTag SharedBBTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_FlyingDestroyBlocker : public UBTService
{
public:
	struct FName DestroyBlockerExecutionStatusKeyName;
	struct FName DestroyBlockerTargetKeyName;
	struct FName WeaponFireStatusKeyName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_FlyingEvasiveManeuvers : public UBTService
{
public:
	EFlyingEvasiveManeuversMode FlyingEvasiveManeuversMode;
	TArray<struct EvasiveManeuver_Step> FlyingEvasiveManeuversConfiguration;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_FlyingVerticalMovementFirst : public UBTService
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_Kidnap : public UBTService
{
public:
	struct FName KidnapKeyName;
	struct FName KidnapMovementName;
	struct FName KidnapTargetKeyName;
	struct FName KidnappedTargetKeyName;
	struct FName KidnappedOriginKeyName;
	struct FName KidnapRetrievalDestinationKeyName;
	struct FName KidnapLastFailedRetrievalDestinationKeyName;
	struct FName KidnapRetrievalActionKeyName;
	struct FName KidnapTractorBeamStateKeyName;
	struct FName FocusActorName;
	struct FName FocalPointName;
	struct GameplayTag BlacklistTargetsWithThisGameplayTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTService_UmamiFlyingAttack : public UBTService
{
public:
	struct FName FlyingAttackExecutionStatusKeyName;
	struct FName SuccessPendingKeyName;
	struct FName WeaponFireName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaBTTask_FlyToPosition : public UFortAthenaBTTask_BotMoveTo
{
public:
	bool bShouldSlowdownWhenApproachingGoal;
	bool bProjectStartOnNavArea;
	bool bDirectMovementOnProjectionFailure;
	struct ScalableFloat LinearForwardDivisorMultiplier;
	struct ScalableFloat LinearElevationDivisorMultiplier;
	struct ScalableFloat MaxForwardSpeedOverride;
	struct ScalableFloat MaxElevationSpeedOverride;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_FlyingDestroyBlocker : public UFortAthenaAIBotEvaluator_Attack
{
public:
	struct FName UnstuckLastBlockedByActorLocationKeyName;
	struct FName DestroyBlockerExecutionStatusKeyName;
	struct FName DestroyBlockerMovementStateKeyName;
	struct FName DestroyBlockerDestinationKeyName;
	struct FName DestroyBlockerTargetKeyName;
	struct FName WeaponFireStatusKeyName;
	struct FName FocusActorName;
	struct FName FocalPointName;
	TArray<struct DestroyBlockerOffsetConfiguration> OffsetConfigurations;
	struct GameplayTagContainer WhitelistBuildingTypesToDestroy;
	class UClass* CachedFlyingDestroyBlockerDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_Kidnap : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName KidnapKeyName;
	struct FName KidnapMovementName;
	struct FName TryToKidnapMovementKeyName;
	struct FName KidnapTargetKeyName;
	struct FName KidnappedTargetKeyName;
	struct FName KidnappedTimeKeyName;
	struct FName KidnappedModeKeyName;
	struct FName KidnapRetrievalDestinationKeyName;
	struct FName KidnapLastFailedRetrievalDestinationKeyName;
	struct FName KidnapRetrievalActionKeyName;
	struct FName KidnapTractorBeamStateKeyName;
	struct FName KidnapEscapeReachedPointsKeyName;
	struct FName DestroyBlockerExecutionStatusKeyName;
	struct GameplayTag PlayerBeingTargetedByUmamiDefensivelyTag;
	struct GameplayTag RequiredTagForHighPriorityObjectTracking;
	TArray<struct KidnapCustomTargetWeightConfiguration> CustomTargetWeightConfigurations;
	class UClass* KidnappedByAIGE;
	struct GameplayTag GameplayTagAppliedByKidnappedByAIGE;
	struct GameplayTag BlacklistTargetsWithThisGameplayTag;
	class UClass* CachedKidnapSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_NevadaVehicle : public UFortAthenaAIBotEvaluator
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_UmamiPatrolAround : public UFortAthenaAIBotEvaluator_Movement
{
public:
	struct FName PatrolDestinationName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_UmamiPatrolling : public UFortAthenaNpcEvaluator_Patrolling
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaNpcEvaluator_UmamiPatrolReservation : public UFortAthenaAIBotEvaluator
{
public:
	struct GameplayTag RequiredGameplayTagOnPatrolPath;
	struct ScalableFloat MaximumDistanceFromPatrolPath;
	class UClass* CachedNpcPatrollingComponent;
	class UClass* ReservedPatrolPath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiFlyingAttackDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	bool bEnabled;
	float OverriddenAttackDistance;
	float OverriddenAttackDistanceAfterBeingInRange;
	float MinimumZOffsetWithTarget;
	float EvasiveManeuverMinDotToKeepLoop;
	float MoveInRangeBlacklistTime;
	float EvadeBlacklistTime;
	struct AIScalableFloat OverriddenDelayBetweenShots;
	struct AIScalableFloat OverriddenDelayDeviationTimeBetweenShots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiFlyingAttackSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat bEnabled;
	struct ScalableFloat OverriddenAttackDistance;
	struct ScalableFloat OverriddenAttackDistanceAfterBeingInRange;
	struct ScalableFloat MinimumZOffsetWithTarget;
	struct ScalableFloat EvasiveManeuverMinDotToKeepLoop;
	struct ScalableFloat MoveInRangeBlacklistTime;
	struct ScalableFloat EvadeBlacklistTime;
	struct AIScalableFloat OverriddenDelayBetweenShots;
	struct AIScalableFloat OverriddenDelayDeviationTimeBetweenShots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaUmamiFlyingController : public FortAthenaAIBotController
{
public:
	class UClass* CacheKidnapSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiFlyingDestroyBlockerDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	bool bEnabled;
	bool bCanDestroyOnlyBuildingActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiFlyingDestroyBlockerSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat bEnabled;
	struct ScalableFloat bCanDestroyOnlyBuildingActors;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaUmamiFlyingPathFollowingComponent : public FortAthenaAIBotPathFollowingComponent
{
public:
	class UClass* CachedFlyingVehicleDigestedSkillSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiFlyingVehicleDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	float MaxForwardSpeed;
	float MaxElevationSpeed;
	class UClass* ForwardSpeedCurve;
	class UClass* ElevationSpeedCurve;
	float AlphasDeadZones;
	float LookAheadMaxDistance;
	float Min2DGoalDistanceForHeighfieldClamp;
	float Min2DGoalDistanceForBuildingActorsClamp;
	float ZOffsetForBuildingActorsClamp;
	float MaximumStuckTime;
	TArray<struct UmamiMaximumStuckTimePerBuildingTypeDigested> MaximumStuckTimePerBuildingType;
	float MinimumProgressPercentageForStuck;
	float VerticalMovementFirst_MinZDelta;
	float VerticalMovementFirst_MaxXYDelta;
	float EvasiveManeuver_DistanceToFinish;
	float EvasiveManeuver_DistanceToFinishSquared;
	float EvasiveManeuver_MinDotDifferenceOnTargetToKeepPreviousManeuver;
	float EvasiveManeuver_MinDotDifferenceBetweenStartAndCurrentLocationToKeepPreviousManeuver;
	float EvasiveManeuver_MinDistanceFromGoalToApply;
	float EvasiveManeuver_MinDistanceFromGoalToApplySquared;
	float EvasiveManeuver_ForwardDistance;
	float EvasiveManeuver_RightDistance;
	float EvasiveManeuver_UpDistance;
	float Avoidance_Strength;
	float Avoidance_Min2DGoalDistance;
	float Avoidance_MinDistanceToOther;
	float Avoidance_SelfLookAheadTime;
	float Avoidance_OthersLookAheadTime;
	float Avoidance_SelfRadius;
	float Avoidance_OthersRadius;
	float Avoidance_HysteresisRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiFlyingVehicleSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat MaxForwardSpeed;
	struct ScalableFloat MaxElevationSpeed;
	class UClass* ForwardSpeedCurve;
	class UClass* ElevationSpeedCurve;
	struct ScalableFloat AlphasDeadZones;
	struct ScalableFloat LookAheadMaxDistance;
	struct ScalableFloat Min2DGoalDistanceForHeighfieldClamp;
	struct ScalableFloat Min2DGoalDistanceForBuildingActorsClamp;
	struct ScalableFloat ZOffsetForBuildingActorsClamp;
	struct ScalableFloat MaximumStuckTime;
	TArray<struct UmamiMaximumStuckTimePerBuildingType> MaximumStuckTimePerBuildingType;
	struct ScalableFloat MinimumProgressPercentageForStuck;
	struct ScalableFloat VerticalMovementFirst_MinZDelta;
	struct ScalableFloat VerticalMovementFirst_MaxXYDelta;
	struct ScalableFloat EvasiveManeuver_DistanceToFinish;
	struct ScalableFloat EvasiveManeuver_MinDotDifferenceOnTargetToKeepPreviousManeuver;
	struct ScalableFloat EvasiveManeuver_MinDotDifferenceBetweenStartAndCurrentLocationToKeepPreviousManeuver;
	struct ScalableFloat EvasiveManeuver_MinDistanceFromGoalToApply;
	struct ScalableFloat EvasiveManeuver_ForwardDistance;
	struct ScalableFloat EvasiveManeuver_RightDistance;
	struct ScalableFloat EvasiveManeuver_UpDistance;
	struct ScalableFloat Avoidance_Strength;
	struct ScalableFloat Avoidance_Min2DGoalDistance;
	struct ScalableFloat Avoidance_MinDistanceToOther;
	struct ScalableFloat Avoidance_SelfLookAheadTime;
	struct ScalableFloat Avoidance_OthersLookAheadTime;
	struct ScalableFloat Avoidance_SelfRadius;
	struct ScalableFloat Avoidance_OthersRadius;
	struct ScalableFloat Avoidance_HysteresisRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiKidnapDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
public:
	bool bEnabled;
	bool bEnableHighPriorityTarget;
	bool bEnableLowPriorityTarget;
	bool bEnablePawnTarget;
	bool bIgnorePawnsWithNoRangedWeapons;
	bool bIgnoreFortAIPawns;
	float DesiredZOffsetFromTarget;
	float MinTimeToReleaseKidnappedPawn;
	float MaxTimeToReleaseKidnappedPawn;
	float MinTimeToReleaseKidnappedObject;
	float MaxTimeToReleaseKidnappedObject;
	int ReleaseKidnappedPawnAfterNumberOfPoints;
	int ReleaseKidnappedObjectAfterNumberOfPoints;
	float ReleaseKidnappedIfWithinDistanceFromStorm;
	float TimeBetweenPawnKidnaps;
	float TimeBetweenObjectKidnaps;
	float KidnapBlacklistTime;
	float GlobalKidnapDelay;
	float GlobalPawnKidnapDelay;
	float GlobalObjectKidnapDelay;
	float GlobalNPCKidnapDelay;
	float StartingNPCKidnapDelay;
	int MinimumPlayersToEnableFullKidnap;
	bool bEnableFullKidnapAfterOneKidnap;
	float WeightDeltaForPawnsInStorm;
	float MinimumDistanceFromLastFailedRetrieval;
	float MaximumDistanceForHighPriorityTrackedObject;
	float MaximumDistanceForLowPriorityTrackedObject;
	float MinDelayForLowPriorityTrackedObjectKidnap;
	float MaxDelayForLowPriorityTrackedObjectKidnap;
	float LowPriorityTrackedObjectWinPercentage;
	float UnrestrictedObjectKidnapWinPercentage;
	bool bKidnapEnableBlacklistByGameplayTagBeforeBeam;
	float MinimumDotWithTargetBeforeBeam;
	float MinimumDistanceFromStormWhenEscapingForPawn;
	float EscapeCircleRadiusForPawn;
	float EscapeCircleExclusionRadiusForPawn;
	float MinEscapeZExtendForPawn;
	float MaxEscapeZExtendForPawn;
	float MinimumDistanceFromStormWhenEscapingForObject;
	float EscapeCircleRadiusForObject;
	float EscapeCircleExclusionRadiusForObject;
	float MinEscapeZExtendForObject;
	float MaxEscapeZExtendForObject;
	float MaximumTimeToTryToKidnap;
	int MaximumTryToKidnapBlockedCount;
	bool bEnableGraveyard;
	float GraveyardPercentageForObject;
	float GraveyardPercentageForCreatures;
	float GraveyardPercentageForPlayers;
	float GraveyardMinDistanceFromStorm;
	float GraveyardMinDistanceFromKidnapOrigin;
	float MinGraveyardDistanceFromKidnapCentre;
	float MaxGraveyardDistanceFromKidnapCentre;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortAthenaUmamiKidnapSkillSet : public UFortAthenaAIBotSkillSet
{
public:
	struct ScalableFloat bEnabled;
	struct ScalableFloat bEnableHighPriorityTarget;
	struct ScalableFloat bEnableLowPriorityTarget;
	struct ScalableFloat bEnablePawnTarget;
	struct ScalableFloat bIgnorePawnsWithNoRangedWeapons;
	struct ScalableFloat bIgnoreFortAIPawns;
	struct ScalableFloat DesiredZOffsetFromTarget;
	struct ScalableFloat MinTimeToReleaseKidnappedPawn;
	struct ScalableFloat MaxTimeToReleaseKidnappedPawn;
	struct ScalableFloat MinTimeToReleaseKidnappedObject;
	struct ScalableFloat MaxTimeToReleaseKidnappedObject;
	struct ScalableFloat ReleaseKidnappedPawnAfterNumberOfPoints;
	struct ScalableFloat ReleaseKidnappedObjectAfterNumberOfPoints;
	struct ScalableFloat ReleaseKidnappedIfWithinDistanceFromStorm;
	struct ScalableFloat TimeBetweenPawnKidnaps;
	struct ScalableFloat TimeBetweenObjectKidnaps;
	struct ScalableFloat KidnapBlacklistTime;
	struct ScalableFloat GlobalKidnapDelay;
	struct ScalableFloat GlobalPawnKidnapDelay;
	struct ScalableFloat GlobalObjectKidnapDelay;
	struct ScalableFloat GlobalNPCKidnapDelay;
	struct ScalableFloat StartingNPCKidnapDelay;
	struct ScalableFloat MinimumPlayersToEnableFullKidnap;
	struct ScalableFloat bEnableFullKidnapAfterOneKidnap;
	struct ScalableFloat WeightDeltaForPawnsInStorm;
	struct ScalableFloat MinimumDistanceFromLastFailedRetrieval;
	struct ScalableFloat MaximumDistanceForHighPriorityTrackedObject;
	struct ScalableFloat MaximumDistanceForLowPriorityTrackedObject;
	struct ScalableFloat MaxDelayForLowPriorityTrackedObjectKidnap;
	struct ScalableFloat MinDelayForLowPriorityTrackedObjectKidnap;
	struct ScalableFloat LowPriorityTrackedObjectWinPercentage;
	struct ScalableFloat UnrestrictedObjectKidnapWinPercentage;
	struct ScalableFloat KidnapEnableBlacklistByGameplayTagBeforeBeam;
	struct ScalableFloat MinimumDotWithTargetBeforeBeam;
	struct ScalableFloat MaximumTimeToTryToKidnap;
	struct ScalableFloat MaximumTryToKidnapBlockedCount;
	struct ScalableFloat MinimumDistanceFromStormWhenEscapingForPawn;
	struct ScalableFloat EscapeCircleRadiusForPawn;
	struct ScalableFloat EscapeCircleExclusionRadiusForPawn;
	struct ScalableFloat MinEscapeZExtendForPawn;
	struct ScalableFloat MaxEscapeZExtendForPawn;
	struct ScalableFloat MinimumDistanceFromStormWhenEscapingForObject;
	struct ScalableFloat EscapeCircleRadiusForObject;
	struct ScalableFloat EscapeCircleExclusionRadiusForObject;
	struct ScalableFloat MinEscapeZExtendForObject;
	struct ScalableFloat MaxEscapeZExtendForObject;
	struct ScalableFloat EnableGraveyard;
	struct ScalableFloat GraveyardPercentageForObject;
	struct ScalableFloat GraveyardPercentageForCreatures;
	struct ScalableFloat GraveyardPercentageForPlayers;
	struct ScalableFloat GraveyardMinDistanceFromStorm;
	struct ScalableFloat GraveyardMinDistanceFromKidnapOrigin;
	struct ScalableFloat MinGraveyardDistanceFromKidnapCentre;
	struct ScalableFloat MaxGraveyardDistanceFromKidnapCentre;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUmami3DNavigationSystem : public UWorldSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUmami3DNavigationSystemAreaRenderingComponent : public UPrimitiveComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AUmami3DNavigationSystemArea : public AActor
{
public:
	TArray<class UClass*> NavigationNeighbors;
	struct Vector NavigationBoxExtent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DynamicPropertyPath : public CachedPropertyPath
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMarginSectionTemplate : public MovieScenePropertySectionTemplate
{
public:
	struct MovieSceneFloatChannel TopCurve;
	struct MovieSceneFloatChannel LeftCurve;
	struct MovieSceneFloatChannel RightCurve;
	struct MovieSceneFloatChannel BottomCurve;
	EMovieSceneBlendType BlendType;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneWidgetMaterialSectionTemplate : public MovieSceneParameterSectionTemplate
{
public:
	TArray<struct FName> BrushPropertyNamePath;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RichTextStyleRow : public TableRowBase
{
public:
	struct TextBlockStyle TextStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class RichImageRow : public TableRowBase
{
public:
	struct SlateBrush Brush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WidgetComponentInstanceData : public SceneComponentInstanceData
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVisual : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidget : public UVisual
{
public:
	class UClass* Slot;
	struct FDelegate bIsEnabledDelegate;
	struct FText ToolTipText;
	struct FDelegate ToolTipTextDelegate;
	class UClass* ToolTipWidget;
	struct FDelegate ToolTipWidgetDelegate;
	struct FDelegate VisibilityDelegate;
	struct WidgetTransform RenderTransform;
	struct Vector2D RenderTransformPivot;
	bool bIsVariable;
	bool bCreatedByConstructionScript;
	bool bIsEnabled;
	bool bOverride_Cursor;
	class UClass* AccessibleWidgetData;
	bool bIsVolatile;
	EMouseCursor Cursor;
	EWidgetClipping Clipping;
	ESlateVisibility Visibility;
	float RenderOpacity;
	class UClass* Navigation;
	EFlowDirectionPreference FlowDirectionPreference;
	TArray<class UClass*> NativeBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserWidget : public UWidget
{
public:
	struct LinearColor ColorAndOpacity;
	struct FDelegate ColorAndOpacityDelegate;
	struct SlateColor ForegroundColor;
	struct FDelegate ForegroundColorDelegate;
	struct FScriptMulticastDelegate OnVisibilityChanged;
	struct Margin Padding;
	TArray<class UClass*> ActiveSequencePlayers;
	class UClass* AnimationTickManager;
	TArray<class UClass*> StoppedSequencePlayers;
	TArray<struct NamedSlotBinding> NamedSlotBindings;
	class UClass* WidgetTree;
	int Priority;
	bool bSupportsKeyboardFocus;
	bool bIsFocusable;
	bool bStopAction;
	bool bHasScriptImplementedTick;
	bool bHasScriptImplementedPaint;
	EWidgetTickFrequency TickFrequency;
	class UClass* InputComponent;
	TArray<struct AnimationEventBinding> AnimationCallbacks;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlider : public UWidget
{
public:
	float Value;
	struct FDelegate ValueDelegate;
	float MinValue;
	float MaxValue;
	struct SliderStyle WidgetStyle;
	EOrientation Orientation;
	struct LinearColor SliderBarColor;
	struct LinearColor SliderHandleColor;
	bool IndentHandle;
	bool Locked;
	bool MouseUsesStep;
	bool RequiresControllerLock;
	float StepSize;
	bool IsFocusable;
	struct FScriptMulticastDelegate OnMouseCaptureBegin;
	struct FScriptMulticastDelegate OnMouseCaptureEnd;
	struct FScriptMulticastDelegate OnControllerCaptureBegin;
	struct FScriptMulticastDelegate OnControllerCaptureEnd;
	struct FScriptMulticastDelegate OnValueChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPanelWidget : public UWidget
{
public:
	TArray<class UClass*> Slots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetSwitcher : public UPanelWidget
{
public:
	int ActiveWidgetIndex;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UContentWidget : public UPanelWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBorder : public UContentWidget
{
public:
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	bool bShowEffectWhenDisabled;
	struct LinearColor ContentColorAndOpacity;
	struct FDelegate ContentColorAndOpacityDelegate;
	struct Margin Padding;
	struct SlateBrush Background;
	struct FDelegate BackgroundDelegate;
	struct LinearColor BrushColor;
	struct FDelegate BrushColorDelegate;
	struct Vector2D DesiredSizeScale;
	bool bFlipForRightToLeftFlowDirection;
	struct FDelegate OnMouseButtonDownEvent;
	struct FDelegate OnMouseButtonUpEvent;
	struct FDelegate OnMouseMoveEvent;
	struct FDelegate OnMouseDoubleClickEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicEntryBoxBase : public UWidget
{
public:
	EDynamicBoxType EntryBoxType;
	struct Vector2D EntrySpacing;
	TArray<struct Vector2D> SpacingPattern;
	struct SlateChildSize EntrySizeRule;
	EHorizontalAlignment EntryHorizontalAlignment;
	EVerticalAlignment EntryVerticalAlignment;
	int MaxElementSize;
	struct RadialBoxSettings RadialBoxSettings;
	struct UserWidgetPool EntryWidgetPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UButton : public UContentWidget
{
public:
	class UClass* Style;
	struct ButtonStyle WidgetStyle;
	struct LinearColor ColorAndOpacity;
	struct LinearColor BackgroundColor;
	EButtonClickMethod ClickMethod;
	EButtonTouchMethod TouchMethod;
	EButtonPressMethod PressMethod;
	bool IsFocusable;
	struct FScriptMulticastDelegate OnClicked;
	struct FScriptMulticastDelegate OnPressed;
	struct FScriptMulticastDelegate OnReleased;
	struct FScriptMulticastDelegate OnHovered;
	struct FScriptMulticastDelegate OnUnhovered;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextLayoutWidget : public UWidget
{
public:
	struct ShapedTextOptions ShapedTextOptions;
	ETextJustify Justification;
	ETextWrappingPolicy WrappingPolicy;
	bool AutoWrapText;
	float WrapTextAt;
	struct Margin Margin;
	float LineHeightPercentage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextBlock : public UTextLayoutWidget
{
public:
	struct FText Text;
	struct FDelegate TextDelegate;
	struct SlateColor ColorAndOpacity;
	struct FDelegate ColorAndOpacityDelegate;
	struct SlateFontInfo Font;
	struct SlateBrush StrikeBrush;
	struct Vector2D ShadowOffset;
	struct LinearColor ShadowColorAndOpacity;
	struct FDelegate ShadowColorAndOpacityDelegate;
	float MinDesiredWidth;
	bool bWrapWithInvalidationPanel;
	bool bAutoWrapText;
	ETextTransformPolicy TextTransformPolicy;
	bool bSimpleTextMode;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScrollBox : public UPanelWidget
{
public:
	struct ScrollBoxStyle WidgetStyle;
	struct ScrollBarStyle WidgetBarStyle;
	class UClass* Style;
	class UClass* BarStyle;
	EOrientation Orientation;
	ESlateVisibility ScrollBarVisibility;
	EConsumeMouseWheel ConsumeMouseWheel;
	struct Vector2D ScrollbarThickness;
	struct Margin ScrollbarPadding;
	bool AlwaysShowScrollbar;
	bool AlwaysShowScrollbarTrack;
	bool AllowOverscroll;
	bool BackPadScrolling;
	bool FrontPadScrolling;
	bool bAnimateWheelScrolling;
	EDescendantScrollDestination NavigationDestination;
	float NavigationScrollPadding;
	EScrollWhenFocusChanges ScrollWhenFocusChanges;
	bool bAllowRightClickDragScrolling;
	float WheelScrollMultiplier;
	struct FScriptMulticastDelegate OnUserScrolled;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UImage : public UWidget
{
public:
	struct SlateBrush Brush;
	struct FDelegate BrushDelegate;
	struct LinearColor ColorAndOpacity;
	struct FDelegate ColorAndOpacityDelegate;
	bool bFlipForRightToLeftFlowDirection;
	struct FDelegate OnMouseButtonDownEvent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UListViewBase : public UWidget
{
public:
	class UClass* EntryWidgetClass;
	float WheelScrollMultiplier;
	bool bEnableScrollAnimation;
	bool bEnableFixedLineOffset;
	float FixedLineScrollOffset;
	struct FScriptMulticastDelegate BP_OnEntryGenerated;
	struct FScriptMulticastDelegate BP_OnEntryReleased;
	struct UserWidgetPool EntryWidgetPool;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UListView : public UListViewBase
{
public:
	EOrientation Orientation;
	ESelectionMode SelectionMode;
	EConsumeMouseWheel ConsumeMouseWheel;
	bool bClearSelectionOnClick;
	bool bIsFocusable;
	float EntrySpacing;
	bool bReturnFocusToSelection;
	TArray<class UClass*> ListItems;
	struct FScriptMulticastDelegate BP_OnEntryInitialized;
	struct FScriptMulticastDelegate BP_OnItemClicked;
	struct FScriptMulticastDelegate BP_OnItemDoubleClicked;
	struct FScriptMulticastDelegate BP_OnItemIsHoveredChanged;
	struct FScriptMulticastDelegate BP_OnItemSelectionChanged;
	struct FScriptMulticastDelegate BP_OnItemScrolledIntoView;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPanelSlot : public UVisual
{
public:
	class UClass* Parent;
	class UClass* Content;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URichTextBlock : public UTextLayoutWidget
{
public:
	struct FText Text;
	class UClass* TextStyleSet;
	TArray<class UClass*> DecoratorClasses;
	bool bOverrideDefaultStyle;
	struct TextBlockStyle DefaultTextStyleOverride;
	float MinDesiredWidth;
	ETextTransformPolicy TextTransformPolicy;
	struct TextBlockStyle DefaultTextStyle;
	TArray<class UClass*> InstanceDecorators;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTileView : public UListView
{
public:
	float EntryHeight;
	float EntryWidth;
	EListItemAlignment TileAlignment;
	bool bWrapHorizontalNavigation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTreeView : public UListView
{
public:
	struct FDelegate BP_OnGetItemChildren;
	struct FScriptMulticastDelegate BP_OnItemExpansionChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOverlay : public UPanelWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOverlaySlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USizeBox : public UContentWidget
{
public:
	float WidthOverride;
	float HeightOverride;
	float MinDesiredWidth;
	float MinDesiredHeight;
	float MaxDesiredWidth;
	float MaxDesiredHeight;
	float MinAspectRatio;
	float MaxAspectRatio;
	bool bOverride_WidthOverride;
	bool bOverride_HeightOverride;
	bool bOverride_MinDesiredWidth;
	bool bOverride_MinDesiredHeight;
	bool bOverride_MaxDesiredWidth;
	bool bOverride_MaxDesiredHeight;
	bool bOverride_MinAspectRatio;
	bool bOverride_MaxAspectRatio;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetComponent : public UMeshComponent
{
public:
	EWidgetSpace Space;
	EWidgetTimingPolicy TimingPolicy;
	class UClass* WidgetClass;
	struct IntPoint DrawSize;
	bool bManuallyRedraw;
	bool bRedrawRequested;
	float RedrawTime;
	struct IntPoint CurrentDrawSize;
	bool bDrawAtDesiredSize;
	struct Vector2D Pivot;
	bool bReceiveHardwareInput;
	bool bWindowFocusable;
	EWindowVisibility WindowVisibility;
	bool bApplyGammaCorrection;
	class UClass* OwnerPlayer;
	struct LinearColor BackgroundColor;
	struct LinearColor TintColorAndOpacity;
	float OpacityFromTexture;
	EWidgetBlendMode BlendMode;
	bool bIsTwoSided;
	bool TickWhenOffscreen;
	class UClass* BodySetup;
	class UClass* TranslucentMaterial;
	class UClass* TranslucentMaterial_OneSided;
	class UClass* OpaqueMaterial;
	class UClass* OpaqueMaterial_OneSided;
	class UClass* MaskedMaterial;
	class UClass* MaskedMaterial_OneSided;
	class UClass* RenderTarget;
	class UClass* MaterialInstance;
	bool bAddedToScreen;
	bool bEditTimeUsable;
	struct FName SharedLayerName;
	int LayerZOrder;
	EWidgetGeometryMode GeometryMode;
	float CylinderArcAngle;
	ETickMode TickMode;
	class UClass* Widget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UAsyncTaskDownloadImage : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate OnSuccess;
	struct FScriptMulticastDelegate OnFail;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBackgroundBlur : public UContentWidget
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	bool bApplyAlphaToBlur;
	float BlurStrength;
	bool bOverrideAutoRadiusCalculation;
	int BlurRadius;
	struct SlateBrush LowQualityFallbackBrush;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBackgroundBlurSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UPropertyBinding : public UObject
{
public:
	Unknown SourceObject;
	struct DynamicPropertyPath SourcePath;
	struct FName DestinationProperty;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBoolBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBorderSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBrushBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UButtonSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCanvasPanel : public UPanelWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCanvasPanelSlot : public UPanelSlot
{
public:
	struct AnchorData LayoutData;
	bool bAutoSize;
	int ZOrder;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCheckBox : public UContentWidget
{
public:
	ECheckBoxState CheckedState;
	struct FDelegate CheckedStateDelegate;
	struct CheckBoxStyle WidgetStyle;
	class UClass* Style;
	class UClass* UncheckedImage;
	class UClass* UncheckedHoveredImage;
	class UClass* UncheckedPressedImage;
	class UClass* CheckedImage;
	class UClass* CheckedHoveredImage;
	class UClass* CheckedPressedImage;
	class UClass* UndeterminedImage;
	class UClass* UndeterminedHoveredImage;
	class UClass* UndeterminedPressedImage;
	EHorizontalAlignment HorizontalAlignment;
	struct Margin Padding;
	struct SlateColor BorderBackgroundColor;
	EButtonClickMethod ClickMethod;
	EButtonTouchMethod TouchMethod;
	EButtonPressMethod PressMethod;
	bool IsFocusable;
	struct FScriptMulticastDelegate OnCheckStateChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCheckedStateBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCircularThrobber : public UWidget
{
public:
	int NumberOfPieces;
	float Period;
	float Radius;
	class UClass* PieceImage;
	struct SlateBrush Image;
	bool bEnableRadius;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UColorBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UComboBox : public UWidget
{
public:
	TArray<class UClass*> Items;
	struct FDelegate OnGenerateWidgetEvent;
	bool bIsFocusable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UComboBoxString : public UWidget
{
public:
	TArray<struct FString> DefaultOptions;
	struct FString SelectedOption;
	struct ComboBoxStyle WidgetStyle;
	struct TableRowStyle ItemStyle;
	struct Margin ContentPadding;
	float MaxListHeight;
	bool HasDownArrow;
	bool EnableGamepadNavigationMode;
	struct SlateFontInfo Font;
	struct SlateColor ForegroundColor;
	bool bIsFocusable;
	struct FDelegate OnGenerateWidgetEvent;
	struct FScriptMulticastDelegate OnSelectionChanged;
	struct FScriptMulticastDelegate OnOpening;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDragDropOperation : public UObject
{
public:
	struct FString Tag;
	class UClass* Payload;
	class UClass* DefaultDragVisual;
	EDragPivot Pivot;
	struct Vector2D Offset;
	struct FScriptMulticastDelegate OnDrop;
	struct FScriptMulticastDelegate OnDragCancelled;
	struct FScriptMulticastDelegate OnDragged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDynamicEntryBox : public UDynamicEntryBoxBase
{
public:
	class UClass* EntryWidgetClass;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableText : public UWidget
{
public:
	struct FText Text;
	struct FDelegate TextDelegate;
	struct FText HintText;
	struct FDelegate HintTextDelegate;
	struct EditableTextStyle WidgetStyle;
	class UClass* Style;
	class UClass* BackgroundImageSelected;
	class UClass* BackgroundImageComposing;
	class UClass* CaretImage;
	struct SlateFontInfo Font;
	struct SlateColor ColorAndOpacity;
	bool IsReadOnly;
	bool IsPassword;
	float MinimumDesiredWidth;
	bool IsCaretMovedWhenGainFocus;
	bool SelectAllTextWhenFocused;
	bool RevertTextOnEscape;
	bool ClearKeyboardFocusOnCommit;
	bool SelectAllTextOnCommit;
	bool AllowContextMenu;
	EVirtualKeyboardType KeyboardType;
	struct VirtualKeyboardOptions VirtualKeyboardOptions;
	EVirtualKeyboardTrigger VirtualKeyboardTrigger;
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction;
	ETextJustify Justification;
	struct ShapedTextOptions ShapedTextOptions;
	struct FScriptMulticastDelegate OnTextChanged;
	struct FScriptMulticastDelegate OnTextCommitted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEditableTextBox : public UWidget
{
public:
	struct FText Text;
	struct FDelegate TextDelegate;
	struct EditableTextBoxStyle WidgetStyle;
	class UClass* Style;
	struct FText HintText;
	struct FDelegate HintTextDelegate;
	struct SlateFontInfo Font;
	struct LinearColor ForegroundColor;
	struct LinearColor BackgroundColor;
	struct LinearColor ReadOnlyForegroundColor;
	bool IsReadOnly;
	bool IsPassword;
	float MinimumDesiredWidth;
	struct Margin Padding;
	bool IsCaretMovedWhenGainFocus;
	bool SelectAllTextWhenFocused;
	bool RevertTextOnEscape;
	bool ClearKeyboardFocusOnCommit;
	bool SelectAllTextOnCommit;
	bool AllowContextMenu;
	EVirtualKeyboardType KeyboardType;
	struct VirtualKeyboardOptions VirtualKeyboardOptions;
	EVirtualKeyboardTrigger VirtualKeyboardTrigger;
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction;
	ETextJustify Justification;
	struct ShapedTextOptions ShapedTextOptions;
	struct FScriptMulticastDelegate OnTextChanged;
	struct FScriptMulticastDelegate OnTextCommitted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UExpandableArea : public UWidget
{
public:
	struct ExpandableAreaStyle Style;
	struct SlateBrush BorderBrush;
	struct SlateColor BorderColor;
	bool bIsExpanded;
	float MaxHeight;
	struct Margin HeaderPadding;
	struct Margin AreaPadding;
	struct FScriptMulticastDelegate OnExpansionChanged;
	class UClass* HeaderContent;
	class UClass* BodyContent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFloatBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGridPanel : public UPanelWidget
{
public:
	TArray<float> ColumnFill;
	TArray<float> RowFill;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGridSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	int Row;
	int RowSpan;
	int Column;
	int ColumnSpan;
	int Layer;
	struct Vector2D Nudge;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHorizontalBox : public UPanelWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHorizontalBoxSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	struct SlateChildSize Size;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInputKeySelector : public UWidget
{
public:
	struct ButtonStyle WidgetStyle;
	struct TextBlockStyle TextStyle;
	struct InputChord SelectedKey;
	struct SlateFontInfo Font;
	struct Margin Margin;
	struct LinearColor ColorAndOpacity;
	struct FText KeySelectionText;
	struct FText NoKeySpecifiedText;
	bool bAllowModifierKeys;
	bool bAllowGamepadKeys;
	TArray<struct Key> EscapeKeys;
	struct FScriptMulticastDelegate OnKeySelected;
	struct FScriptMulticastDelegate OnIsSelectingKeyChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInt32Binding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UInvalidationBox : public UContentWidget
{
public:
	bool bCanCache;
	bool CacheRelativeTransforms;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserListEntry : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserListEntryLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserObjectListEntry : public UUserListEntry
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUserObjectListEntryLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UListViewDesignerPreviewItem : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMenuAnchor : public UContentWidget
{
public:
	class UClass* MenuClass;
	struct FDelegate OnGetMenuContentEvent;
	struct FDelegate OnGetUserMenuContentEvent;
	EMenuPlacement Placement;
	bool bFitInWindow;
	bool ShouldDeferPaintingAfterWindowContent;
	bool UseApplicationMenuStack;
	struct FScriptMulticastDelegate OnMenuOpenChanged;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMouseCursorBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene2DTransformPropertySystem : public MovieScenePropertySystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieScene2DTransformSection : public UMovieSceneSection
{
public:
	struct MovieScene2DTransformMask TransformMask;
	struct MovieSceneFloatChannel Translation;
	struct MovieSceneFloatChannel Rotation;
	struct MovieSceneFloatChannel Scale;
	struct MovieSceneFloatChannel Shear;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieScene2DTransformTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMovieSceneMarginSection : public UMovieSceneSection
{
public:
	struct MovieSceneFloatChannel TopCurve;
	struct MovieSceneFloatChannel LeftCurve;
	struct MovieSceneFloatChannel RightCurve;
	struct MovieSceneFloatChannel BottomCurve;

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneMarginTrack : public MovieScenePropertyTrack
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class MovieSceneWidgetMaterialTrack : public MovieSceneMaterialTrack
{
public:
	TArray<struct FName> BrushPropertyNamePath;
	struct FName TrackName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMultiLineEditableText : public UTextLayoutWidget
{
public:
	struct FText Text;
	struct FText HintText;
	struct FDelegate HintTextDelegate;
	struct TextBlockStyle WidgetStyle;
	bool bIsReadOnly;
	struct SlateFontInfo Font;
	bool SelectAllTextWhenFocused;
	bool ClearTextSelectionOnFocusLoss;
	bool RevertTextOnEscape;
	bool ClearKeyboardFocusOnCommit;
	bool AllowContextMenu;
	struct VirtualKeyboardOptions VirtualKeyboardOptions;
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction;
	struct FScriptMulticastDelegate OnTextChanged;
	struct FScriptMulticastDelegate OnTextCommitted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMultiLineEditableTextBox : public UTextLayoutWidget
{
public:
	struct FText Text;
	struct FText HintText;
	struct FDelegate HintTextDelegate;
	struct EditableTextBoxStyle WidgetStyle;
	struct TextBlockStyle TextStyle;
	bool bIsReadOnly;
	bool AllowContextMenu;
	struct VirtualKeyboardOptions VirtualKeyboardOptions;
	EVirtualKeyboardDismissAction VirtualKeyboardDismissAction;
	class UClass* Style;
	struct SlateFontInfo Font;
	struct LinearColor ForegroundColor;
	struct LinearColor BackgroundColor;
	struct LinearColor ReadOnlyForegroundColor;
	struct FScriptMulticastDelegate OnTextChanged;
	struct FScriptMulticastDelegate OnTextCommitted;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNamedSlot : public UContentWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNamedSlotInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNativeWidgetHost : public UWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UProgressBar : public UWidget
{
public:
	struct ProgressBarStyle WidgetStyle;
	class UClass* Style;
	class UClass* BackgroundImage;
	class UClass* FillImage;
	class UClass* MarqueeImage;
	float Percent;
	EProgressBarFillType BarFillType;
	bool bIsMarquee;
	struct Vector2D BorderPadding;
	struct FDelegate PercentDelegate;
	struct LinearColor FillColorAndOpacity;
	struct FDelegate FillColorAndOpacityDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URetainerBox : public UContentWidget
{
public:
	bool bRetainRender;
	bool RenderOnInvalidation;
	bool RenderOnPhase;
	int Phase;
	int PhaseCount;
	class UClass* EffectMaterial;
	struct FName TextureParameter;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URichTextBlockDecorator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class URichTextBlockImageDecorator : public URichTextBlockDecorator
{
public:
	class UClass* ImageSet;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USafeZone : public UContentWidget
{
public:
	bool PadLeft;
	bool PadRight;
	bool PadTop;
	bool PadBottom;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USafeZoneSlot : public UPanelSlot
{
public:
	bool bIsTitleSafe;
	struct Margin SafeAreaScale;
	EHorizontalAlignment HAlign;
	EVerticalAlignment VAlign;
	struct Margin Padding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleBox : public UContentWidget
{
public:
	EStretch Stretch;
	EStretchDirection StretchDirection;
	float UserSpecifiedScale;
	bool IgnoreInheritedScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScaleBoxSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScrollBar : public UWidget
{
public:
	struct ScrollBarStyle WidgetStyle;
	class UClass* Style;
	bool bAlwaysShowScrollbar;
	bool bAlwaysShowScrollbarTrack;
	EOrientation Orientation;
	struct Vector2D Thickness;
	struct Margin Padding;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UScrollBoxSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USizeBoxSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateVectorArtData : public UObject
{
public:
	TArray<struct SlateMeshVertex> VertexData;
	TArray<uint32_t> IndexData;
	class UClass* Material;
	struct Vector2D ExtentMin;
	struct Vector2D ExtentMax;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USlateAccessibleWidgetData : public UObject
{
public:
	bool bCanChildrenBeAccessible;
	ESlateAccessibleBehavior AccessibleBehavior;
	ESlateAccessibleBehavior AccessibleSummaryBehavior;
	struct FText AccessibleText;
	struct FDelegate AccessibleTextDelegate;
	struct FText AccessibleSummaryText;
	struct FDelegate AccessibleSummaryTextDelegate;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpacer : public UWidget
{
public:
	struct Vector2D Size;

	// NOTE: Functions are not included into usmaps sadly :(
};

class USpinBox : public UWidget
{
public:
	float Value;
	struct FDelegate ValueDelegate;
	struct SpinBoxStyle WidgetStyle;
	class UClass* Style;
	int MinFractionalDigits;
	int MaxFractionalDigits;
	bool bAlwaysUsesDeltaSnap;
	float Delta;
	float SliderExponent;
	struct SlateFontInfo Font;
	ETextJustify Justification;
	float MinDesiredWidth;
	bool ClearKeyboardFocusOnCommit;
	bool SelectAllTextOnCommit;
	struct SlateColor ForegroundColor;
	struct FScriptMulticastDelegate OnValueChanged;
	struct FScriptMulticastDelegate OnValueCommitted;
	struct FScriptMulticastDelegate OnBeginSliderMovement;
	struct FScriptMulticastDelegate OnEndSliderMovement;
	bool bOverride_MinValue;
	bool bOverride_MaxValue;
	bool bOverride_MinSliderValue;
	bool bOverride_MaxSliderValue;
	float MinValue;
	float MaxValue;
	float MinSliderValue;
	float MaxSliderValue;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UTextBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UThrobber : public UWidget
{
public:
	int NumberOfPieces;
	bool bAnimateHorizontally;
	bool bAnimateVertically;
	bool bAnimateOpacity;
	class UClass* PieceImage;
	struct SlateBrush Image;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUMGSequencePlayer : public UObject
{
public:
	class UClass* Animation;
	struct MovieSceneRootEvaluationTemplateInstance RootTemplateInstance;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUMGSequenceTickManager : public UObject
{
public:
	Unknown WeakUserWidgets;
	class UClass* Linker;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUniformGridPanel : public UPanelWidget
{
public:
	struct Margin SlotPadding;
	float MinDesiredSlotWidth;
	float MinDesiredSlotHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UUniformGridSlot : public UPanelSlot
{
public:
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;
	int Row;
	int Column;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVerticalBox : public UPanelWidget
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVerticalBoxSlot : public UPanelSlot
{
public:
	struct SlateChildSize Size;
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UViewport : public UContentWidget
{
public:
	struct LinearColor BackgroundColor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVisibilityBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetAnimation : public UMovieSceneSequence
{
public:
	class UClass* MovieScene;
	TArray<struct WidgetAnimationBinding> AnimationBindings;
	bool bLegacyFinishOnStop;
	struct FString DisplayLabel;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetAnimationDelegateBinding : public UDynamicBlueprintBinding
{
public:
	TArray<struct BlueprintWidgetAnimationDelegateBinding> WidgetAnimationDelegateBindings;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetAnimationPlayCallbackProxy : public UObject
{
public:
	struct FScriptMulticastDelegate Finished;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetBinding : public UPropertyBinding
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetBlueprintGeneratedClass : public UBlueprintGeneratedClass
{
public:
	class UClass* WidgetTree;
	bool bClassRequiresNativeTick;
	TArray<struct DelegateRuntimeBinding> Bindings;
	TArray<class UClass*> Animations;
	TArray<struct FName> NamedSlots;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetInteractionComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate OnHoveredWidgetChanged;
	int VirtualUserIndex;
	int PointerIndex;
	ECollisionChannel TraceChannel;
	float InteractionDistance;
	EWidgetInteractionSource InteractionSource;
	bool bEnableHitTesting;
	bool bShowDebug;
	float DebugSphereLineThickness;
	float DebugLineThickness;
	struct LinearColor DebugColor;
	struct HitResult CustomHitResult;
	struct Vector2D LocalHitLocation;
	struct Vector2D LastLocalHitLocation;
	class UClass* HoveredWidgetComponent;
	struct HitResult LastHitResult;
	bool bIsHoveredWidgetInteractable;
	bool bIsHoveredWidgetFocusable;
	bool bIsHoveredWidgetHitTestVisible;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetLayoutLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetNavigation : public UObject
{
public:
	struct WidgetNavigationData Up;
	struct WidgetNavigationData Down;
	struct WidgetNavigationData Left;
	struct WidgetNavigationData Right;
	struct WidgetNavigationData Next;
	struct WidgetNavigationData Previous;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetSwitcherSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWidgetTree : public UObject
{
public:
	class UClass* RootWidget;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWindowTitleBarArea : public UContentWidget
{
public:
	bool bWindowButtonsEnabled;
	bool bDoubleClickTogglesFullscreen;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWindowTitleBarAreaSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWrapBox : public UPanelWidget
{
public:
	struct Vector2D InnerSlotPadding;
	float WrapSize;
	bool bExplicitWrapSize;
	EHorizontalAlignment HorizontalAlignment;
	EOrientation Orientation;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWrapBoxSlot : public UPanelSlot
{
public:
	struct Margin Padding;
	bool bFillEmptySpace;
	float FillSpanWhenLessThan;
	EHorizontalAlignment HorizontalAlignment;
	EVerticalAlignment VerticalAlignment;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_ValetMods : public FortGameStateComponent
{
public:
	TArray<class UClass*> AllMods;
	struct GameplayTag TiresTag;
	struct ScalableFloat MaxVehiclesCanSpawnWithMod;
	struct ScalableFloat PercentChanceSpawnWithMod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortModInteractPoint : public AActor
{
public:
	struct FText InteractText;
	Unknown ModGarage;
	Unknown Mod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortValetModBase : public AActor
{
public:
	struct GameplayTagContainer ModTags;
	struct FText InteractText;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortValetMod_Tire : public AFortValetModBase
{
public:
	struct TireInfo TireData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortValetModGarage : public AActor
{
public:
	class UClass* CurrentVehicle;
	class UClass* ModInteractPointClass;
	TArray<struct ModInteractCategory> ModInteractCategories;
	TArray<class UClass*> SpawnedInteractPoints;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortVehicleModData : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class DagwoodInPersistent : public FortVehicleInPersistent
{
public:
	class UClass* FortDagwoodVehicleConfigs;
	struct DagwoodRuntimeModifiers DagwoodRuntimeModifiedProperties;
	TArray<ETireStates> TireStates;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DagwoodInternal : public FortVehicleInternalPersistent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class DagwoodOutPersistent : public FortVehicleOutPersistent
{
public:
	bool bOnRoad;
	bool bOnLandscape;
	bool bOnDirt;
	bool bOnVehicle;
	bool bBoosting;
	TArray<ETireSurfaces> TireSurfaces;

	// NOTE: Functions are not included into usmaps sadly :(
};

class DagwoodOutContinuous : public FortVehicleOutContinuous
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UDagwoodNetworkPhysicsComponent : public UActorComponent
{
public:
	struct NetworkPhysicsState NetworkPhysicsState;
	struct FScriptMulticastDelegate OnGeneratedLocalInputCmd;
	struct DagwoodManagedState ReplicatedManagedState;
	struct DagwoodManagedState InManagedState;
	struct DagwoodManagedState OutManagedState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortAthenaMutator_OverrideValetVehicleParameters : public AFortAthenaMutator
{
public:
	struct ScalableFloat MinInitialVehicleFuelPercent;
	struct ScalableFloat MaxInitialVehicleFuelPercent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortCameraMode_Dagwood : public UFortCameraMode_AthenaVehicle
{
public:
	float HorizontalCameraSpaceOffsetWhileTurning;
	float SteeringAngleForMaxHorizontalOffset;
	float InAirVerticalOffset;
	float AirOffsetDampFactor;
	float SpeedAlphaDampFactor;
	float TimeInAirRequiredForVertOffset;
	float VehicleBasePitch;
	float HorizOffsetInterpSpeed;
	float HorizOffsetInterpSpeedRecovery;
	float CurrentSpeedAlpha;
	float CurrentVerticalOffset;
	float CurrentHorizontalOffset;
	float TimeInAir;
	float PreviousSpeed;
	float AppliedPitch;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortContextualTutorial_VehicleValetLowFuel : public UFortContextualTutorial
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDagwoodModsConfigs : public UObject
{
public:
	struct MountedGun MountedGunData;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortDagwoodVehicle : public AFortAthenaSKMotorVehicle
{
public:
	class UClass* HardLandingCameraShake;
	class UClass* OffroadCamShakeClass;
	class UClass* DriverCamShakeClass;
	class UClass* HandBrakeCamShakeClass;
	EVehicleClass VehicleClass;
	float NativeMinPontoonRadiusToSink;
	float NativePontoonScaleTimeFront;
	float NativePontoonScaleRadiusPerTick;
	float NativePontoonScaleTimeRear;
	float NativeBasePontoonRadiusFront;
	float NativeBasePontoonRadiusRear;
	float FadeDelay;
	float FadeDuration;
	float MinBrakeForceForSkid;
	float MinForwardSpeedForSkid;
	struct GameplayTag SpeedLinesCueTag;
	float NormalizedRPM;
	float FadeStartTime;
	struct FScriptMulticastDelegate OnOutOfFuelDelegate;
	struct FScriptMulticastDelegate OnGainedFuelDelegate;
	class UClass* NetworkPhysicsComponent;
	class UClass* ModSeatWeaponComponent;
	struct MountedGun MountedWeaponMod;
	struct TireInfo BaseTireInfo;
	float LastModApplyTime;
	float RechargeableBoostPercent;
	float BoostEndTime;
	class UClass* SplatterSourceComp;
	EFuelLeakType FuelLeakType;
	bool bEnableNativizedTick;
	TArray<struct FName> PassengerLeanSockets;
	TArray<struct Vector> PassngerLeanRelativeOffsets;
	class UClass* PassengerCameraModeClass;
	class UClass* PassengerCameraModeClass_ADS;
	TArray<struct FName> WheelSocketNames;
	class UClass* FortDagwoodVehicleConfigs;
	class UClass* FortDagwoodConfigsClass;
	TArray<int> RearShocks;
	struct GameplayTagContainer OffroadEnvironmentDamageTags;
	struct GameplayTagContainer FireDamageTags;
	struct GameplayTag ModTag;
	struct Vector NativeWheelScaleRear;
	struct Vector NativeWheelScaleFront;
	struct Vector NativeTireScaleRear;
	struct Vector NativeTireScaleFront;
	bool bTireSmokeActive;
	bool bBoostFailed;
	bool bCanBoostPitch;
	bool bOnRoad;
	bool bOnLandscape;
	bool bOnDirt;
	bool bOnVehicle;
	bool bWasBrakeSkidding;
	uint64_t AccelForceFeedbackHandle;
	uint64_t SkidForceFeedbackHandle;
	uint64_t BrakeForceFeedbackHandle;
	uint64_t HandBrakeForceFeedbackHandle;
	TArray<ETireSurfaces> TireSurfaces;
	bool bBoosting;
	bool bSpeedLinesActive;
	class UClass* ValetComponent;
	struct DagwoodRuntimeModifiers DagwoodRuntimeModifiedProperties;
	TArray<struct AttachedWheel> ServerRepWheelData;
	struct Vector FlipYawForwardTargetDirection;
	struct Vector FlipYawOriginalForward;
	ETireLocations LastPoppedTire;
	float RoadTopSpeedMultiplier;
	float CurrentBumpiness;
	float CurrentForwardAcceleration;
	float PreviousTurnAlpha;
	float CurrentCameraAssistStrength;
	float LostGripTime;
	float LostGripRightAlpha;
	float HandbrakeTime;
	float HandbrakeStartTime;
	float RimScrapeDamageTimer;
	float FlipYawMult;
	float FlipTimer;
	float FlipExplodeTimer;
	float FlipPushForceTimer;
	float FlipAirTimer;
	float FlipLanding;
	float FlipStartTime;
	float LastFlipDamageTime;
	float PreFlipControlLossTimer;
	float LastPopTireTime;
	float HealthZeroTime;
	float NativePontoonScaleTimerFront;
	float NativePontoonScaleTimerRear;
	float NativeScaledFrontPontoonRadius;
	float NativeScaledRearPontoonRadius;
	bool bDidCinematicFlip;
	bool bCanCinematicFlip;
	bool bClientWaitingToApplyMod;
	bool bInPopTireVeer;
	bool bInFlipRecovery;
	bool bExplodeAfterFlip;
	bool bLostGrip;
	bool bApplyHandbrakeCatchupForce;
	bool bDidHandbrakeCatchup;
	bool bInFlipRoll;
	bool bInFlipYaw;
	bool bInFlipPitch;
	bool bFlipDidLeaveGround;
	bool bBreakBuildingsIfBlockingLeaningPassenger;
	float LeanBreakTimeAccumulator;
	float LeanBreakCheckInterval;
	struct Vector2D LastStickInput;
	TArray<struct FName> SeatToWindowShapeNames;
	class UClass* OffroadCameraShakeInstance;
	class UClass* DriverCameraShakeInstance;
	class UClass* AccelCameraShakeInstance;
	class UClass* HandBrakeCameraShakeInstance;
	class UClass* NativeComp_RoadAndExhaust;
	class UClass* NativeComp_TireSkid;
	class UClass* NativeComp_LowFuelSputter;
	class UClass* NativeComp_Damage;
	class UClass* NativeComp_SpeedLines;
	class UClass* TireExhaustFX;
	class UClass* NativeSys_LowFuelSputter;
	class UClass* NativeSys_SpeedLines;
	class UClass* NativeSys_TireSkid;
	class UClass* FuelComponent;
	TArray<ETireStates> TireStates;
	TArray<ETireStates> FakeTireStates;
	EPoppedTireReactionStates ActivePoppedTireReaction;
	EPoppedTireReactionStates ServerPoppedTireReaction;
	bool bExploded;
	float ServerCriticalHealth;
	Unknown ValetAudio;
	Unknown KillerController;
	Unknown KillerCauser;
	TArray<class UClass*> TireMeshes;
	TArray<class UClass*> FakeTireMeshes;
	bool bIsInoperable;
	int RandomSeed;
	struct RandomStream RandStream;
	bool bSelfDestructEnabled;
	bool bClientUsesSelfDestructTimer;
	class UClass* TireBootMesh;
	Unknown MapSelfDestructActionDefForUI;
	float MinimumTimeBetweenSelfDestructPromptChanges;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDagwoodVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	class UClass* Dagwood;
	struct Vector GlassScale_FR;
	struct Vector GlassScale_FL;
	struct Vector GlassScale_BR;
	struct Vector GlassScale_BL;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDagwoodVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	struct TireInfo BaseTireInfo;
	float BoostMinPushForce;
	float BoostTopSpeedForceMultiplier;
	float BoostTopSpeedMultiplier;
	float BoostWaterMultiplier;
	float MinVehicleDamage;
	float MaxVehicleDamage;
	float MinVehicleDamageSpeedKmh;
	float MaxVehicleDamageSpeedKmh;
	float MinVehicleDamageWhileBoosting;
	float MaxVehicleDamageWhileBoosting;
	float MinVehicleDamageSpeedWhileBoostingKmh;
	float MaxVehicleDamageSpeedWhileBoostingKmh;
	float VehiclePowerSlideFrontMultiplier;
	float VehiclePowerSlideRearMultiplier;
	float HandbrakeGripAngle;
	float HandbrakeGripAngleRecovery;
	float HandbrakeSpeedForGripLoss;
	float MinSlipDuration;
	float HandbrakeLateralFriction;
	float HandbrakeSteeringMultiplier;
	float HandbrakeFrictionDampFactor;
	float RestoreTractionDampFactor;
	float HandbrakeForce;
	float HandbrakeForceNoAccel;
	float BoostSteeringMultiplier;
	float DirtRoadTopSpeedMultiplier;
	float DirtRoadFrontLateralFriction;
	float DirtRoadRearLateralFriction;
	float DirtRoadAccelForceMultiplier;
	float DirtRoadFakeBumpinessMultiplier;
	float OffRoadTopSpeedMultiplier;
	float OffRoadFrontLateralFriction;
	float OffRoadRearLateralFriction;
	float OffRoadPushForceMultiplier;
	float OffroadDamageImpactForceMin;
	float OffroadDamageImpactForceMax;
	float OffroadImpactDamageMin;
	float OffroadImpactDamageMax;
	float MinSpeedForOffroadHandling;
	float FireHealthPercentThreshold;
	float MinBumpinessSpringHitTimeMultiplier;
	float MaxBumpinessSpringHitTimeMultiplier;
	float BumpinessExponentForShocks;
	float OffroadRumbleIntensity;
	float DirtRoadRumbleIntensity;
	float OffroadDamageScaleExponent;
	float HardLandingThresholdMin;
	float HardLandingThresholdMax;
	float HardLandingShakeZAmplitudeMin;
	float HardLandingShakeZAmplitudeMax;
	float SpeedLinesThreshold;
	float PropDestructionImpulse;
	float DestructionAngle;
	float UpNormalMinProtected;
	float UpForwardMinProtected;
	float NonCameraSteeringAngleMultiplier;
	float CameraAssistStrengthMax;
	float CameraAssistStrengthMin;
	float CameraAssistStrengthRecovery;
	float CameraAssistInterpSpeed;
	float ReverseChangeDirectionBrakeForceMultiplier;
	float ReverseChangeDirectionSpeedThreshold;
	float DriftExitPushForce;
	float DriftExitCatchupSpeed;
	float HandbrakeDurationRequiredForCatchup;
	float ImpactMagnitudeToEndCatchup;
	float PoppedTireSpringLength;
	float PoppedTireSpringStiff;
	float PoppedTireSpringDamp;
	float PoppedTireTractionMultiplier_StageOne;
	float PoppedTireTractionMultiplier_StageTwo;
	float PoppedTireTractionMultiplier_Min;
	float PoppedTireScrapeFrictionMultiplier;
	float MinSpeedForRimScrapeDamage;
	float RimScrapeDamageRate;
	float RimScrapeFlipRollMagnitude;
	float RimScrapeFlipPitchMagnitude;
	float SpeedForRimFlip;
	float HealthPercentForFlip;
	float FlipYawDuration;
	float FlipRollDuration;
	float FlipPitchDuration;
	float FlipExplodeDuration_Yaw;
	float FlipExplodeDuration_Pitch;
	float FlipPushForceDuration_Yaw;
	float FlipPushForceDuration_Pitch;
	float FlipPushForcMultiplier;
	float FlipPushForce_UpComponentPitch;
	float FlipPushForce_UpComponentRoll;
	float MinTimeInAirRequiredForExplodeLanding;
	float FlipYawSpringStiff;
	float FlipYawSpringDamp;
	float FlipYawSpringMaxAccel;
	float HealthPercentForExplode;
	float FlipRecoveryTime;
	float FlipMaxDuration;
	float FlipWiggleDuration;
	float PoppedTireVeerDuration;
	float PoppedTireVeerSteeringAngle;
	float FlipWiggleFrequency;
	float FlipWiggleSteeringAngle;
	float FlipYawAngleThreshold;
	bool bUsesBoost;
	float RechargeableBoostRateOfUse;
	float RechargeableBoostRateOfRegen;
	float BoostRateOfRegenMinMultiplier;
	float BoostRateOfRegenMaxMultiplier;
	float BoostRegenMaxMultiplyTime;
	float RechargeableBoostRequiredPercentToActivate;
	float RechargeableBoostMaxPercent;
	float RechargeableBoostMinPercent;
	bool bDamageFriendlyFire;
	bool bDamageOtherVehicles;
	bool bDamageOwnVehicle;
	int NumWheelsOnSurfaceRequired;
	float FuelLeakProjectileTimeInterval;
	float FuelLeakHealthPercentThreshold;
	float ServerExtraHealth;
	float MaxTimeZeroHealth;
	float MaxTimeExplosion;
	float MaxTimeSelfDestructCleanup;
	float SelfDestructTime;
	float HUDTopSpeed;
	float AnalogDriftStickThreshold;
	struct FName TireBootRightSocketName;
	struct FName TireBootLeftSocketName;
	float TireBootRelativeDistance;
	float BoostForceInAir;
	float BoostAirMaxSpeed;
	struct FString PlayerFacingName;
	TArray<struct FName> TireSocketNames;
	TArray<struct FName> TireBoneNames;
	TArray<int> RearTireIndices;
	TArray<int> RightSideTires;
	TArray<int> FakeTireIndices;
	bool bNoWheels;
	float NoWheelsSpringLenMult;
	TArray<struct FName> NoWheelsBonesToHide;
	struct GameplayTag SpawnWithModTag;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortDagwoodVehicleManager : public UGameStateComponent
{
public:
	bool bHasUpdatedPropReplacement;
	int NumVehiclesSpawnedWithMod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortGameStateComponent_Valet : public FortGameStateComponent
{
public:
	Unknown TireMods;
	struct TireInfo EmptyTireInfo;
	TArray<struct VehicleAttachment> Attachments;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AFortValetAudioController : public AActor
{
public:
	struct FScriptMulticastDelegate OnEngineLoadChanged;
	struct FScriptMulticastDelegate OnShiftGearCompleted;
	struct FScriptMulticastDelegate OnShiftGearDelegate;
	float RPMResetTime_Native;
	float JitterAmount_Native;
	float ShiftTimeThreshold_Native;
	float TimeSinceShift_Native;
	float EngineRPMInterp_Native;
	float EngineRPMLinear_Native;
	float MinRPMRange_Native;
	float MaxRPMRange_Native;
	bool bCurrentlyShifting_Native;
	float CurrentAccelRateGearModifier_Native;
	float CurrentAccelRate_Native;
	int CurrentGear_Native;
	int MaxGear_Native;
	float DefaultAccelRateScalar_Native;
	float GearAttackInterpSpeed_Native;
	float GearReleaseInterpSpeed_Native;
	float AccelRateScalarFirstGear_Native;
	float AccelRateScalarMinGear_Native;
	float AccelRateScalarMaxGear_Native;
	float ShiftToRPMStart_Native;
	float ShiftToRPMEnd_Native;
	float ShiftFromRPMStart_Native;
	float ShiftFromRPMEnd_Native;
	float MaxRPMSawtoothDecrement_Native;
	float MaxRPMSawtoothRepeatTime_Native;
	float DownhillAccelScalar_Native;
	float UphillAccelScalar_Native;
	class UClass* RPMFloatCurveMapping;
	float NormalizedSpeed_Native;
	float SuspValue_Native;
	bool bIsHandbraking_Native;
	float MotoSynthVolume_Native;
	float MotoSynthInitialFadeInTime_Native;
	float MotoSynthLogRPM_Native;
	bool bHasFuel_Native;
	bool bIsInWater_Native;
	bool bLocalPlayerInVehicle_Native;
	float TimeLocalPlayerEnteredVehicle_Native;
	bool bAttemptingDirectionChange_Native;
	bool bPreDestroy_Native;
	bool bEngineLoad_Native;
	float SkidAmount_Native;
	float TimeSinceAwoken_Native;
	bool bDestroyed_Native;
	float TimeSinceSurfaceChange_Native;
	class UClass* OnInitialSuspensionSound;
	float AngleForSkidding_Native;
	float SpringCompressionMultiplier;
	float MotoSynthMaxVolume_Native;
	struct Vector2D MotoSynthTimeInVehicleTimeRange;
	struct Vector2D MotoSynthTimeInVehicleVolumeRange;
	Unknown ValetVehicle;
	class UClass* Engine_Native;
	class UClass* BoostAudioComponent_Native;
	class UClass* SynthComponentMoto_Native;
	class UClass* SuspensionCollisionComponent_Native;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortValetGameFeatureData : public FortGameFeatureData
{
public:
	Unknown PropReplacements;
	struct TSoftClassPtr<UObject> VehicleSpawnerClass;
	ESpawnActorCollisionHandlingMethod SpawnActorCollisionHandlingMethod;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortValetMountedGunAnimInstance : public UFortAnimInstance
{
public:
	class UClass* VehicleActor;
	bool bIsUsingMountedGun;
	int SeatIndexCached;
	float AimingYaw;
	float AimingPitch;
	class UClass* MountedWeapon;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortValetPassengerAnimInstance : public UFortVehicleOccupantAnimInstance
{
public:
	struct CachedAnimRelevancyData IntoVehicleCachedData;
	struct CachedAnimRelevancyData OutOfVehicleCachedData;
	struct TSoftClassPtr<UObject> DagwoodVehicleInstance;
	float TurnYaw;
	float InTime;
	float OutTime;
	float NegativeTurnYaw;
	bool bIsReloading;
	bool bIsTargeting;
	bool bIsFiring;
	bool bIsUsingConsumable;
	bool bIsInAction;
	bool bIsPassengerBackLeft;
	bool bIsThrowConsumable;
	bool bIsTargetingOrThrowingConsumable;

	// NOTE: Functions are not included into usmaps sadly :(
};

class FortAthenaVehicleDashboardWidget_Valet : public FortAthenaVehicleDashboardWidget
{
public:
	class UClass* Text_ItemName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UFortMobileActionButtonBehavior_ValetBoost : public UFortMobileActionButtonBehavior
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UHeightfieldMinMaxTexture : public UObject
{
public:
	class UClass* Texture;
	class UClass* LodBiasTexture;
	class UClass* LodBiasMinMaxTexture;
	int MaxCPULevels;
	TArray<struct Vector2D> TextureData;
	struct IntPoint TextureDataSize;
	TArray<int> TextureDataMips;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UMaterialExpressionHeightfieldMinMaxTexture : public UMaterialExpression
{
public:
	class UClass* MinMaxTexture;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AVirtualHeightfieldMesh : public AActor
{
public:
	class UClass* VirtualHeightfieldMeshComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVirtualHeightfieldMeshComponent : public UPrimitiveComponent
{
public:
	struct TSoftClassPtr<UObject> VirtualTexture;
	class UClass* VirtualTextureRef;
	class UClass* VirtualTextureThumbnail;
	bool bCopyBoundsButton;
	class UClass* MinMaxTexture;
	int NumMinMaxTextureBuildLevels;
	bool bBuildMinMaxTextureButton;
	class UClass* Material;
	float Lod0ScreenSize;
	float Lod0Distribution;
	float LodDistribution;
	float LodBiasScale;
	int NumForceLoadLods;
	int NumOcclusionLods;
	bool bHiddenInEditor;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VkModuleVersionWithArtifacts : public VkModuleVersion
{
public:
	TArray<struct VkArtifactOption> Artifacts;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVkPersistence : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVkPersistenceManager : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoteSessionRuntime : public FastArraySerializerItem
{
public:
	struct FName VoteSessionId;
	EVoteSessionNetworkType NetworkType;
	EVoteSessionState VoteSessionState;
	struct FName CurrentVoteId;
	class UClass* WorldRef;
	EVoteSessionState Shadow_VoteSessionState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoteSessionRuntimeArray : public FastArraySerializer
{
public:
	class UClass* WorldRef;
	TArray<struct VoteSessionRuntime> VotingSessions;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoteRuntime : public FastArraySerializerItem
{
public:
	class UClass* WorldRef;
	struct FName VoteSessionId;
	struct FName VoteId;
	TArray<struct FName> VoteSelectionIds;
	EVoteState VoteState;
	struct FName VoteSelectionWinningResult;
	struct FName Shadow_VoteSelectionWinningResult;
	EVoteState Shadow_VoteState;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoteRuntimeArray : public FastArraySerializer
{
public:
	class UClass* WorldRef;
	TArray<struct VoteRuntime> VotingResults;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoteSelectionResults : public FastArraySerializerItem
{
public:
	class UClass* WorldRef;
	struct FName VoteSessionId;
	struct FName VoteId;
	struct FName VoteSelectionId;
	int ServerVoteTotal;
	int AllServersVoteTotal;
	int Shadow_ServerVoteTotal;
	int Shadow_AllServersVoteTotal;

	// NOTE: Functions are not included into usmaps sadly :(
};

class VoteSelectionResultsArray : public FastArraySerializer
{
public:
	class UClass* WorldRef;
	TArray<struct VoteSelectionResults> VoteSelectionResults;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVoteBroadcasterComponent : public UMeshNetworkComponent
{
public:
	TArray<struct VoteSessionSettings> VoteSessionSettingsList;
	struct VoteSessionRuntimeArray VoteSessionRuntimeList;
	struct VoteRuntimeArray VoteRuntimeList;
	struct VoteSelectionResultsArray VoteResultsList;
	Unknown PlayerCastedVotesMap;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVoteDispatchSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<struct VoteSelectionResults> VotingResults;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AVoteInitiationActor : public AInfo
{
public:
	class UClass* VoteBroadcasterComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVoteListenerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate OnVoteSessionSetupEvent;
	struct FScriptMulticastDelegate OnVoteSessionVotingEvent;
	struct FScriptMulticastDelegate OnVoteSetupEvent;
	struct FScriptMulticastDelegate OnVoteStartEvent;
	struct FScriptMulticastDelegate OnVoteChangeEvent;
	struct FScriptMulticastDelegate OnVoteEndEvent;
	struct FScriptMulticastDelegate OnVoteSessionCompleteEvent;
	struct FScriptMulticastDelegate OnVoteSessionShutdownEvent;
	struct GameplayTagContainer RequestedVoteSessionIds;
	struct GameplayTagContainer RequestedVoteIds;
	struct GameplayTagContainer RequestedVoteSelectionIds;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UVoteResponderComponent : public UVoteListenerComponent
{
public:
	TArray<struct VoteSelection> SupportedVoteSelections;
	bool bShouldLockVotingAfterCasted;
	Unknown PlayerCastedVotesMap;
	struct FName ActiveVoteSessionId;
	struct FName ActiveVoteId;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UBuoyancyComponent : public UActorComponent
{
public:
	TArray<struct SphericalPontoon> Pontoons;
	struct FScriptMulticastDelegate OnEnteredWaterDelegate;
	struct FScriptMulticastDelegate OnExitedWaterDelegate;
	struct BuoyancyData BuoyancyData;
	TArray<class UClass*> CurrentWaterBodies;
	class UClass* SimulatingComponent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ABuoyancyManager : public AActor
{
public:
	TArray<class UClass*> BuoyancyComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UConvertWaterBodyActorsCommandlet : public UCommandlet
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UEnvQueryTest_InsideWaterBody : public UEnvQueryTest
{
public:
	bool bIncludeWaves;
	bool bSimpleWaves;
	bool bIgnoreExclusionVolumes;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGerstnerWaterWaveGeneratorBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGerstnerWaterWaveGeneratorSimple : public UGerstnerWaterWaveGeneratorBase
{
public:
	int NumWaves;
	int Seed;
	float Randomness;
	float MinWavelength;
	float MaxWavelength;
	float WavelengthFalloff;
	float MinAmplitude;
	float MaxAmplitude;
	float AmplitudeFalloff;
	float WindAngleDeg;
	float DirectionAngularSpreadDeg;
	float SmallWaveSteepness;
	float LargeWaveSteepness;
	float SteepnessFalloff;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGerstnerWaterWaveGeneratorSpectrum : public UGerstnerWaterWaveGeneratorBase
{
public:
	EWaveSpectrumType SpectrumType;
	TArray<struct GerstnerWaveOctave> Octaves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterWavesBase : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterWaves : public UWaterWavesBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGerstnerWaterWaves : public UWaterWaves
{
public:
	class UClass* GerstnerWaveGenerator;
	TArray<struct GerstnerWave> GerstnerWaves;
	float MaxWaveHeight;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UGerstnerWaterWaveSubsystem : public UEngineSubsystem
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULakeCollisionComponent : public UPrimitiveComponent
{
public:
	class UClass* CachedBodySetup;
	struct Vector BoxExtent;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraDataInterfaceWater : public UNiagaraDataInterface
{
public:
	class UClass* SourceBody;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UNiagaraWaterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOceanCollisionComponent : public UPrimitiveComponent
{
public:
	class UClass* CachedBodySetup;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOceanBoxCollisionComponent : public UBoxComponent
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBody : public AActor
{
public:
	class UClass* PhysicalMaterial;
	float TargetWaveMaskDepth;
	float MaxWaveHeightOffset;
	int WaterBodyIndex;
	bool bFillCollisionUnderWaterBodiesForNavmesh;
	struct UnderwaterPostProcessSettings UnderwaterPostProcessSettings;
	EWaterBodyType WaterBodyType;
	struct WaterCurveSettings CurveSettings;
	class UClass* WaterMaterial;
	class UClass* UnderwaterPostProcessMaterial;
	float ShapeDilation;
	bool bAffectsLandscape;
	bool bGenerateCollisions;
	bool bOverrideWaterMesh;
	class UClass* WaterMeshOverride;
	int OverlapMaterialPriority;
	struct FName CollisionProfileName;
	class UClass* SplineComp;
	class UClass* WaterSplineMetadata;
	class UClass* WaterMID;
	class UClass* UnderwaterPostProcessMID;
	TArray<Unknown> Islands;
	TArray<Unknown> ExclusionVolumes;
	Unknown Landscape;
	struct PostProcessSettings CurrentPostProcessSettings;
	bool bCanAffectNavigation;
	class UClass* WaterNavAreaClass;
	class UClass* WaterWaves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterBodyGenerator : public UObject
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class UCustomMeshGenerator : public UWaterBodyGenerator
{
public:
	class UClass* MeshComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBodyCustom : public AWaterBody
{
public:
	class UClass* CustomGenerator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBodyExclusionVolume : public APhysicsVolume
{
public:
	bool bIgnoreAllOverlappingWaterBodies;
	TArray<class UClass*> WaterBodiesToIgnore;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBodyIsland : public AActor
{
public:
	class UClass* SplineComp;

	// NOTE: Functions are not included into usmaps sadly :(
};

class ULakeGenerator : public UWaterBodyGenerator
{
public:
	class UClass* LakeMeshComp;
	class UClass* LakeCollisionComp;
	class UClass* LakeCollision;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBodyLake : public AWaterBody
{
public:
	class UClass* LakeGenerator;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UOceanGenerator : public UWaterBodyGenerator
{
public:
	TArray<class UClass*> CollisionBoxes;
	TArray<class UClass*> CollisionHullSets;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBodyOcean : public AWaterBody
{
public:
	class UClass* OceanGenerator;
	struct Vector CollisionExtents;
	float HeightOffset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class URiverGenerator : public UWaterBodyGenerator
{
public:
	TArray<class UClass*> SplineMeshComponents;

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterBodyRiver : public AWaterBody
{
public:
	class UClass* RiverGenerator;
	class UClass* LakeTransitionMaterial;
	class UClass* LakeTransitionMID;
	class UClass* OceanTransitionMaterial;
	class UClass* OceanTransitionMID;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterBrushActorInterface : public UInterface
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class AWaterMeshActor : public AActor
{
public:
	class UClass* WaterVelocityTexture;
	class UClass* WaterMesh;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterMeshComponent : public UMeshComponent
{
public:
	int ForceCollapseDensityLevel;
	float TileSize;
	struct IntPoint ExtentInTiles;
	class UClass* FarDistanceMaterial;
	float FarDistanceMeshExtent;
	struct Vector RTWorldLocation;
	struct Vector RTWorldSizeVector;
	Unknown UsedMaterials;
	int TessellationFactor;
	float LODScale;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterRuntimeSettings : public UDeveloperSettings
{
public:
	ECollisionChannel CollisionChannelForWaterTraces;
	struct TSoftClassPtr<UObject> MaterialParameterCollection;
	float WaterBodyIconWorldSize;
	float WaterBodyIconWorldZOffset;
	struct FName DefaultWaterCollisionProfileName;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterSplineComponent : public USplineComponent
{
public:
	struct WaterSplineCurveDefaults WaterSplineDefaults;
	struct WaterSplineCurveDefaults PreviousWaterSplineDefaults;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterSplineMetadata : public USplineMetadata
{
public:
	struct InterpCurveFloat Depth;
	struct InterpCurveFloat WaterVelocityScalar;
	struct InterpCurveFloat RiverWidth;
	struct InterpCurveFloat AudioIntensity;
	struct InterpCurveVector WaterVelocity;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterSubsystem : public UWorldSubsystem
{
public:
	struct FScriptMulticastDelegate OnCameraUnderwaterStateChanged;
	struct FScriptMulticastDelegate OnWaterScalabilityChanged;
	class UClass* DefaultRiverMesh;
	class UClass* DefaultLakeMesh;
	class UClass* BuoyancyManager;
	class UClass* WaterMeshActor;
	class UClass* MaterialParameterCollection;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterWavesAsset : public UObject
{
public:
	class UClass* WaterWaves;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWaterWavesAssetReference : public UWaterWavesBase
{
public:
	class UClass* WaterWavesAsset;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WebJSResponse : public WebJSCallbackBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WebJSFunction : public WebJSCallbackBase
{
public:

	// NOTE: Functions are not included into usmaps sadly :(
};

class WidgetCarouselNavigationBarStyle : public SlateWidgetStyle
{
public:
	struct SlateBrush HighlightBrush;
	struct ButtonStyle LeftButtonStyle;
	struct ButtonStyle CenterButtonStyle;
	struct ButtonStyle RightButtonStyle;

	// NOTE: Functions are not included into usmaps sadly :(
};

class WidgetCarouselNavigationButtonStyle : public SlateWidgetStyle
{
public:
	struct ButtonStyle InnerButtonStyle;
	struct SlateBrush NavigationButtonLeftImage;
	struct SlateBrush NavigationButtonRightImage;

	// NOTE: Functions are not included into usmaps sadly :(
};

class UWmfMediaSettings : public UObject
{
public:
	bool AllowNonStandardCodecs;
	bool LowLatency;
	bool NativeAudioOut;
	bool HardwareAcceleratedVideoDecoding;

	// NOTE: Functions are not included into usmaps sadly :(
};

